@model EntityLayer.Concrete.Portfolio
@{
    ViewData["Title"] = "AddPortfolio";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

@using (Html.BeginForm("AddPortfolio", "Portfolio", FormMethod.Post))
{
<form class="form-group" method="post">

    <br />
    @Html.Label("Proje Başlığı")
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control", style = "color:white" })
    @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })

    @Html.Label("Görsel 1")
    @Html.TextBoxFor(x => x.ImageUrl, new { @class = "form-control", style = "color:white" })
    @Html.ValidationMessageFor(x => x.ImageUrl, "", new { @class = "text-danger" })

    @Html.Label("Görsel 2")
    @Html.TextBoxFor(x => x.ImageUrl2, new { @class = "form-control", style = "color:white" })
    @Html.ValidationMessageFor(x => x.ImageUrl2, "", new { @class = "text-danger" })

    @Html.Label("Proje URL")
    @Html.TextBoxFor(x => x.ProjeUrl, new { @class = "form-control", style = "color:white" })
    @Html.ValidationMessageFor(x => x.ProjeUrl, "", new { @class = "text-danger" })

    @Html.Label("Platform")
    @Html.TextBoxFor(x => x.Platform, new { @class = "form-control", style = "color:white" })

    @Html.Label("Icon URL")
    @Html.TextBoxFor(x => x.Image1, new { @class = "form-control", style = "color:white" })

    @Html.Label("Fiyat")
    @Html.TextBoxFor(x => x.Price, new { @class = "form-control", style = "color:white" })
    @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })

    @Html.Label("Tamamlanma Oranı")
    @Html.TextBoxFor(x => x.Value, new { @class = "form-control", style = "color:white", type = "number", min = "0", max = "100" })
    @Html.ValidationMessageFor(x => x.Value, "", new { @class = "text-danger" })

    <br />

    <button class="btn btn-outline-success">Kaydet</button>
    <button type="button" class="btn btn-outline-danger" onclick="goBack()">Vazgeç</button>

</form>
}
<script>
    function goBack() {
        window.history.back();
    }
</script>