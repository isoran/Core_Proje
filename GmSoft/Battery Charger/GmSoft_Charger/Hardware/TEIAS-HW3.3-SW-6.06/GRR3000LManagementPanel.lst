;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23.10.2020 12:18:38
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x00000004F502  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x00F41C  	62492
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x00F44E  	62542
0x0024	0x000000  	0
0x0026	0x00F484  	62596
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x00F090  	61584
0x0040	0x00F652  	63058
0x0042	0x000000  	0
0x0044	0x00F4DE  	62686
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
_main:
0xF502	0x2179CF  	MOV	#6044, W15
0xF504	0x227FF0  	MOV	#10239, W0
0xF506	0xB7A020  	MOV	WREG, SPLIM
0xF508	0x200020  	MOV	#2, W0
0xF50A	0xB7A034  	MOV	WREG, PSVPAG
0xF50C	0x200040  	MOV	#4, W0
0xF50E	0xB72044  	IOR	CORCON
;GRR3000LManagementPanel.mpas,10205 :: 		begin
;GRR3000LManagementPanel.mpas,10208 :: 		Pause_ms(500);
0xF510	0x781F8A  	PUSH	W10
0xF512	0x781F8B  	PUSH	W11
0xF514	0x781F8C  	PUSH	W12
0xF516	0x781F8D  	PUSH	W13
0xF518	0x201F4A  	MOV	#500, W10
0xF51A	0x07F4BD  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10210 :: 		Start_Register_Config;
0xF51C	0x07F062  	RCALL	_Start_Register_Config
;GRR3000LManagementPanel.mpas,10214 :: 		WDT_Reset_Flag;
0xF51E	0x07F5AB  	RCALL	_WDT_Reset_Flag
;GRR3000LManagementPanel.mpas,10218 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xF520	0xB3C07D  	MOV.B	#7, W13
0xF522	0xB3C05C  	MOV.B	#5, W12
0xF524	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xF526	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xF528	0x200200  	MOV	#32, W0
0xF52A	0x781F80  	PUSH	W0
0xF52C	0x07B2C5  	RCALL	_Glcd_Set_Font
0xF52E	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,10220 :: 		Run_Timers; // timerlarý çalýþtýr
0xF530	0x07F59D  	RCALL	_Run_Timers
;GRR3000LManagementPanel.mpas,10223 :: 		T2CON := $8030;  /// Frekans Okuma Timer
0xF532	0x280300  	MOV	#32816, W0
0xF534	0xB7A110  	MOV	WREG, T2CON
;GRR3000LManagementPanel.mpas,10260 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xF536	0xB3C07D  	MOV.B	#7, W13
0xF538	0xB3C05C  	MOV.B	#5, W12
0xF53A	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xF53C	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xF53E	0x200200  	MOV	#32, W0
0xF540	0x781F80  	PUSH	W0
0xF542	0x07B2BA  	RCALL	_Glcd_Set_Font
0xF544	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,10265 :: 		Data_EepromRead;
0xF546	0x07FA34  	RCALL	_Data_EepromRead
;GRR3000LManagementPanel.mpas,10275 :: 		Uart_Procedures;
0xF548	0x07F9C3  	RCALL	_Uart_Procedures
;GRR3000LManagementPanel.mpas,10277 :: 		Glcd_Image(@mainscreen);
0xF54A	0x28CFAA  	MOV	#lo_addr(_mainscreen), W10
0xF54C	0x20002B  	MOV	#higher_addr(_mainscreen), W11
0xF54E	0x07F978  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,10278 :: 		Glcd_PartialImage(67, 16, 58, 23, 58, 23, @AcVolt_View);
0xF550	0x20017D  	MOV	#23, W13
0xF552	0x2003AC  	MOV	#58, W12
0xF554	0x20010B  	MOV	#16, W11
0xF556	0x20043A  	MOV	#67, W10
0xF558	0x290FA0  	MOV	#lo_addr(_AcVolt_View), W0
0xF55A	0x200021  	MOV	#higher_addr(_AcVolt_View), W1
0xF55C	0xBE9F80  	PUSH.D	W0
0xF55E	0x200170  	MOV	#23, W0
0xF560	0x781F80  	PUSH	W0
0xF562	0x2003A0  	MOV	#58, W0
0xF564	0x781F80  	PUSH	W0
0xF566	0x07FC5A  	RCALL	_Glcd_PartialImage
0xF568	0xB1008F  	SUB	#8, W15
;GRR3000LManagementPanel.mpas,10280 :: 		Program_StartBit := 1; // haberleþme için izin verildi
0xF56A	0x215960  	MOV	#lo_addr(_Program_StartBit), W0
0xF56C	0xA01010  	BSET	[W0], BitPos(_Program_StartBit+0)
;GRR3000LManagementPanel.mpas,10284 :: 		while (TRUE) do
L__main4835:
;GRR3000LManagementPanel.mpas,10290 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xF56E	0xB3C07D  	MOV.B	#7, W13
0xF570	0xB3C05C  	MOV.B	#5, W12
0xF572	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xF574	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xF576	0x200200  	MOV	#32, W0
0xF578	0x781F80  	PUSH	W0
0xF57A	0x07B29E  	RCALL	_Glcd_Set_Font
0xF57C	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,10291 :: 		OERR_bit := 0;             // Set OERR to 0
0xF57E	0xA9220E  	BCLR	OERR_bit, BitPos(OERR_bit+0)
;GRR3000LManagementPanel.mpas,10292 :: 		FERR_bit := 0;             // Set FERR to 0
0xF580	0xA9420E  	BCLR	FERR_bit, BitPos(FERR_bit+0)
;GRR3000LManagementPanel.mpas,10293 :: 		Glcd_Write_Text(test_Text, 0, 2, Black);
0xF582	0xB3C01D  	MOV.B	#1, W13
0xF584	0xB3C02C  	MOV.B	#2, W12
0xF586	0xEF2016  	CLR	W11
0xF588	0x2160CA  	MOV	#lo_addr(_test_Text), W10
0xF58A	0x07B0FF  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,10295 :: 		if (Up_Button =0) then Send_Test_Text := 'GEMTA INC.' else
0xF58C	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xF58E	0x370018  	BRA	L__main4840
0xF590	0x216171  	MOV	#lo_addr(_Send_Test_Text), W1
0xF592	0xB3C470  	MOV.B	#71, W0
0xF594	0x785880  	MOV.B	W0, [W1++]
0xF596	0xB3C450  	MOV.B	#69, W0
0xF598	0x785880  	MOV.B	W0, [W1++]
0xF59A	0xB3C4D0  	MOV.B	#77, W0
0xF59C	0x785880  	MOV.B	W0, [W1++]
0xF59E	0xB3C540  	MOV.B	#84, W0
0xF5A0	0x785880  	MOV.B	W0, [W1++]
0xF5A2	0xB3C410  	MOV.B	#65, W0
0xF5A4	0x785880  	MOV.B	W0, [W1++]
0xF5A6	0xB3C200  	MOV.B	#32, W0
0xF5A8	0x785880  	MOV.B	W0, [W1++]
0xF5AA	0xB3C490  	MOV.B	#73, W0
0xF5AC	0x785880  	MOV.B	W0, [W1++]
0xF5AE	0xB3C4E0  	MOV.B	#78, W0
0xF5B0	0x785880  	MOV.B	W0, [W1++]
0xF5B2	0xB3C430  	MOV.B	#67, W0
0xF5B4	0x785880  	MOV.B	W0, [W1++]
0xF5B6	0xB3C2E0  	MOV.B	#46, W0
0xF5B8	0x785880  	MOV.B	W0, [W1++]
0xF5BA	0xEF2000  	CLR	W0
0xF5BC	0x785880  	MOV.B	W0, [W1++]
0xF5BE	0x370019  	BRA	L__main4841
L__main4840:
;GRR3000LManagementPanel.mpas,10296 :: 		if (Up_Button =0) then Send_Test_Text := 'Test Soft.';
0xF5C0	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xF5C2	0x370017  	BRA	L__main4843
0xF5C4	0x216171  	MOV	#lo_addr(_Send_Test_Text), W1
0xF5C6	0xB3C540  	MOV.B	#84, W0
0xF5C8	0x785880  	MOV.B	W0, [W1++]
0xF5CA	0xB3C650  	MOV.B	#101, W0
0xF5CC	0x785880  	MOV.B	W0, [W1++]
0xF5CE	0xB3C730  	MOV.B	#115, W0
0xF5D0	0x785880  	MOV.B	W0, [W1++]
0xF5D2	0xB3C740  	MOV.B	#116, W0
0xF5D4	0x785880  	MOV.B	W0, [W1++]
0xF5D6	0xB3C200  	MOV.B	#32, W0
0xF5D8	0x785880  	MOV.B	W0, [W1++]
0xF5DA	0xB3C530  	MOV.B	#83, W0
0xF5DC	0x785880  	MOV.B	W0, [W1++]
0xF5DE	0xB3C6F0  	MOV.B	#111, W0
0xF5E0	0x785880  	MOV.B	W0, [W1++]
0xF5E2	0xB3C660  	MOV.B	#102, W0
0xF5E4	0x785880  	MOV.B	W0, [W1++]
0xF5E6	0xB3C740  	MOV.B	#116, W0
0xF5E8	0x785880  	MOV.B	W0, [W1++]
0xF5EA	0xB3C2E0  	MOV.B	#46, W0
0xF5EC	0x785880  	MOV.B	W0, [W1++]
0xF5EE	0xEF2000  	CLR	W0
0xF5F0	0x785880  	MOV.B	W0, [W1++]
L__main4843:
L__main4841:
;GRR3000LManagementPanel.mpas,10298 :: 		if (Ok_Button =0) then
0xF5F2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xF5F4	0x370002  	BRA	L__main4846
;GRR3000LManagementPanel.mpas,10300 :: 		UART1_Write_Text(Send_Test_Text);
0xF5F6	0x21617A  	MOV	#lo_addr(_Send_Test_Text), W10
0xF5F8	0x07F525  	RCALL	_UART1_Write_Text
;GRR3000LManagementPanel.mpas,10301 :: 		end;
L__main4846:
;GRR3000LManagementPanel.mpas,10305 :: 		if (Ok_Button =0) then
0xF5FA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xF5FC	0x370015  	BRA	L__main4849
;GRR3000LManagementPanel.mpas,10307 :: 		while (Ok_Button =0) do
L__main4852:
0xF5FE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xF600	0x370002  	BRA	L__main4853
;GRR3000LManagementPanel.mpas,10309 :: 		asm ClrWDT; end;
0xF602	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10311 :: 		end;
0xF604	0x37FFFC  	BRA	L__main4852
L__main4853:
;GRR3000LManagementPanel.mpas,10313 :: 		MainMenu;
0xF606	0x07F5E0  	RCALL	_MainMenu
;GRR3000LManagementPanel.mpas,10315 :: 		Glcd_Image(@mainscreen); // menülerden gelince tekrar ana ekraný yükle
0xF608	0x28CFAA  	MOV	#lo_addr(_mainscreen), W10
0xF60A	0x20002B  	MOV	#higher_addr(_mainscreen), W11
0xF60C	0x07F919  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,10316 :: 		Glcd_PartialImage(67, 16, 58, 23, 58, 23, @AcVolt_View);
0xF60E	0x20017D  	MOV	#23, W13
0xF610	0x2003AC  	MOV	#58, W12
0xF612	0x20010B  	MOV	#16, W11
0xF614	0x20043A  	MOV	#67, W10
0xF616	0x290FA0  	MOV	#lo_addr(_AcVolt_View), W0
0xF618	0x200021  	MOV	#higher_addr(_AcVolt_View), W1
0xF61A	0xBE9F80  	PUSH.D	W0
0xF61C	0x200170  	MOV	#23, W0
0xF61E	0x781F80  	PUSH	W0
0xF620	0x2003A0  	MOV	#58, W0
0xF622	0x781F80  	PUSH	W0
0xF624	0x07FBFB  	RCALL	_Glcd_PartialImage
0xF626	0xB1008F  	SUB	#8, W15
;GRR3000LManagementPanel.mpas,10319 :: 		end;
L__main4849:
;GRR3000LManagementPanel.mpas,10323 :: 		asm ClrWDT; end;
0xF628	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10328 :: 		end; // main loop while end...
0xF62A	0x37FFA1  	BRA	L__main4835
;GRR3000LManagementPanel.mpas,10329 :: 		end.
L_end_main:
0xF62C	0x7806CF  	POP	W13
0xF62E	0x78064F  	POP	W12
0xF630	0x7805CF  	POP	W11
0xF632	0x78054F  	POP	W10
L__main_end_loop:
0xF634	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_Pause_Ms:
;GRR3000LManagementPanel.mpas,629 :: 		begin
;GRR3000LManagementPanel.mpas,630 :: 		VDelay_ms(Value);
0xDE96	0x07DD49  	RCALL	_VDelay_ms
;GRR3000LManagementPanel.mpas,631 :: 		end;
L_end_Pause_Ms:
0xDE98	0x060000  	RETURN
; end of _Pause_Ms
_VDelay_ms:
;__Lib_Delays.mpas,240 :: 		begin
;__Lib_Delays.mpas,241 :: 		NumberOfCyc := Clock_kHz() div __FOSC_PER_CYC; // Cycl./msec
; NumberOfCyc start address is: 4 (W2)
0x992A	0x275302  	MOV	#30000, W2
0x992C	0x200003  	MOV	#0, W3
;__Lib_Delays.mpas,242 :: 		NumberOfCyc := NumberOfCyc * Time_ms;                     // Total number of cycles
0x992E	0x78000A  	MOV	W10, W0
0x9930	0xEB0080  	CLR	W1
0x9932	0x07C132  	RCALL	__Multiply_32x32
0x9934	0xBE0100  	MOV.D	W0, W2
;__Lib_Delays.mpas,245 :: 		NumberOfCyc := NumberOfCyc - 147          // parameters, calls, retunrs and such, so
0x9936	0x200930  	MOV	#147, W0
0x9938	0x200001  	MOV	#0, W1
; NumberOfCyc start address is: 0 (W0)
0x993A	0x510000  	SUB	W2, W0, W0
0x993C	0x598081  	SUBB	W3, W1, W1
; NumberOfCyc end address is: 4 (W2)
;__Lib_Delays.mpas,248 :: 		NumberOfCyc := NumberOfCyc - 147;
L__VDelay_ms10:
;__Lib_Delays.mpas,251 :: 		W0 := NumberOfCyc;
;__Lib_Delays.mpas,252 :: 		W1 := HiWord(NumberOfCyc);
; NumberOfCyc end address is: 0 (W0)
;__Lib_Delays.mpas,254 :: 		MOV        #16383, W2
0x993E	0x23FFF2  	MOV	#16383, W2
;__Lib_Delays.mpas,255 :: 		AND        W0, W2, W3
0x9940	0x600182  	AND	W0, W2, W3
;__Lib_Delays.mpas,258 :: 		MOV        #14, W2                    //   in asm because dsPIC30 can
0x9942	0x2000E2  	MOV	#14, W2
;__Lib_Delays.mpas,259 :: 		Label1:                                  //   generate DO instruction
Label1:
;__Lib_Delays.mpas,260 :: 		DEC        W2, W2                     //   instead of a loop.
0x9944	0xE90102  	DEC	W2, W2
;__Lib_Delays.mpas,261 :: 		BRA LT,    Label2                     //
0x9946	0x350003  	BRA LT	Label2
;__Lib_Delays.mpas,262 :: 		LSR        W1, W1                     // in that case code execution
0x9948	0xD10081  	LSR	W1, W1
;__Lib_Delays.mpas,263 :: 		RRC        W0, W0                     //   time would be different
0x994A	0xD38000  	RRC	W0, W0
;__Lib_Delays.mpas,264 :: 		BRA        Label1                     //   between dsPIC30 family
0x994C	0x37FFFB  	BRA	Label1
;__Lib_Delays.mpas,265 :: 		Label2:                                   //   and PIC24/dsPIC33 families
Label2:
;__Lib_Delays.mpas,267 :: 		Delay_Cyc_loop:
Delay_Cyc_loop:
;__Lib_Delays.mpas,268 :: 		CP0 W0                 ; skip delay
0x994E	0xE20000  	CP0	W0
;__Lib_Delays.mpas,269 :: 		BRA Z, Delay_Cyc_rem   ;    if W0 = 0
0x9950	0x320004  	BRA Z	Delay_Cyc_rem
;__Lib_Delays.mpas,270 :: 		repeat #16377          ; perform delay by
0x9952	0x093FF9  	REPEAT	#16377
;__Lib_Delays.mpas,271 :: 		NOP                    ;   by executing W0*16384 <nop>s in Delay_Cyc_loop
0x9954	0x000000  	NOP
;__Lib_Delays.mpas,272 :: 		DEC W0, W0             ; next loop
0x9956	0xE90000  	DEC	W0, W0
;__Lib_Delays.mpas,273 :: 		bra Delay_Cyc_loop
0x9958	0x37FFFA  	BRA	Delay_Cyc_loop
;__Lib_Delays.mpas,274 :: 		Delay_Cyc_rem:
Delay_Cyc_rem:
;__Lib_Delays.mpas,275 :: 		REPEAT W3              ; execute whats
0x995A	0x098003  	REPEAT	W3
;__Lib_Delays.mpas,276 :: 		nop                    ;   remaining after the division
0x995C	0x000000  	NOP
;__Lib_Delays.mpas,279 :: 		end;
L_end_VDelay_ms:
0x995E	0x060000  	RETURN
; end of _VDelay_ms
__Multiply_32x32:
0x1B98	0xFA0000  	LNK	#0
;__Lib_Math.mpas,50 :: 		
;__Lib_Math.mpas,53 :: 		
0x1B9A	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.mpas,54 :: 		
0x1B9C	0x880050  	MOV	W0, W5
;__Lib_Math.mpas,55 :: 		
0x1B9E	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.mpas,56 :: 		
0x1BA0	0x420081  	ADD	W4, W1, W1
;__Lib_Math.mpas,57 :: 		
0x1BA2	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.mpas,58 :: 		
0x1BA4	0x420081  	ADD	W4, W1, W1
;__Lib_Math.mpas,61 :: 		
L_end__Multiply_32x32:
0x1BA6	0xFA8000  	ULNK
0x1BA8	0x060000  	RETURN
; end of __Multiply_32x32
_Start_Register_Config:
;GRR3000LManagementPanel.mpas,634 :: 		begin
;GRR3000LManagementPanel.mpas,635 :: 		ADPCFG := 0xFFFF;
0xD5E2	0x781F8A  	PUSH	W10
0xD5E4	0x781F8B  	PUSH	W11
0xD5E6	0x2FFFF0  	MOV	#65535, W0
0xD5E8	0xB7A2A8  	MOV	WREG, ADPCFG
;GRR3000LManagementPanel.mpas,637 :: 		Delay_ms(100);
0xD5EA	0x200108  	MOV	#16, W8
0xD5EC	0x242447  	MOV	#16964, W7
L__Start_Register_Config2:
0xD5EE	0xED200E  	DEC	W7
0xD5F0	0x3AFFFE  	BRA NZ	L__Start_Register_Config2
0xD5F2	0xED2010  	DEC	W8
0xD5F4	0x3AFFFC  	BRA NZ	L__Start_Register_Config2
;GRR3000LManagementPanel.mpas,639 :: 		asm ClrWDT; end;
0xD5F6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,641 :: 		IPC0 := 0;
0xD5F8	0xEF2094  	CLR	IPC0
;GRR3000LManagementPanel.mpas,642 :: 		IPC1 := 0;
0xD5FA	0xEF2096  	CLR	IPC1
;GRR3000LManagementPanel.mpas,643 :: 		IPC2 := 0;
0xD5FC	0xEF2098  	CLR	IPC2
;GRR3000LManagementPanel.mpas,644 :: 		IPC3 := 0;
0xD5FE	0xEF209A  	CLR	IPC3
;GRR3000LManagementPanel.mpas,645 :: 		IPC4 := 0;
0xD600	0xEF209C  	CLR	IPC4
;GRR3000LManagementPanel.mpas,646 :: 		IPC5 := 0;
0xD602	0xEF209E  	CLR	IPC5
;GRR3000LManagementPanel.mpas,647 :: 		IPC6 := 0;
0xD604	0xEF20A0  	CLR	IPC6
;GRR3000LManagementPanel.mpas,649 :: 		IEC0 := 0;
0xD606	0xEF208C  	CLR	IEC0
;GRR3000LManagementPanel.mpas,650 :: 		IEC1 := 0;
0xD608	0xEF208E  	CLR	IEC1
;GRR3000LManagementPanel.mpas,651 :: 		IEC2 := 0;
0xD60A	0xEF2090  	CLR	IEC2
;GRR3000LManagementPanel.mpas,655 :: 		INTCON1.15 := 0; //interrupt nesting enable
0xD60C	0xA9E081  	BCLR	INTCON1, #15
;GRR3000LManagementPanel.mpas,657 :: 		T3CON  := 0x0000;
0xD60E	0xEF2112  	CLR	T3CON
;GRR3000LManagementPanel.mpas,658 :: 		TMR3   := 0;
0xD610	0xEF210A  	CLR	TMR3
;GRR3000LManagementPanel.mpas,659 :: 		PR3    := ModBus_TimeOut_Timer3_PR3;
0xD612	0x80A9E0  	MOV	_ModBus_TimeOut_Timer3_PR3, W0
0xD614	0xB7A10E  	MOV	WREG, PR3
;GRR3000LManagementPanel.mpas,661 :: 		T4CON      := 0x0000;
0xD616	0xEF211E  	CLR	T4CON
;GRR3000LManagementPanel.mpas,662 :: 		TMR4       := 0;
0xD618	0xEF2114  	CLR	TMR4
;GRR3000LManagementPanel.mpas,663 :: 		PR4        := 30000; // 120MHz 1ms timer
0xD61A	0x275300  	MOV	#30000, W0
0xD61C	0xB7A11A  	MOV	WREG, PR4
;GRR3000LManagementPanel.mpas,668 :: 		U1STA := %0000010000000000;
0xD61E	0x204000  	MOV	#1024, W0
0xD620	0xB7A20E  	MOV	WREG, U1STA
;GRR3000LManagementPanel.mpas,669 :: 		U2STA := %0000010000000000; // transmit enable bit
0xD622	0x204000  	MOV	#1024, W0
0xD624	0xB7A218  	MOV	WREG, U2STA
;GRR3000LManagementPanel.mpas,670 :: 		IFS0  := %1001110101111111; // timer 1,3 uart1 clear
0xD626	0x29D7F0  	MOV	#40319, W0
0xD628	0xB7A084  	MOV	WREG, IFS0
;GRR3000LManagementPanel.mpas,671 :: 		IFS1  := %1111111011011111; // tmr4, Uart2 clear
0xD62A	0x2FEDF0  	MOV	#65247, W0
0xD62C	0xB7A086  	MOV	WREG, IFS1
;GRR3000LManagementPanel.mpas,672 :: 		IPC1  := %0101000000000000; // timer 3 level 5;
0xD62E	0x250000  	MOV	#20480, W0
0xD630	0xB7A096  	MOV	WREG, IPC1
;GRR3000LManagementPanel.mpas,673 :: 		IPC2  := %0000000001100000; // uart1 level 6;
0xD632	0x200600  	MOV	#96, W0
0xD634	0xB7A098  	MOV	WREG, IPC2
;GRR3000LManagementPanel.mpas,674 :: 		IPC5  := %0000000001000000; // tmr4 level 4;
0xD636	0x200400  	MOV	#64, W0
0xD638	0xB7A09E  	MOV	WREG, IPC5
;GRR3000LManagementPanel.mpas,675 :: 		IPC6  := %0000000000000111; // uart2 receiver priority level = 7
0xD63A	0x200070  	MOV	#7, W0
0xD63C	0xB7A0A0  	MOV	WREG, IPC6
;GRR3000LManagementPanel.mpas,676 :: 		IEC0  := %0000001010000000; // timer 3 enable, uart1 receiver enable
0xD63E	0x202800  	MOV	#640, W0
0xD640	0xB7A08C  	MOV	WREG, IEC0
;GRR3000LManagementPanel.mpas,677 :: 		IEC1  := %0000000100100000; // enable tmr4, uart2 receiver enable
0xD642	0x201200  	MOV	#288, W0
0xD644	0xB7A08E  	MOV	WREG, IEC1
;GRR3000LManagementPanel.mpas,681 :: 		TRISA  := 0xFFFF;
0xD646	0x2FFFF0  	MOV	#65535, W0
0xD648	0xB7A2C0  	MOV	WREG, TRISA
;GRR3000LManagementPanel.mpas,682 :: 		TRISB  := 0xFFFF;
0xD64A	0x2FFFF0  	MOV	#65535, W0
0xD64C	0xB7A2C6  	MOV	WREG, TRISB
;GRR3000LManagementPanel.mpas,683 :: 		TRISC  := 0xFFF1;
0xD64E	0x2FFF10  	MOV	#65521, W0
0xD650	0xB7A2CC  	MOV	WREG, TRISC
;GRR3000LManagementPanel.mpas,684 :: 		TRISD  := 0xFFFF;
0xD652	0x2FFFF0  	MOV	#65535, W0
0xD654	0xB7A2D2  	MOV	WREG, TRISD
;GRR3000LManagementPanel.mpas,685 :: 		TRISF  := 0xFFFF;
0xD656	0x2FFFF0  	MOV	#65535, W0
0xD658	0xB7A2DE  	MOV	WREG, TRISF
;GRR3000LManagementPanel.mpas,686 :: 		TRISG  := 0xFFFF;
0xD65A	0x2FFFF0  	MOV	#65535, W0
0xD65C	0xB7A2E4  	MOV	WREG, TRISG
;GRR3000LManagementPanel.mpas,690 :: 		Dropper_Out_1   := 0;
0xD65E	0xA962D0  	BCLR	LATC3_bit, BitPos(LATC3_bit+0)
;GRR3000LManagementPanel.mpas,691 :: 		Delay_Cyc_Long(1);
0xD660	0x20001A  	MOV	#1, W10
0xD662	0x20000B  	MOV	#0, W11
0xD664	0x07E17D  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,692 :: 		Dropper_Out_2   := 0;
0xD666	0xA942D0  	BCLR	LATC2_bit, BitPos(LATC2_bit+0)
;GRR3000LManagementPanel.mpas,693 :: 		Delay_Cyc_Long(1);
0xD668	0x20001A  	MOV	#1, W10
0xD66A	0x20000B  	MOV	#0, W11
0xD66C	0x07E179  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,694 :: 		Dropper_Out_3   := 0;
0xD66E	0xA922D0  	BCLR	LATC1_bit, BitPos(LATC1_bit+0)
;GRR3000LManagementPanel.mpas,695 :: 		Delay_Cyc_Long(1);
0xD670	0x20001A  	MOV	#1, W10
0xD672	0x20000B  	MOV	#0, W11
0xD674	0x07E175  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,697 :: 		Pause_ms(10);
0xD676	0x2000AA  	MOV	#10, W10
0xD678	0x07040E  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,699 :: 		asm ClrWDT; end;
0xD67A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,702 :: 		TRISA  := %0011100111111111;
0xD67C	0x239FF0  	MOV	#14847, W0
0xD67E	0xB7A2C0  	MOV	WREG, TRISA
;GRR3000LManagementPanel.mpas,703 :: 		TRISB  := %1111101000100111;
0xD680	0x2FA270  	MOV	#64039, W0
0xD682	0xB7A2C6  	MOV	WREG, TRISB
;GRR3000LManagementPanel.mpas,704 :: 		TRISC  := %0011111111100001;
0xD684	0x23FE10  	MOV	#16353, W0
0xD686	0xB7A2CC  	MOV	WREG, TRISC
;GRR3000LManagementPanel.mpas,705 :: 		TRISD  := %0011100111111111;
0xD688	0x239FF0  	MOV	#14847, W0
0xD68A	0xB7A2D2  	MOV	WREG, TRISD
;GRR3000LManagementPanel.mpas,706 :: 		TRISF  := %1111111010111111;
0xD68C	0x2FEBF0  	MOV	#65215, W0
0xD68E	0xB7A2DE  	MOV	WREG, TRISF
;GRR3000LManagementPanel.mpas,707 :: 		TRISG  := %0001111010111111;
0xD690	0x21EBF0  	MOV	#7871, W0
0xD692	0xB7A2E4  	MOV	WREG, TRISG
;GRR3000LManagementPanel.mpas,709 :: 		Pause_ms(10);
0xD694	0x2000AA  	MOV	#10, W10
0xD696	0x0703FF  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,711 :: 		Temp_CompPin_Direction    := 1;
0xD698	0xA8C2C7  	BSET	TRISB14_bit, BitPos(TRISB14_bit+0)
;GRR3000LManagementPanel.mpas,712 :: 		Master_OutPin_Direction   := 0;
0xD69A	0xA9C2E5  	BCLR	TRISG14_bit, BitPos(TRISG14_bit+0)
;GRR3000LManagementPanel.mpas,713 :: 		Slave_InputPin_Direction  := 1;
0xD69C	0xA882E5  	BSET	TRISG12_bit, BitPos(TRISG12_bit+0)
;GRR3000LManagementPanel.mpas,715 :: 		PORTA := 0x0000;
0xD69E	0xEF22C2  	CLR	PORTA
;GRR3000LManagementPanel.mpas,716 :: 		PORTB := 0x0000;
0xD6A0	0xEF22C8  	CLR	PORTB
;GRR3000LManagementPanel.mpas,717 :: 		PORTC := 0x0000;
0xD6A2	0xEF22CE  	CLR	PORTC
;GRR3000LManagementPanel.mpas,718 :: 		PORTD := 0x0000;
0xD6A4	0xEF22D4  	CLR	PORTD
;GRR3000LManagementPanel.mpas,719 :: 		PORTF := 0x0000;
0xD6A6	0xEF22E0  	CLR	PORTF
;GRR3000LManagementPanel.mpas,720 :: 		PORTG := 0x0000;
0xD6A8	0xEF22E6  	CLR	PORTG
;GRR3000LManagementPanel.mpas,724 :: 		Pause_ms(10);
0xD6AA	0x2000AA  	MOV	#10, W10
0xD6AC	0x0703F4  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,726 :: 		Glcd_Init();
0xD6AE	0x07E0E0  	RCALL	_Glcd_Init
;GRR3000LManagementPanel.mpas,727 :: 		Pause_ms(100);
0xD6B0	0x20064A  	MOV	#100, W10
0xD6B2	0x0703F1  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,728 :: 		Glcd_Fill(0x00);
0xD6B4	0xEF2014  	CLR	W10
0xD6B6	0x07E10A  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,729 :: 		Pause_ms(100);
0xD6B8	0x20064A  	MOV	#100, W10
0xD6BA	0x0703ED  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,735 :: 		asm ClrWDT; end;
0xD6BC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,737 :: 		SPI1_Init();
0xD6BE	0x07E195  	RCALL	_SPI1_Init
;GRR3000LManagementPanel.mpas,738 :: 		Pause_ms(100);
0xD6C0	0x20064A  	MOV	#100, W10
0xD6C2	0x0703E9  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,740 :: 		SPI_Set_Active(@SPI1_Read, @SPI1_Write);
0xD6C4	0x2055CB  	MOV	#lo_addr(_SPI1_Write), W11
0xD6C6	0x201A6A  	MOV	#lo_addr(_SPI1_Read), W10
0xD6C8	0x07E1A4  	RCALL	_SPI_Set_Active
;GRR3000LManagementPanel.mpas,742 :: 		SPI2_Initialize();
0xD6CA	0x07E15F  	RCALL	_SPI2_Initialize
;GRR3000LManagementPanel.mpas,744 :: 		SPI_Set_Active(@SPI2_Read, @SPI2_Write);
0xD6CC	0x20738B  	MOV	#lo_addr(_SPI2_Write), W11
0xD6CE	0x201CCA  	MOV	#lo_addr(_SPI2_Read), W10
0xD6D0	0x07E1A0  	RCALL	_SPI_Set_Active
;GRR3000LManagementPanel.mpas,746 :: 		ClearDisplay(1);
0xD6D2	0xB3C01A  	MOV.B	#1, W10
0xD6D4	0x07E171  	RCALL	_ClearDisplay
;GRR3000LManagementPanel.mpas,747 :: 		ClearDisplay(2);
0xD6D6	0xB3C02A  	MOV.B	#2, W10
0xD6D8	0x07E16F  	RCALL	_ClearDisplay
;GRR3000LManagementPanel.mpas,749 :: 		I2C1_Init(100000);
0xD6DA	0x286A0A  	MOV	#34464, W10
0xD6DC	0x20001B  	MOV	#1, W11
0xD6DE	0x07E0A6  	RCALL	_I2C1_Init
;GRR3000LManagementPanel.mpas,750 :: 		Pause_ms(100);
0xD6E0	0x20064A  	MOV	#100, W10
0xD6E2	0x0703D9  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,754 :: 		asm ClrWDT; end;
0xD6E4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,756 :: 		HucreSayisi            := 0;
0xD6E6	0xEF2000  	CLR	W0
0xD6E8	0x889FF0  	MOV	W0, _HucreSayisi
;GRR3000LManagementPanel.mpas,757 :: 		NomHucreGerilim        := 0;
0xD6EA	0xEF2000  	CLR	W0
0xD6EC	0x889FD0  	MOV	W0, _NomHucreGerilim
;GRR3000LManagementPanel.mpas,758 :: 		RedresorAkim           := 0;
0xD6EE	0xEF2000  	CLR	W0
0xD6F0	0x889780  	MOV	W0, _RedresorAkim
;GRR3000LManagementPanel.mpas,759 :: 		F_ChargePercentLo      := 0;  // float þarj yüzde min.
0xD6F2	0xEF2000  	CLR	W0
0xD6F4	0x889990  	MOV	W0, _F_ChargePercentLo
;GRR3000LManagementPanel.mpas,760 :: 		F_ChargePercentHi      := 0;  // float þarj yüzde max.
0xD6F6	0xEF2000  	CLR	W0
0xD6F8	0x889710  	MOV	W0, _F_ChargePercentHi
;GRR3000LManagementPanel.mpas,761 :: 		B_ChargePercentLo      := 0;  // boost þarj yüzde min.
0xD6FA	0xEF2000  	CLR	W0
0xD6FC	0x889750  	MOV	W0, _B_ChargePercentLo
;GRR3000LManagementPanel.mpas,762 :: 		B_ChargePercentHi      := 0;  // boost þarj yüzde max.
0xD6FE	0xEF2000  	CLR	W0
0xD700	0x8897A0  	MOV	W0, _B_ChargePercentHi
;GRR3000LManagementPanel.mpas,763 :: 		MenuSayac              := 0;
0xD702	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0xD704	0xEF2000  	CLR	W0
0xD706	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,764 :: 		MenuSayacValue         := 0;
0xD708	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xD70A	0xEF2000  	CLR	W0
0xD70C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,765 :: 		Value_Text             := '     ';
0xD70E	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xD710	0xB3C200  	MOV.B	#32, W0
0xD712	0x785880  	MOV.B	W0, [W1++]
0xD714	0xB3C200  	MOV.B	#32, W0
0xD716	0x785880  	MOV.B	W0, [W1++]
0xD718	0xB3C200  	MOV.B	#32, W0
0xD71A	0x785880  	MOV.B	W0, [W1++]
0xD71C	0xB3C200  	MOV.B	#32, W0
0xD71E	0x785880  	MOV.B	W0, [W1++]
0xD720	0xB3C200  	MOV.B	#32, W0
0xD722	0x785880  	MOV.B	W0, [W1++]
0xD724	0xEF2000  	CLR	W0
0xD726	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,766 :: 		ValueText2             := '     ';
0xD728	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xD72A	0xB3C200  	MOV.B	#32, W0
0xD72C	0x785880  	MOV.B	W0, [W1++]
0xD72E	0xB3C200  	MOV.B	#32, W0
0xD730	0x785880  	MOV.B	W0, [W1++]
0xD732	0xB3C200  	MOV.B	#32, W0
0xD734	0x785880  	MOV.B	W0, [W1++]
0xD736	0xB3C200  	MOV.B	#32, W0
0xD738	0x785880  	MOV.B	W0, [W1++]
0xD73A	0xB3C200  	MOV.B	#32, W0
0xD73C	0x785880  	MOV.B	W0, [W1++]
0xD73E	0xEF2000  	CLR	W0
0xD740	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,767 :: 		ButonStop              := 0;
0xD742	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD744	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,768 :: 		BtCounterNormal        := 0;
0xD746	0xEF2000  	CLR	W0
0xD748	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,769 :: 		BtCounter1             := 0;
0xD74A	0xEF2000  	CLR	W0
0xD74C	0x88A390  	MOV	W0, _BtCounter1
;GRR3000LManagementPanel.mpas,770 :: 		ButonStart             := 0;
0xD74E	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD750	0xEF2000  	CLR	W0
0xD752	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,771 :: 		MainMenuExit           := 0;
0xD754	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xD756	0xEF2000  	CLR	W0
0xD758	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,772 :: 		MenuExitCounter        := 0;
0xD75A	0xEF2000  	CLR	W0
0xD75C	0xEF2002  	CLR	W1
0xD75E	0x88A660  	MOV	W0, _MenuExitCounter
0xD760	0x88A671  	MOV	W1, _MenuExitCounter+2
;GRR3000LManagementPanel.mpas,773 :: 		MenuExit               := 0;
0xD762	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xD764	0xEF2000  	CLR	W0
0xD766	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,774 :: 		BatteryAh              := 0;
0xD768	0xEF2000  	CLR	W0
0xD76A	0x88AC60  	MOV	W0, _BatteryAh
;GRR3000LManagementPanel.mpas,775 :: 		BatteryAmpsSet         := 0;
0xD76C	0xEF2000  	CLR	W0
0xD76E	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,776 :: 		ChargeMode             := 0;
0xD770	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0xD772	0xEF2000  	CLR	W0
0xD774	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,777 :: 		Temp_RealAku           := 0.0;
0xD776	0xEF2000  	CLR	W0
0xD778	0xEF2002  	CLR	W1
0xD77A	0x88B660  	MOV	W0, _Temp_RealAku
0xD77C	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,778 :: 		Temp_WordAku           := 0;
0xD77E	0xEF2000  	CLR	W0
0xD780	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,779 :: 		BoostChargeVoltage     := 0;
0xD782	0xEF2000  	CLR	W0
0xD784	0x88AC00  	MOV	W0, _BoostChargeVoltage
;GRR3000LManagementPanel.mpas,780 :: 		FloatChargeVoltage     := 0;
0xD786	0xEF2000  	CLR	W0
0xD788	0x88AC20  	MOV	W0, _FloatChargeVoltage
;GRR3000LManagementPanel.mpas,781 :: 		BoostChargeTimeSet     := 0;
0xD78A	0xEF2000  	CLR	W0
0xD78C	0x88AC50  	MOV	W0, _BoostChargeTimeSet
;GRR3000LManagementPanel.mpas,782 :: 		BoostChargeTime        := 0;
0xD78E	0xEF2000  	CLR	W0
0xD790	0xEF2002  	CLR	W1
0xD792	0x88AC30  	MOV	W0, _BoostChargeTime
0xD794	0x88AC41  	MOV	W1, _BoostChargeTime+2
;GRR3000LManagementPanel.mpas,783 :: 		DeepDischargeVolt      := 0;
0xD796	0xEF2000  	CLR	W0
0xD798	0x88AC90  	MOV	W0, _DeepDischargeVolt
;GRR3000LManagementPanel.mpas,784 :: 		AutoBFMode             := 0;
0xD79A	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xD79C	0xA10010  	BCLR	[W0], BitPos(_AutoBFMode+0)
;GRR3000LManagementPanel.mpas,785 :: 		BoostChargeLimit       := 0;
0xD79E	0xEF2000  	CLR	W0
0xD7A0	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,786 :: 		FloatChargeLimit       := 0;
0xD7A2	0xEF2000  	CLR	W0
0xD7A4	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,787 :: 		DCOutVoltSet           := 0;
0xD7A6	0xEF2000  	CLR	W0
0xD7A8	0x889910  	MOV	W0, _DCOutVoltSet
;GRR3000LManagementPanel.mpas,788 :: 		DcOutAmpsSet           := 0;
0xD7AA	0xEF2000  	CLR	W0
0xD7AC	0x889770  	MOV	W0, _DcOutAmpsSet
;GRR3000LManagementPanel.mpas,789 :: 		MaxvoltSet             := 0;
0xD7AE	0xEF2000  	CLR	W0
0xD7B0	0x889790  	MOV	W0, _MaxvoltSet
;GRR3000LManagementPanel.mpas,790 :: 		MinVoltSet             := 0;
0xD7B2	0xEF2000  	CLR	W0
0xD7B4	0x8897B0  	MOV	W0, _MinVoltSet
;GRR3000LManagementPanel.mpas,792 :: 		Dropper_OutStatus      := 0;
0xD7B6	0x212DC1  	MOV	#lo_addr(_Dropper_OutStatus), W1
0xD7B8	0xEF2000  	CLR	W0
0xD7BA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,794 :: 		Minutes                := 0;
0xD7BC	0x213D01  	MOV	#lo_addr(_Minutes), W1
0xD7BE	0xEF2000  	CLR	W0
0xD7C0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,795 :: 		Hours                  := 0;
0xD7C2	0x213CE1  	MOV	#lo_addr(_Hours), W1
0xD7C4	0xEF2000  	CLR	W0
0xD7C6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,796 :: 		Day                    := 0;
0xD7C8	0x213C91  	MOV	#lo_addr(_Day), W1
0xD7CA	0xEF2000  	CLR	W0
0xD7CC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,797 :: 		Month                  := 0;
0xD7CE	0x213CA1  	MOV	#lo_addr(_Month), W1
0xD7D0	0xEF2000  	CLR	W0
0xD7D2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,798 :: 		Year                   := 0;
0xD7D4	0x213CB1  	MOV	#lo_addr(_Year), W1
0xD7D6	0xEF2000  	CLR	W0
0xD7D8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,799 :: 		Seconds                := 0;
0xD7DA	0x213CF1  	MOV	#lo_addr(_Seconds), W1
0xD7DC	0xEF2000  	CLR	W0
0xD7DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,800 :: 		Week                   := 0;
0xD7E0	0x213C81  	MOV	#lo_addr(_Week), W1
0xD7E2	0xEF2000  	CLR	W0
0xD7E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,801 :: 		Clock_Text             := '        ';
0xD7E6	0x214D01  	MOV	#lo_addr(_Clock_Text), W1
0xD7E8	0xB3C200  	MOV.B	#32, W0
0xD7EA	0x785880  	MOV.B	W0, [W1++]
0xD7EC	0xB3C200  	MOV.B	#32, W0
0xD7EE	0x785880  	MOV.B	W0, [W1++]
0xD7F0	0xB3C200  	MOV.B	#32, W0
0xD7F2	0x785880  	MOV.B	W0, [W1++]
0xD7F4	0xB3C200  	MOV.B	#32, W0
0xD7F6	0x785880  	MOV.B	W0, [W1++]
0xD7F8	0xB3C200  	MOV.B	#32, W0
0xD7FA	0x785880  	MOV.B	W0, [W1++]
0xD7FC	0xB3C200  	MOV.B	#32, W0
0xD7FE	0x785880  	MOV.B	W0, [W1++]
0xD800	0xB3C200  	MOV.B	#32, W0
0xD802	0x785880  	MOV.B	W0, [W1++]
0xD804	0xB3C200  	MOV.B	#32, W0
0xD806	0x785880  	MOV.B	W0, [W1++]
0xD808	0xEF2000  	CLR	W0
0xD80A	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,802 :: 		Date_Text              := '          ';
0xD80C	0x214D91  	MOV	#lo_addr(_Date_Text), W1
0xD80E	0xB3C200  	MOV.B	#32, W0
0xD810	0x785880  	MOV.B	W0, [W1++]
0xD812	0xB3C200  	MOV.B	#32, W0
0xD814	0x785880  	MOV.B	W0, [W1++]
0xD816	0xB3C200  	MOV.B	#32, W0
0xD818	0x785880  	MOV.B	W0, [W1++]
0xD81A	0xB3C200  	MOV.B	#32, W0
0xD81C	0x785880  	MOV.B	W0, [W1++]
0xD81E	0xB3C200  	MOV.B	#32, W0
0xD820	0x785880  	MOV.B	W0, [W1++]
0xD822	0xB3C200  	MOV.B	#32, W0
0xD824	0x785880  	MOV.B	W0, [W1++]
0xD826	0xB3C200  	MOV.B	#32, W0
0xD828	0x785880  	MOV.B	W0, [W1++]
0xD82A	0xB3C200  	MOV.B	#32, W0
0xD82C	0x785880  	MOV.B	W0, [W1++]
0xD82E	0xB3C200  	MOV.B	#32, W0
0xD830	0x785880  	MOV.B	W0, [W1++]
0xD832	0xB3C200  	MOV.B	#32, W0
0xD834	0x785880  	MOV.B	W0, [W1++]
0xD836	0xEF2000  	CLR	W0
0xD838	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,803 :: 		PCB_Temperature        := 20; // açýlýþta ýsýtýcý çalýþmasýn diye kasa sýcaklýðý 20C yapýldý
0xD83A	0x214BD1  	MOV	#lo_addr(_PCB_Temperature), W1
0xD83C	0xB3C140  	MOV.B	#20, W0
0xD83E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,804 :: 		PCB_TempHAM            := 0;
0xD840	0xEF2000  	CLR	W0
0xD842	0x88A620  	MOV	W0, _PCB_TempHAM
;GRR3000LManagementPanel.mpas,805 :: 		PCB_TempText           := '   ';
0xD844	0x214C01  	MOV	#lo_addr(_PCB_TempText), W1
0xD846	0xB3C200  	MOV.B	#32, W0
0xD848	0x785880  	MOV.B	W0, [W1++]
0xD84A	0xB3C200  	MOV.B	#32, W0
0xD84C	0x785880  	MOV.B	W0, [W1++]
0xD84E	0xB3C200  	MOV.B	#32, W0
0xD850	0x785880  	MOV.B	W0, [W1++]
0xD852	0xEF2000  	CLR	W0
0xD854	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,807 :: 		TempFanOffSet          := 0;
0xD856	0x212101  	MOV	#lo_addr(_TempFanOffSet), W1
0xD858	0xEF2000  	CLR	W0
0xD85A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,808 :: 		TempFanOnSet           := 0;
0xD85C	0x212271  	MOV	#lo_addr(_TempFanOnSet), W1
0xD85E	0xEF2000  	CLR	W0
0xD860	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,809 :: 		TempAlarmSet           := 0;
0xD862	0x212281  	MOV	#lo_addr(_TempAlarmSet), W1
0xD864	0xEF2000  	CLR	W0
0xD866	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,810 :: 		ModbusID               := 0;
0xD868	0x212E01  	MOV	#lo_addr(_ModbusID), W1
0xD86A	0xEF2000  	CLR	W0
0xD86C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,811 :: 		ModbusBaudRate         := 0;
0xD86E	0x2158E1  	MOV	#lo_addr(_ModbusBaudRate), W1
0xD870	0xEF2000  	CLR	W0
0xD872	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,812 :: 		Read_TotalAmps         := 0;
0xD874	0xEF2000  	CLR	W0
0xD876	0x88A630  	MOV	W0, _Read_TotalAmps
;GRR3000LManagementPanel.mpas,813 :: 		Read_OutAmps           := 0;
0xD878	0xEF2000  	CLR	W0
0xD87A	0x88A650  	MOV	W0, _Read_OutAmps
;GRR3000LManagementPanel.mpas,814 :: 		Read_BattAmps          := 0;
0xD87C	0xEF2000  	CLR	W0
0xD87E	0x88A640  	MOV	W0, _Read_BattAmps
;GRR3000LManagementPanel.mpas,815 :: 		Read_RedVolt           := 0;
0xD880	0xEF2000  	CLR	W0
0xD882	0x88A720  	MOV	W0, _Read_RedVolt
;GRR3000LManagementPanel.mpas,816 :: 		Read_Temp              := 0;
0xD884	0xEF2000  	CLR	W0
0xD886	0x88A7B0  	MOV	W0, _Read_Temp
;GRR3000LManagementPanel.mpas,817 :: 		Read_U1Volt            := 0;
0xD888	0xEF2000  	CLR	W0
0xD88A	0x88A7A0  	MOV	W0, _Read_U1Volt
;GRR3000LManagementPanel.mpas,818 :: 		Read_U2Volt            := 0;
0xD88C	0xEF2000  	CLR	W0
0xD88E	0x88A7C0  	MOV	W0, _Read_U2Volt
;GRR3000LManagementPanel.mpas,819 :: 		Read_U3Volt             := 0;
0xD890	0xEF2000  	CLR	W0
0xD892	0x88A7F0  	MOV	W0, _Read_U3Volt
;GRR3000LManagementPanel.mpas,820 :: 		Read_U1VoltRaw          := 0;
0xD894	0xEF2000  	CLR	W0
0xD896	0xEF2002  	CLR	W1
0xD898	0x88A7D0  	MOV	W0, _Read_U1VoltRaw
0xD89A	0x88A7E1  	MOV	W1, _Read_U1VoltRaw+2
;GRR3000LManagementPanel.mpas,821 :: 		Read_U2VoltRaw          := 0;
0xD89C	0xEF2000  	CLR	W0
0xD89E	0xEF2002  	CLR	W1
0xD8A0	0x88A750  	MOV	W0, _Read_U2VoltRaw
0xD8A2	0x88A761  	MOV	W1, _Read_U2VoltRaw+2
;GRR3000LManagementPanel.mpas,822 :: 		Read_U3VoltRaw          := 0;
0xD8A4	0xEF2000  	CLR	W0
0xD8A6	0xEF2002  	CLR	W1
0xD8A8	0x88A730  	MOV	W0, _Read_U3VoltRaw
0xD8AA	0x88A741  	MOV	W1, _Read_U3VoltRaw+2
;GRR3000LManagementPanel.mpas,823 :: 		Read_U1Amps             := 0;
0xD8AC	0xEF2000  	CLR	W0
0xD8AE	0x88A770  	MOV	W0, _Read_U1Amps
;GRR3000LManagementPanel.mpas,824 :: 		Read_U2Amps             := 0;
0xD8B0	0xEF2000  	CLR	W0
0xD8B2	0x88A790  	MOV	W0, _Read_U2Amps
;GRR3000LManagementPanel.mpas,825 :: 		Read_U3Amps             := 0;
0xD8B4	0xEF2000  	CLR	W0
0xD8B6	0x88A780  	MOV	W0, _Read_U3Amps
;GRR3000LManagementPanel.mpas,826 :: 		Read_Relay              := 0;
0xD8B8	0xEF2000  	CLR	W0
0xD8BA	0x88A5F0  	MOV	W0, _Read_Relay
;GRR3000LManagementPanel.mpas,827 :: 		Read_Freq               := 0;
0xD8BC	0xEF2000  	CLR	W0
0xD8BE	0x88A3F0  	MOV	W0, _Read_Freq
;GRR3000LManagementPanel.mpas,828 :: 		Read_FreqReal           := 0.0;
0xD8C0	0xEF2000  	CLR	W0
0xD8C2	0xEF2002  	CLR	W1
0xD8C4	0x88A3D0  	MOV	W0, _Read_FreqReal
0xD8C6	0x88A3E1  	MOV	W1, _Read_FreqReal+2
;GRR3000LManagementPanel.mpas,829 :: 		Request_Counter         := 1;
0xD8C8	0x200010  	MOV	#1, W0
0xD8CA	0x88A400  	MOV	W0, _Request_Counter
;GRR3000LManagementPanel.mpas,830 :: 		Haberlesme_izni         := 0;
0xD8CC	0x214791  	MOV	#lo_addr(_Haberlesme_izni), W1
0xD8CE	0xEF2000  	CLR	W0
0xD8D0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,831 :: 		RequestFault_Counter    := 0;
0xD8D2	0xEF2000  	CLR	W0
0xD8D4	0x88A410  	MOV	W0, _RequestFault_Counter
;GRR3000LManagementPanel.mpas,832 :: 		Request_RepeatCounter   := 0;
0xD8D6	0xEF2000  	CLR	W0
0xD8D8	0x88A3A0  	MOV	W0, _Request_RepeatCounter
;GRR3000LManagementPanel.mpas,833 :: 		Uart_ThryFault          := 0;
0xD8DA	0x214711  	MOV	#lo_addr(_Uart_ThryFault), W1
0xD8DC	0xEF2000  	CLR	W0
0xD8DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,834 :: 		Uart_ACMultFault        := 0;
0xD8E0	0x214761  	MOV	#lo_addr(_Uart_ACMultFault), W1
0xD8E2	0xEF2000  	CLR	W0
0xD8E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,835 :: 		Uart_RelayFault         := 0;
0xD8E6	0x214781  	MOV	#lo_addr(_Uart_RelayFault), W1
0xD8E8	0xEF2000  	CLR	W0
0xD8EA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,836 :: 		Uart_VoltmeterFault     := 0;
0xD8EC	0x214771  	MOV	#lo_addr(_Uart_VoltmeterFault), W1
0xD8EE	0xEF2000  	CLR	W0
0xD8F0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,837 :: 		Leakage_Pos_Set         := 0;
0xD8F2	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0xD8F4	0xEF2000  	CLR	W0
0xD8F6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,838 :: 		Leakage_Neg_Set         := 0;
0xD8F8	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0xD8FA	0xEF2000  	CLR	W0
0xD8FC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,839 :: 		FactoryData             := 0;
0xD8FE	0x214841  	MOV	#lo_addr(_FactoryData), W1
0xD900	0xEF2000  	CLR	W0
0xD902	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,840 :: 		FactoryResetBit         := 0;
0xD904	0x2148D1  	MOV	#lo_addr(_FactoryResetBit), W1
0xD906	0xEF2000  	CLR	W0
0xD908	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,841 :: 		Relay_Out_Data          := 1;
0xD90A	0x200010  	MOV	#1, W0
0xD90C	0x88A470  	MOV	W0, _Relay_Out_Data
;GRR3000LManagementPanel.mpas,842 :: 		MasterData[0]           := 0;
0xD90E	0x214901  	MOV	#lo_addr(_MasterData), W1
0xD910	0xEF2000  	CLR	W0
0xD912	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,843 :: 		MasterData[1]           := 0;
0xD914	0x214911  	MOV	#lo_addr(_MasterData+1), W1
0xD916	0xEF2000  	CLR	W0
0xD918	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,844 :: 		MasterData[2]           := 0;
0xD91A	0x214921  	MOV	#lo_addr(_MasterData+2), W1
0xD91C	0xEF2000  	CLR	W0
0xD91E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,845 :: 		MasterData[3]           := 0;
0xD920	0x214931  	MOV	#lo_addr(_MasterData+3), W1
0xD922	0xEF2000  	CLR	W0
0xD924	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,846 :: 		MasterData[4]           := 0;
0xD926	0x214941  	MOV	#lo_addr(_MasterData+4), W1
0xD928	0xEF2000  	CLR	W0
0xD92A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,847 :: 		MasterData[5]           := 0;
0xD92C	0x214951  	MOV	#lo_addr(_MasterData+5), W1
0xD92E	0xEF2000  	CLR	W0
0xD930	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,848 :: 		ReceiveData[0]          := 0;
0xD932	0x214A81  	MOV	#lo_addr(_ReceiveData), W1
0xD934	0xEF2000  	CLR	W0
0xD936	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,849 :: 		ReceiveData[1]          := 0;
0xD938	0x214A91  	MOV	#lo_addr(_ReceiveData+1), W1
0xD93A	0xEF2000  	CLR	W0
0xD93C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,850 :: 		ReceiveData[2]          := 0;
0xD93E	0x214AA1  	MOV	#lo_addr(_ReceiveData+2), W1
0xD940	0xEF2000  	CLR	W0
0xD942	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,851 :: 		ReceiveData[3]          := 0;
0xD944	0x214AB1  	MOV	#lo_addr(_ReceiveData+3), W1
0xD946	0xEF2000  	CLR	W0
0xD948	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,852 :: 		ReceiveData[4]          := 0;
0xD94A	0x214AC1  	MOV	#lo_addr(_ReceiveData+4), W1
0xD94C	0xEF2000  	CLR	W0
0xD94E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,853 :: 		ReceiveData[5]          := 0;
0xD950	0x214AD1  	MOV	#lo_addr(_ReceiveData+5), W1
0xD952	0xEF2000  	CLR	W0
0xD954	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,854 :: 		ReceiveData[6]          := 0;
0xD956	0x214AE1  	MOV	#lo_addr(_ReceiveData+6), W1
0xD958	0xEF2000  	CLR	W0
0xD95A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,855 :: 		TimeScreenCounter       := 0;
0xD95C	0xEF2000  	CLR	W0
0xD95E	0x88A530  	MOV	W0, _TimeScreenCounter
;GRR3000LManagementPanel.mpas,857 :: 		ThryFaultCount          := 0;
0xD960	0xEF2000  	CLR	W0
0xD962	0x88A440  	MOV	W0, _ThryFaultCount
;GRR3000LManagementPanel.mpas,859 :: 		RlyFaultCount           := 0;
0xD964	0xEF2000  	CLR	W0
0xD966	0x88A430  	MOV	W0, _RlyFaultCount
;GRR3000LManagementPanel.mpas,861 :: 		ThryCommFault           := 0;
0xD968	0x214851  	MOV	#lo_addr(_ThryCommFault), W1
0xD96A	0xEF2000  	CLR	W0
0xD96C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,863 :: 		RlyCommFault            := 0;
0xD96E	0x2148C1  	MOV	#lo_addr(_RlyCommFault), W1
0xD970	0xEF2000  	CLR	W0
0xD972	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,864 :: 		RectifierVoltage_Set    := 0;
0xD974	0xEF2000  	CLR	W0
0xD976	0x88A450  	MOV	W0, _RectifierVoltage_Set
;GRR3000LManagementPanel.mpas,865 :: 		BCTimeCountBit          := 0;
0xD978	0x2091E1  	MOV	#lo_addr(_BCTimeCountBit), W1
0xD97A	0xEF2000  	CLR	W0
0xD97C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,866 :: 		BCTimeCounter           := 0;
0xD97E	0xEF2000  	CLR	W0
0xD980	0x8848E0  	MOV	W0, _BCTimeCounter
;GRR3000LManagementPanel.mpas,867 :: 		BTBit                   := 0;
0xD982	0x208CE0  	MOV	#lo_addr(_BTBit), W0
0xD984	0xA1E010  	BCLR	[W0], BitPos(_BTBit+0)
;GRR3000LManagementPanel.mpas,868 :: 		Rly_AcHighBit           := 0;
0xD986	0x209200  	MOV	#lo_addr(_Rly_AcHighBit), W0
0xD988	0xA10010  	BCLR	[W0], BitPos(_Rly_AcHighBit+0)
;GRR3000LManagementPanel.mpas,869 :: 		Rly_AcLowBit            := 0;
0xD98A	0x208CE0  	MOV	#lo_addr(_Rly_AcLowBit), W0
0xD98C	0xA1F010  	BCLR	[W0], BitPos(_Rly_AcLowBit+0)
;GRR3000LManagementPanel.mpas,870 :: 		Rly_DcHighBit           := 0;
0xD98E	0x208CE0  	MOV	#lo_addr(_Rly_DcHighBit), W0
0xD990	0xA1A010  	BCLR	[W0], BitPos(_Rly_DcHighBit+0)
;GRR3000LManagementPanel.mpas,871 :: 		Rly_DcLowBit            := 0;
0xD992	0x208CE0  	MOV	#lo_addr(_Rly_DcLowBit), W0
0xD994	0xA19010  	BCLR	[W0], BitPos(_Rly_DcLowBit+0)
;GRR3000LManagementPanel.mpas,872 :: 		Rly_PosLeakageBit       := 0;
0xD996	0x208CE0  	MOV	#lo_addr(_Rly_PosLeakageBit), W0
0xD998	0xA1B010  	BCLR	[W0], BitPos(_Rly_PosLeakageBit+0)
;GRR3000LManagementPanel.mpas,873 :: 		Rly_NegLeakageBit       := 0;
0xD99A	0x208CE0  	MOV	#lo_addr(_Rly_NegLeakageBit), W0
0xD99C	0xA1D010  	BCLR	[W0], BitPos(_Rly_NegLeakageBit+0)
;GRR3000LManagementPanel.mpas,874 :: 		Rly_BattAmpsLimitBit    := 0;
0xD99E	0x208CE0  	MOV	#lo_addr(_Rly_BattAmpsLimitBit), W0
0xD9A0	0xA1C010  	BCLR	[W0], BitPos(_Rly_BattAmpsLimitBit+0)
;GRR3000LManagementPanel.mpas,875 :: 		Rly_RedAmpsLimitBit     := 0;
0xD9A2	0x209200  	MOV	#lo_addr(_Rly_RedAmpsLimitBit), W0
0xD9A4	0xA11010  	BCLR	[W0], BitPos(_Rly_RedAmpsLimitBit+0)
;GRR3000LManagementPanel.mpas,876 :: 		Rly_FanFaultBit         := 0;
0xD9A6	0x209200  	MOV	#lo_addr(_Rly_FanFaultBit), W0
0xD9A8	0xA16010  	BCLR	[W0], BitPos(_Rly_FanFaultBit+0)
;GRR3000LManagementPanel.mpas,877 :: 		Rly_HighTempBit         := 0;
0xD9AA	0x209200  	MOV	#lo_addr(_Rly_HighTempBit), W0
0xD9AC	0xA15010  	BCLR	[W0], BitPos(_Rly_HighTempBit+0)
;GRR3000LManagementPanel.mpas,878 :: 		Rly_BattReverseBit      := 0;
0xD9AE	0x209200  	MOV	#lo_addr(_Rly_BattReverseBit), W0
0xD9B0	0xA17010  	BCLR	[W0], BitPos(_Rly_BattReverseBit+0)
;GRR3000LManagementPanel.mpas,879 :: 		Rly_AcMcbBit            := 0;
0xD9B2	0x209200  	MOV	#lo_addr(_Rly_AcMcbBit), W0
0xD9B4	0xA19010  	BCLR	[W0], BitPos(_Rly_AcMcbBit+0)
;GRR3000LManagementPanel.mpas,880 :: 		Rly_DcMcbBit            := 0;
0xD9B6	0x209200  	MOV	#lo_addr(_Rly_DcMcbBit), W0
0xD9B8	0xA18010  	BCLR	[W0], BitPos(_Rly_DcMcbBit+0)
;GRR3000LManagementPanel.mpas,881 :: 		Rly_BattMcbBit          := 0;
0xD9BA	0x209200  	MOV	#lo_addr(_Rly_BattMcbBit), W0
0xD9BC	0xA13010  	BCLR	[W0], BitPos(_Rly_BattMcbBit+0)
;GRR3000LManagementPanel.mpas,882 :: 		Rly_RedGenFaultBit      := 0;
0xD9BE	0x209200  	MOV	#lo_addr(_Rly_RedGenFaultBit), W0
0xD9C0	0xA12010  	BCLR	[W0], BitPos(_Rly_RedGenFaultBit+0)
;GRR3000LManagementPanel.mpas,883 :: 		Rly_DeepDschBit         := 0;
0xD9C2	0x209200  	MOV	#lo_addr(_Rly_DeepDschBit), W0
0xD9C4	0xA14010  	BCLR	[W0], BitPos(_Rly_DeepDschBit+0)
;GRR3000LManagementPanel.mpas,884 :: 		Modbus_Rec_Counter      := 0;
0xD9C6	0xEF2000  	CLR	W0
0xD9C8	0x884910  	MOV	W0, _Modbus_Rec_Counter
;GRR3000LManagementPanel.mpas,885 :: 		AlarmSira               := 23;
0xD9CA	0x2091F1  	MOV	#lo_addr(_AlarmSira), W1
0xD9CC	0xB3C170  	MOV.B	#23, W0
0xD9CE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,886 :: 		BuzzerBit               := 0;
0xD9D0	0x208CE0  	MOV	#lo_addr(_BuzzerBit), W0
0xD9D2	0xA18010  	BCLR	[W0], BitPos(_BuzzerBit+0)
;GRR3000LManagementPanel.mpas,887 :: 		Buzzer_AllowBit         := 1;
0xD9D4	0x208CE0  	MOV	#lo_addr(_Buzzer_AllowBit), W0
0xD9D6	0xA07010  	BSET	[W0], BitPos(_Buzzer_AllowBit+0)
;GRR3000LManagementPanel.mpas,888 :: 		Buzzer_Counter          := 0;
0xD9D8	0xEF2000  	CLR	W0
0xD9DA	0x884780  	MOV	W0, _Buzzer_Counter
;GRR3000LManagementPanel.mpas,889 :: 		AlarmSiraCounter        := 0;
0xD9DC	0xEF2000  	CLR	W0
0xD9DE	0x884790  	MOV	W0, _AlarmSiraCounter
;GRR3000LManagementPanel.mpas,890 :: 		DcFaultRelayTime        := 0;
0xD9E0	0xEF2000  	CLR	W0
0xD9E2	0x8847A0  	MOV	W0, _DcFaultRelayTime
;GRR3000LManagementPanel.mpas,891 :: 		ReceiveAddr             := 0;
0xD9E4	0x208D31  	MOV	#lo_addr(_ReceiveAddr), W1
0xD9E6	0xEF2000  	CLR	W0
0xD9E8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,892 :: 		Dig_LoadVolt            := 0;
0xD9EA	0xEF2000  	CLR	W0
0xD9EC	0x884740  	MOV	W0, _Dig_LoadVolt
;GRR3000LManagementPanel.mpas,893 :: 		Dig_LoadVoltLeak        := 0;
0xD9EE	0xEF2000  	CLR	W0
0xD9F0	0x884730  	MOV	W0, _Dig_LoadVoltLeak
;GRR3000LManagementPanel.mpas,894 :: 		Dig_LoadVoltLeakRAW     := 0;
0xD9F2	0xEF2000  	CLR	W0
0xD9F4	0xEF2002  	CLR	W1
0xD9F6	0x884750  	MOV	W0, _Dig_LoadVoltLeakRAW
0xD9F8	0x884761  	MOV	W1, _Dig_LoadVoltLeakRAW+2
;GRR3000LManagementPanel.mpas,896 :: 		dV_LoadVolt             := 0;
0xD9FA	0xEF2000  	CLR	W0
0xD9FC	0xEF2002  	CLR	W1
0xD9FE	0x88AD00  	MOV	W0, _dV_LoadVolt
0xDA00	0x88AD11  	MOV	W1, _dV_LoadVolt+2
;GRR3000LManagementPanel.mpas,897 :: 		Sample_RedDigital       := 0;
0xDA02	0xEF2000  	CLR	W0
0xDA04	0x88AD30  	MOV	W0, _Sample_RedDigital
;GRR3000LManagementPanel.mpas,898 :: 		Sample_RedVolt          := 0;
0xDA06	0xEF2000  	CLR	W0
0xDA08	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,899 :: 		Program_StartBit        := 0;
0xDA0A	0x215960  	MOV	#lo_addr(_Program_StartBit), W0
0xDA0C	0xA11010  	BCLR	[W0], BitPos(_Program_StartBit+0)
;GRR3000LManagementPanel.mpas,900 :: 		MenuBit                 := 0;
0xDA0E	0x212A40  	MOV	#lo_addr(_MenuBit), W0
0xDA10	0xA1C010  	BCLR	[W0], BitPos(_MenuBit+0)
;GRR3000LManagementPanel.mpas,901 :: 		ChargeStatus            := Charge;
0xDA12	0x207830  	MOV	#1923, W0
0xDA14	0x884770  	MOV	W0, _ChargeStatus
;GRR3000LManagementPanel.mpas,902 :: 		AcViewScreenBit         := 0;
0xDA16	0x208CE0  	MOV	#lo_addr(_AcViewScreenBit), W0
0xDA18	0xA16010  	BCLR	[W0], BitPos(_AcViewScreenBit+0)
;GRR3000LManagementPanel.mpas,905 :: 		Leakage_Status          := 0;
0xDA1A	0xEF2000  	CLR	W0
0xDA1C	0x8847B0  	MOV	W0, _Leakage_Status
;GRR3000LManagementPanel.mpas,906 :: 		Leakage_Volt            := 0;
0xDA1E	0xEF2000  	CLR	W0
0xDA20	0xEF2002  	CLR	W1
0xDA22	0x884860  	MOV	W0, _Leakage_Volt
0xDA24	0x884871  	MOV	W1, _Leakage_Volt+2
;GRR3000LManagementPanel.mpas,907 :: 		Adc_Leakage             := 0;
0xDA26	0xEF2000  	CLR	W0
0xDA28	0x884850  	MOV	W0, _Adc_Leakage
;GRR3000LManagementPanel.mpas,908 :: 		Pos_Leak_Ref            := 0;
0xDA2A	0xEF2000  	CLR	W0
0xDA2C	0xEF2002  	CLR	W1
0xDA2E	0x884880  	MOV	W0, _Pos_Leak_Ref
0xDA30	0x884891  	MOV	W1, _Pos_Leak_Ref+2
;GRR3000LManagementPanel.mpas,909 :: 		Neg_Leak_Ref            := 0;
0xDA32	0xEF2000  	CLR	W0
0xDA34	0xEF2002  	CLR	W1
0xDA36	0x8848C0  	MOV	W0, _Neg_Leak_Ref
0xDA38	0x8848D1  	MOV	W1, _Neg_Leak_Ref+2
;GRR3000LManagementPanel.mpas,910 :: 		one_kohm_constant       := 0;
0xDA3A	0xEF2000  	CLR	W0
0xDA3C	0x88ACC0  	MOV	W0, _one_kohm_constant
;GRR3000LManagementPanel.mpas,911 :: 		Unit_Leak0              := 0;
0xDA3E	0xEF2000  	CLR	W0
0xDA40	0xEF2002  	CLR	W1
0xDA42	0x8848A0  	MOV	W0, _Unit_Leak0
0xDA44	0x8848B1  	MOV	W1, _Unit_Leak0+2
;GRR3000LManagementPanel.mpas,912 :: 		Unit_Leak1              := 0;
0xDA46	0xEF2000  	CLR	W0
0xDA48	0xEF2002  	CLR	W1
0xDA4A	0x8847E0  	MOV	W0, _Unit_Leak1
0xDA4C	0x8847F1  	MOV	W1, _Unit_Leak1+2
;GRR3000LManagementPanel.mpas,913 :: 		Unit_Leak2              := 0;
0xDA4E	0xEF2000  	CLR	W0
0xDA50	0xEF2002  	CLR	W1
0xDA52	0x8847C0  	MOV	W0, _Unit_Leak2
0xDA54	0x8847D1  	MOV	W1, _Unit_Leak2+2
;GRR3000LManagementPanel.mpas,914 :: 		R_Leakage               := 0;
0xDA56	0xEF2000  	CLR	W0
0xDA58	0x884800  	MOV	W0, _R_Leakage
;GRR3000LManagementPanel.mpas,915 :: 		R_Leakage0              := 0;
0xDA5A	0xEF2000  	CLR	W0
0xDA5C	0xEF2002  	CLR	W1
0xDA5E	0x884830  	MOV	W0, _R_Leakage0
0xDA60	0x884841  	MOV	W1, _R_Leakage0+2
;GRR3000LManagementPanel.mpas,916 :: 		R_Leakage1              := 0;
0xDA62	0xEF2000  	CLR	W0
0xDA64	0xEF2002  	CLR	W1
0xDA66	0x884810  	MOV	W0, _R_Leakage1
0xDA68	0x884821  	MOV	W1, _R_Leakage1+2
;GRR3000LManagementPanel.mpas,917 :: 		diff_leak_pos           := 0;
0xDA6A	0x2159F1  	MOV	#lo_addr(_diff_leak_pos), W1
0xDA6C	0xEF2000  	CLR	W0
0xDA6E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,918 :: 		diff_leak_neg           := 0;
0xDA70	0x215A41  	MOV	#lo_addr(_diff_leak_neg), W1
0xDA72	0xEF2000  	CLR	W0
0xDA74	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,919 :: 		leakage_show_bit        := 0;
0xDA76	0x209200  	MOV	#lo_addr(_leakage_show_bit), W0
0xDA78	0xA1A010  	BCLR	[W0], BitPos(_leakage_show_bit+0)
;GRR3000LManagementPanel.mpas,920 :: 		Pos_Leakage_bit         := 0;
0xDA7A	0x2092C0  	MOV	#lo_addr(_Pos_Leakage_bit), W0
0xDA7C	0xA17010  	BCLR	[W0], BitPos(_Pos_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,921 :: 		Neg_Leakage_bit         := 0;
0xDA7E	0x2092C0  	MOV	#lo_addr(_Neg_Leakage_bit), W0
0xDA80	0xA16010  	BCLR	[W0], BitPos(_Neg_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,926 :: 		Adc_Value         := 0;
0xDA82	0xEF2000  	CLR	W0
0xDA84	0x884A40  	MOV	W0, _Adc_Value
;GRR3000LManagementPanel.mpas,927 :: 		LoadVolt_Real     := 0.0;
0xDA86	0xEF2000  	CLR	W0
0xDA88	0xEF2002  	CLR	W1
0xDA8A	0x884A50  	MOV	W0, _LoadVolt_Real
0xDA8C	0x884A61  	MOV	W1, _LoadVolt_Real+2
;GRR3000LManagementPanel.mpas,928 :: 		Led1_Group        := 0;
0xDA8E	0x209451  	MOV	#lo_addr(_Led1_Group), W1
0xDA90	0xEF2000  	CLR	W0
0xDA92	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,929 :: 		Led2_Group        := 0;
0xDA94	0x209441  	MOV	#lo_addr(_Led2_Group), W1
0xDA96	0xEF2000  	CLR	W0
0xDA98	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,930 :: 		Led3_Group        := 0;
0xDA9A	0x209351  	MOV	#lo_addr(_Led3_Group), W1
0xDA9C	0xEF2000  	CLR	W0
0xDA9E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,931 :: 		TempHighBit       := 0;
0xDAA0	0x2092C0  	MOV	#lo_addr(_TempHighBit), W0
0xDAA2	0xA14010  	BCLR	[W0], BitPos(_TempHighBit+0)
;GRR3000LManagementPanel.mpas,932 :: 		HighTempBit       := 0;
0xDAA4	0x2092C0  	MOV	#lo_addr(_HighTempBit), W0
0xDAA6	0xA15010  	BCLR	[W0], BitPos(_HighTempBit+0)
;GRR3000LManagementPanel.mpas,933 :: 		ACFltCounter1     := 0;
0xDAA8	0xEF2000  	CLR	W0
0xDAAA	0x884A30  	MOV	W0, _ACFltCounter1
;GRR3000LManagementPanel.mpas,934 :: 		ACFltCounter2     := 0;
0xDAAC	0xEF2000  	CLR	W0
0xDAAE	0x884A70  	MOV	W0, _ACFltCounter2
;GRR3000LManagementPanel.mpas,935 :: 		AcOnCounter       := 0;
0xDAB0	0xEF2000  	CLR	W0
0xDAB2	0x884AB0  	MOV	W0, _AcOnCounter
;GRR3000LManagementPanel.mpas,936 :: 		LeakFltCounter1   := 0;
0xDAB4	0xEF2000  	CLR	W0
0xDAB6	0x884AA0  	MOV	W0, _LeakFltCounter1
;GRR3000LManagementPanel.mpas,937 :: 		LeakFltCounter2   := 0;
0xDAB8	0xEF2000  	CLR	W0
0xDABA	0x884AC0  	MOV	W0, _LeakFltCounter2
;GRR3000LManagementPanel.mpas,938 :: 		TempFltCounter    := 0;
0xDABC	0xEF2000  	CLR	W0
0xDABE	0x884AD0  	MOV	W0, _TempFltCounter
;GRR3000LManagementPanel.mpas,939 :: 		Ac_MCB_Bit        := 0;
0xDAC0	0x2092C0  	MOV	#lo_addr(_Ac_MCB_Bit), W0
0xDAC2	0xA1B010  	BCLR	[W0], BitPos(_Ac_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,940 :: 		Load_MCB_Bit      := 0;
0xDAC4	0x2092C0  	MOV	#lo_addr(_Load_MCB_Bit), W0
0xDAC6	0xA19010  	BCLR	[W0], BitPos(_Load_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,941 :: 		Batt_MCB_Bit      := 0;
0xDAC8	0x2092C0  	MOV	#lo_addr(_Batt_MCB_Bit), W0
0xDACA	0xA18010  	BCLR	[W0], BitPos(_Batt_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,942 :: 		DropCounter       := 0;
0xDACC	0xEF2000  	CLR	W0
0xDACE	0x884A80  	MOV	W0, _DropCounter
;GRR3000LManagementPanel.mpas,943 :: 		Read_LoadVolt     := 0;
0xDAD0	0xEF2000  	CLR	W0
0xDAD2	0x884A90  	MOV	W0, _Read_LoadVolt
;GRR3000LManagementPanel.mpas,944 :: 		FanFaultBit       := 0;
0xDAD4	0x2092C0  	MOV	#lo_addr(_FanFaultBit), W0
0xDAD6	0xA1A010  	BCLR	[W0], BitPos(_FanFaultBit+0)
;GRR3000LManagementPanel.mpas,945 :: 		FanFltBit         := 0;
0xDAD8	0x2092C0  	MOV	#lo_addr(_FanFltBit), W0
0xDADA	0xA13010  	BCLR	[W0], BitPos(_FanFltBit+0)
;GRR3000LManagementPanel.mpas,946 :: 		FanAmpsRaw        := 0;
0xDADC	0xEF2000  	CLR	W0
0xDADE	0x884940  	MOV	W0, _FanAmpsRaw
;GRR3000LManagementPanel.mpas,947 :: 		FanFaultCounter   := 0;
0xDAE0	0xEF2000  	CLR	W0
0xDAE2	0x884930  	MOV	W0, _FanFaultCounter
;GRR3000LManagementPanel.mpas,948 :: 		RedAmpsLimitBit   := 0;
0xDAE4	0x209200  	MOV	#lo_addr(_RedAmpsLimitBit), W0
0xDAE6	0xA1F010  	BCLR	[W0], BitPos(_RedAmpsLimitBit+0)
;GRR3000LManagementPanel.mpas,949 :: 		BattAmpsLimitBit  := 0;
0xDAE8	0x2092C0  	MOV	#lo_addr(_BattAmpsLimitBit), W0
0xDAEA	0xA10010  	BCLR	[W0], BitPos(_BattAmpsLimitBit+0)
;GRR3000LManagementPanel.mpas,950 :: 		RedFaultBit       := 0;
0xDAEC	0x212A40  	MOV	#lo_addr(_RedFaultBit), W0
0xDAEE	0xA1D010  	BCLR	[W0], BitPos(_RedFaultBit+0)
;GRR3000LManagementPanel.mpas,951 :: 		Tcomp2            := 0.0;
0xDAF0	0xEF2000  	CLR	W0
0xDAF2	0xEF2002  	CLR	W1
0xDAF4	0x888FD0  	MOV	W0, _Tcomp2
0xDAF6	0x888FE1  	MOV	W1, _Tcomp2+2
;GRR3000LManagementPanel.mpas,952 :: 		TCompV            := 0.0;
0xDAF8	0xEF2000  	CLR	W0
0xDAFA	0xEF2002  	CLR	W1
0xDAFC	0x888FF0  	MOV	W0, _TCompV
0xDAFE	0x889001  	MOV	W1, _TCompV+2
;GRR3000LManagementPanel.mpas,953 :: 		TempComp_Volt     := 0;
0xDB00	0xEF2000  	CLR	W0
0xDB02	0x888D80  	MOV	W0, _TempComp_Volt
;GRR3000LManagementPanel.mpas,954 :: 		AcVoltReal        := 0;
0xDB04	0xEF2000  	CLR	W0
0xDB06	0x884950  	MOV	W0, _AcVoltReal
;GRR3000LManagementPanel.mpas,955 :: 		DcHighBit         := 0;
0xDB08	0x209200  	MOV	#lo_addr(_DcHighBit), W0
0xDB0A	0xA1C010  	BCLR	[W0], BitPos(_DcHighBit+0)
;GRR3000LManagementPanel.mpas,956 :: 		DcLowBit          := 0;
0xDB0C	0x209200  	MOV	#lo_addr(_DcLowBit), W0
0xDB0E	0xA1B010  	BCLR	[W0], BitPos(_DcLowBit+0)
;GRR3000LManagementPanel.mpas,957 :: 		DDischargeCounter := 0;
0xDB10	0xEF2000  	CLR	W0
0xDB12	0x884920  	MOV	W0, _DDischargeCounter
;GRR3000LManagementPanel.mpas,958 :: 		DDschargeBit      := 0;
0xDB14	0x209200  	MOV	#lo_addr(_DDschargeBit), W0
0xDB16	0xA1E010  	BCLR	[W0], BitPos(_DDschargeBit+0)
;GRR3000LManagementPanel.mpas,959 :: 		AcHighFaultBit    := 0;
0xDB18	0x209200  	MOV	#lo_addr(_AcHighFaultBit), W0
0xDB1A	0xA1D010  	BCLR	[W0], BitPos(_AcHighFaultBit+0)
;GRR3000LManagementPanel.mpas,960 :: 		AcLowFaultBit     := 0;
0xDB1C	0x2092C0  	MOV	#lo_addr(_AcLowFaultBit), W0
0xDB1E	0xA11010  	BCLR	[W0], BitPos(_AcLowFaultBit+0)
;GRR3000LManagementPanel.mpas,961 :: 		Confirm_AcMenuBit := 0;
0xDB20	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0xDB22	0xA19010  	BCLR	[W0], BitPos(_Confirm_AcMenuBit+0)
;GRR3000LManagementPanel.mpas,962 :: 		Confirm_DcMenuBit := 0;
0xDB24	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0xDB26	0xA18010  	BCLR	[W0], BitPos(_Confirm_DcMenuBit+0)
;GRR3000LManagementPanel.mpas,963 :: 		Confirm_BattMenuBit := 0;
0xDB28	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0xDB2A	0xA12010  	BCLR	[W0], BitPos(_Confirm_BattMenuBit+0)
;GRR3000LManagementPanel.mpas,964 :: 		Confirm_OperaMenuBit   := 0;
0xDB2C	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0xDB2E	0xA17010  	BCLR	[W0], BitPos(_Confirm_OperaMenuBit+0)
;GRR3000LManagementPanel.mpas,965 :: 		Confirm_LeakaMenuBit   := 0;
0xDB30	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0xDB32	0xA11010  	BCLR	[W0], BitPos(_Confirm_LeakaMenuBit+0)
;GRR3000LManagementPanel.mpas,966 :: 		Confirm_TempeMenuBit   := 0;
0xDB34	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0xDB36	0xA13010  	BCLR	[W0], BitPos(_Confirm_TempeMenuBit+0)
;GRR3000LManagementPanel.mpas,967 :: 		Confirm_ClockMenuBit   := 0;
0xDB38	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0xDB3A	0xA15010  	BCLR	[W0], BitPos(_Confirm_ClockMenuBit+0)
;GRR3000LManagementPanel.mpas,968 :: 		Confirm_ModbusMenuBit  := 0;
0xDB3C	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0xDB3E	0xA14010  	BCLR	[W0], BitPos(_Confirm_ModbusMenuBit+0)
;GRR3000LManagementPanel.mpas,971 :: 		PasswordArray[1]:= 0;
0xDB40	0x215F41  	MOV	#lo_addr(_PasswordArray), W1
0xDB42	0xEF2000  	CLR	W0
0xDB44	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,972 :: 		PasswordArray[2]:= 0;
0xDB46	0x215F51  	MOV	#lo_addr(_PasswordArray+1), W1
0xDB48	0xEF2000  	CLR	W0
0xDB4A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,973 :: 		PasswordArray[3]:= 0;
0xDB4C	0x215F61  	MOV	#lo_addr(_PasswordArray+2), W1
0xDB4E	0xEF2000  	CLR	W0
0xDB50	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,974 :: 		PasswordArray[4]:= 0;
0xDB52	0x215F71  	MOV	#lo_addr(_PasswordArray+3), W1
0xDB54	0xEF2000  	CLR	W0
0xDB56	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,975 :: 		ChngA                := 0;
0xDB58	0x215F91  	MOV	#lo_addr(_ChngA), W1
0xDB5A	0xEF2000  	CLR	W0
0xDB5C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,976 :: 		ChngB                := 0;
0xDB5E	0x215F81  	MOV	#lo_addr(_ChngB), W1
0xDB60	0xEF2000  	CLR	W0
0xDB62	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,977 :: 		ChngC                := 0;
0xDB64	0x215B81  	MOV	#lo_addr(_ChngC), W1
0xDB66	0xEF2000  	CLR	W0
0xDB68	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,978 :: 		ChngD                := 0;
0xDB6A	0x215A51  	MOV	#lo_addr(_ChngD), W1
0xDB6C	0xEF2000  	CLR	W0
0xDB6E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,979 :: 		PasswordHam          := 0;
0xDB70	0xEF2000  	CLR	W0
0xDB72	0x88B1C0  	MOV	W0, _PasswordHam
;GRR3000LManagementPanel.mpas,980 :: 		Chng[1]              := 0;
0xDB74	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xDB76	0xEF2000  	CLR	W0
0xDB78	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,981 :: 		Chng[2]              := 0;
0xDB7A	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xDB7C	0xEF2000  	CLR	W0
0xDB7E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,982 :: 		Chng[3]              := 0;
0xDB80	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xDB82	0xEF2000  	CLR	W0
0xDB84	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,983 :: 		Chng[4]              := 0;
0xDB86	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xDB88	0xEF2000  	CLR	W0
0xDB8A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,984 :: 		Chng[5]              := 0;
0xDB8C	0x212501  	MOV	#lo_addr(_Chng+4), W1
0xDB8E	0xEF2000  	CLR	W0
0xDB90	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,985 :: 		Chng[6]              := 0;
0xDB92	0x212511  	MOV	#lo_addr(_Chng+5), W1
0xDB94	0xEF2000  	CLR	W0
0xDB96	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,986 :: 		Chng[7]              := 0;
0xDB98	0x212521  	MOV	#lo_addr(_Chng+6), W1
0xDB9A	0xEF2000  	CLR	W0
0xDB9C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,987 :: 		Chng[8]              := 0;
0xDB9E	0x212531  	MOV	#lo_addr(_Chng+7), W1
0xDBA0	0xEF2000  	CLR	W0
0xDBA2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,988 :: 		Chng[9]              := 0;
0xDBA4	0x212541  	MOV	#lo_addr(_Chng+8), W1
0xDBA6	0xEF2000  	CLR	W0
0xDBA8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,989 :: 		Chng[10]             := 0;
0xDBAA	0x212551  	MOV	#lo_addr(_Chng+9), W1
0xDBAC	0xEF2000  	CLR	W0
0xDBAE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,990 :: 		Chng[11]             := 0;
0xDBB0	0x212561  	MOV	#lo_addr(_Chng+10), W1
0xDBB2	0xEF2000  	CLR	W0
0xDBB4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,991 :: 		Chng[12]             := 0;
0xDBB6	0x212571  	MOV	#lo_addr(_Chng+11), W1
0xDBB8	0xEF2000  	CLR	W0
0xDBBA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,992 :: 		Chng[13]             := 0;
0xDBBC	0x212581  	MOV	#lo_addr(_Chng+12), W1
0xDBBE	0xEF2000  	CLR	W0
0xDBC0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,993 :: 		Chng[14]             := 0;
0xDBC2	0x212591  	MOV	#lo_addr(_Chng+13), W1
0xDBC4	0xEF2000  	CLR	W0
0xDBC6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,994 :: 		Chng[15]             := 0;
0xDBC8	0x2125A1  	MOV	#lo_addr(_Chng+14), W1
0xDBCA	0xEF2000  	CLR	W0
0xDBCC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,996 :: 		RedVolt_HighPercent10Bit := 0.0;
0xDBCE	0xEF2000  	CLR	W0
0xDBD0	0xEF2002  	CLR	W1
0xDBD2	0x8849D0  	MOV	W0, _RedVolt_HighPercent10Bit
0xDBD4	0x8849E1  	MOV	W1, _RedVolt_HighPercent10Bit+2
;GRR3000LManagementPanel.mpas,997 :: 		RedVolt_LowPercent10Bit  := 0.0;
0xDBD6	0xEF2000  	CLR	W0
0xDBD8	0xEF2002  	CLR	W1
0xDBDA	0x8849B0  	MOV	W0, _RedVolt_LowPercent10Bit
0xDBDC	0x8849C1  	MOV	W1, _RedVolt_LowPercent10Bit+2
;GRR3000LManagementPanel.mpas,999 :: 		DropperInitCounter1      := 0;
0xDBDE	0xEF2000  	CLR	W0
0xDBE0	0x8849F0  	MOV	W0, _DropperInitCounter1
;GRR3000LManagementPanel.mpas,1000 :: 		DropperInitCounter2      := 0;
0xDBE2	0xEF2000  	CLR	W0
0xDBE4	0x884A10  	MOV	W0, _DropperInitCounter2
;GRR3000LManagementPanel.mpas,1001 :: 		DropperInitCounter3      := 0;
0xDBE6	0xEF2000  	CLR	W0
0xDBE8	0x884A00  	MOV	W0, _DropperInitCounter3
;GRR3000LManagementPanel.mpas,1002 :: 		DropperInitCounter4      := 0;
0xDBEA	0xEF2000  	CLR	W0
0xDBEC	0x884980  	MOV	W0, _DropperInitCounter4
;GRR3000LManagementPanel.mpas,1003 :: 		DropperCloseCounter      := 0;
0xDBEE	0xEF2000  	CLR	W0
0xDBF0	0x884970  	MOV	W0, _DropperCloseCounter
;GRR3000LManagementPanel.mpas,1011 :: 		Comm_ModbusFaultCounter  := 0;
0xDBF2	0xEF2000  	CLR	W0
0xDBF4	0x884990  	MOV	W0, _Comm_ModbusFaultCounter
;GRR3000LManagementPanel.mpas,1012 :: 		Modbus_FaultBit          := 0;
0xDBF6	0x2092C0  	MOV	#lo_addr(_Modbus_FaultBit), W0
0xDBF8	0xA12010  	BCLR	[W0], BitPos(_Modbus_FaultBit+0)
;GRR3000LManagementPanel.mpas,1014 :: 		Comm_StatusBit           := 0; // haberleþme durum biti, 0= bütün datalar, 1= sadece AC datalar, 2= GTT Datalar
0xDBFA	0x209341  	MOV	#lo_addr(_Comm_StatusBit), W1
0xDBFC	0xEF2000  	CLR	W0
0xDBFE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1015 :: 		Start_Bit                := 0;
0xDC00	0x212A40  	MOV	#lo_addr(_Start_Bit), W0
0xDC02	0xA1E010  	BCLR	[W0], BitPos(_Start_Bit+0)
;GRR3000LManagementPanel.mpas,1016 :: 		Start_Counter            := 0;
0xDC04	0xEF2000  	CLR	W0
0xDC06	0x88ABF0  	MOV	W0, _Start_Counter
;GRR3000LManagementPanel.mpas,1023 :: 		LV_ScreenCounter         := 0;
0xDC08	0x208221  	MOV	#lo_addr(_LV_ScreenCounter), W1
0xDC0A	0xEF2000  	CLR	W0
0xDC0C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1024 :: 		AC_ScreenCounter         := 0;
0xDC0E	0x208211  	MOV	#lo_addr(_AC_ScreenCounter), W1
0xDC10	0xEF2000  	CLR	W0
0xDC12	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1025 :: 		LoadVoltRMS              := 0;
0xDC14	0xEF2000  	CLR	W0
0xDC16	0xEF2002  	CLR	W1
0xDC18	0x884120  	MOV	W0, _LoadVoltRMS
0xDC1A	0x884131  	MOV	W1, _LoadVoltRMS+2
;GRR3000LManagementPanel.mpas,1026 :: 		Read_LoadVoltRaw         := 0;
0xDC1C	0xEF2000  	CLR	W0
0xDC1E	0xEF2002  	CLR	W1
0xDC20	0x884140  	MOV	W0, _Read_LoadVoltRaw
0xDC22	0x884151  	MOV	W1, _Read_LoadVoltRaw+2
;GRR3000LManagementPanel.mpas,1028 :: 		N_LeakBit                := 0;
0xDC24	0x208040  	MOV	#lo_addr(_N_LeakBit), W0
0xDC26	0xA18010  	BCLR	[W0], BitPos(_N_LeakBit+0)
;GRR3000LManagementPanel.mpas,1029 :: 		P_LeakBit                := 0;
0xDC28	0x208040  	MOV	#lo_addr(_P_LeakBit), W0
0xDC2A	0xA17010  	BCLR	[W0], BitPos(_P_LeakBit+0)
;GRR3000LManagementPanel.mpas,1030 :: 		Red_HighTemp             := 0;
0xDC2C	0x208040  	MOV	#lo_addr(_Red_HighTemp), W0
0xDC2E	0xA16010  	BCLR	[W0], BitPos(_Red_HighTemp+0)
;GRR3000LManagementPanel.mpas,1032 :: 		TempComp                 := 0;
0xDC30	0x211E31  	MOV	#lo_addr(_TempComp), W1
0xDC32	0xEF2000  	CLR	W0
0xDC34	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1034 :: 		BattAmps_Calib           := 0;  // GTT kartý için kalibre edilecek datalarýn deðerleri
0xDC36	0x2081E1  	MOV	#lo_addr(_BattAmps_Calib), W1
0xDC38	0xEF2000  	CLR	W0
0xDC3A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1035 :: 		RedAmps_Calib            := 0;
0xDC3C	0x208201  	MOV	#lo_addr(_RedAmps_Calib), W1
0xDC3E	0xEF2000  	CLR	W0
0xDC40	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1036 :: 		RedVolt_Calib            := 0;
0xDC42	0x2081F1  	MOV	#lo_addr(_RedVolt_Calib), W1
0xDC44	0xEF2000  	CLR	W0
0xDC46	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1037 :: 		Temp_Calib               := 0;
0xDC48	0x208231  	MOV	#lo_addr(_Temp_Calib), W1
0xDC4A	0xEF2000  	CLR	W0
0xDC4C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1038 :: 		BattAmps_CalibSend       := 0;  // GTT kartý için kalibre edilecek datalarýn deðerleri
0xDC4E	0xEF2000  	CLR	W0
0xDC50	0x8841C0  	MOV	W0, _BattAmps_CalibSend
;GRR3000LManagementPanel.mpas,1039 :: 		RedAmps_CalibSend        := 0;
0xDC52	0xEF2000  	CLR	W0
0xDC54	0x8841B0  	MOV	W0, _RedAmps_CalibSend
;GRR3000LManagementPanel.mpas,1040 :: 		RedVolt_CalibSend        := 0;
0xDC56	0xEF2000  	CLR	W0
0xDC58	0x8841D0  	MOV	W0, _RedVolt_CalibSend
;GRR3000LManagementPanel.mpas,1041 :: 		Temp_CalibSend           := 0;
0xDC5A	0xEF2000  	CLR	W0
0xDC5C	0x8841F0  	MOV	W0, _Temp_CalibSend
;GRR3000LManagementPanel.mpas,1044 :: 		Read_Alpha               := 0;  // GTT kartý için okunacak ekstra datalar
0xDC5E	0xEF2000  	CLR	W0
0xDC60	0x8841E0  	MOV	W0, _Read_Alpha
;GRR3000LManagementPanel.mpas,1045 :: 		Read_Phases              := 0;
0xDC62	0xEF2000  	CLR	W0
0xDC64	0x884170  	MOV	W0, _Read_Phases
;GRR3000LManagementPanel.mpas,1046 :: 		Read_DSW                 := 0;
0xDC66	0xEF2000  	CLR	W0
0xDC68	0x884160  	MOV	W0, _Read_DSW
;GRR3000LManagementPanel.mpas,1047 :: 		Read_NomVolt             := 0;
0xDC6A	0xEF2000  	CLR	W0
0xDC6C	0x884180  	MOV	W0, _Read_NomVolt
;GRR3000LManagementPanel.mpas,1048 :: 		Read_NomAmp              := 0;
0xDC6E	0xEF2000  	CLR	W0
0xDC70	0x8841A0  	MOV	W0, _Read_NomAmp
;GRR3000LManagementPanel.mpas,1050 :: 		GTTSendDataConfirm       := 0;
0xDC72	0x208321  	MOV	#lo_addr(_GTTSendDataConfirm), W1
0xDC74	0xEF2000  	CLR	W0
0xDC76	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1051 :: 		SendRepeatCounter        := 0;
0xDC78	0x2081D1  	MOV	#lo_addr(_SendRepeatCounter), W1
0xDC7A	0xEF2000  	CLR	W0
0xDC7C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1052 :: 		GTTCompleteBit           := 0;
0xDC7E	0x208040  	MOV	#lo_addr(_GTTCompleteBit), W0
0xDC80	0xA11010  	BCLR	[W0], BitPos(_GTTCompleteBit+0)
;GRR3000LManagementPanel.mpas,1053 :: 		Read_BatRawAmp           := 0;
0xDC82	0xEF2000  	CLR	W0
0xDC84	0x884050  	MOV	W0, _Read_BatRawAmp
;GRR3000LManagementPanel.mpas,1054 :: 		Read_RedRawAmp           := 0;
0xDC86	0xEF2000  	CLR	W0
0xDC88	0x884060  	MOV	W0, _Read_RedRawAmp
;GRR3000LManagementPanel.mpas,1055 :: 		Read_RedRawVlt           := 0;
0xDC8A	0xEF2000  	CLR	W0
0xDC8C	0x884080  	MOV	W0, _Read_RedRawVlt
;GRR3000LManagementPanel.mpas,1056 :: 		Read_CalOkBit            := 0;
0xDC8E	0xEF2000  	CLR	W0
0xDC90	0x884070  	MOV	W0, _Read_CalOkBit
;GRR3000LManagementPanel.mpas,1057 :: 		Read_RatedVolt           := 0;
0xDC92	0xEF2000  	CLR	W0
0xDC94	0x884010  	MOV	W0, _Read_RatedVolt
;GRR3000LManagementPanel.mpas,1058 :: 		Read_RatedAmps           := 0;
0xDC96	0xEF2000  	CLR	W0
0xDC98	0x884000  	MOV	W0, _Read_RatedAmps
;GRR3000LManagementPanel.mpas,1059 :: 		DDschargeControlBit      := 0;
0xDC9A	0x208040  	MOV	#lo_addr(_DDschargeControlBit), W0
0xDC9C	0xA10010  	BCLR	[W0], BitPos(_DDschargeControlBit+0)
;GRR3000LManagementPanel.mpas,1060 :: 		StopBit                  := 0;
0xDC9E	0x212A40  	MOV	#lo_addr(_StopBit), W0
0xDCA0	0xA1F010  	BCLR	[W0], BitPos(_StopBit+0)
;GRR3000LManagementPanel.mpas,1061 :: 		StopCounter1             := 0;
0xDCA2	0xEF2000  	CLR	W0
0xDCA4	0x884040  	MOV	W0, _StopCounter1
;GRR3000LManagementPanel.mpas,1062 :: 		StopCounter2             := 0;
0xDCA6	0xEF2000  	CLR	W0
0xDCA8	0x884030  	MOV	W0, _StopCounter2
;GRR3000LManagementPanel.mpas,1063 :: 		BackupCounter            := 0;
0xDCAA	0xEF2000  	CLR	W0
0xDCAC	0x884090  	MOV	W0, _BackupCounter
;GRR3000LManagementPanel.mpas,1064 :: 		OpTime1                  := 13;
0xDCAE	0x208161  	MOV	#lo_addr(_OpTime1), W1
0xDCB0	0xB3C0D0  	MOV.B	#13, W0
0xDCB2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1065 :: 		OpTime2                  := 13;
0xDCB4	0x208151  	MOV	#lo_addr(_OpTime2), W1
0xDCB6	0xB3C0D0  	MOV.B	#13, W0
0xDCB8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1067 :: 		QuitTime_Sec         := 0;
0xDCBA	0xEF2000  	CLR	W0
0xDCBC	0xEF2002  	CLR	W1
0xDCBE	0x889180  	MOV	W0, _QuitTime_Sec
0xDCC0	0x889191  	MOV	W1, _QuitTime_Sec+2
;GRR3000LManagementPanel.mpas,1068 :: 		QuitTimeCounter      := 0;
0xDCC2	0xEF2000  	CLR	W0
0xDCC4	0xEF2002  	CLR	W1
0xDCC6	0x8840C0  	MOV	W0, _QuitTimeCounter
0xDCC8	0x8840D1  	MOV	W1, _QuitTimeCounter+2
;GRR3000LManagementPanel.mpas,1069 :: 		CurveScan            := 0;
0xDCCA	0x2081C1  	MOV	#lo_addr(_CurveScan), W1
0xDCCC	0xEF2000  	CLR	W0
0xDCCE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1070 :: 		DayCalc              := 0;
0xDCD0	0x214611  	MOV	#lo_addr(_DayCalc), W1
0xDCD2	0xEF2000  	CLR	W0
0xDCD4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1071 :: 		Year_1               := 0;
0xDCD6	0x214641  	MOV	#lo_addr(_Year_1), W1
0xDCD8	0xEF2000  	CLR	W0
0xDCDA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1072 :: 		Year_2               := 0;
0xDCDC	0x2145C1  	MOV	#lo_addr(_Year_2), W1
0xDCDE	0xEF2000  	CLR	W0
0xDCE0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1073 :: 		Year_3               := 0;
0xDCE2	0x214651  	MOV	#lo_addr(_Year_3), W1
0xDCE4	0xEF2000  	CLR	W0
0xDCE6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1074 :: 		Year_4               := 0;
0xDCE8	0x2146D1  	MOV	#lo_addr(_Year_4), W1
0xDCEA	0xEF2000  	CLR	W0
0xDCEC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1075 :: 		Month_1              := 0;
0xDCEE	0x214631  	MOV	#lo_addr(_Month_1), W1
0xDCF0	0xEF2000  	CLR	W0
0xDCF2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1076 :: 		Month_2              := 0;
0xDCF4	0x2145D1  	MOV	#lo_addr(_Month_2), W1
0xDCF6	0xEF2000  	CLR	W0
0xDCF8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1077 :: 		Month_3              := 0;
0xDCFA	0x2146C1  	MOV	#lo_addr(_Month_3), W1
0xDCFC	0xEF2000  	CLR	W0
0xDCFE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1078 :: 		Month_4              := 0;
0xDD00	0x214701  	MOV	#lo_addr(_Month_4), W1
0xDD02	0xEF2000  	CLR	W0
0xDD04	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1079 :: 		Service1_Date        := 0;
0xDD06	0xEF2000  	CLR	W0
0xDD08	0x88A2D0  	MOV	W0, _Service1_Date
;GRR3000LManagementPanel.mpas,1080 :: 		Service2_Date        := 0;
0xDD0A	0xEF2000  	CLR	W0
0xDD0C	0x88A2F0  	MOV	W0, _Service2_Date
;GRR3000LManagementPanel.mpas,1081 :: 		Service3_Date        := 0;
0xDD0E	0xEF2000  	CLR	W0
0xDD10	0x88A350  	MOV	W0, _Service3_Date
;GRR3000LManagementPanel.mpas,1082 :: 		Service4_Date        := 0;
0xDD12	0xEF2000  	CLR	W0
0xDD14	0x88A370  	MOV	W0, _Service4_Date
;GRR3000LManagementPanel.mpas,1083 :: 		Temp_Byte_Date       := 0;
0xDD16	0x208171  	MOV	#lo_addr(_Temp_Byte_Date), W1
0xDD18	0xEF2000  	CLR	W0
0xDD1A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1084 :: 		BakimSelect          := 0;
0xDD1C	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0xDD1E	0xEF2000  	CLR	W0
0xDD20	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1085 :: 		Bkm_Status           := 0;
0xDD22	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xDD24	0xA1B010  	BCLR	[W0], BitPos(_Bkm_Status+0)
;GRR3000LManagementPanel.mpas,1086 :: 		Bkm_Min              := 0;
0xDD26	0x2140E1  	MOV	#lo_addr(_Bkm_Min), W1
0xDD28	0xEF2000  	CLR	W0
0xDD2A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1087 :: 		Bkm_Hour             := 0;
0xDD2C	0x214141  	MOV	#lo_addr(_Bkm_Hour), W1
0xDD2E	0xEF2000  	CLR	W0
0xDD30	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1088 :: 		BakimStartBit        := 0;
0xDD32	0x208040  	MOV	#lo_addr(_BakimStartBit), W0
0xDD34	0xA13010  	BCLR	[W0], BitPos(_BakimStartBit+0)
;GRR3000LManagementPanel.mpas,1089 :: 		Bakim_Start          := 0;
0xDD36	0x208040  	MOV	#lo_addr(_Bakim_Start), W0
0xDD38	0xA12010  	BCLR	[W0], BitPos(_Bakim_Start+0)
;GRR3000LManagementPanel.mpas,1090 :: 		BakimLockBit         := 1;
0xDD3A	0x208040  	MOV	#lo_addr(_BakimLockBit), W0
0xDD3C	0xA04010  	BSET	[W0], BitPos(_BakimLockBit+0)
;GRR3000LManagementPanel.mpas,1091 :: 		BakimControlBit      := 0;
0xDD3E	0x212A40  	MOV	#lo_addr(_BakimControlBit), W0
0xDD40	0xA1A010  	BCLR	[W0], BitPos(_BakimControlBit+0)
;GRR3000LManagementPanel.mpas,1092 :: 		QuitVoltBit          := 0;
0xDD42	0x208040  	MOV	#lo_addr(_QuitVoltBit), W0
0xDD44	0xA15010  	BCLR	[W0], BitPos(_QuitVoltBit+0)
;GRR3000LManagementPanel.mpas,1093 :: 		Service_Charge_StateBit := 10;
0xDD46	0x208141  	MOV	#lo_addr(_Service_Charge_StateBit), W1
0xDD48	0xB3C0A0  	MOV.B	#10, W0
0xDD4A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1095 :: 		Bat_Service_Timer_bit := 0;
0xDD4C	0x208040  	MOV	#lo_addr(_Bat_Service_Timer_bit), W0
0xDD4E	0xA19010  	BCLR	[W0], BitPos(_Bat_Service_Timer_bit+0)
;GRR3000LManagementPanel.mpas,1096 :: 		Bat_Service_Unit1     := 1;
0xDD50	0x208CE0  	MOV	#lo_addr(_Bat_Service_Unit1), W0
0xDD52	0xA01010  	BSET	[W0], BitPos(_Bat_Service_Unit1+0)
;GRR3000LManagementPanel.mpas,1097 :: 		Bat_Service_Unit2     := 1;
0xDD54	0x208CE0  	MOV	#lo_addr(_Bat_Service_Unit2), W0
0xDD56	0xA00010  	BSET	[W0], BitPos(_Bat_Service_Unit2+0)
;GRR3000LManagementPanel.mpas,1098 :: 		BakimInitBit          := 0;
0xDD58	0x208CE0  	MOV	#lo_addr(_BakimInitBit), W0
0xDD5A	0xA12010  	BCLR	[W0], BitPos(_BakimInitBit+0)
;GRR3000LManagementPanel.mpas,1099 :: 		Bat_Service_Timer     := 0;
0xDD5C	0xEF2000  	CLR	W0
0xDD5E	0x884680  	MOV	W0, _Bat_Service_Timer
;GRR3000LManagementPanel.mpas,1100 :: 		Bat_Curve_Scan_State_bit := 10;
0xDD60	0x208C31  	MOV	#lo_addr(_Bat_Curve_Scan_State_bit), W1
0xDD62	0xB3C0A0  	MOV.B	#10, W0
0xDD64	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1101 :: 		Battery_Current_Capacity := 0;
0xDD66	0xEF2000  	CLR	W0
0xDD68	0x884650  	MOV	W0, _Battery_Current_Capacity
;GRR3000LManagementPanel.mpas,1102 :: 		Curve_Time               := 0;
0xDD6A	0xEF2000  	CLR	W0
0xDD6C	0x884640  	MOV	W0, _Curve_Time
;GRR3000LManagementPanel.mpas,1103 :: 		First_Bat_Current        := 0;
0xDD6E	0xEF2000  	CLR	W0
0xDD70	0x884660  	MOV	W0, _First_Bat_Current
;GRR3000LManagementPanel.mpas,1104 :: 		bat_curve_scan_fail      := 0;
0xDD72	0x208040  	MOV	#lo_addr(_bat_curve_scan_fail), W0
0xDD74	0xA1F010  	BCLR	[W0], BitPos(_bat_curve_scan_fail+0)
;GRR3000LManagementPanel.mpas,1106 :: 		Redresor_OK_Bit          := 1;
0xDD76	0x208040  	MOV	#lo_addr(_Redresor_OK_Bit), W0
0xDD78	0xA0E010  	BSET	[W0], BitPos(_Redresor_OK_Bit+0)
;GRR3000LManagementPanel.mpas,1108 :: 		WriteText := '       ';
0xDD7A	0x2129B1  	MOV	#lo_addr(_WriteText), W1
0xDD7C	0xB3C200  	MOV.B	#32, W0
0xDD7E	0x785880  	MOV.B	W0, [W1++]
0xDD80	0xB3C200  	MOV.B	#32, W0
0xDD82	0x785880  	MOV.B	W0, [W1++]
0xDD84	0xB3C200  	MOV.B	#32, W0
0xDD86	0x785880  	MOV.B	W0, [W1++]
0xDD88	0xB3C200  	MOV.B	#32, W0
0xDD8A	0x785880  	MOV.B	W0, [W1++]
0xDD8C	0xB3C200  	MOV.B	#32, W0
0xDD8E	0x785880  	MOV.B	W0, [W1++]
0xDD90	0xB3C200  	MOV.B	#32, W0
0xDD92	0x785880  	MOV.B	W0, [W1++]
0xDD94	0xB3C200  	MOV.B	#32, W0
0xDD96	0x785880  	MOV.B	W0, [W1++]
0xDD98	0xEF2000  	CLR	W0
0xDD9A	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,1110 :: 		FirstStartUpBattMenu  := 0;
0xDD9C	0x2159E1  	MOV	#lo_addr(_FirstStartUpBattMenu), W1
0xDD9E	0xEF2000  	CLR	W0
0xDDA0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1112 :: 		posleakbit  := 0;
0xDDA2	0x208CE0  	MOV	#lo_addr(_posleakbit), W0
0xDDA4	0xA13010  	BCLR	[W0], BitPos(_posleakbit+0)
;GRR3000LManagementPanel.mpas,1113 :: 		negleakbit  := 0;
0xDDA6	0x208CE0  	MOV	#lo_addr(_negleakbit), W0
0xDDA8	0xA15010  	BCLR	[W0], BitPos(_negleakbit+0)
;GRR3000LManagementPanel.mpas,1114 :: 		PosCounter  := 0;
0xDDAA	0xEF2000  	CLR	W0
0xDDAC	0x8846D0  	MOV	W0, _PosCounter
;GRR3000LManagementPanel.mpas,1115 :: 		NegCounter  := 0;
0xDDAE	0xEF2000  	CLR	W0
0xDDB0	0x8846E0  	MOV	W0, _NegCounter
;GRR3000LManagementPanel.mpas,1117 :: 		ADC_LeakRAW := 0;
0xDDB2	0xEF2000  	CLR	W0
0xDDB4	0xEF2002  	CLR	W1
0xDDB6	0x884710  	MOV	W0, _ADC_LeakRAW
0xDDB8	0x884721  	MOV	W1, _ADC_LeakRAW+2
;GRR3000LManagementPanel.mpas,1118 :: 		ADC_LeakRAW2:= 0;
0xDDBA	0xEF2000  	CLR	W0
0xDDBC	0xEF2002  	CLR	W1
0xDDBE	0x8846F0  	MOV	W0, _ADC_LeakRAW2
0xDDC0	0x884701  	MOV	W1, _ADC_LeakRAW2+2
;GRR3000LManagementPanel.mpas,1119 :: 		LeakCounter := 0;
0xDDC2	0x208D21  	MOV	#lo_addr(_LeakCounter), W1
0xDDC4	0xEF2000  	CLR	W0
0xDDC6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1121 :: 		ScreenView        := 0;
0xDDC8	0x208CE0  	MOV	#lo_addr(_ScreenView), W0
0xDDCA	0xA14010  	BCLR	[W0], BitPos(_ScreenView+0)
;GRR3000LManagementPanel.mpas,1122 :: 		ScreenCounter     := 0;
0xDDCC	0xEF2000  	CLR	W0
0xDDCE	0x8846A0  	MOV	W0, _ScreenCounter
;GRR3000LManagementPanel.mpas,1123 :: 		FreqHAM           := 0;
0xDDD0	0xEF2000  	CLR	W0
0xDDD2	0x8846C0  	MOV	W0, _FreqHAM
;GRR3000LManagementPanel.mpas,1124 :: 		FreqViewCounter   := 0;
0xDDD4	0xEF2000  	CLR	W0
0xDDD6	0x8846B0  	MOV	W0, _FreqViewCounter
;GRR3000LManagementPanel.mpas,1125 :: 		FreqLossCounter   := 0;
0xDDD8	0xEF2000  	CLR	W0
0xDDDA	0x884630  	MOV	W0, _FreqLossCounter
;GRR3000LManagementPanel.mpas,1126 :: 		FreqBit           := 0;
0xDDDC	0x208040  	MOV	#lo_addr(_FreqBit), W0
0xDDDE	0xA1C010  	BCLR	[W0], BitPos(_FreqBit+0)
;GRR3000LManagementPanel.mpas,1128 :: 		AC_Real           := 0.0;
0xDDE0	0xEF2000  	CLR	W0
0xDDE2	0xEF2002  	CLR	W1
0xDDE4	0x884220  	MOV	W0, _AC_Real
0xDDE6	0x884231  	MOV	W1, _AC_Real+2
;GRR3000LManagementPanel.mpas,1129 :: 		Read_AC_RAW       := 0;
0xDDE8	0xEF2000  	CLR	W0
0xDDEA	0x884240  	MOV	W0, _Read_AC_RAW
;GRR3000LManagementPanel.mpas,1131 :: 		TotalPOWER_kW     := 0.0;
0xDDEC	0xEF2000  	CLR	W0
0xDDEE	0xEF2002  	CLR	W1
0xDDF0	0x884270  	MOV	W0, _TotalPOWER_kW
0xDDF2	0x884281  	MOV	W1, _TotalPOWER_kW+2
;GRR3000LManagementPanel.mpas,1132 :: 		Reel_Current      := 0.0;
0xDDF4	0xEF2000  	CLR	W0
0xDDF6	0xEF2002  	CLR	W1
0xDDF8	0x884250  	MOV	W0, _Reel_Current
0xDDFA	0x884261  	MOV	W1, _Reel_Current+2
;GRR3000LManagementPanel.mpas,1134 :: 		UpButonCounter    := 0;
0xDDFC	0xEF2000  	CLR	W0
0xDDFE	0x884200  	MOV	W0, _UpButonCounter
;GRR3000LManagementPanel.mpas,1135 :: 		UP_PressBit       := 0;
0xDE00	0x208040  	MOV	#lo_addr(_UP_PressBit), W0
0xDE02	0xA1A010  	BCLR	[W0], BitPos(_UP_PressBit+0)
;GRR3000LManagementPanel.mpas,1136 :: 		viewbyte          := 1;
0xDE04	0x208331  	MOV	#lo_addr(_viewbyte), W1
0xDE06	0xB3C010  	MOV.B	#1, W0
0xDE08	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1138 :: 		ACVolt_Different  := 0;
0xDE0A	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xDE0C	0xEF2000  	CLR	W0
0xDE0E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1139 :: 		AC_ProtectBit     := 0;
0xDE10	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xDE12	0xA16010  	BCLR	[W0], BitPos(_AC_ProtectBit+0)
;GRR3000LManagementPanel.mpas,1140 :: 		ACVoltDifferentBit:= 0;
0xDE14	0x208040  	MOV	#lo_addr(_ACVoltDifferentBit), W0
0xDE16	0xA1B010  	BCLR	[W0], BitPos(_ACVoltDifferentBit+0)
;GRR3000LManagementPanel.mpas,1142 :: 		U1Volt_Diff       := 0;
0xDE18	0xEF2000  	CLR	W0
0xDE1A	0x884210  	MOV	W0, _U1Volt_Diff
;GRR3000LManagementPanel.mpas,1143 :: 		U2Volt_Diff       := 0;
0xDE1C	0xEF2000  	CLR	W0
0xDE1E	0x884290  	MOV	W0, _U2Volt_Diff
;GRR3000LManagementPanel.mpas,1144 :: 		U3Volt_Diff       := 0;
0xDE20	0xEF2000  	CLR	W0
0xDE22	0x884620  	MOV	W0, _U3Volt_Diff
;GRR3000LManagementPanel.mpas,1146 :: 		KacakSensor       := 0;
0xDE24	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0xDE26	0xA10010  	BCLR	[W0], BitPos(_KacakSensor+0)
;GRR3000LManagementPanel.mpas,1147 :: 		CalibValue        := 0;
0xDE28	0x208C21  	MOV	#lo_addr(_CalibValue), W1
0xDE2A	0xEF2000  	CLR	W0
0xDE2C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1149 :: 		CaseHeaterActiveBit := 0;
0xDE2E	0x208040  	MOV	#lo_addr(_CaseHeaterActiveBit), W0
0xDE30	0xA1D010  	BCLR	[W0], BitPos(_CaseHeaterActiveBit+0)
;GRR3000LManagementPanel.mpas,1150 :: 		DiodeValue          := 0;
0xDE32	0x2158F1  	MOV	#lo_addr(_DiodeValue), W1
0xDE34	0xEF2000  	CLR	W0
0xDE36	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1152 :: 		DischargeProtect_Pin := 1;
0xDE38	0xA862C8  	BSET	RB3_bit, BitPos(RB3_bit+0)
;GRR3000LManagementPanel.mpas,1161 :: 		LogBit_Config(); // loglarýn datalarýný temizle
0xDE3A	0x07BDD4  	RCALL	_LogBit_Config
;GRR3000LManagementPanel.mpas,1165 :: 		HC595_CS3_Pin := 1;
0xDE3C	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,1166 :: 		Delay_Cyc_Long(5);
0xDE3E	0x20005A  	MOV	#5, W10
0xDE40	0x20000B  	MOV	#0, W11
0xDE42	0x07DD8E  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1167 :: 		HC595_CS3_Pin := 0;
0xDE44	0xA9C2CF  	BCLR	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,1168 :: 		Delay_Cyc_Long(5);
0xDE46	0x20005A  	MOV	#5, W10
0xDE48	0x20000B  	MOV	#0, W11
0xDE4A	0x07DD8A  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1170 :: 		SPI1_Write(0x00);
0xDE4C	0xEF2014  	CLR	W10
0xDE4E	0x079386  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,1172 :: 		HC595_CS3_Pin := 1;
0xDE50	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,1173 :: 		Delay_Cyc_Long(5);
0xDE52	0x20005A  	MOV	#5, W10
0xDE54	0x20000B  	MOV	#0, W11
0xDE56	0x07DD84  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1178 :: 		HC595_CS2_Pin := 1;
0xDE58	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,1179 :: 		Delay_Cyc_Long(5);
0xDE5A	0x20005A  	MOV	#5, W10
0xDE5C	0x20000B  	MOV	#0, W11
0xDE5E	0x07DD80  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1180 :: 		HC595_CS2_Pin := 0;
0xDE60	0xA922D5  	BCLR	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,1181 :: 		Delay_Cyc_Long(5);
0xDE62	0x20005A  	MOV	#5, W10
0xDE64	0x20000B  	MOV	#0, W11
0xDE66	0x07DD7C  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1183 :: 		SPI1_Write(0x00);
0xDE68	0xEF2014  	CLR	W10
0xDE6A	0x079378  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,1185 :: 		HC595_CS2_Pin := 1;
0xDE6C	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,1186 :: 		Delay_Cyc_Long(5);
0xDE6E	0x20005A  	MOV	#5, W10
0xDE70	0x20000B  	MOV	#0, W11
0xDE72	0x07DD76  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1192 :: 		HC595_CS1_Pin := 1;
0xDE74	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,1193 :: 		Delay_Cyc_Long(5);
0xDE76	0x20005A  	MOV	#5, W10
0xDE78	0x20000B  	MOV	#0, W11
0xDE7A	0x07DD72  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1194 :: 		HC595_CS1_Pin := 0;
0xDE7C	0xA942D5  	BCLR	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,1195 :: 		Delay_Cyc_Long(5);
0xDE7E	0x20005A  	MOV	#5, W10
0xDE80	0x20000B  	MOV	#0, W11
0xDE82	0x07DD6E  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1197 :: 		SPI1_Write(0x00);
0xDE84	0xEF2014  	CLR	W10
0xDE86	0x07936A  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,1199 :: 		HC595_CS1_Pin := 1;
0xDE88	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,1200 :: 		Delay_Cyc_Long(5);
0xDE8A	0x20005A  	MOV	#5, W10
0xDE8C	0x20000B  	MOV	#0, W11
0xDE8E	0x07DD68  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,1207 :: 		end;
L_end_Start_Register_Config:
0xDE90	0x7805CF  	POP	W11
0xDE92	0x78054F  	POP	W10
0xDE94	0x060000  	RETURN
; end of _Start_Register_Config
_Delay_Cyc_Long:
;__Lib_Delays.mpas,173 :: 		begin
;__Lib_Delays.mpas,174 :: 		W8 := CycNo;
0x9960	0x78040A  	MOV	W10, W8
;__Lib_Delays.mpas,175 :: 		W9 := HiWord(CycNo);
0x9962	0x78048B  	MOV	W11, W9
;__Lib_Delays.mpas,177 :: 		PUSH       W8
0x9964	0xF80010  	PUSH	W8
;__Lib_Delays.mpas,179 :: 		MOV        #14, W7                    //   in asm because dsPIC30 can
0x9966	0x2000E7  	MOV	#14, W7
;__Lib_Delays.mpas,180 :: 		Label1:                                   //   generate DO instruction
Label1:
;__Lib_Delays.mpas,181 :: 		DEC        W7, W7                     //   instead of a loop.
0x9968	0xE90387  	DEC	W7, W7
;__Lib_Delays.mpas,182 :: 		BRA LT,    Label2                     //
0x996A	0x350003  	BRA LT	Label2
;__Lib_Delays.mpas,183 :: 		LSR        W9, W9                     // in that case code execution
0x996C	0xD10489  	LSR	W9, W9
;__Lib_Delays.mpas,184 :: 		RRC        W8, W8                     //   time would be different
0x996E	0xD38408  	RRC	W8, W8
;__Lib_Delays.mpas,185 :: 		BRA        Label1                     //   between dsPIC30 family
0x9970	0x37FFFB  	BRA	Label1
;__Lib_Delays.mpas,186 :: 		Label2:                                   //   and PIC24/dsPIC33 families
Label2:
;__Lib_Delays.mpas,188 :: 		POP        W9
0x9972	0xF90012  	POP	W9
;__Lib_Delays.mpas,189 :: 		MOV        #16383, W7
0x9974	0x23FFF7  	MOV	#16383, W7
;__Lib_Delays.mpas,190 :: 		AND        W9, W7, W9
0x9976	0x648487  	AND	W9, W7, W9
;__Lib_Delays.mpas,194 :: 		Delay_Cyc_loop:
Delay_Cyc_loop:
;__Lib_Delays.mpas,195 :: 		CP0 W8                 ; skip delay
0x9978	0xE20010  	CP0	W8
;__Lib_Delays.mpas,196 :: 		BRA Z, Delay_Cyc_rem   ;    if W8 = 0
0x997A	0x320004  	BRA Z	Delay_Cyc_rem
;__Lib_Delays.mpas,197 :: 		repeat #16377          ; perform delay by
0x997C	0x093FF9  	REPEAT	#16377
;__Lib_Delays.mpas,198 :: 		NOP                    ;   by executing W8*16384 <nop>s in Delay_Cyc_loop
0x997E	0x000000  	NOP
;__Lib_Delays.mpas,199 :: 		DEC W8, W8             ; next loop
0x9980	0xE90408  	DEC	W8, W8
;__Lib_Delays.mpas,200 :: 		bra Delay_Cyc_loop
0x9982	0x37FFFA  	BRA	Delay_Cyc_loop
;__Lib_Delays.mpas,201 :: 		Delay_Cyc_rem:
Delay_Cyc_rem:
;__Lib_Delays.mpas,202 :: 		REPEAT W9              ; execute whats
0x9984	0x098009  	REPEAT	W9
;__Lib_Delays.mpas,203 :: 		nop                    ;   remaining after the division
0x9986	0x000000  	NOP
;__Lib_Delays.mpas,205 :: 		end;
L_end_Delay_Cyc_Long:
0x9988	0x060000  	RETURN
; end of _Delay_Cyc_Long
_Glcd_Init:
0x9870	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,275 :: 		
;__Lib_Glcd.mpas,276 :: 		
0x9872	0x781F8A  	PUSH	W10
0x9874	0xEF2000  	CLR	W0
0x9876	0x888890  	MOV	W0, __Lib_Glcd_FontInitialized
;__Lib_Glcd.mpas,277 :: 		
0x9878	0xEF2000  	CLR	W0
0x987A	0x884B80  	MOV	W0, __Lib_Glcd_FontInitialized_adv
;__Lib_Glcd.mpas,278 :: 		
0x987C	0xEF2000  	CLR	W0
0x987E	0x884B70  	MOV	W0, __Lib_Glcd_ExternalFontSet
;__Lib_Glcd.mpas,280 :: 		
0x9880	0xA922D2  	BCLR	GLCD_RST_Direction, BitPos(GLCD_RST_Direction+0)
;__Lib_Glcd.mpas,281 :: 		
0x9882	0xA902DE  	BCLR	GLCD_EN_Direction, BitPos(GLCD_EN_Direction+0)
;__Lib_Glcd.mpas,282 :: 		
0x9884	0xA922E4  	BCLR	GLCD_RS_Direction, BitPos(GLCD_RS_Direction+0)
;__Lib_Glcd.mpas,283 :: 		
0x9886	0xA922DE  	BCLR	GLCD_RW_Direction, BitPos(GLCD_RW_Direction+0)
;__Lib_Glcd.mpas,284 :: 		
0x9888	0xA9C2C0  	BCLR	GLCD_CS1_Direction, BitPos(GLCD_CS1_Direction+0)
;__Lib_Glcd.mpas,285 :: 		
0x988A	0xA902E4  	BCLR	GLCD_CS2_Direction, BitPos(GLCD_CS2_Direction+0)
;__Lib_Glcd.mpas,288 :: 		
0x988C	0xA922D6  	BCLR	GLCD_RST, BitPos(GLCD_RST+0)
;__Lib_Glcd.mpas,296 :: 		
0x988E	0xA942D2  	BCLR	GLCD_D7_Direction, BitPos(GLCD_D7_Direction+0)
;__Lib_Glcd.mpas,297 :: 		
0x9890	0xA962D2  	BCLR	GLCD_D6_Direction, BitPos(GLCD_D6_Direction+0)
;__Lib_Glcd.mpas,298 :: 		
0x9892	0xA982D3  	BCLR	GLCD_D5_Direction, BitPos(GLCD_D5_Direction+0)
;__Lib_Glcd.mpas,299 :: 		
0x9894	0xA9A2D3  	BCLR	GLCD_D4_Direction, BitPos(GLCD_D4_Direction+0)
;__Lib_Glcd.mpas,300 :: 		
0x9896	0xA982D2  	BCLR	GLCD_D3_Direction, BitPos(GLCD_D3_Direction+0)
;__Lib_Glcd.mpas,301 :: 		
0x9898	0xA9A2D2  	BCLR	GLCD_D2_Direction, BitPos(GLCD_D2_Direction+0)
;__Lib_Glcd.mpas,302 :: 		
0x989A	0xA9C2D2  	BCLR	GLCD_D1_Direction, BitPos(GLCD_D1_Direction+0)
;__Lib_Glcd.mpas,303 :: 		
0x989C	0xA9E2D2  	BCLR	GLCD_D0_Direction, BitPos(GLCD_D0_Direction+0)
;__Lib_Glcd.mpas,313 :: 		
0x989E	0xA922E8  	BCLR	GLCD_RS, BitPos(GLCD_RS+0)
;__Lib_Glcd.mpas,314 :: 		
0x98A0	0xA922E2  	BCLR	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,316 :: 		
0x98A2	0xA9C2C4  	BCLR	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,317 :: 		
0x98A4	0xA802E8  	BSET	GLCD_CS2, BitPos(GLCD_CS2+0)
;__Lib_Glcd.mpas,319 :: 		
0x98A6	0xA822D6  	BSET	GLCD_RST, BitPos(GLCD_RST+0)
;__Lib_Glcd.mpas,323 :: 		
0x98A8	0x07C173  	RCALL	_Delay_1uS
;__Lib_Glcd.mpas,329 :: 		
0x98AA	0xB3C3FA  	MOV.B	#63, W10
0x98AC	0x07C21C  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,330 :: 		
0x98AE	0x07C25B  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,334 :: 		
0x98B0	0xB3CC0A  	MOV.B	#192, W10
0x98B2	0x07C219  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,335 :: 		
0x98B4	0x07C258  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,337 :: 		
0x98B6	0xA8C2C4  	BSET	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,338 :: 		
0x98B8	0xA902E8  	BCLR	GLCD_CS2, BitPos(GLCD_CS2+0)
;__Lib_Glcd.mpas,341 :: 		
0x98BA	0xB3C3FA  	MOV.B	#63, W10
0x98BC	0x07C214  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,342 :: 		
0x98BE	0x07C253  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,346 :: 		
0x98C0	0xB3CC0A  	MOV.B	#192, W10
0x98C2	0x07C211  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,347 :: 		
0x98C4	0x07C250  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,348 :: 		
L_end_Glcd_Init:
0x98C6	0x78054F  	POP	W10
0x98C8	0xFA8000  	ULNK
0x98CA	0x060000  	RETURN
; end of _Glcd_Init
_Delay_1uS:
;__Lib_Delays.mpas,409 :: 		begin
;__Lib_Delays.mpas,410 :: 		delay_us(1);
0x1B90	0x2000A7  	MOV	#10, W7
L__Delay_1uS21:
0x1B92	0xED200E  	DEC	W7
0x1B94	0x3AFFFE  	BRA NZ	L__Delay_1uS21
;__Lib_Delays.mpas,411 :: 		end;
L_end_Delay_1uS:
0x1B96	0x060000  	RETURN
; end of _Delay_1uS
__Lib_Glcd_Write_To_Pins:
0x1CE6	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,89 :: 		
;__Lib_Glcd.mpas,91 :: 		
0x1CE8	0xAEE014  	BTSS.B	W10, #7
0x1CEA	0xA942D4  	BCLR	GLCD_D7, BitPos(GLCD_D7+0)
0x1CEC	0xAFE014  	BTSC.B	W10, #7
0x1CEE	0xA842D4  	BSET	GLCD_D7, BitPos(GLCD_D7+0)
;__Lib_Glcd.mpas,92 :: 		
0x1CF0	0x000000  	NOP
;__Lib_Glcd.mpas,93 :: 		
0x1CF2	0xAEC014  	BTSS.B	W10, #6
0x1CF4	0xA962D4  	BCLR	GLCD_D6, BitPos(GLCD_D6+0)
0x1CF6	0xAFC014  	BTSC.B	W10, #6
0x1CF8	0xA862D4  	BSET	GLCD_D6, BitPos(GLCD_D6+0)
;__Lib_Glcd.mpas,94 :: 		
0x1CFA	0x000000  	NOP
;__Lib_Glcd.mpas,95 :: 		
0x1CFC	0xAEA014  	BTSS.B	W10, #5
0x1CFE	0xA982D5  	BCLR	GLCD_D5, BitPos(GLCD_D5+0)
0x1D00	0xAFA014  	BTSC.B	W10, #5
0x1D02	0xA882D5  	BSET	GLCD_D5, BitPos(GLCD_D5+0)
;__Lib_Glcd.mpas,96 :: 		
0x1D04	0x000000  	NOP
;__Lib_Glcd.mpas,97 :: 		
0x1D06	0xAE8014  	BTSS.B	W10, #4
0x1D08	0xA9A2D5  	BCLR	GLCD_D4, BitPos(GLCD_D4+0)
0x1D0A	0xAF8014  	BTSC.B	W10, #4
0x1D0C	0xA8A2D5  	BSET	GLCD_D4, BitPos(GLCD_D4+0)
;__Lib_Glcd.mpas,98 :: 		
0x1D0E	0x000000  	NOP
;__Lib_Glcd.mpas,99 :: 		
0x1D10	0xAE6014  	BTSS.B	W10, #3
0x1D12	0xA982D4  	BCLR	GLCD_D3, BitPos(GLCD_D3+0)
0x1D14	0xAF6014  	BTSC.B	W10, #3
0x1D16	0xA882D4  	BSET	GLCD_D3, BitPos(GLCD_D3+0)
;__Lib_Glcd.mpas,100 :: 		
0x1D18	0x000000  	NOP
;__Lib_Glcd.mpas,101 :: 		
0x1D1A	0xAE4014  	BTSS.B	W10, #2
0x1D1C	0xA9A2D4  	BCLR	GLCD_D2, BitPos(GLCD_D2+0)
0x1D1E	0xAF4014  	BTSC.B	W10, #2
0x1D20	0xA8A2D4  	BSET	GLCD_D2, BitPos(GLCD_D2+0)
;__Lib_Glcd.mpas,102 :: 		
0x1D22	0x000000  	NOP
;__Lib_Glcd.mpas,103 :: 		
0x1D24	0xAE2014  	BTSS.B	W10, #1
0x1D26	0xA9C2D4  	BCLR	GLCD_D1, BitPos(GLCD_D1+0)
0x1D28	0xAF2014  	BTSC.B	W10, #1
0x1D2A	0xA8C2D4  	BSET	GLCD_D1, BitPos(GLCD_D1+0)
;__Lib_Glcd.mpas,104 :: 		
0x1D2C	0x000000  	NOP
;__Lib_Glcd.mpas,105 :: 		
0x1D2E	0xAE0014  	BTSS.B	W10, #0
0x1D30	0xA9E2D4  	BCLR	GLCD_D0, BitPos(GLCD_D0+0)
0x1D32	0xAF0014  	BTSC.B	W10, #0
0x1D34	0xA8E2D4  	BSET	GLCD_D0, BitPos(GLCD_D0+0)
;__Lib_Glcd.mpas,106 :: 		
0x1D36	0x000000  	NOP
;__Lib_Glcd.mpas,107 :: 		
L_end_Write_To_Pins:
0x1D38	0xFA8000  	ULNK
0x1D3A	0x060000  	RETURN
; end of __Lib_Glcd_Write_To_Pins
__Lib_Glcd_Strobe:
0x1D66	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,112 :: 		
;__Lib_Glcd.mpas,113 :: 		
0x1D68	0x07F457  	RCALL	_Delay_10uS
;__Lib_Glcd.mpas,114 :: 		
0x1D6A	0xA802E2  	BSET	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,115 :: 		
0x1D6C	0x07F455  	RCALL	_Delay_10uS
;__Lib_Glcd.mpas,116 :: 		
0x1D6E	0xA902E2  	BCLR	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,117 :: 		
L_end_Strobe:
0x1D70	0xFA8000  	ULNK
0x1D72	0x060000  	RETURN
; end of __Lib_Glcd_Strobe
_Delay_10uS:
;__Lib_Delays.mpas,435 :: 		begin
;__Lib_Delays.mpas,436 :: 		Delay_us(10);
0x0618	0x200647  	MOV	#100, W7
L__Delay_10uS24:
0x061A	0xED200E  	DEC	W7
0x061C	0x3AFFFE  	BRA NZ	L__Delay_10uS24
;__Lib_Delays.mpas,437 :: 		end;
L_end_Delay_10uS:
0x061E	0x060000  	RETURN
; end of _Delay_10uS
_Glcd_Fill:
0x98CC	0xFA0002  	LNK	#2
;__Lib_Glcd.mpas,250 :: 		
;__Lib_Glcd.mpas,252 :: 		
0x98CE	0xA9C2C4  	BCLR	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,253 :: 		
0x98D0	0xA802E8  	BSET	GLCD_CS2, BitPos(GLCD_CS2+0)
;__Lib_Glcd.mpas,255 :: 		
; page start address is: 4 (W2)
0x98D2	0xEF2004  	CLR	W2
; page end address is: 4 (W2)
L__Glcd_Fill12:
;__Lib_Glcd.mpas,257 :: 		
; page start address is: 4 (W2)
0x98D4	0x781F8A  	PUSH	W10
0x98D6	0x784502  	MOV.B	W2, W10
0x98D8	0x07C239  	RCALL	_Glcd_Set_Page
0x98DA	0x78054F  	POP	W10
;__Lib_Glcd.mpas,259 :: 		
0x98DC	0xEF2000  	CLR	W0
0x98DE	0x980700  	MOV	W0, [W14+0]
; page end address is: 4 (W2)
L__Glcd_Fill17:
;__Lib_Glcd.mpas,260 :: 		
; page start address is: 4 (W2)
0x98E0	0x07C22D  	RCALL	_Glcd_Write_Data
0x98E2	0x2003F1  	MOV	#63, W1
0x98E4	0x470060  	ADD	W14, #0, W0
0x98E6	0xE10810  	CP	W1, [W0]
0x98E8	0x320004  	BRA Z	L__Glcd_Fill20
L__Glcd_Fill665:
0x98EA	0x200011  	MOV	#1, W1
0x98EC	0x470060  	ADD	W14, #0, W0
0x98EE	0x408810  	ADD	W1, [W0], [W0]
0x98F0	0x37FFF7  	BRA	L__Glcd_Fill17
L__Glcd_Fill20:
;__Lib_Glcd.mpas,262 :: 		
0x98F2	0xE11067  	CP	W2, #7
0x98F4	0x320002  	BRA Z	L__Glcd_Fill15
L__Glcd_Fill666:
; page start address is: 4 (W2)
0x98F6	0xEC2004  	INC	W2
; page end address is: 4 (W2)
; page end address is: 4 (W2)
0x98F8	0x37FFED  	BRA	L__Glcd_Fill12
L__Glcd_Fill15:
;__Lib_Glcd.mpas,264 :: 		
0x98FA	0xA902E8  	BCLR	GLCD_CS2, BitPos(GLCD_CS2+0)
0x98FC	0xA8C2C4  	BSET	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,265 :: 		
; page start address is: 4 (W2)
0x98FE	0xEF2004  	CLR	W2
; page end address is: 4 (W2)
L__Glcd_Fill22:
;__Lib_Glcd.mpas,267 :: 		
; page start address is: 4 (W2)
0x9900	0x781F8A  	PUSH	W10
0x9902	0x784502  	MOV.B	W2, W10
0x9904	0x07C223  	RCALL	_Glcd_Set_Page
0x9906	0x78054F  	POP	W10
;__Lib_Glcd.mpas,268 :: 		
0x9908	0xEF2000  	CLR	W0
0x990A	0x980700  	MOV	W0, [W14+0]
; page end address is: 4 (W2)
L__Glcd_Fill27:
;__Lib_Glcd.mpas,269 :: 		
; page start address is: 4 (W2)
0x990C	0x07C217  	RCALL	_Glcd_Write_Data
0x990E	0x2003F1  	MOV	#63, W1
0x9910	0x470060  	ADD	W14, #0, W0
0x9912	0xE10810  	CP	W1, [W0]
0x9914	0x320004  	BRA Z	L__Glcd_Fill30
L__Glcd_Fill667:
0x9916	0x200011  	MOV	#1, W1
0x9918	0x470060  	ADD	W14, #0, W0
0x991A	0x408810  	ADD	W1, [W0], [W0]
0x991C	0x37FFF7  	BRA	L__Glcd_Fill27
L__Glcd_Fill30:
;__Lib_Glcd.mpas,270 :: 		
0x991E	0xE11067  	CP	W2, #7
0x9920	0x320002  	BRA Z	L__Glcd_Fill25
L__Glcd_Fill668:
; page start address is: 4 (W2)
0x9922	0xEC2004  	INC	W2
; page end address is: 4 (W2)
; page end address is: 4 (W2)
0x9924	0x37FFED  	BRA	L__Glcd_Fill22
L__Glcd_Fill25:
;__Lib_Glcd.mpas,271 :: 		
L_end_Glcd_Fill:
0x9926	0xFA8000  	ULNK
0x9928	0x060000  	RETURN
; end of _Glcd_Fill
_Glcd_Set_Page:
0x1D4C	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,123 :: 		
;__Lib_Glcd.mpas,124 :: 		
0x1D4E	0x781F8A  	PUSH	W10
0x1D50	0xA922E8  	BCLR	GLCD_RS, BitPos(GLCD_RS+0)
;__Lib_Glcd.mpas,125 :: 		
0x1D52	0xA922E2  	BCLR	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,127 :: 		
0x1D54	0xFB808A  	ZE	W10, W1
0x1D56	0x200B80  	MOV	#184, W0
0x1D58	0x708000  	IOR	W1, W0, W0
0x1D5A	0x784500  	MOV.B	W0, W10
0x1D5C	0x07FFC4  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,128 :: 		
0x1D5E	0x070003  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,129 :: 		
L_end_Glcd_Set_Page:
0x1D60	0x78054F  	POP	W10
0x1D62	0xFA8000  	ULNK
0x1D64	0x060000  	RETURN
; end of _Glcd_Set_Page
_Glcd_Write_Data:
0x1D3C	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,236 :: 		
;__Lib_Glcd.mpas,237 :: 		
0x1D3E	0xA902E2  	BCLR	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,238 :: 		
0x1D40	0xA822E8  	BSET	GLCD_RS, BitPos(GLCD_RS+0)
;__Lib_Glcd.mpas,239 :: 		
0x1D42	0xA922E2  	BCLR	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,242 :: 		
0x1D44	0x07FFD0  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,244 :: 		
0x1D46	0x07000F  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,245 :: 		
L_end_Glcd_Write_Data:
0x1D48	0xFA8000  	ULNK
0x1D4A	0x060000  	RETURN
; end of _Glcd_Write_Data
_SPI1_Init:
0x99EA	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,133 :: 		
;__Lib_SPI_12.mpas,134 :: 		
0x99EC	0x201A60  	MOV	#lo_addr(_SPI1_Read), W0
0x99EE	0x884B40  	MOV	W0, _SPI_Rd_Ptr
;__Lib_SPI_12.mpas,135 :: 		
0x99F0	0x2055C0  	MOV	#lo_addr(_SPI1_Write), W0
0x99F2	0x884B50  	MOV	W0, _SPI_Wr_Ptr
;__Lib_SPI_12.mpas,137 :: 		
0x99F4	0xEF2220  	CLR	SPI1STAT
;__Lib_SPI_12.mpas,138 :: 		
0x99F6	0xEF2222  	CLR	SPI1CON
;__Lib_SPI_12.mpas,140 :: 		
0x99F8	0xA8A222  	BSET	SPI1CON, #5
;__Lib_SPI_12.mpas,141 :: 		
0x99FA	0xA9C222  	BCLR	SPI1CON, #6
;__Lib_SPI_12.mpas,143 :: 		
0x99FC	0x2001C1  	MOV	#28, W1
0x99FE	0x202220  	MOV	#lo_addr(SPI1CON), W0
0x9A00	0x708810  	IOR	W1, [W0], [W0]
;__Lib_SPI_12.mpas,145 :: 		
0x9A02	0x2FFFC1  	MOV	#65532, W1
0x9A04	0x202220  	MOV	#lo_addr(SPI1CON), W0
0x9A06	0x608810  	AND	W1, [W0], [W0]
;__Lib_SPI_12.mpas,146 :: 		
0x9A08	0xA80223  	BSET	SPI1CON, #8
;__Lib_SPI_12.mpas,148 :: 		
0x9A0A	0xA9C220  	BCLR	SPI1STAT, #6
;__Lib_SPI_12.mpas,149 :: 		
0x9A0C	0xA8E221  	BSET	SPI1STAT, #15
;__Lib_SPI_12.mpas,150 :: 		
L_end_SPI1_Init:
0x9A0E	0xFA8000  	ULNK
0x9A10	0x060000  	RETURN
; end of _SPI1_Init
_SPI_Set_Active:
0x9A12	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,230 :: 		
;__Lib_SPI_12.mpas,231 :: 		
0x9A14	0x884B4A  	MOV	W10, _SPI_Rd_Ptr
;__Lib_SPI_12.mpas,232 :: 		
0x9A16	0x884B5B  	MOV	W11, _SPI_Wr_Ptr
;__Lib_SPI_12.mpas,233 :: 		
L_end_SPI_Set_Active:
0x9A18	0xFA8000  	ULNK
0x9A1A	0x060000  	RETURN
; end of _SPI_Set_Active
_SPI2_Initialize:
;SevenSegmentUnit.mpas,88 :: 		begin
;SevenSegmentUnit.mpas,99 :: 		_SPI_IDLE_2_ACTIVE   // 04.07.2019 --> eskiden _SPI_ACTIVE_2_IDLE --> þimdi _SPI_IDLE_2_ACTIVE
0x998A	0x781F8A  	PUSH	W10
0x998C	0x781F8B  	PUSH	W11
0x998E	0x781F8C  	PUSH	W12
0x9990	0x781F8D  	PUSH	W13
0x9992	0x20001D  	MOV	#1, W13
0x9994	0x2001CC  	MOV	#28, W12
0x9996	0xEF2016  	CLR	W11
0x9998	0x20020A  	MOV	#32, W10
0x999A	0x201000  	MOV	#256, W0
0x999C	0x781F80  	PUSH	W0
0x999E	0xEF2000  	CLR	W0
0x99A0	0x781F80  	PUSH	W0
0x99A2	0xEF2000  	CLR	W0
0x99A4	0x781F80  	PUSH	W0
0x99A6	0xEF2000  	CLR	W0
0x99A8	0x781F80  	PUSH	W0
;SevenSegmentUnit.mpas,100 :: 		);
0x99AA	0x07C0DB  	RCALL	_SPI2_Init_Advanced
0x99AC	0xB1008F  	SUB	#8, W15
;SevenSegmentUnit.mpas,106 :: 		end;
L_end_SPI2_Initialize:
0x99AE	0x7806CF  	POP	W13
0x99B0	0x78064F  	POP	W12
0x99B2	0x7805CF  	POP	W11
0x99B4	0x78054F  	POP	W10
0x99B6	0x060000  	RETURN
; end of _SPI2_Initialize
_SPI2_Init_Advanced:
0x1B62	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,174 :: 		
; slave_select start address is: 2 (W1)
0x1B64	0x97B8CE  	MOV	[W14-8], W1
; data_sample start address is: 8 (W4)
0x1B66	0x97BA3E  	MOV	[W14-10], W4
; clock_idle start address is: 4 (W2)
0x1B68	0x97B92E  	MOV	[W14-12], W2
; edge start address is: 6 (W3)
0x1B6A	0x97B99E  	MOV	[W14-14], W3
;__Lib_SPI_12.mpas,176 :: 		
0x1B6C	0xEF2226  	CLR	SPI2STAT
;__Lib_SPI_12.mpas,177 :: 		
0x1B6E	0xEF2228  	CLR	SPI2CON
;__Lib_SPI_12.mpas,179 :: 		
0x1B70	0x201CC0  	MOV	#lo_addr(_SPI2_Read), W0
0x1B72	0x884B40  	MOV	W0, _SPI_Rd_Ptr
;__Lib_SPI_12.mpas,180 :: 		
0x1B74	0x207380  	MOV	#lo_addr(_SPI2_Write), W0
0x1B76	0x884B50  	MOV	W0, _SPI_Wr_Ptr
;__Lib_SPI_12.mpas,182 :: 		
0x1B78	0x75000B  	IOR	W10, W11, W0
0x1B7A	0x70000C  	IOR	W0, W12, W0
0x1B7C	0x70000D  	IOR	W0, W13, W0
0x1B7E	0x700001  	IOR	W0, W1, W0
; slave_select end address is: 2 (W1)
0x1B80	0x700004  	IOR	W0, W4, W0
; data_sample end address is: 8 (W4)
0x1B82	0x700082  	IOR	W0, W2, W1
; clock_idle end address is: 4 (W2)
0x1B84	0x202280  	MOV	#lo_addr(SPI2CON), W0
0x1B86	0x708803  	IOR	W1, W3, [W0]
; edge end address is: 6 (W3)
;__Lib_SPI_12.mpas,184 :: 		
;__Lib_SPI_12.mpas,185 :: 		
0x1B88	0xA9C226  	BCLR	SPI2STAT, #6
;__Lib_SPI_12.mpas,186 :: 		
0x1B8A	0xA8E227  	BSET	SPI2STAT, #15
;__Lib_SPI_12.mpas,187 :: 		
L_end_SPI2_Init_Advanced:
0x1B8C	0xFA8000  	ULNK
0x1B8E	0x060000  	RETURN
; end of _SPI2_Init_Advanced
_ClearDisplay:
;SevenSegmentUnit.mpas,72 :: 		begin
;SevenSegmentUnit.mpas,74 :: 		HC_Cs_Fnc(Chip);
0x99B8	0x07BD11  	RCALL	_HC_Cs_Fnc
;SevenSegmentUnit.mpas,76 :: 		SPI2_Write(0x00); Delay_us(10);
0x99BA	0x781F8A  	PUSH	W10
0x99BC	0xEF2014  	CLR	W10
0x99BE	0x07B6BC  	RCALL	_SPI2_Write
0x99C0	0x200647  	MOV	#100, W7
L__ClearDisplay1:
0x99C2	0xED200E  	DEC	W7
0x99C4	0x3AFFFE  	BRA NZ	L__ClearDisplay1
;SevenSegmentUnit.mpas,77 :: 		SPI2_Write(0x00); Delay_us(10);
0x99C6	0xEF2014  	CLR	W10
0x99C8	0x07B6B7  	RCALL	_SPI2_Write
0x99CA	0x200647  	MOV	#100, W7
L__ClearDisplay3:
0x99CC	0xED200E  	DEC	W7
0x99CE	0x3AFFFE  	BRA NZ	L__ClearDisplay3
;SevenSegmentUnit.mpas,78 :: 		SPI2_Write(0x00); Delay_us(10);
0x99D0	0xEF2014  	CLR	W10
0x99D2	0x07B6B2  	RCALL	_SPI2_Write
0x99D4	0x200647  	MOV	#100, W7
L__ClearDisplay5:
0x99D6	0xED200E  	DEC	W7
0x99D8	0x3AFFFE  	BRA NZ	L__ClearDisplay5
;SevenSegmentUnit.mpas,79 :: 		SPI2_Write(0x00); Delay_us(10);
0x99DA	0xEF2014  	CLR	W10
0x99DC	0x07B6AD  	RCALL	_SPI2_Write
0x99DE	0x78054F  	POP	W10
0x99E0	0x200647  	MOV	#100, W7
L__ClearDisplay7:
0x99E2	0xED200E  	DEC	W7
0x99E4	0x3AFFFE  	BRA NZ	L__ClearDisplay7
;SevenSegmentUnit.mpas,81 :: 		HC_Cs_Fnc(Chip);
0x99E6	0x07BCFA  	RCALL	_HC_Cs_Fnc
;SevenSegmentUnit.mpas,85 :: 		end;
L_end_ClearDisplay:
0x99E8	0x060000  	RETURN
; end of _ClearDisplay
_HC_Cs_Fnc:
;SevenSegmentUnit.mpas,109 :: 		begin
;SevenSegmentUnit.mpas,112 :: 		1: begin  // volt
0x13DC	0xE15461  	CP.B	W10, #1
0x13DE	0x3A0006  	BRA NZ	L__HC_Cs_Fnc14
L__HC_Cs_Fnc48:
;SevenSegmentUnit.mpas,113 :: 		Dsp_CS1_Pin := 0;
0x13E0	0xA982C8  	BCLR	RB4_bit, BitPos(RB4_bit+0)
;SevenSegmentUnit.mpas,114 :: 		asm nop end;
0x13E2	0x000000  	NOP
;SevenSegmentUnit.mpas,115 :: 		asm nop end;
0x13E4	0x000000  	NOP
;SevenSegmentUnit.mpas,116 :: 		asm nop end;
0x13E6	0x000000  	NOP
;SevenSegmentUnit.mpas,117 :: 		Dsp_CS1_Pin := 1;
0x13E8	0xA882C8  	BSET	RB4_bit, BitPos(RB4_bit+0)
;SevenSegmentUnit.mpas,118 :: 		end;
0x13EA	0x370008  	BRA	L__HC_Cs_Fnc11
L__HC_Cs_Fnc14:
;SevenSegmentUnit.mpas,119 :: 		2: begin // akým
0x13EC	0xE15462  	CP.B	W10, #2
0x13EE	0x3A0006  	BRA NZ	L__HC_Cs_Fnc17
L__HC_Cs_Fnc49:
;SevenSegmentUnit.mpas,120 :: 		Dsp_CS2_Pin := 0;
0x13F0	0xA9C2C8  	BCLR	RB6_bit, BitPos(RB6_bit+0)
;SevenSegmentUnit.mpas,121 :: 		asm nop end;
0x13F2	0x000000  	NOP
;SevenSegmentUnit.mpas,122 :: 		asm nop end;
0x13F4	0x000000  	NOP
;SevenSegmentUnit.mpas,123 :: 		asm nop end;
0x13F6	0x000000  	NOP
;SevenSegmentUnit.mpas,124 :: 		Dsp_CS2_Pin := 1;
0x13F8	0xA8C2C8  	BSET	RB6_bit, BitPos(RB6_bit+0)
;SevenSegmentUnit.mpas,125 :: 		end;
0x13FA	0x370000  	BRA	L__HC_Cs_Fnc11
L__HC_Cs_Fnc17:
L__HC_Cs_Fnc11:
;SevenSegmentUnit.mpas,129 :: 		end;
L_end_HC_Cs_Fnc:
0x13FC	0x060000  	RETURN
; end of _HC_Cs_Fnc
_SPI2_Write:
0x0738	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,224 :: 		
;__Lib_SPI_12.mpas,225 :: 		
0x073A	0x07FD48  	RCALL	_SPI2_Read
;__Lib_SPI_12.mpas,226 :: 		
L_end_SPI2_Write:
0x073C	0xFA8000  	ULNK
0x073E	0x060000  	RETURN
; end of _SPI2_Write
_SPI2_Read:
0x01CC	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,210 :: 		
;__Lib_SPI_12.mpas,211 :: 		
0x01CE	0xA9C226  	BCLR	SPI2STAT, #6
;__Lib_SPI_12.mpas,213 :: 		
L__SPI2_Read18:
0x01D0	0xBF8226  	MOV	SPI2STAT, WREG
0x01D2	0x600062  	AND	W0, #2, W0
0x01D4	0xE10061  	CP	W0, #1
0x01D6	0x3A0002  	BRA NZ	L__SPI2_Read19
L__SPI2_Read40:
;__Lib_SPI_12.mpas,214 :: 		
0x01D8	0x000000  	NOP
0x01DA	0x37FFFA  	BRA	L__SPI2_Read18
L__SPI2_Read19:
;__Lib_SPI_12.mpas,215 :: 		
0x01DC	0x88115A  	MOV	W10, SPI2BUF
;__Lib_SPI_12.mpas,216 :: 		
L__SPI2_Read23:
0x01DE	0xBF8226  	MOV	SPI2STAT, WREG
0x01E0	0x600061  	AND	W0, #1, W0
0x01E2	0xE10060  	CP	W0, #0
0x01E4	0x3A0002  	BRA NZ	L__SPI2_Read24
L__SPI2_Read41:
;__Lib_SPI_12.mpas,217 :: 		
0x01E6	0x000000  	NOP
0x01E8	0x37FFFA  	BRA	L__SPI2_Read23
L__SPI2_Read24:
;__Lib_SPI_12.mpas,219 :: 		
; Result start address is: 2 (W1)
0x01EA	0x801151  	MOV	SPI2BUF, W1
;__Lib_SPI_12.mpas,220 :: 		
0x01EC	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_SPI2_Read:
0x01EE	0xFA8000  	ULNK
0x01F0	0x060000  	RETURN
; end of _SPI2_Read
_I2C1_Init:
0x982C	0xFA0008  	LNK	#8
;__Lib_I2C_1_p30.mpas,106 :: 		
;__Lib_I2C_1_p30.mpas,110 :: 		
0x982E	0x07BDC7  	RCALL	__Lib_I2C_1_p30_SetI2C1Ptrs
;__Lib_I2C_1_p30.mpas,112 :: 		
0x9830	0x07BDC2  	RCALL	_Get_Fosc_kHz
0x9832	0x200FA2  	MOV	#250, W2
0x9834	0x200003  	MOV	#0, W3
0x9836	0x07C1B0  	RCALL	__Multiply_32x32
0x9838	0x980700  	MOV	W0, [W14+0]
0x983A	0x980711  	MOV	W1, [W14+2]
;__Lib_I2C_1_p30.mpas,113 :: 		
0x983C	0xBE9F8A  	PUSH.D	W10
0x983E	0x2F4472  	MOV	#62535, W2
0x9840	0x200103  	MOV	#16, W3
0x9842	0xEB8200  	SETM	W4
0x9844	0x07C15D  	RCALL	__Divide_32x32
0x9846	0xBE054F  	POP.D	W10
0x9848	0x980720  	MOV	W0, [W14+4]
0x984A	0x980731  	MOV	W1, [W14+6]
;__Lib_I2C_1_p30.mpas,114 :: 		
0x984C	0xBE010A  	MOV.D	W10, W2
0x984E	0x90000E  	MOV	[W14+0], W0
0x9850	0x90009E  	MOV	[W14+2], W1
0x9852	0xEB8200  	SETM	W4
0x9854	0x07C155  	RCALL	__Divide_32x32
0x9856	0x470264  	ADD	W14, #4, W4
0x9858	0x500134  	SUB	W0, [W4++], W2
0x985A	0x5881A4  	SUBB	W1, [W4--], W3
0x985C	0x510061  	SUB	W2, #1, W0
0x985E	0x5980E0  	SUBB	W3, #0, W1
;__Lib_I2C_1_p30.mpas,116 :: 		
0x9860	0x881020  	MOV	W0, I2CBRG
;__Lib_I2C_1_p30.mpas,117 :: 		
0x9862	0xA8E207  	BSET	I2CCON, #15
;__Lib_I2C_1_p30.mpas,118 :: 		
0x9864	0x07BDCC  	RCALL	_Delay_100ms
;__Lib_I2C_1_p30.mpas,119 :: 		
0x9866	0xEF2208  	CLR	I2CSTAT
;__Lib_I2C_1_p30.mpas,121 :: 		
0x9868	0x07C174  	RCALL	__Lib_I2C_1_p30_I2C1_Wait_For_Idle
;__Lib_I2C_1_p30.mpas,123 :: 		
0x986A	0x07C192  	RCALL	_Delay_1uS
;__Lib_I2C_1_p30.mpas,124 :: 		
L_end_I2C1_Init:
0x986C	0xFA8000  	ULNK
0x986E	0x060000  	RETURN
; end of _I2C1_Init
__Lib_I2C_1_p30_SetI2C1Ptrs:
0x13BE	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,66 :: 		
;__Lib_I2C_1_p30.mpas,67 :: 		
0x13C0	0x204CC0  	MOV	#lo_addr(_I2C1_Is_Idle), W0
0x13C2	0x884AF0  	MOV	W0, _I2C_Is_Idle_Ptr
;__Lib_I2C_1_p30.mpas,68 :: 		
0x13C4	0x205EC0  	MOV	#lo_addr(_I2C1_Start), W0
0x13C6	0x884AE0  	MOV	W0, _I2C_Start_Ptr
;__Lib_I2C_1_p30.mpas,69 :: 		
0x13C8	0x202000  	MOV	#lo_addr(_I2C1_Restart), W0
0x13CA	0x884B00  	MOV	W0, _I2C_Restart_Ptr
;__Lib_I2C_1_p30.mpas,70 :: 		
0x13CC	0x202160  	MOV	#lo_addr(_I2C1_Read), W0
0x13CE	0x884B20  	MOV	W0, _I2C_Read_Ptr
;__Lib_I2C_1_p30.mpas,71 :: 		
0x13D0	0x2017E0  	MOV	#lo_addr(_I2C1_Write), W0
0x13D2	0x884B10  	MOV	W0, _I2C_Write_Ptr
;__Lib_I2C_1_p30.mpas,72 :: 		
0x13D4	0x201680  	MOV	#lo_addr(_I2C1_Stop), W0
0x13D6	0x884B30  	MOV	W0, _I2C_Stop_Ptr
;__Lib_I2C_1_p30.mpas,73 :: 		
L_end_SetI2C1Ptrs:
0x13D8	0xFA8000  	ULNK
0x13DA	0x060000  	RETURN
; end of __Lib_I2C_1_p30_SetI2C1Ptrs
_Get_Fosc_kHz:
;__Lib_Delays.mpas,64 :: 		begin
;__Lib_Delays.mpas,65 :: 		result := Clock_kHz();
; Result start address is: 4 (W2)
0x13B6	0x2D4C02  	MOV	#54464, W2
0x13B8	0x200013  	MOV	#1, W3
;__Lib_Delays.mpas,66 :: 		end;
0x13BA	0xBE0002  	MOV.D	W2, W0
; Result end address is: 4 (W2)
L_end_Get_Fosc_kHz:
0x13BC	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Delay_100ms:
;__Lib_Delays.mpas,695 :: 		begin
;__Lib_Delays.mpas,696 :: 		Delay_ms(100);
0x13FE	0x200108  	MOV	#16, W8
0x1400	0x242447  	MOV	#16964, W7
L__Delay_100ms54:
0x1402	0xED200E  	DEC	W7
0x1404	0x3AFFFE  	BRA NZ	L__Delay_100ms54
0x1406	0xED2010  	DEC	W8
0x1408	0x3AFFFC  	BRA NZ	L__Delay_100ms54
;__Lib_Delays.mpas,697 :: 		end;
L_end_Delay_100ms:
0x140A	0x060000  	RETURN
; end of _Delay_100ms
__Lib_I2C_1_p30_I2C1_Wait_For_Idle:
0x1B52	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,97 :: 		
;__Lib_I2C_1_p30.mpas,101 :: 		
L___Lib_I2C_1_p30_I2C1_Wait_For_Idle13:
0x1B54	0x07F4BB  	RCALL	_I2C1_Is_Idle
0x1B56	0xE10061  	CP	W0, #1
0x1B58	0x320002  	BRA Z	L___Lib_I2C_1_p30_I2C1_Wait_For_Idle14
L___Lib_I2C_1_p30_I2C1_Wait_For_Idle72:
0x1B5A	0x000000  	NOP
0x1B5C	0x37FFFB  	BRA	L___Lib_I2C_1_p30_I2C1_Wait_For_Idle13
L___Lib_I2C_1_p30_I2C1_Wait_For_Idle14:
;__Lib_I2C_1_p30.mpas,102 :: 		
L_end_I2C1_Wait_For_Idle:
0x1B5E	0xFA8000  	ULNK
0x1B60	0x060000  	RETURN
; end of __Lib_I2C_1_p30_I2C1_Wait_For_Idle
_I2C1_Is_Idle:
0x04CC	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,86 :: 		
;__Lib_I2C_1_p30.mpas,87 :: 		
0x04CE	0xEF6002  	CLR.B	W1
0x04D0	0xAF0206  	BTSC	I2CCON, #0
0x04D2	0xEC6002  	INC.B	W1
0x04D4	0xEF6000  	CLR.B	W0
0x04D6	0xAF4206  	BTSC	I2CCON, #2
0x04D8	0xEC6000  	INC.B	W0
0x04DA	0xFB8081  	ZE	W1, W1
0x04DC	0xFB8000  	ZE	W0, W0
0x04DE	0x708080  	IOR	W1, W0, W1
0x04E0	0xEF6000  	CLR.B	W0
0x04E2	0xAF6206  	BTSC	I2CCON, #3
0x04E4	0xEC6000  	INC.B	W0
0x04E6	0xFB8000  	ZE	W0, W0
0x04E8	0x708080  	IOR	W1, W0, W1
0x04EA	0xEF6000  	CLR.B	W0
0x04EC	0xAF8206  	BTSC	I2CCON, #4
0x04EE	0xEC6000  	INC.B	W0
0x04F0	0xFB8000  	ZE	W0, W0
0x04F2	0x708080  	IOR	W1, W0, W1
;__Lib_I2C_1_p30.mpas,88 :: 		
0x04F4	0xEF6000  	CLR.B	W0
0x04F6	0xAF2206  	BTSC	I2CCON, #1
0x04F8	0xEC6000  	INC.B	W0
0x04FA	0xFB8000  	ZE	W0, W0
0x04FC	0x708080  	IOR	W1, W0, W1
0x04FE	0xEF6000  	CLR.B	W0
0x0500	0xAFC209  	BTSC	I2CSTAT, #14
0x0502	0xEC6000  	INC.B	W0
0x0504	0xFB8000  	ZE	W0, W0
0x0506	0x708000  	IOR	W1, W0, W0
;__Lib_I2C_1_p30.mpas,90 :: 		
0x0508	0xE10060  	CP	W0, #0
0x050A	0x3A0002  	BRA NZ	L__I2C1_Is_Idle9
L__I2C1_Is_Idle70:
; Result start address is: 2 (W1)
0x050C	0x200011  	MOV	#1, W1
; Result end address is: 2 (W1)
0x050E	0x370001  	BRA	L__I2C1_Is_Idle10
;__Lib_I2C_1_p30.mpas,91 :: 		
L__I2C1_Is_Idle9:
; Result start address is: 2 (W1)
0x0510	0xEF2002  	CLR	W1
; Result end address is: 2 (W1)
L__I2C1_Is_Idle10:
;__Lib_I2C_1_p30.mpas,92 :: 		
; Result start address is: 2 (W1)
0x0512	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_I2C1_Is_Idle:
0x0514	0xFA8000  	ULNK
0x0516	0x060000  	RETURN
; end of _I2C1_Is_Idle
__Divide_32x32:
0x1B00	0xFA0000  	LNK	#0
;__Lib_Math.mpas,86 :: 		
;__Lib_Math.mpas,88 :: 		
0x1B02	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.mpas,89 :: 		
0x1B04	0x000000041B4E  	GOTO	the_end_Divide_32x32
;__Lib_Math.mpas,91 :: 		
Divide_32x32___testsus:
;__Lib_Math.mpas,92 :: 		
0x1B08	0xE20008  	CP0	W4
;__Lib_Math.mpas,93 :: 		
0x1B0A	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.mpas,95 :: 		
0x1B0C	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.mpas,96 :: 		
0x1B0E	0x060000  	RETURN
;__Lib_Math.mpas,98 :: 		
Divide_32x32___divsi3:
;__Lib_Math.mpas,99 :: 		
0x1B10	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.mpas,100 :: 		
0x1B12	0xE20002  	CP0	W1
;__Lib_Math.mpas,101 :: 		
0x1B14	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.mpas,102 :: 		
0x1B16	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,103 :: 		
0x1B18	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,104 :: 		
Divide_32x32_divtestb:
;__Lib_Math.mpas,105 :: 		
0x1B1A	0xE20006  	CP0	W3
;__Lib_Math.mpas,106 :: 		
0x1B1C	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.mpas,107 :: 		
0x1B1E	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.mpas,108 :: 		
0x1B20	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.mpas,109 :: 		
Divide_32x32_calcquot:
;__Lib_Math.mpas,110 :: 		
0x1B22	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.mpas,111 :: 		
0x1B24	0xE0004F  	CP0	[--W15]
;__Lib_Math.mpas,112 :: 		
0x1B26	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.mpas,113 :: 		
0x1B28	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,114 :: 		
0x1B2A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,115 :: 		
Divide_32x32_returnq:
;__Lib_Math.mpas,116 :: 		
0x1B2C	0x060000  	RETURN
;__Lib_Math.mpas,117 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.mpas,118 :: 		
0x1B2E	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.mpas,119 :: 		
0x1B30	0x200206  	MOV	#32, W6
;__Lib_Math.mpas,120 :: 		
Divide_32x32_nextbit:
;__Lib_Math.mpas,121 :: 		
0x1B32	0xD00000  	SL	W0, W0
;__Lib_Math.mpas,122 :: 		
0x1B34	0xD28081  	RLC	W1, W1
;__Lib_Math.mpas,123 :: 		
0x1B36	0xD28204  	RLC	W4, W4
;__Lib_Math.mpas,124 :: 		
0x1B38	0xD28285  	RLC	W5, W5
;__Lib_Math.mpas,125 :: 		
0x1B3A	0xA80000  	BSET	W0, #0
;__Lib_Math.mpas,126 :: 		
0x1B3C	0x520202  	SUB	W4, W2, W4
;__Lib_Math.mpas,127 :: 		
0x1B3E	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.mpas,128 :: 		
0x1B40	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.mpas,129 :: 		
0x1B42	0x420202  	ADD	W4, W2, W4
;__Lib_Math.mpas,130 :: 		
0x1B44	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.mpas,131 :: 		
0x1B46	0xA10000  	BCLR	W0, #0
;__Lib_Math.mpas,132 :: 		
Divide_32x32_iterate:
;__Lib_Math.mpas,133 :: 		
0x1B48	0xE90306  	DEC	W6, W6
;__Lib_Math.mpas,134 :: 		
0x1B4A	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.mpas,135 :: 		
0x1B4C	0x060000  	RETURN
;__Lib_Math.mpas,137 :: 		
the_end_Divide_32x32:
;__Lib_Math.mpas,140 :: 		
L_end__Divide_32x32:
0x1B4E	0xFA8000  	ULNK
0x1B50	0x060000  	RETURN
; end of __Divide_32x32
_LogBit_Config:
;LogUnit.mpas,146 :: 		begin
;LogUnit.mpas,148 :: 		Log_Array              := EEPROM_Read(EE_LogListArrayEeAddr);
0x59E4	0x781F8A  	PUSH	W10
0x59E6	0x781F8B  	PUSH	W11
0x59E8	0x2F07EA  	MOV	#61566, W10
0x59EA	0x2007FB  	MOV	#127, W11
0x59EC	0x07E539  	RCALL	_EEPROM_Read
0x59EE	0x20AAE1  	MOV	#lo_addr(_Log_Array), W1
0x59F0	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,149 :: 		Pause_ms(50);
0x59F2	0x20032A  	MOV	#50, W10
0x59F4	0x074250  	RCALL	_Pause_Ms
;LogUnit.mpas,151 :: 		clrwdt;
0x59F6	0xFE6000  	CLRWDT
;LogUnit.mpas,154 :: 		LogBit_AcHigh          := 0;
0x59F8	0x20E1E0  	MOV	#lo_addr(_LogBit_AcHigh), W0
0x59FA	0xA12010  	BCLR	[W0], BitPos(_LogBit_AcHigh+0)
;LogUnit.mpas,155 :: 		LogBit_AcLow           := 0;
0x59FC	0x2092C0  	MOV	#lo_addr(_LogBit_AcLow), W0
0x59FE	0xA1E010  	BCLR	[W0], BitPos(_LogBit_AcLow+0)
;LogUnit.mpas,156 :: 		LogBit_DcHigh          := 0;
0x5A00	0x2092C0  	MOV	#lo_addr(_LogBit_DcHigh), W0
0x5A02	0xA1D010  	BCLR	[W0], BitPos(_LogBit_DcHigh+0)
;LogUnit.mpas,157 :: 		LogBit_DcLow           := 0;
0x5A04	0x2092C0  	MOV	#lo_addr(_LogBit_DcLow), W0
0x5A06	0xA1F010  	BCLR	[W0], BitPos(_LogBit_DcLow+0)
;LogUnit.mpas,158 :: 		LogBit_Pleak           := 0;
0x5A08	0x20E1E0  	MOV	#lo_addr(_LogBit_Pleak), W0
0x5A0A	0xA11010  	BCLR	[W0], BitPos(_LogBit_Pleak+0)
;LogUnit.mpas,159 :: 		LogBit_Nleak           := 0;
0x5A0C	0x20E1E0  	MOV	#lo_addr(_LogBit_Nleak), W0
0x5A0E	0xA10010  	BCLR	[W0], BitPos(_LogBit_Nleak+0)
;LogUnit.mpas,160 :: 		LogBit_Rlimit          := 0;
0x5A10	0x20E1E0  	MOV	#lo_addr(_LogBit_Rlimit), W0
0x5A12	0xA13010  	BCLR	[W0], BitPos(_LogBit_Rlimit+0)
;LogUnit.mpas,161 :: 		LogBit_Blimit          := 0;
0x5A14	0x20E1E0  	MOV	#lo_addr(_LogBit_Blimit), W0
0x5A16	0xA1A010  	BCLR	[W0], BitPos(_LogBit_Blimit+0)
;LogUnit.mpas,162 :: 		LogBit_FanFault        := 0;
0x5A18	0x20E1E0  	MOV	#lo_addr(_LogBit_FanFault), W0
0x5A1A	0xA19010  	BCLR	[W0], BitPos(_LogBit_FanFault+0)
;LogUnit.mpas,163 :: 		LogBit_AcMCB           := 0;
0x5A1C	0x20E1E0  	MOV	#lo_addr(_LogBit_AcMCB), W0
0x5A1E	0xA1B010  	BCLR	[W0], BitPos(_LogBit_AcMCB+0)
;LogUnit.mpas,164 :: 		LogBit_LoadMCB         := 0;
0x5A20	0x20E1E0  	MOV	#lo_addr(_LogBit_LoadMCB), W0
0x5A22	0xA1D010  	BCLR	[W0], BitPos(_LogBit_LoadMCB+0)
;LogUnit.mpas,165 :: 		LogBit_BatMCB          := 0;
0x5A24	0x20E1E0  	MOV	#lo_addr(_LogBit_BatMCB), W0
0x5A26	0xA1C010  	BCLR	[W0], BitPos(_LogBit_BatMCB+0)
;LogUnit.mpas,166 :: 		LogBit_HighTemp        := 0;
0x5A28	0x20E1E0  	MOV	#lo_addr(_LogBit_HighTemp), W0
0x5A2A	0xA15010  	BCLR	[W0], BitPos(_LogBit_HighTemp+0)
;LogUnit.mpas,167 :: 		LogBit_RedFault        := 0;
0x5A2C	0x20E1E0  	MOV	#lo_addr(_LogBit_RedFault), W0
0x5A2E	0xA14010  	BCLR	[W0], BitPos(_LogBit_RedFault+0)
;LogUnit.mpas,168 :: 		LogBit_DdschFault      := 0;
0x5A30	0x20E1E0  	MOV	#lo_addr(_LogBit_DdschFault), W0
0x5A32	0xA16010  	BCLR	[W0], BitPos(_LogBit_DdschFault+0)
;LogUnit.mpas,169 :: 		LogBit_RedHighTemp     := 0;
0x5A34	0x20E1E0  	MOV	#lo_addr(_LogBit_RedHighTemp), W0
0x5A36	0xA18010  	BCLR	[W0], BitPos(_LogBit_RedHighTemp+0)
;LogUnit.mpas,170 :: 		LogBit_RlyCommFault    := 0;
0x5A38	0x20E1E0  	MOV	#lo_addr(_LogBit_RlyCommFault), W0
0x5A3A	0xA17010  	BCLR	[W0], BitPos(_LogBit_RlyCommFault+0)
;LogUnit.mpas,172 :: 		LogBit_GTTCommFault    := 0;
0x5A3C	0x20E1E0  	MOV	#lo_addr(_LogBit_GTTCommFault), W0
0x5A3E	0xA1E010  	BCLR	[W0], BitPos(_LogBit_GTTCommFault+0)
;LogUnit.mpas,173 :: 		Log_Clock              := 0;
0x5A40	0xEF2000  	CLR	W0
0x5A42	0x888CE0  	MOV	W0, _Log_Clock
;LogUnit.mpas,174 :: 		Log_Date               := 0;
0x5A44	0xEF2000  	CLR	W0
0x5A46	0x888CD0  	MOV	W0, _Log_Date
;LogUnit.mpas,175 :: 		Hour_Text              := '      ';
0x5A48	0x20E201  	MOV	#lo_addr(_Hour_Text), W1
0x5A4A	0xB3C200  	MOV.B	#32, W0
0x5A4C	0x785880  	MOV.B	W0, [W1++]
0x5A4E	0xB3C200  	MOV.B	#32, W0
0x5A50	0x785880  	MOV.B	W0, [W1++]
0x5A52	0xB3C200  	MOV.B	#32, W0
0x5A54	0x785880  	MOV.B	W0, [W1++]
0x5A56	0xB3C200  	MOV.B	#32, W0
0x5A58	0x785880  	MOV.B	W0, [W1++]
0x5A5A	0xB3C200  	MOV.B	#32, W0
0x5A5C	0x785880  	MOV.B	W0, [W1++]
0x5A5E	0xB3C200  	MOV.B	#32, W0
0x5A60	0x785880  	MOV.B	W0, [W1++]
0x5A62	0xEF2000  	CLR	W0
0x5A64	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,176 :: 		Day_Text               := '           ';
0x5A66	0x20F281  	MOV	#lo_addr(_Day_Text), W1
0x5A68	0xB3C200  	MOV.B	#32, W0
0x5A6A	0x785880  	MOV.B	W0, [W1++]
0x5A6C	0xB3C200  	MOV.B	#32, W0
0x5A6E	0x785880  	MOV.B	W0, [W1++]
0x5A70	0xB3C200  	MOV.B	#32, W0
0x5A72	0x785880  	MOV.B	W0, [W1++]
0x5A74	0xB3C200  	MOV.B	#32, W0
0x5A76	0x785880  	MOV.B	W0, [W1++]
0x5A78	0xB3C200  	MOV.B	#32, W0
0x5A7A	0x785880  	MOV.B	W0, [W1++]
0x5A7C	0xB3C200  	MOV.B	#32, W0
0x5A7E	0x785880  	MOV.B	W0, [W1++]
0x5A80	0xB3C200  	MOV.B	#32, W0
0x5A82	0x785880  	MOV.B	W0, [W1++]
0x5A84	0xB3C200  	MOV.B	#32, W0
0x5A86	0x785880  	MOV.B	W0, [W1++]
0x5A88	0xB3C200  	MOV.B	#32, W0
0x5A8A	0x785880  	MOV.B	W0, [W1++]
0x5A8C	0xB3C200  	MOV.B	#32, W0
0x5A8E	0x785880  	MOV.B	W0, [W1++]
0x5A90	0xB3C200  	MOV.B	#32, W0
0x5A92	0x785880  	MOV.B	W0, [W1++]
0x5A94	0xEF2000  	CLR	W0
0x5A96	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,177 :: 		Event_Text             := '     ';
0x5A98	0x20F341  	MOV	#lo_addr(_Event_Text), W1
0x5A9A	0xB3C200  	MOV.B	#32, W0
0x5A9C	0x785880  	MOV.B	W0, [W1++]
0x5A9E	0xB3C200  	MOV.B	#32, W0
0x5AA0	0x785880  	MOV.B	W0, [W1++]
0x5AA2	0xB3C200  	MOV.B	#32, W0
0x5AA4	0x785880  	MOV.B	W0, [W1++]
0x5AA6	0xB3C200  	MOV.B	#32, W0
0x5AA8	0x785880  	MOV.B	W0, [W1++]
0x5AAA	0xB3C200  	MOV.B	#32, W0
0x5AAC	0x785880  	MOV.B	W0, [W1++]
0x5AAE	0xEF2000  	CLR	W0
0x5AB0	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,179 :: 		end;
L_end_LogBit_Config:
0x5AB2	0x7805CF  	POP	W11
0x5AB4	0x78054F  	POP	W10
0x5AB6	0x060000  	RETURN
; end of _LogBit_Config
_EEPROM_Read:
0x2460	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.mpas,220 :: 		
;__Lib_EEPROM_p30.mpas,221 :: 		
0x2462	0x88019B  	MOV	W11, TBLPAG
;__Lib_EEPROM_p30.mpas,222 :: 		
0x2464	0x78048A  	MOV	W10, W9
;__Lib_EEPROM_p30.mpas,225 :: 		
0x2466	0xBA0419  	TBLRDL	[W9], W8
;__Lib_EEPROM_p30.mpas,227 :: 		
; Result start address is: 2 (W1)
0x2468	0x780088  	MOV	W8, W1
;__Lib_EEPROM_p30.mpas,228 :: 		
0x246A	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_EEPROM_Read:
0x246C	0xFA8000  	ULNK
0x246E	0x060000  	RETURN
; end of _EEPROM_Read
_SPI1_Write:
0x055C	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,167 :: 		
;__Lib_SPI_12.mpas,168 :: 		
0x055E	0x07FE23  	RCALL	_SPI1_Read
;__Lib_SPI_12.mpas,169 :: 		
L_end_SPI1_Write:
0x0560	0xFA8000  	ULNK
0x0562	0x060000  	RETURN
; end of _SPI1_Write
_SPI1_Read:
0x01A6	0xFA0000  	LNK	#0
;__Lib_SPI_12.mpas,153 :: 		
;__Lib_SPI_12.mpas,154 :: 		
0x01A8	0xA9C220  	BCLR	SPI1STAT, #6
;__Lib_SPI_12.mpas,156 :: 		
L__SPI1_Read4:
0x01AA	0xBF8220  	MOV	SPI1STAT, WREG
0x01AC	0x600062  	AND	W0, #2, W0
0x01AE	0xE10061  	CP	W0, #1
0x01B0	0x3A0002  	BRA NZ	L__SPI1_Read5
L__SPI1_Read34:
;__Lib_SPI_12.mpas,157 :: 		
0x01B2	0x000000  	NOP
0x01B4	0x37FFFA  	BRA	L__SPI1_Read4
L__SPI1_Read5:
;__Lib_SPI_12.mpas,158 :: 		
0x01B6	0x88112A  	MOV	W10, SPI1BUF
;__Lib_SPI_12.mpas,159 :: 		
L__SPI1_Read9:
0x01B8	0xBF8220  	MOV	SPI1STAT, WREG
0x01BA	0x600061  	AND	W0, #1, W0
0x01BC	0xE10060  	CP	W0, #0
0x01BE	0x3A0002  	BRA NZ	L__SPI1_Read10
L__SPI1_Read35:
;__Lib_SPI_12.mpas,160 :: 		
0x01C0	0x000000  	NOP
0x01C2	0x37FFFA  	BRA	L__SPI1_Read9
L__SPI1_Read10:
;__Lib_SPI_12.mpas,162 :: 		
; Result start address is: 2 (W1)
0x01C4	0x801121  	MOV	SPI1BUF, W1
;__Lib_SPI_12.mpas,163 :: 		
0x01C6	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_SPI1_Read:
0x01C8	0xFA8000  	ULNK
0x01CA	0x060000  	RETURN
; end of _SPI1_Read
_WDT_Reset_Flag:
0xE076	0xFA0016  	LNK	#22
;GRR3000LManagementPanel.mpas,10175 :: 		begin
;GRR3000LManagementPanel.mpas,10179 :: 		Glcd_Fill(0x00);
0xE078	0x781F8A  	PUSH	W10
0xE07A	0x781F8B  	PUSH	W11
0xE07C	0x781F8C  	PUSH	W12
0xE07E	0x781F8D  	PUSH	W13
0xE080	0xEF2014  	CLR	W10
0xE082	0x07DC24  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,10180 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xE084	0xB3C07D  	MOV.B	#7, W13
0xE086	0xB3C05C  	MOV.B	#5, W12
0xE088	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xE08A	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xE08C	0x200200  	MOV	#32, W0
0xE08E	0x781F80  	PUSH	W0
0xE090	0x07BD13  	RCALL	_Glcd_Set_Font
0xE092	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,10182 :: 		if (WDTO_bit = 1) then
0xE094	0xAE8740  	BTSS	WDTO_bit, BitPos(WDTO_bit+0)
0xE096	0x370090  	BRA	L__WDT_Reset_Flag4826
;GRR3000LManagementPanel.mpas,10185 :: 		Glcd_Write_Text('System Fault....',0,Row1,Black);
0xE098	0x4700E0  	ADD	W14, #0, W1
0xE09A	0xB3C530  	MOV.B	#83, W0
0xE09C	0x785880  	MOV.B	W0, [W1++]
0xE09E	0xB3C790  	MOV.B	#121, W0
0xE0A0	0x785880  	MOV.B	W0, [W1++]
0xE0A2	0xB3C730  	MOV.B	#115, W0
0xE0A4	0x785880  	MOV.B	W0, [W1++]
0xE0A6	0xB3C740  	MOV.B	#116, W0
0xE0A8	0x785880  	MOV.B	W0, [W1++]
0xE0AA	0xB3C650  	MOV.B	#101, W0
0xE0AC	0x785880  	MOV.B	W0, [W1++]
0xE0AE	0xB3C6D0  	MOV.B	#109, W0
0xE0B0	0x785880  	MOV.B	W0, [W1++]
0xE0B2	0xB3C200  	MOV.B	#32, W0
0xE0B4	0x785880  	MOV.B	W0, [W1++]
0xE0B6	0xB3C460  	MOV.B	#70, W0
0xE0B8	0x785880  	MOV.B	W0, [W1++]
0xE0BA	0xB3C610  	MOV.B	#97, W0
0xE0BC	0x785880  	MOV.B	W0, [W1++]
0xE0BE	0xB3C750  	MOV.B	#117, W0
0xE0C0	0x785880  	MOV.B	W0, [W1++]
0xE0C2	0xB3C6C0  	MOV.B	#108, W0
0xE0C4	0x785880  	MOV.B	W0, [W1++]
0xE0C6	0xB3C740  	MOV.B	#116, W0
0xE0C8	0x785880  	MOV.B	W0, [W1++]
0xE0CA	0xB3C2E0  	MOV.B	#46, W0
0xE0CC	0x785880  	MOV.B	W0, [W1++]
0xE0CE	0xB3C2E0  	MOV.B	#46, W0
0xE0D0	0x785880  	MOV.B	W0, [W1++]
0xE0D2	0xB3C2E0  	MOV.B	#46, W0
0xE0D4	0x785880  	MOV.B	W0, [W1++]
0xE0D6	0xB3C2E0  	MOV.B	#46, W0
0xE0D8	0x785880  	MOV.B	W0, [W1++]
0xE0DA	0xEF2000  	CLR	W0
0xE0DC	0x785880  	MOV.B	W0, [W1++]
0xE0DE	0x470060  	ADD	W14, #0, W0
0xE0E0	0xB3C01D  	MOV.B	#1, W13
0xE0E2	0xEF2018  	CLR	W12
0xE0E4	0xEF2016  	CLR	W11
0xE0E6	0x780500  	MOV	W0, W10
0xE0E8	0x07BB50  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,10186 :: 		Glcd_Write_Text('System Restarting   ',0,row2,Black);
0xE0EA	0x4700E0  	ADD	W14, #0, W1
0xE0EC	0xB3C530  	MOV.B	#83, W0
0xE0EE	0x785880  	MOV.B	W0, [W1++]
0xE0F0	0xB3C790  	MOV.B	#121, W0
0xE0F2	0x785880  	MOV.B	W0, [W1++]
0xE0F4	0xB3C730  	MOV.B	#115, W0
0xE0F6	0x785880  	MOV.B	W0, [W1++]
0xE0F8	0xB3C740  	MOV.B	#116, W0
0xE0FA	0x785880  	MOV.B	W0, [W1++]
0xE0FC	0xB3C650  	MOV.B	#101, W0
0xE0FE	0x785880  	MOV.B	W0, [W1++]
0xE100	0xB3C6D0  	MOV.B	#109, W0
0xE102	0x785880  	MOV.B	W0, [W1++]
0xE104	0xB3C200  	MOV.B	#32, W0
0xE106	0x785880  	MOV.B	W0, [W1++]
0xE108	0xB3C520  	MOV.B	#82, W0
0xE10A	0x785880  	MOV.B	W0, [W1++]
0xE10C	0xB3C650  	MOV.B	#101, W0
0xE10E	0x785880  	MOV.B	W0, [W1++]
0xE110	0xB3C730  	MOV.B	#115, W0
0xE112	0x785880  	MOV.B	W0, [W1++]
0xE114	0xB3C740  	MOV.B	#116, W0
0xE116	0x785880  	MOV.B	W0, [W1++]
0xE118	0xB3C610  	MOV.B	#97, W0
0xE11A	0x785880  	MOV.B	W0, [W1++]
0xE11C	0xB3C720  	MOV.B	#114, W0
0xE11E	0x785880  	MOV.B	W0, [W1++]
0xE120	0xB3C740  	MOV.B	#116, W0
0xE122	0x785880  	MOV.B	W0, [W1++]
0xE124	0xB3C690  	MOV.B	#105, W0
0xE126	0x785880  	MOV.B	W0, [W1++]
0xE128	0xB3C6E0  	MOV.B	#110, W0
0xE12A	0x785880  	MOV.B	W0, [W1++]
0xE12C	0xB3C670  	MOV.B	#103, W0
0xE12E	0x785880  	MOV.B	W0, [W1++]
0xE130	0xB3C200  	MOV.B	#32, W0
0xE132	0x785880  	MOV.B	W0, [W1++]
0xE134	0xB3C200  	MOV.B	#32, W0
0xE136	0x785880  	MOV.B	W0, [W1++]
0xE138	0xB3C200  	MOV.B	#32, W0
0xE13A	0x785880  	MOV.B	W0, [W1++]
0xE13C	0xEF2000  	CLR	W0
0xE13E	0x785880  	MOV.B	W0, [W1++]
0xE140	0x470060  	ADD	W14, #0, W0
0xE142	0xB3C01D  	MOV.B	#1, W13
0xE144	0xB3C01C  	MOV.B	#1, W12
0xE146	0xEF2016  	CLR	W11
0xE148	0x780500  	MOV	W0, W10
0xE14A	0x07BB1F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,10187 :: 		Glcd_Write_Text('Fault Code:0xC0015',0,row3,Black);
0xE14C	0x4700E0  	ADD	W14, #0, W1
0xE14E	0xB3C460  	MOV.B	#70, W0
0xE150	0x785880  	MOV.B	W0, [W1++]
0xE152	0xB3C610  	MOV.B	#97, W0
0xE154	0x785880  	MOV.B	W0, [W1++]
0xE156	0xB3C750  	MOV.B	#117, W0
0xE158	0x785880  	MOV.B	W0, [W1++]
0xE15A	0xB3C6C0  	MOV.B	#108, W0
0xE15C	0x785880  	MOV.B	W0, [W1++]
0xE15E	0xB3C740  	MOV.B	#116, W0
0xE160	0x785880  	MOV.B	W0, [W1++]
0xE162	0xB3C200  	MOV.B	#32, W0
0xE164	0x785880  	MOV.B	W0, [W1++]
0xE166	0xB3C430  	MOV.B	#67, W0
0xE168	0x785880  	MOV.B	W0, [W1++]
0xE16A	0xB3C6F0  	MOV.B	#111, W0
0xE16C	0x785880  	MOV.B	W0, [W1++]
0xE16E	0xB3C640  	MOV.B	#100, W0
0xE170	0x785880  	MOV.B	W0, [W1++]
0xE172	0xB3C650  	MOV.B	#101, W0
0xE174	0x785880  	MOV.B	W0, [W1++]
0xE176	0xB3C3A0  	MOV.B	#58, W0
0xE178	0x785880  	MOV.B	W0, [W1++]
0xE17A	0xB3C300  	MOV.B	#48, W0
0xE17C	0x785880  	MOV.B	W0, [W1++]
0xE17E	0xB3C780  	MOV.B	#120, W0
0xE180	0x785880  	MOV.B	W0, [W1++]
0xE182	0xB3C430  	MOV.B	#67, W0
0xE184	0x785880  	MOV.B	W0, [W1++]
0xE186	0xB3C300  	MOV.B	#48, W0
0xE188	0x785880  	MOV.B	W0, [W1++]
0xE18A	0xB3C300  	MOV.B	#48, W0
0xE18C	0x785880  	MOV.B	W0, [W1++]
0xE18E	0xB3C310  	MOV.B	#49, W0
0xE190	0x785880  	MOV.B	W0, [W1++]
0xE192	0xB3C350  	MOV.B	#53, W0
0xE194	0x785880  	MOV.B	W0, [W1++]
0xE196	0xEF2000  	CLR	W0
0xE198	0x785880  	MOV.B	W0, [W1++]
0xE19A	0x470060  	ADD	W14, #0, W0
0xE19C	0xB3C01D  	MOV.B	#1, W13
0xE19E	0xB3C02C  	MOV.B	#2, W12
0xE1A0	0xEF2016  	CLR	W11
0xE1A2	0x780500  	MOV	W0, W10
0xE1A4	0x07BAF2  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,10189 :: 		for i:= 1 to 5 do
; i start address is: 20 (W10)
0xE1A6	0xB3C01A  	MOV.B	#1, W10
; i end address is: 20 (W10)
L__WDT_Reset_Flag4829:
;GRR3000LManagementPanel.mpas,10191 :: 		Led_Test;
; i start address is: 20 (W10)
0xE1A8	0x07BB18  	RCALL	_Led_Test
;GRR3000LManagementPanel.mpas,10192 :: 		asm ClrWDT; end;
0xE1AA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10194 :: 		end;
0xE1AC	0xE15465  	CP.B	W10, #5
0xE1AE	0x320003  	BRA Z	L__WDT_Reset_Flag4832
L__WDT_Reset_Flag5748:
; i start address is: 0 (W0)
0xE1B0	0x454061  	ADD.B	W10, #1, W0
; i end address is: 20 (W10)
0xE1B2	0x784500  	MOV.B	W0, W10
; i end address is: 0 (W0)
0xE1B4	0x37FFF9  	BRA	L__WDT_Reset_Flag4829
L__WDT_Reset_Flag4832:
;GRR3000LManagementPanel.mpas,10196 :: 		WDTO_bit := 0; // clear asm ClrWDT; end; flag
0xE1B6	0xA98740  	BCLR	WDTO_bit, BitPos(WDTO_bit+0)
;GRR3000LManagementPanel.mpas,10199 :: 		end;
L__WDT_Reset_Flag4826:
;GRR3000LManagementPanel.mpas,10202 :: 		end;
L_end_WDT_Reset_Flag:
0xE1B8	0x7806CF  	POP	W13
0xE1BA	0x78064F  	POP	W12
0xE1BC	0x7805CF  	POP	W11
0xE1BE	0x78054F  	POP	W10
0xE1C0	0xFA8000  	ULNK
0xE1C2	0x060000  	RETURN
; end of _WDT_Reset_Flag
_Glcd_Set_Font:
0x5AB8	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,354 :: 		
; FontOffs start address is: 2 (W1)
0x5ABA	0x97F88E  	MOV.B	[W14-8], W1
;__Lib_Glcd.mpas,355 :: 		
0x5ABC	0x8888BA  	MOV	W10, __Lib_Glcd_fontDef
0x5ABE	0x8888CB  	MOV	W11, __Lib_Glcd_fontDef+2
;__Lib_Glcd.mpas,356 :: 		
0x5AC0	0xFB8001  	ZE	W1, W0
; FontOffs end address is: 2 (W1)
0x5AC2	0x8888A0  	MOV	W0, __Lib_Glcd_fontOffset
;__Lib_Glcd.mpas,357 :: 		
0x5AC4	0x20E270  	MOV	#lo_addr(__Lib_Glcd_fontW), W0
0x5AC6	0x78480C  	MOV.B	W12, [W0]
;__Lib_Glcd.mpas,358 :: 		
0x5AC8	0x20AAF0  	MOV	#lo_addr(__Lib_Glcd_fontH), W0
0x5ACA	0x78480D  	MOV.B	W13, [W0]
;__Lib_Glcd.mpas,359 :: 		
0x5ACC	0x200010  	MOV	#1, W0
0x5ACE	0x888890  	MOV	W0, __Lib_Glcd_FontInitialized
;__Lib_Glcd.mpas,360 :: 		
L_end_Glcd_Set_Font:
0x5AD0	0xFA8000  	ULNK
0x5AD2	0x060000  	RETURN
; end of _Glcd_Set_Font
_Glcd_Write_Text:
0x578A	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,441 :: 		
;__Lib_Glcd.mpas,442 :: 		
; i start address is: 4 (W2)
0x578C	0xEF2004  	CLR	W2
;__Lib_Glcd.mpas,444 :: 		
0x578E	0x808890  	MOV	__Lib_Glcd_FontInitialized, W0
0x5790	0xE10060  	CP	W0, #0
0x5792	0x3A000C  	BRA NZ	L__Glcd_Write_Text64
L__Glcd_Write_Text682:
;__Lib_Glcd.mpas,447 :: 		
0x5794	0x20E271  	MOV	#lo_addr(__Lib_Glcd_fontW), W1
0x5796	0xB3C050  	MOV.B	#5, W0
0x5798	0x784880  	MOV.B	W0, [W1]
;__Lib_Glcd.mpas,448 :: 		
0x579A	0x20AAF1  	MOV	#lo_addr(__Lib_Glcd_fontH), W1
0x579C	0xB3C070  	MOV.B	#7, W0
0x579E	0x784880  	MOV.B	W0, [W1]
;__Lib_Glcd.mpas,449 :: 		
0x57A0	0x280000  	MOV	#lo_addr(_font5x7), W0
0x57A2	0x8888B0  	MOV	W0, __Lib_Glcd_fontDef
0x57A4	0x200020  	MOV	#2, W0
0x57A6	0x8888C0  	MOV	W0, __Lib_Glcd_fontDef+2
;__Lib_Glcd.mpas,450 :: 		
0x57A8	0x200200  	MOV	#32, W0
0x57AA	0x8888A0  	MOV	W0, __Lib_Glcd_fontOffset
;__Lib_Glcd.mpas,451 :: 		
L__Glcd_Write_Text64:
;__Lib_Glcd.mpas,454 :: 		
L__Glcd_Write_Text67:
; i end address is: 4 (W2)
; i start address is: 4 (W2)
0x57AC	0x450002  	ADD	W10, W2, W0
0x57AE	0x784010  	MOV.B	[W0], W0
0x57B0	0xE10460  	CP.B	W0, #0
0x57B2	0x32000F  	BRA Z	L__Glcd_Write_Text68
L__Glcd_Write_Text683:
;__Lib_Glcd.mpas,456 :: 		
0x57B4	0x450002  	ADD	W10, W2, W0
0x57B6	0x781F82  	PUSH	W2
0x57B8	0xBE9F8A  	PUSH.D	W10
0x57BA	0x784510  	MOV.B	[W0], W10
0x57BC	0x07E2DB  	RCALL	_Glcd_Write_Char
0x57BE	0xBE054F  	POP.D	W10
0x57C0	0x78014F  	POP	W2
;__Lib_Glcd.mpas,457 :: 		
0x57C2	0xFB808B  	ZE	W11, W1
0x57C4	0x20E270  	MOV	#lo_addr(__Lib_Glcd_fontW), W0
0x57C6	0xFB8010  	ZE	[W0], W0
0x57C8	0x408000  	ADD	W1, W0, W0
0x57CA	0xEC2000  	INC	W0
0x57CC	0x784580  	MOV.B	W0, W11
;__Lib_Glcd.mpas,458 :: 		
0x57CE	0xEC2004  	INC	W2
;__Lib_Glcd.mpas,459 :: 		
; i end address is: 4 (W2)
0x57D0	0x37FFED  	BRA	L__Glcd_Write_Text67
L__Glcd_Write_Text68:
;__Lib_Glcd.mpas,460 :: 		
L_end_Glcd_Write_Text:
0x57D2	0xFA8000  	ULNK
0x57D4	0x060000  	RETURN
; end of _Glcd_Write_Text
_Glcd_Write_Char:
0x1D74	0xFA000A  	LNK	#10
;__Lib_Glcd.mpas,371 :: 		
;__Lib_Glcd.mpas,372 :: 		
0x1D76	0x781F8A  	PUSH	W10
0x1D78	0xE16467  	CP.B	W12, #7
0x1D7A	0x360001  	BRA LEU	L__Glcd_Write_Char35
L__Glcd_Write_Char672:
;__Lib_Glcd.mpas,373 :: 		
0x1D7C	0x37007D  	BRA	L_end__Glcd_Write_Char
L__Glcd_Write_Char35:
;__Lib_Glcd.mpas,375 :: 		
0x1D7E	0xFB808A  	ZE	W10, W1
0x1D80	0x211140  	MOV	#lo_addr(__Lib_Glcd_fontOffset), W0
0x1D82	0x508090  	SUB	W1, [W0], W1
0x1D84	0x20E270  	MOV	#lo_addr(__Lib_Glcd_fontW), W0
0x1D86	0xFB8010  	ZE	[W0], W0
0x1D88	0xB80800  	MUL.UU	W1, W0, W0
; pointer start address is: 4 (W2)
0x1D8A	0x780100  	MOV	W0, W2
;__Lib_Glcd.mpas,377 :: 		
0x1D8C	0x78450B  	MOV.B	W11, W10
0x1D8E	0x07F403  	RCALL	_Glcd_Set_X
;__Lib_Glcd.mpas,378 :: 		
0x1D90	0x78450C  	MOV.B	W12, W10
0x1D92	0x07FFDC  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,380 :: 		
; ii start address is: 12 (W6)
0x1D94	0xEF200C  	CLR	W6
; pointer end address is: 4 (W2)
; ii end address is: 12 (W6)
L__Glcd_Write_Char37:
; ii start address is: 12 (W6)
; pointer start address is: 4 (W2)
0x1D96	0x20E270  	MOV	#lo_addr(__Lib_Glcd_fontW), W0
0x1D98	0xFB8010  	ZE	[W0], W0
0x1D9A	0xED2000  	DEC	W0
0x1D9C	0x980740  	MOV	W0, [W14+8]
0x1D9E	0xE13000  	CP	W6, W0
0x1DA0	0x3E004D  	BRA GTU	L__Glcd_Write_Char41
L__Glcd_Write_Char673:
;__Lib_Glcd.mpas,382 :: 		
0x1DA2	0xB3C7F0  	MOV.B	#127, W0
0x1DA4	0xE15C00  	CP.B	W11, W0
0x1DA6	0x360001  	BRA LEU	L__Glcd_Write_Char43
L__Glcd_Write_Char674:
; pointer end address is: 4 (W2)
; ii end address is: 12 (W6)
;__Lib_Glcd.mpas,383 :: 		
0x1DA8	0x370067  	BRA	L_end__Glcd_Write_Char
L__Glcd_Write_Char43:
;__Lib_Glcd.mpas,385 :: 		
; ii start address is: 12 (W6)
; pointer start address is: 4 (W2)
0x1DAA	0x781F8A  	PUSH	W10
0x1DAC	0x78450B  	MOV.B	W11, W10
0x1DAE	0x07F3E5  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,386 :: 		
0x1DB0	0x78450C  	MOV.B	W12, W10
0x1DB2	0x07FFCC  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,387 :: 		
0x1DB4	0x78450B  	MOV.B	W11, W10
0x1DB6	0x07F3EF  	RCALL	_Glcd_Set_X
0x1DB8	0x78054F  	POP	W10
;__Lib_Glcd.mpas,389 :: 		
0x1DBA	0x07F33D  	RCALL	_Glcd_Read_Data
0x1DBC	0x984700  	MOV.B	W0, [W14+0]
;__Lib_Glcd.mpas,390 :: 		
0x1DBE	0x07F33B  	RCALL	_Glcd_Read_Data
0x1DC0	0x984700  	MOV.B	W0, [W14+0]
;__Lib_Glcd.mpas,392 :: 		
0x1DC2	0x781F8A  	PUSH	W10
0x1DC4	0x78450B  	MOV.B	W11, W10
0x1DC6	0x07F3D9  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,393 :: 		
0x1DC8	0x78450C  	MOV.B	W12, W10
0x1DCA	0x07FFC0  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,394 :: 		
0x1DCC	0x78450B  	MOV.B	W11, W10
0x1DCE	0x07F3E3  	RCALL	_Glcd_Set_X
0x1DD0	0x78054F  	POP	W10
;__Lib_Glcd.mpas,397 :: 		
0x1DD2	0x8088B0  	MOV	__Lib_Glcd_fontDef, W0
0x1DD4	0x8088C1  	MOV	__Lib_Glcd_fontDef+2, W1
0x1DD6	0x980720  	MOV	W0, [W14+4]
0x1DD8	0x980731  	MOV	W1, [W14+6]
;__Lib_Glcd.mpas,398 :: 		
0x1DDA	0x470064  	ADD	W14, #4, W0
0x1DDC	0x781F82  	PUSH	W2
0x1DDE	0x781F8C  	PUSH	W12
0x1DE0	0xBE9F8A  	PUSH.D	W10
0x1DE2	0x780582  	MOV	W2, W11
0x1DE4	0xDEDE4F  	ASR	W11, #15, W12
0x1DE6	0x780500  	MOV	W0, W10
0x1DE8	0x07F2ED  	RCALL	___AddToFarPointer
0x1DEA	0xBE054F  	POP.D	W10
0x1DEC	0x78064F  	POP	W12
0x1DEE	0x78014F  	POP	W2
;__Lib_Glcd.mpas,399 :: 		
; pointer start address is: 6 (W3)
0x1DF0	0x4101E1  	ADD	W2, #1, W3
; pointer end address is: 4 (W2)
;__Lib_Glcd.mpas,400 :: 		
0x1DF2	0x90002E  	MOV	[W14+4], W0
0x1DF4	0x9000BE  	MOV	[W14+6], W1
0x1DF6	0x8801A1  	MOV	W1, PSVPAG
0x1DF8	0x784010  	MOV.B	[W0], W0
0x1DFA	0x984710  	MOV.B	W0, [W14+1]
;__Lib_Glcd.mpas,401 :: 		
0x1DFC	0x4700E2  	ADD	W14, #2, W1
0x1DFE	0xEAC880  	COM.B	W0, [W1]
;__Lib_Glcd.mpas,405 :: 		
0x1E00	0xE16C60  	CP.B	W13, #0
0x1E02	0x3A0003  	BRA NZ	L__Glcd_Write_Char48
L__Glcd_Write_Char675:
0x1E04	0x90402E  	MOV.B	[W14+2], W0
0x1E06	0x984700  	MOV.B	W0, [W14+0]
0x1E08	0x37000C  	BRA	L__Glcd_Write_Char45
L__Glcd_Write_Char48:
;__Lib_Glcd.mpas,406 :: 		
0x1E0A	0xE16C61  	CP.B	W13, #1
0x1E0C	0x3A0003  	BRA NZ	L__Glcd_Write_Char51
L__Glcd_Write_Char676:
0x1E0E	0x90401E  	MOV.B	[W14+1], W0
0x1E10	0x984700  	MOV.B	W0, [W14+0]
0x1E12	0x370007  	BRA	L__Glcd_Write_Char45
L__Glcd_Write_Char51:
;__Lib_Glcd.mpas,407 :: 		
0x1E14	0xE16C62  	CP.B	W13, #2
0x1E16	0x3A0005  	BRA NZ	L__Glcd_Write_Char54
L__Glcd_Write_Char677:
0x1E18	0x90410E  	MOV.B	[W14+0], W2
0x1E1A	0x4700E1  	ADD	W14, #1, W1
0x1E1C	0x470060  	ADD	W14, #0, W0
0x1E1E	0x694811  	XOR.B	W2, [W1], [W0]
0x1E20	0x370000  	BRA	L__Glcd_Write_Char45
L__Glcd_Write_Char54:
L__Glcd_Write_Char45:
;__Lib_Glcd.mpas,410 :: 		
0x1E22	0x781F8A  	PUSH	W10
0x1E24	0x90450E  	MOV.B	[W14+0], W10
0x1E26	0x07FF8A  	RCALL	_Glcd_Write_Data
0x1E28	0x78054F  	POP	W10
;__Lib_Glcd.mpas,411 :: 		
0x1E2A	0xFB800B  	ZE	W11, W0
0x1E2C	0xEC2000  	INC	W0
0x1E2E	0x784580  	MOV.B	W0, W11
;__Lib_Glcd.mpas,412 :: 		
0x1E30	0x90004E  	MOV	[W14+8], W0
0x1E32	0xE13000  	CP	W6, W0
0x1E34	0x320003  	BRA Z	L__Glcd_Write_Char41
L__Glcd_Write_Char678:
; ii start address is: 12 (W6)
0x1E36	0xEC200C  	INC	W6
; ii end address is: 12 (W6)
0x1E38	0x780103  	MOV	W3, W2
; pointer end address is: 6 (W3)
; ii end address is: 12 (W6)
0x1E3A	0x37FFAD  	BRA	L__Glcd_Write_Char37
L__Glcd_Write_Char41:
;__Lib_Glcd.mpas,415 :: 		
0x1E3C	0x781F8A  	PUSH	W10
0x1E3E	0x78450B  	MOV.B	W11, W10
0x1E40	0x07F39C  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,416 :: 		
0x1E42	0x78450C  	MOV.B	W12, W10
0x1E44	0x07FF83  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,417 :: 		
0x1E46	0x78450B  	MOV.B	W11, W10
0x1E48	0x07F3A6  	RCALL	_Glcd_Set_X
0x1E4A	0x78054F  	POP	W10
;__Lib_Glcd.mpas,419 :: 		
0x1E4C	0xB3CFF0  	MOV.B	#255, W0
0x1E4E	0x984710  	MOV.B	W0, [W14+1]
;__Lib_Glcd.mpas,420 :: 		
0x1E50	0xEF2000  	CLR	W0
0x1E52	0x984720  	MOV.B	W0, [W14+2]
;__Lib_Glcd.mpas,423 :: 		
0x1E54	0xE16C60  	CP.B	W13, #0
0x1E56	0x3A0007  	BRA NZ	L__Glcd_Write_Char58
L__Glcd_Write_Char679:
;__Lib_Glcd.mpas,425 :: 		
0x1E58	0x90401E  	MOV.B	[W14+1], W0
0x1E5A	0x984700  	MOV.B	W0, [W14+0]
;__Lib_Glcd.mpas,426 :: 		
0x1E5C	0x781F8A  	PUSH	W10
0x1E5E	0x90451E  	MOV.B	[W14+1], W10
0x1E60	0x07FF6D  	RCALL	_Glcd_Write_Data
0x1E62	0x78054F  	POP	W10
;__Lib_Glcd.mpas,427 :: 		
0x1E64	0x370009  	BRA	L__Glcd_Write_Char55
L__Glcd_Write_Char58:
;__Lib_Glcd.mpas,428 :: 		
0x1E66	0xE16C61  	CP.B	W13, #1
0x1E68	0x3A0007  	BRA NZ	L__Glcd_Write_Char61
L__Glcd_Write_Char680:
;__Lib_Glcd.mpas,430 :: 		
0x1E6A	0x90402E  	MOV.B	[W14+2], W0
0x1E6C	0x984700  	MOV.B	W0, [W14+0]
;__Lib_Glcd.mpas,431 :: 		
0x1E6E	0x781F8A  	PUSH	W10
0x1E70	0x90452E  	MOV.B	[W14+2], W10
0x1E72	0x07FF64  	RCALL	_Glcd_Write_Data
0x1E74	0x78054F  	POP	W10
;__Lib_Glcd.mpas,432 :: 		
0x1E76	0x370000  	BRA	L__Glcd_Write_Char55
L__Glcd_Write_Char61:
L__Glcd_Write_Char55:
;__Lib_Glcd.mpas,435 :: 		
L_end__Glcd_Write_Char:
L_end_Glcd_Write_Char:
0x1E78	0x78054F  	POP	W10
0x1E7A	0xFA8000  	ULNK
0x1E7C	0x060000  	RETURN
; end of _Glcd_Write_Char
_Glcd_Set_X:
0x0596	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,150 :: 		
;__Lib_Glcd.mpas,152 :: 		
0x0598	0x781F8A  	PUSH	W10
0x059A	0xFB808A  	ZE	W10, W1
0x059C	0x2007F0  	MOV	#127, W0
0x059E	0x608000  	AND	W1, W0, W0
0x05A0	0x784500  	MOV.B	W0, W10
;__Lib_Glcd.mpas,153 :: 		
0x05A2	0xA922E8  	BCLR	GLCD_RS, BitPos(GLCD_RS+0)
;__Lib_Glcd.mpas,154 :: 		
0x05A4	0xA922E2  	BCLR	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,156 :: 		
0x05A6	0xFB8080  	ZE	W0, W1
0x05A8	0x200BF0  	MOV	#191, W0
0x05AA	0x608000  	AND	W1, W0, W0
0x05AC	0x784500  	MOV.B	W0, W10
;__Lib_Glcd.mpas,157 :: 		
0x05AE	0xFB8080  	ZE	W0, W1
0x05B0	0x200400  	MOV	#64, W0
0x05B2	0x708000  	IOR	W1, W0, W0
0x05B4	0x784500  	MOV.B	W0, W10
;__Lib_Glcd.mpas,160 :: 		
0x05B6	0x784500  	MOV.B	W0, W10
0x05B8	0x070B96  	RCALL	__Lib_Glcd_Write_To_Pins
;__Lib_Glcd.mpas,162 :: 		
0x05BA	0x070BD5  	RCALL	__Lib_Glcd_Strobe
;__Lib_Glcd.mpas,163 :: 		
L_end_Glcd_Set_X:
0x05BC	0x78054F  	POP	W10
0x05BE	0xFA8000  	ULNK
0x05C0	0x060000  	RETURN
; end of _Glcd_Set_X
_Glcd_Set_Side:
0x057A	0xFA0000  	LNK	#0
;__Lib_Glcd.mpas,134 :: 		
;__Lib_Glcd.mpas,135 :: 		
0x057C	0xFB808A  	ZE	W10, W1
0x057E	0x2007F0  	MOV	#127, W0
0x0580	0x608000  	AND	W1, W0, W0
0x0582	0x784500  	MOV.B	W0, W10
;__Lib_Glcd.mpas,136 :: 		
0x0584	0xAEC000  	BTSS	W0, #6
0x0586	0x370003  	BRA	L__Glcd_Set_Side5
;__Lib_Glcd.mpas,138 :: 		
0x0588	0xA8C2C4  	BSET	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,139 :: 		
0x058A	0xA902E8  	BCLR	GLCD_CS2, BitPos(GLCD_CS2+0)
;__Lib_Glcd.mpas,140 :: 		
0x058C	0x370002  	BRA	L__Glcd_Set_Side6
;__Lib_Glcd.mpas,141 :: 		
L__Glcd_Set_Side5:
;__Lib_Glcd.mpas,143 :: 		
0x058E	0xA9C2C4  	BCLR	GLCD_CS1, BitPos(GLCD_CS1+0)
;__Lib_Glcd.mpas,144 :: 		
0x0590	0xA802E8  	BSET	GLCD_CS2, BitPos(GLCD_CS2+0)
;__Lib_Glcd.mpas,145 :: 		
L__Glcd_Set_Side6:
;__Lib_Glcd.mpas,146 :: 		
L_end_Glcd_Set_Side:
0x0592	0xFA8000  	ULNK
0x0594	0x060000  	RETURN
; end of _Glcd_Set_Side
_Glcd_Read_Data:
0x0436	0xFA0002  	LNK	#2
;__Lib_Glcd.mpas,168 :: 		
;__Lib_Glcd.mpas,176 :: 		
0x0438	0xA842D2  	BSET	GLCD_D7_Direction, BitPos(GLCD_D7_Direction+0)
;__Lib_Glcd.mpas,177 :: 		
0x043A	0xA862D2  	BSET	GLCD_D6_Direction, BitPos(GLCD_D6_Direction+0)
;__Lib_Glcd.mpas,178 :: 		
0x043C	0xA882D3  	BSET	GLCD_D5_Direction, BitPos(GLCD_D5_Direction+0)
;__Lib_Glcd.mpas,179 :: 		
0x043E	0xA8A2D3  	BSET	GLCD_D4_Direction, BitPos(GLCD_D4_Direction+0)
;__Lib_Glcd.mpas,180 :: 		
0x0440	0xA882D2  	BSET	GLCD_D3_Direction, BitPos(GLCD_D3_Direction+0)
;__Lib_Glcd.mpas,181 :: 		
0x0442	0xA8A2D2  	BSET	GLCD_D2_Direction, BitPos(GLCD_D2_Direction+0)
;__Lib_Glcd.mpas,182 :: 		
0x0444	0xA8C2D2  	BSET	GLCD_D1_Direction, BitPos(GLCD_D1_Direction+0)
;__Lib_Glcd.mpas,183 :: 		
0x0446	0xA8E2D2  	BSET	GLCD_D0_Direction, BitPos(GLCD_D0_Direction+0)
;__Lib_Glcd.mpas,186 :: 		
0x0448	0x070BA3  	RCALL	_Delay_1uS
;__Lib_Glcd.mpas,187 :: 		
0x044A	0x070BA2  	RCALL	_Delay_1uS
;__Lib_Glcd.mpas,189 :: 		
0x044C	0xA822E8  	BSET	GLCD_RS, BitPos(GLCD_RS+0)
;__Lib_Glcd.mpas,190 :: 		
0x044E	0xA902E2  	BCLR	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,191 :: 		
0x0450	0xA822E2  	BSET	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,193 :: 		
0x0452	0xA802E2  	BSET	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,195 :: 		
0x0454	0x0700E1  	RCALL	_Delay_10uS
;__Lib_Glcd.mpas,203 :: 		
0x0456	0x470060  	ADD	W14, #0, W0
0x0458	0xA07410  	BSET.B	[W0], #7
0x045A	0xAE42D4  	BTSS	GLCD_D7, BitPos(GLCD_D7+0)
0x045C	0xA17410  	BCLR.B	[W0], #7
;__Lib_Glcd.mpas,204 :: 		
0x045E	0x470060  	ADD	W14, #0, W0
0x0460	0xA06410  	BSET.B	[W0], #6
0x0462	0xAE62D4  	BTSS	GLCD_D6, BitPos(GLCD_D6+0)
0x0464	0xA16410  	BCLR.B	[W0], #6
;__Lib_Glcd.mpas,205 :: 		
0x0466	0x470060  	ADD	W14, #0, W0
0x0468	0xA05410  	BSET.B	[W0], #5
0x046A	0xAE82D5  	BTSS	GLCD_D5, BitPos(GLCD_D5+0)
0x046C	0xA15410  	BCLR.B	[W0], #5
;__Lib_Glcd.mpas,206 :: 		
0x046E	0x470060  	ADD	W14, #0, W0
0x0470	0xA04410  	BSET.B	[W0], #4
0x0472	0xAEA2D5  	BTSS	GLCD_D4, BitPos(GLCD_D4+0)
0x0474	0xA14410  	BCLR.B	[W0], #4
;__Lib_Glcd.mpas,207 :: 		
0x0476	0x470060  	ADD	W14, #0, W0
0x0478	0xA03410  	BSET.B	[W0], #3
0x047A	0xAE82D4  	BTSS	GLCD_D3, BitPos(GLCD_D3+0)
0x047C	0xA13410  	BCLR.B	[W0], #3
;__Lib_Glcd.mpas,208 :: 		
0x047E	0x470060  	ADD	W14, #0, W0
0x0480	0xA02410  	BSET.B	[W0], #2
0x0482	0xAEA2D4  	BTSS	GLCD_D2, BitPos(GLCD_D2+0)
0x0484	0xA12410  	BCLR.B	[W0], #2
;__Lib_Glcd.mpas,209 :: 		
0x0486	0x470060  	ADD	W14, #0, W0
0x0488	0xA01410  	BSET.B	[W0], #1
0x048A	0xAEC2D4  	BTSS	GLCD_D1, BitPos(GLCD_D1+0)
0x048C	0xA11410  	BCLR.B	[W0], #1
;__Lib_Glcd.mpas,210 :: 		
0x048E	0x470060  	ADD	W14, #0, W0
0x0490	0xA00410  	BSET.B	[W0], #0
0x0492	0xAEE2D4  	BTSS	GLCD_D0, BitPos(GLCD_D0+0)
0x0494	0xA10410  	BCLR.B	[W0], #0
;__Lib_Glcd.mpas,212 :: 		
0x0496	0xA902E2  	BCLR	GLCD_EN, BitPos(GLCD_EN+0)
;__Lib_Glcd.mpas,213 :: 		
0x0498	0xA922E2  	BCLR	GLCD_RW, BitPos(GLCD_RW+0)
;__Lib_Glcd.mpas,216 :: 		
0x049A	0x070B7A  	RCALL	_Delay_1uS
;__Lib_Glcd.mpas,217 :: 		
0x049C	0x070B79  	RCALL	_Delay_1uS
;__Lib_Glcd.mpas,223 :: 		
0x049E	0xA942D2  	BCLR	GLCD_D7_Direction, BitPos(GLCD_D7_Direction+0)
;__Lib_Glcd.mpas,224 :: 		
0x04A0	0xA962D2  	BCLR	GLCD_D6_Direction, BitPos(GLCD_D6_Direction+0)
;__Lib_Glcd.mpas,225 :: 		
0x04A2	0xA982D3  	BCLR	GLCD_D5_Direction, BitPos(GLCD_D5_Direction+0)
;__Lib_Glcd.mpas,226 :: 		
0x04A4	0xA9A2D3  	BCLR	GLCD_D4_Direction, BitPos(GLCD_D4_Direction+0)
;__Lib_Glcd.mpas,227 :: 		
0x04A6	0xA982D2  	BCLR	GLCD_D3_Direction, BitPos(GLCD_D3_Direction+0)
;__Lib_Glcd.mpas,228 :: 		
0x04A8	0xA9A2D2  	BCLR	GLCD_D2_Direction, BitPos(GLCD_D2_Direction+0)
;__Lib_Glcd.mpas,229 :: 		
0x04AA	0xA9C2D2  	BCLR	GLCD_D1_Direction, BitPos(GLCD_D1_Direction+0)
;__Lib_Glcd.mpas,230 :: 		
0x04AC	0xA9E2D2  	BCLR	GLCD_D0_Direction, BitPos(GLCD_D0_Direction+0)
;__Lib_Glcd.mpas,232 :: 		
0x04AE	0x90400E  	MOV.B	[W14+0], W0
L_end_Glcd_Read_Data:
0x04B0	0xFA8000  	ULNK
0x04B2	0x060000  	RETURN
; end of _Glcd_Read_Data
___AddToFarPointer:
0x03C4	0xFA0000  	LNK	#0
;__Lib_System.mpas,52 :: 		
;__Lib_System.mpas,53 :: 		
0x03C6	0x280000  	MOV	#32768, W0
0x03C8	0x200001  	MOV	#0, W1
0x03CA	0xE15800  	CP	W11, W0
0x03CC	0xE1E001  	CPB	W12, W1
0x03CE	0x310007  	BRA GEU	L____AddToFarPointer6
L____AddToFarPointer100:
;__Lib_System.mpas,55 :: 		
0x03D0	0xBE001A  	MOV.D	[W10], W0
; tmpD start address is: 4 (W2)
0x03D2	0x40010B  	ADD	W0, W11, W2
0x03D4	0x48818C  	ADDC	W1, W12, W3
;__Lib_System.mpas,56 :: 		
0x03D6	0xAEE005  	BTSS	W2, #15
0x03D8	0x370002  	BRA	L____AddToFarPointer9
;__Lib_System.mpas,58 :: 		
0x03DA	0xBE8D02  	MOV.D	W2, [W10]
; tmpD end address is: 4 (W2)
;__Lib_System.mpas,59 :: 		
0x03DC	0x37002A  	BRA	L_end____AddToFarPointer
;__Lib_System.mpas,60 :: 		
L____AddToFarPointer9:
;__Lib_System.mpas,61 :: 		
L____AddToFarPointer6:
;__Lib_System.mpas,63 :: 		
0x03DE	0x78000A  	MOV	W10, W0
0x03E0	0xEB0080  	CLR	W1
0x03E2	0x400162  	ADD	W0, #2, W2
0x03E4	0x4881E0  	ADDC	W1, #0, W3
; tempPtr2 start address is: 8 (W4)
0x03E6	0x780202  	MOV	W2, W4
;__Lib_System.mpas,64 :: 		
0x03E8	0x78000A  	MOV	W10, W0
0x03EA	0xEB0080  	CLR	W1
0x03EC	0x400061  	ADD	W0, #1, W0
0x03EE	0x4880E0  	ADDC	W1, #0, W1
; tempPtr1 start address is: 10 (W5)
0x03F0	0x780280  	MOV	W0, W5
;__Lib_System.mpas,65 :: 		
0x03F2	0x784012  	MOV.B	[W2], W0
0x03F4	0xFB8000  	ZE	W0, W0
0x03F6	0x600061  	AND	W0, #1, W0
0x03F8	0xE10060  	CP	W0, #0
0x03FA	0x3A0004  	BRA NZ	L____AddToFarPointer12
L____AddToFarPointer101:
;__Lib_System.mpas,67 :: 		
0x03FC	0xFB8095  	ZE	[W5], W1
0x03FE	0x2007F0  	MOV	#127, W0
0x0400	0x608000  	AND	W1, W0, W0
0x0402	0x784A80  	MOV.B	W0, [W5]
;__Lib_System.mpas,68 :: 		
L____AddToFarPointer12:
;__Lib_System.mpas,70 :: 		
0x0404	0x784014  	MOV.B	[W4], W0
0x0406	0xFB8000  	ZE	W0, W0
0x0408	0xDE0041  	LSR	W0, #1, W0
0x040A	0x784A00  	MOV.B	W0, [W4]
;__Lib_System.mpas,71 :: 		
0x040C	0xBE001A  	MOV.D	[W10], W0
0x040E	0x401D0B  	ADD	W0, W11, [W10++]
0x0410	0x48950C  	ADDC	W1, W12, [W10--]
;__Lib_System.mpas,73 :: 		
0x0412	0x784014  	MOV.B	[W4], W0
0x0414	0xFB8000  	ZE	W0, W0
0x0416	0xDD0041  	SL	W0, #1, W0
0x0418	0x784A00  	MOV.B	W0, [W4]
;__Lib_System.mpas,75 :: 		
0x041A	0xFB8095  	ZE	[W5], W1
0x041C	0x200800  	MOV	#128, W0
0x041E	0x608000  	AND	W1, W0, W0
0x0420	0xE10060  	CP	W0, #0
0x0422	0x320003  	BRA Z	L____AddToFarPointer15
L____AddToFarPointer102:
;__Lib_System.mpas,76 :: 		
0x0424	0xFB8014  	ZE	[W4], W0
0x0426	0x700061  	IOR	W0, #1, W0
0x0428	0x784A00  	MOV.B	W0, [W4]
; tempPtr2 end address is: 8 (W4)
L____AddToFarPointer15:
;__Lib_System.mpas,77 :: 		
0x042A	0xFB8095  	ZE	[W5], W1
0x042C	0x200800  	MOV	#128, W0
0x042E	0x708000  	IOR	W1, W0, W0
0x0430	0x784A80  	MOV.B	W0, [W5]
; tempPtr1 end address is: 10 (W5)
;__Lib_System.mpas,79 :: 		
L_end____AddToFarPointer:
L_end___AddToFarPointer:
0x0432	0xFA8000  	ULNK
0x0434	0x060000  	RETURN
; end of ___AddToFarPointer
_Led_Test:
0x57DA	0xFA0002  	LNK	#2
;GRR3000LManagementPanel.mpas,9970 :: 		begin
;GRR3000LManagementPanel.mpas,9972 :: 		Temp2 := 0;
0x57DC	0x781F8A  	PUSH	W10
0x57DE	0x781F8B  	PUSH	W11
0x57E0	0xEF2000  	CLR	W0
0x57E2	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,9974 :: 		for temp1 := 1 to 8 do
; Temp1 start address is: 12 (W6)
0x57E4	0xB3C016  	MOV.B	#1, W6
; Temp1 end address is: 12 (W6)
L__Led_Test4722:
;GRR3000LManagementPanel.mpas,9976 :: 		HC595_CS1_Pin := 1;
; Temp1 start address is: 12 (W6)
0x57E6	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,9977 :: 		Delay_Cyc_Long(5);
0x57E8	0x20005A  	MOV	#5, W10
0x57EA	0x20000B  	MOV	#0, W11
0x57EC	0x0720B9  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,9978 :: 		HC595_CS1_Pin := 0;
0x57EE	0xA942D5  	BCLR	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,9979 :: 		Delay_Cyc_Long(5);
0x57F0	0x20005A  	MOV	#5, W10
0x57F2	0x20000B  	MOV	#0, W11
0x57F4	0x0720B5  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,9984 :: 		1: temp2 := 128;
0x57F6	0xE13461  	CP.B	W6, #1
0x57F8	0x3A0003  	BRA NZ	L__Led_Test4729
L__Led_Test5711:
0x57FA	0xB3C800  	MOV.B	#128, W0
0x57FC	0x984700  	MOV.B	W0, [W14+0]
0x57FE	0x370023  	BRA	L__Led_Test4726
L__Led_Test4729:
;GRR3000LManagementPanel.mpas,9985 :: 		2: temp2 := 192;
0x5800	0xE13462  	CP.B	W6, #2
0x5802	0x3A0003  	BRA NZ	L__Led_Test4732
L__Led_Test5712:
0x5804	0xB3CC00  	MOV.B	#192, W0
0x5806	0x984700  	MOV.B	W0, [W14+0]
0x5808	0x37001E  	BRA	L__Led_Test4726
L__Led_Test4732:
;GRR3000LManagementPanel.mpas,9986 :: 		3: temp2 := 224;
0x580A	0xE13463  	CP.B	W6, #3
0x580C	0x3A0003  	BRA NZ	L__Led_Test4735
L__Led_Test5713:
0x580E	0xB3CE00  	MOV.B	#224, W0
0x5810	0x984700  	MOV.B	W0, [W14+0]
0x5812	0x370019  	BRA	L__Led_Test4726
L__Led_Test4735:
;GRR3000LManagementPanel.mpas,9987 :: 		4: temp2 := 240;
0x5814	0xE13464  	CP.B	W6, #4
0x5816	0x3A0003  	BRA NZ	L__Led_Test4738
L__Led_Test5714:
0x5818	0xB3CF00  	MOV.B	#240, W0
0x581A	0x984700  	MOV.B	W0, [W14+0]
0x581C	0x370014  	BRA	L__Led_Test4726
L__Led_Test4738:
;GRR3000LManagementPanel.mpas,9988 :: 		5: temp2 := 248;
0x581E	0xE13465  	CP.B	W6, #5
0x5820	0x3A0003  	BRA NZ	L__Led_Test4741
L__Led_Test5715:
0x5822	0xB3CF80  	MOV.B	#248, W0
0x5824	0x984700  	MOV.B	W0, [W14+0]
0x5826	0x37000F  	BRA	L__Led_Test4726
L__Led_Test4741:
;GRR3000LManagementPanel.mpas,9989 :: 		6: temp2 := 252;
0x5828	0xE13466  	CP.B	W6, #6
0x582A	0x3A0003  	BRA NZ	L__Led_Test4744
L__Led_Test5716:
0x582C	0xB3CFC0  	MOV.B	#252, W0
0x582E	0x984700  	MOV.B	W0, [W14+0]
0x5830	0x37000A  	BRA	L__Led_Test4726
L__Led_Test4744:
;GRR3000LManagementPanel.mpas,9990 :: 		7: temp2 := 254;
0x5832	0xE13467  	CP.B	W6, #7
0x5834	0x3A0003  	BRA NZ	L__Led_Test4747
L__Led_Test5717:
0x5836	0xB3CFE0  	MOV.B	#254, W0
0x5838	0x984700  	MOV.B	W0, [W14+0]
0x583A	0x370005  	BRA	L__Led_Test4726
L__Led_Test4747:
;GRR3000LManagementPanel.mpas,9991 :: 		8: temp2 := 255;
0x583C	0xE13468  	CP.B	W6, #8
0x583E	0x3A0003  	BRA NZ	L__Led_Test4750
L__Led_Test5718:
0x5840	0xB3CFF0  	MOV.B	#255, W0
0x5842	0x984700  	MOV.B	W0, [W14+0]
0x5844	0x370000  	BRA	L__Led_Test4726
L__Led_Test4750:
L__Led_Test4726:
;GRR3000LManagementPanel.mpas,9994 :: 		SPI1_Write(Temp2);
0x5846	0x470060  	ADD	W14, #0, W0
0x5848	0xFB8510  	ZE	[W0], W10
0x584A	0x07D688  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,9995 :: 		Pause_ms(25);
0x584C	0x20019A  	MOV	#25, W10
0x584E	0x074323  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9997 :: 		asm ClrWDT; end;
0x5850	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9999 :: 		HC595_CS1_Pin := 1;
0x5852	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,10000 :: 		Delay_Cyc_Long(5);
0x5854	0x20005A  	MOV	#5, W10
0x5856	0x20000B  	MOV	#0, W11
0x5858	0x072083  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10001 :: 		end;
0x585A	0xE13468  	CP.B	W6, #8
0x585C	0x320003  	BRA Z	L__Led_Test4725
L__Led_Test5719:
; Temp1 start address is: 0 (W0)
0x585E	0x434061  	ADD.B	W6, #1, W0
; Temp1 end address is: 12 (W6)
0x5860	0x784300  	MOV.B	W0, W6
; Temp1 end address is: 0 (W0)
0x5862	0x37FFC1  	BRA	L__Led_Test4722
L__Led_Test4725:
;GRR3000LManagementPanel.mpas,10005 :: 		Temp2 := 0;
0x5864	0xEF2000  	CLR	W0
0x5866	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,10007 :: 		for temp1 := 1 to 8 do
; Temp1 start address is: 12 (W6)
0x5868	0xB3C016  	MOV.B	#1, W6
; Temp1 end address is: 12 (W6)
L__Led_Test4752:
;GRR3000LManagementPanel.mpas,10009 :: 		HC595_CS2_Pin := 1;
; Temp1 start address is: 12 (W6)
0x586A	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10010 :: 		Delay_Cyc_Long(5);
0x586C	0x20005A  	MOV	#5, W10
0x586E	0x20000B  	MOV	#0, W11
0x5870	0x072077  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10011 :: 		HC595_CS2_Pin := 0;
0x5872	0xA922D5  	BCLR	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10012 :: 		Delay_Cyc_Long(5);
0x5874	0x20005A  	MOV	#5, W10
0x5876	0x20000B  	MOV	#0, W11
0x5878	0x072073  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10016 :: 		1: temp2 := 128;
0x587A	0xE13461  	CP.B	W6, #1
0x587C	0x3A0003  	BRA NZ	L__Led_Test4759
L__Led_Test5720:
0x587E	0xB3C800  	MOV.B	#128, W0
0x5880	0x984700  	MOV.B	W0, [W14+0]
0x5882	0x370023  	BRA	L__Led_Test4756
L__Led_Test4759:
;GRR3000LManagementPanel.mpas,10017 :: 		2: temp2 := 192;
0x5884	0xE13462  	CP.B	W6, #2
0x5886	0x3A0003  	BRA NZ	L__Led_Test4762
L__Led_Test5721:
0x5888	0xB3CC00  	MOV.B	#192, W0
0x588A	0x984700  	MOV.B	W0, [W14+0]
0x588C	0x37001E  	BRA	L__Led_Test4756
L__Led_Test4762:
;GRR3000LManagementPanel.mpas,10018 :: 		3: temp2 := 224;
0x588E	0xE13463  	CP.B	W6, #3
0x5890	0x3A0003  	BRA NZ	L__Led_Test4765
L__Led_Test5722:
0x5892	0xB3CE00  	MOV.B	#224, W0
0x5894	0x984700  	MOV.B	W0, [W14+0]
0x5896	0x370019  	BRA	L__Led_Test4756
L__Led_Test4765:
;GRR3000LManagementPanel.mpas,10019 :: 		4: temp2 := 240;
0x5898	0xE13464  	CP.B	W6, #4
0x589A	0x3A0003  	BRA NZ	L__Led_Test4768
L__Led_Test5723:
0x589C	0xB3CF00  	MOV.B	#240, W0
0x589E	0x984700  	MOV.B	W0, [W14+0]
0x58A0	0x370014  	BRA	L__Led_Test4756
L__Led_Test4768:
;GRR3000LManagementPanel.mpas,10020 :: 		5: temp2 := 248;
0x58A2	0xE13465  	CP.B	W6, #5
0x58A4	0x3A0003  	BRA NZ	L__Led_Test4771
L__Led_Test5724:
0x58A6	0xB3CF80  	MOV.B	#248, W0
0x58A8	0x984700  	MOV.B	W0, [W14+0]
0x58AA	0x37000F  	BRA	L__Led_Test4756
L__Led_Test4771:
;GRR3000LManagementPanel.mpas,10021 :: 		6: temp2 := 252;
0x58AC	0xE13466  	CP.B	W6, #6
0x58AE	0x3A0003  	BRA NZ	L__Led_Test4774
L__Led_Test5725:
0x58B0	0xB3CFC0  	MOV.B	#252, W0
0x58B2	0x984700  	MOV.B	W0, [W14+0]
0x58B4	0x37000A  	BRA	L__Led_Test4756
L__Led_Test4774:
;GRR3000LManagementPanel.mpas,10022 :: 		7: temp2 := 254;
0x58B6	0xE13467  	CP.B	W6, #7
0x58B8	0x3A0003  	BRA NZ	L__Led_Test4777
L__Led_Test5726:
0x58BA	0xB3CFE0  	MOV.B	#254, W0
0x58BC	0x984700  	MOV.B	W0, [W14+0]
0x58BE	0x370005  	BRA	L__Led_Test4756
L__Led_Test4777:
;GRR3000LManagementPanel.mpas,10023 :: 		8: temp2 := 255;
0x58C0	0xE13468  	CP.B	W6, #8
0x58C2	0x3A0003  	BRA NZ	L__Led_Test4780
L__Led_Test5727:
0x58C4	0xB3CFF0  	MOV.B	#255, W0
0x58C6	0x984700  	MOV.B	W0, [W14+0]
0x58C8	0x370000  	BRA	L__Led_Test4756
L__Led_Test4780:
L__Led_Test4756:
;GRR3000LManagementPanel.mpas,10026 :: 		SPI1_Write(Temp2);
0x58CA	0x470060  	ADD	W14, #0, W0
0x58CC	0xFB8510  	ZE	[W0], W10
0x58CE	0x07D646  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,10027 :: 		Pause_ms(25);
0x58D0	0x20019A  	MOV	#25, W10
0x58D2	0x0742E1  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10029 :: 		asm ClrWDT; end;
0x58D4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10031 :: 		HC595_CS2_Pin := 1;
0x58D6	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10032 :: 		Delay_Cyc_Long(5);
0x58D8	0x20005A  	MOV	#5, W10
0x58DA	0x20000B  	MOV	#0, W11
0x58DC	0x072041  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10033 :: 		end;
0x58DE	0xE13468  	CP.B	W6, #8
0x58E0	0x320003  	BRA Z	L__Led_Test4755
L__Led_Test5728:
; Temp1 start address is: 0 (W0)
0x58E2	0x434061  	ADD.B	W6, #1, W0
; Temp1 end address is: 12 (W6)
0x58E4	0x784300  	MOV.B	W0, W6
; Temp1 end address is: 0 (W0)
0x58E6	0x37FFC1  	BRA	L__Led_Test4752
L__Led_Test4755:
;GRR3000LManagementPanel.mpas,10038 :: 		Temp2 := 0;
0x58E8	0xEF2000  	CLR	W0
0x58EA	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,10040 :: 		for temp1 := 1 to 8 do
; Temp1 start address is: 12 (W6)
0x58EC	0xB3C016  	MOV.B	#1, W6
; Temp1 end address is: 12 (W6)
L__Led_Test4782:
;GRR3000LManagementPanel.mpas,10042 :: 		HC595_CS3_Pin := 1;
; Temp1 start address is: 12 (W6)
0x58EE	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10043 :: 		Delay_Cyc_Long(5);
0x58F0	0x20005A  	MOV	#5, W10
0x58F2	0x20000B  	MOV	#0, W11
0x58F4	0x072035  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10044 :: 		HC595_CS3_Pin := 0;
0x58F6	0xA9C2CF  	BCLR	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10045 :: 		Delay_Cyc_Long(5);
0x58F8	0x20005A  	MOV	#5, W10
0x58FA	0x20000B  	MOV	#0, W11
0x58FC	0x072031  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10048 :: 		1: temp2 := 1;
0x58FE	0xE13461  	CP.B	W6, #1
0x5900	0x3A0003  	BRA NZ	L__Led_Test4789
L__Led_Test5729:
0x5902	0xB3C010  	MOV.B	#1, W0
0x5904	0x984700  	MOV.B	W0, [W14+0]
0x5906	0x370023  	BRA	L__Led_Test4786
L__Led_Test4789:
;GRR3000LManagementPanel.mpas,10049 :: 		2: temp2 := 3;
0x5908	0xE13462  	CP.B	W6, #2
0x590A	0x3A0003  	BRA NZ	L__Led_Test4792
L__Led_Test5730:
0x590C	0xB3C030  	MOV.B	#3, W0
0x590E	0x984700  	MOV.B	W0, [W14+0]
0x5910	0x37001E  	BRA	L__Led_Test4786
L__Led_Test4792:
;GRR3000LManagementPanel.mpas,10050 :: 		3: temp2 := 7;
0x5912	0xE13463  	CP.B	W6, #3
0x5914	0x3A0003  	BRA NZ	L__Led_Test4795
L__Led_Test5731:
0x5916	0xB3C070  	MOV.B	#7, W0
0x5918	0x984700  	MOV.B	W0, [W14+0]
0x591A	0x370019  	BRA	L__Led_Test4786
L__Led_Test4795:
;GRR3000LManagementPanel.mpas,10051 :: 		4: temp2 := 15;
0x591C	0xE13464  	CP.B	W6, #4
0x591E	0x3A0003  	BRA NZ	L__Led_Test4798
L__Led_Test5732:
0x5920	0xB3C0F0  	MOV.B	#15, W0
0x5922	0x984700  	MOV.B	W0, [W14+0]
0x5924	0x370014  	BRA	L__Led_Test4786
L__Led_Test4798:
;GRR3000LManagementPanel.mpas,10052 :: 		5: temp2 := 31;
0x5926	0xE13465  	CP.B	W6, #5
0x5928	0x3A0003  	BRA NZ	L__Led_Test4801
L__Led_Test5733:
0x592A	0xB3C1F0  	MOV.B	#31, W0
0x592C	0x984700  	MOV.B	W0, [W14+0]
0x592E	0x37000F  	BRA	L__Led_Test4786
L__Led_Test4801:
;GRR3000LManagementPanel.mpas,10053 :: 		6: temp2 := 63;
0x5930	0xE13466  	CP.B	W6, #6
0x5932	0x3A0003  	BRA NZ	L__Led_Test4804
L__Led_Test5734:
0x5934	0xB3C3F0  	MOV.B	#63, W0
0x5936	0x984700  	MOV.B	W0, [W14+0]
0x5938	0x37000A  	BRA	L__Led_Test4786
L__Led_Test4804:
;GRR3000LManagementPanel.mpas,10054 :: 		7: temp2 := 127;
0x593A	0xE13467  	CP.B	W6, #7
0x593C	0x3A0003  	BRA NZ	L__Led_Test4807
L__Led_Test5735:
0x593E	0xB3C7F0  	MOV.B	#127, W0
0x5940	0x984700  	MOV.B	W0, [W14+0]
0x5942	0x370005  	BRA	L__Led_Test4786
L__Led_Test4807:
;GRR3000LManagementPanel.mpas,10055 :: 		8: temp2 := 255;
0x5944	0xE13468  	CP.B	W6, #8
0x5946	0x3A0003  	BRA NZ	L__Led_Test4810
L__Led_Test5736:
0x5948	0xB3CFF0  	MOV.B	#255, W0
0x594A	0x984700  	MOV.B	W0, [W14+0]
0x594C	0x370000  	BRA	L__Led_Test4786
L__Led_Test4810:
L__Led_Test4786:
;GRR3000LManagementPanel.mpas,10058 :: 		SPI1_Write(Temp2);
0x594E	0x470060  	ADD	W14, #0, W0
0x5950	0xFB8510  	ZE	[W0], W10
0x5952	0x07D604  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,10059 :: 		Pause_ms(25);
0x5954	0x20019A  	MOV	#25, W10
0x5956	0x07429F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10061 :: 		asm ClrWDT; end;
0x5958	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10063 :: 		HC595_CS3_Pin := 1;
0x595A	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10064 :: 		Delay_Cyc_Long(5);
0x595C	0x20005A  	MOV	#5, W10
0x595E	0x20000B  	MOV	#0, W11
0x5960	0x071FFF  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10065 :: 		end;
0x5962	0xE13468  	CP.B	W6, #8
0x5964	0x320003  	BRA Z	L__Led_Test4785
L__Led_Test5737:
; Temp1 start address is: 0 (W0)
0x5966	0x434061  	ADD.B	W6, #1, W0
; Temp1 end address is: 12 (W6)
0x5968	0x784300  	MOV.B	W0, W6
; Temp1 end address is: 0 (W0)
0x596A	0x37FFC1  	BRA	L__Led_Test4782
L__Led_Test4785:
;GRR3000LManagementPanel.mpas,10068 :: 		Pause_ms(250);
0x596C	0x200FAA  	MOV	#250, W10
0x596E	0x074293  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10069 :: 		asm ClrWDT; end;
0x5970	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10071 :: 		Pause_ms(250);
0x5972	0x200FAA  	MOV	#250, W10
0x5974	0x074290  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10072 :: 		asm ClrWDT; end;
0x5976	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10074 :: 		Pause_ms(250);
0x5978	0x200FAA  	MOV	#250, W10
0x597A	0x07428D  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10075 :: 		asm ClrWDT; end;
0x597C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10077 :: 		Pause_ms(250);
0x597E	0x200FAA  	MOV	#250, W10
0x5980	0x07428A  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10079 :: 		asm ClrWDT; end;
0x5982	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,10082 :: 		Pause_ms(250);
0x5984	0x200FAA  	MOV	#250, W10
0x5986	0x074287  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,10084 :: 		HC595_CS3_Pin := 1;
0x5988	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10085 :: 		Delay_Cyc_Long(5);
0x598A	0x20005A  	MOV	#5, W10
0x598C	0x20000B  	MOV	#0, W11
0x598E	0x071FE8  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10086 :: 		HC595_CS3_Pin := 0;
0x5990	0xA9C2CF  	BCLR	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10087 :: 		Delay_Cyc_Long(5);
0x5992	0x20005A  	MOV	#5, W10
0x5994	0x20000B  	MOV	#0, W11
0x5996	0x071FE4  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10089 :: 		SPI1_Write(0x00);
0x5998	0xEF2014  	CLR	W10
0x599A	0x07D5E0  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,10091 :: 		HC595_CS3_Pin := 1;
0x599C	0xA8C2CF  	BSET	RC14_bit, BitPos(RC14_bit+0)
;GRR3000LManagementPanel.mpas,10092 :: 		Delay_Cyc_Long(5);
0x599E	0x20005A  	MOV	#5, W10
0x59A0	0x20000B  	MOV	#0, W11
0x59A2	0x071FDE  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10097 :: 		HC595_CS2_Pin := 1;
0x59A4	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10098 :: 		Delay_Cyc_Long(5);
0x59A6	0x20005A  	MOV	#5, W10
0x59A8	0x20000B  	MOV	#0, W11
0x59AA	0x071FDA  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10099 :: 		HC595_CS2_Pin := 0;
0x59AC	0xA922D5  	BCLR	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10100 :: 		Delay_Cyc_Long(5);
0x59AE	0x20005A  	MOV	#5, W10
0x59B0	0x20000B  	MOV	#0, W11
0x59B2	0x071FD6  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10102 :: 		SPI1_Write(0x00);
0x59B4	0xEF2014  	CLR	W10
0x59B6	0x07D5D2  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,10104 :: 		HC595_CS2_Pin := 1;
0x59B8	0xA822D5  	BSET	RD9_bit, BitPos(RD9_bit+0)
;GRR3000LManagementPanel.mpas,10105 :: 		Delay_Cyc_Long(5);
0x59BA	0x20005A  	MOV	#5, W10
0x59BC	0x20000B  	MOV	#0, W11
0x59BE	0x071FD0  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10111 :: 		HC595_CS1_Pin := 1;
0x59C0	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,10112 :: 		Delay_Cyc_Long(5);
0x59C2	0x20005A  	MOV	#5, W10
0x59C4	0x20000B  	MOV	#0, W11
0x59C6	0x071FCC  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10113 :: 		HC595_CS1_Pin := 0;
0x59C8	0xA942D5  	BCLR	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,10114 :: 		Delay_Cyc_Long(5);
0x59CA	0x20005A  	MOV	#5, W10
0x59CC	0x20000B  	MOV	#0, W11
0x59CE	0x071FC8  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10116 :: 		SPI1_Write(0x00);
0x59D0	0xEF2014  	CLR	W10
0x59D2	0x07D5C4  	RCALL	_SPI1_Write
;GRR3000LManagementPanel.mpas,10118 :: 		HC595_CS1_Pin := 1;
0x59D4	0xA842D5  	BSET	RD10_bit, BitPos(RD10_bit+0)
;GRR3000LManagementPanel.mpas,10119 :: 		Delay_Cyc_Long(5);
0x59D6	0x20005A  	MOV	#5, W10
0x59D8	0x20000B  	MOV	#0, W11
0x59DA	0x071FC2  	RCALL	_Delay_Cyc_Long
;GRR3000LManagementPanel.mpas,10122 :: 		end;
L_end_Led_Test:
0x59DC	0x7805CF  	POP	W11
0x59DE	0x78054F  	POP	W10
0x59E0	0xFA8000  	ULNK
0x59E2	0x060000  	RETURN
; end of _Led_Test
_Run_Timers:
;GRR3000LManagementPanel.mpas,1825 :: 		begin
;GRR3000LManagementPanel.mpas,1828 :: 		T3CON := %1000000000010000; //start TMR3
0xE06C	0x280100  	MOV	#32784, W0
0xE06E	0xB7A112  	MOV	WREG, T3CON
;GRR3000LManagementPanel.mpas,1829 :: 		T4CON := 0x8000; //start TMR4
0xE070	0x280000  	MOV	#32768, W0
0xE072	0xB7A11E  	MOV	WREG, T4CON
;GRR3000LManagementPanel.mpas,1833 :: 		end;
L_end_Run_Timers:
0xE074	0x060000  	RETURN
; end of _Run_Timers
_Data_EepromRead:
;GRR3000LManagementPanel.mpas,9236 :: 		begin
;GRR3000LManagementPanel.mpas,9238 :: 		HucreSayisi         := EEPROM_Read(EE_HucreSayisiEeAddr);
0xE9B0	0x781F8A  	PUSH	W10
0xE9B2	0x781F8B  	PUSH	W11
0xE9B4	0x2F004A  	MOV	#61444, W10
0xE9B6	0x2007FB  	MOV	#127, W11
0xE9B8	0x079D53  	RCALL	_EEPROM_Read
0xE9BA	0x889FF0  	MOV	W0, _HucreSayisi
;GRR3000LManagementPanel.mpas,9239 :: 		Pause_ms(Pause);
0xE9BC	0x20019A  	MOV	#25, W10
0xE9BE	0x07FA6B  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9240 :: 		NomHucreGerilim     := EEPROM_Read(EE_NomHucreGerilimEeAddr);
0xE9C0	0x2F006A  	MOV	#61446, W10
0xE9C2	0x2007FB  	MOV	#127, W11
0xE9C4	0x079D4D  	RCALL	_EEPROM_Read
0xE9C6	0x889FD0  	MOV	W0, _NomHucreGerilim
;GRR3000LManagementPanel.mpas,9241 :: 		Pause_ms(Pause);
0xE9C8	0x20019A  	MOV	#25, W10
0xE9CA	0x07FA65  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9242 :: 		F_ChargePercentLo   := EEPROM_Read(EE_F_ChargePercentLoEeAddr);
0xE9CC	0x2F008A  	MOV	#61448, W10
0xE9CE	0x2007FB  	MOV	#127, W11
0xE9D0	0x079D47  	RCALL	_EEPROM_Read
0xE9D2	0x889990  	MOV	W0, _F_ChargePercentLo
;GRR3000LManagementPanel.mpas,9243 :: 		Pause_ms(Pause);
0xE9D4	0x20019A  	MOV	#25, W10
0xE9D6	0x07FA5F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9244 :: 		F_ChargePercentHi   := EEPROM_Read(EE_F_ChargePercentHiEeAddr);
0xE9D8	0x2F00AA  	MOV	#61450, W10
0xE9DA	0x2007FB  	MOV	#127, W11
0xE9DC	0x079D41  	RCALL	_EEPROM_Read
0xE9DE	0x889710  	MOV	W0, _F_ChargePercentHi
;GRR3000LManagementPanel.mpas,9245 :: 		Pause_ms(Pause);
0xE9E0	0x20019A  	MOV	#25, W10
0xE9E2	0x07FA59  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9246 :: 		B_ChargePercentLo   := EEPROM_Read(EE_B_ChargePercentLoEeAddr);
0xE9E4	0x2F00CA  	MOV	#61452, W10
0xE9E6	0x2007FB  	MOV	#127, W11
0xE9E8	0x079D3B  	RCALL	_EEPROM_Read
0xE9EA	0x889750  	MOV	W0, _B_ChargePercentLo
;GRR3000LManagementPanel.mpas,9247 :: 		Pause_ms(Pause);
0xE9EC	0x20019A  	MOV	#25, W10
0xE9EE	0x07FA53  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9249 :: 		NominalGerilim := ((NomHucreGerilim * HucreSayisi) div 10);
0xE9F0	0x809FD1  	MOV	_NomHucreGerilim, W1
0xE9F2	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xE9F4	0xB80A10  	MUL.UU	W1, [W0], W4
0xE9F6	0x2000A2  	MOV	#10, W2
0xE9F8	0x090011  	REPEAT	#17
0xE9FA	0xD88202  	DIV.U	W4, W2
0xE9FC	0x889760  	MOV	W0, _NominalGerilim
;GRR3000LManagementPanel.mpas,9251 :: 		asm ClrWDT; end;
0xE9FE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9253 :: 		B_ChargePercentHi   := EEPROM_Read(EE_B_ChargePercentHiEeAddr);
0xEA00	0x2F00EA  	MOV	#61454, W10
0xEA02	0x2007FB  	MOV	#127, W11
0xEA04	0x079D2D  	RCALL	_EEPROM_Read
0xEA06	0x8897A0  	MOV	W0, _B_ChargePercentHi
;GRR3000LManagementPanel.mpas,9254 :: 		Pause_ms(Pause);
0xEA08	0x20019A  	MOV	#25, W10
0xEA0A	0x07FA45  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9255 :: 		RedresorAkim        := EEPROM_Read(EE_RedresorAkimEeAddr);
0xEA0C	0x2F010A  	MOV	#61456, W10
0xEA0E	0x2007FB  	MOV	#127, W11
0xEA10	0x079D27  	RCALL	_EEPROM_Read
0xEA12	0x889780  	MOV	W0, _RedresorAkim
;GRR3000LManagementPanel.mpas,9256 :: 		Pause_ms(Pause);
0xEA14	0x20019A  	MOV	#25, W10
0xEA16	0x07FA3F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9257 :: 		LanguageBit         := EEPROM_Read(EE_LanguageBitEeAddr);
0xEA18	0x2F04CA  	MOV	#61516, W10
0xEA1A	0x2007FB  	MOV	#127, W11
0xEA1C	0x079D21  	RCALL	_EEPROM_Read
0xEA1E	0x212E11  	MOV	#lo_addr(_LanguageBit), W1
0xEA20	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9259 :: 		Pause_ms(Pause);
0xEA22	0x20019A  	MOV	#25, W10
0xEA24	0x07FA38  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9261 :: 		asm ClrWDT; end;
0xEA26	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9263 :: 		Dropper_OutStatus   := EEPROM_Read(EE_DropperOutStatusEeAddr);
0xEA28	0x2F038A  	MOV	#61496, W10
0xEA2A	0x2007FB  	MOV	#127, W11
0xEA2C	0x079D19  	RCALL	_EEPROM_Read
0xEA2E	0x212DC1  	MOV	#lo_addr(_Dropper_OutStatus), W1
0xEA30	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9264 :: 		Pause_ms(Pause);
0xEA32	0x20019A  	MOV	#25, W10
0xEA34	0x07FA30  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9265 :: 		OperationMode       := EEPROM_Read(EE_OperationModeEeAddr);
0xEA36	0x2F054A  	MOV	#61524, W10
0xEA38	0x2007FB  	MOV	#127, W11
0xEA3A	0x079D12  	RCALL	_EEPROM_Read
0xEA3C	0x212D71  	MOV	#lo_addr(_OperationMode), W1
0xEA3E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9266 :: 		Pause_ms(Pause);
0xEA40	0x20019A  	MOV	#25, W10
0xEA42	0x07FA29  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9267 :: 		MasterSlave         := EEPROM_Read(EE_MasterSlaveEeAddr);
0xEA44	0x2F056A  	MOV	#61526, W10
0xEA46	0x2007FB  	MOV	#127, W11
0xEA48	0x079D0B  	RCALL	_EEPROM_Read
0xEA4A	0x8896F0  	MOV	W0, _MasterSlave
;GRR3000LManagementPanel.mpas,9268 :: 		Pause_ms(Pause);
0xEA4C	0x20019A  	MOV	#25, W10
0xEA4E	0x07FA23  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9270 :: 		asm ClrWDT; end;
0xEA50	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9272 :: 		ACMaxVoltSet        := EEPROM_Read(EE_ACMaxVoltSetEeAddr);
0xEA52	0x2F03AA  	MOV	#61498, W10
0xEA54	0x2007FB  	MOV	#127, W11
0xEA56	0x079D04  	RCALL	_EEPROM_Read
0xEA58	0x8896C0  	MOV	W0, _ACMaxVoltSet
;GRR3000LManagementPanel.mpas,9273 :: 		Pause_ms(Pause);
0xEA5A	0x20019A  	MOV	#25, W10
0xEA5C	0x07FA1C  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9274 :: 		ACMinVoltSet        := EEPROM_Read(EE_ACMinVoltSetEeAddr);
0xEA5E	0x2F03CA  	MOV	#61500, W10
0xEA60	0x2007FB  	MOV	#127, W11
0xEA62	0x079CFE  	RCALL	_EEPROM_Read
0xEA64	0x8896D0  	MOV	W0, _ACMinVoltSet
;GRR3000LManagementPanel.mpas,9275 :: 		Pause_ms(Pause);
0xEA66	0x20019A  	MOV	#25, W10
0xEA68	0x07FA16  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9278 :: 		Leakage_Pos_Set     := EEPROM_Read(EE_LeakagePosEeAddr);
0xEA6A	0x2F04EA  	MOV	#61518, W10
0xEA6C	0x2007FB  	MOV	#127, W11
0xEA6E	0x079CF8  	RCALL	_EEPROM_Read
0xEA70	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0xEA72	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9279 :: 		Pause_ms(Pause);
0xEA74	0x20019A  	MOV	#25, W10
0xEA76	0x07FA0F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9280 :: 		Leakage_Neg_Set     := EEPROM_Read(EE_LeakageNegEeAddr);
0xEA78	0x2F050A  	MOV	#61520, W10
0xEA7A	0x2007FB  	MOV	#127, W11
0xEA7C	0x079CF1  	RCALL	_EEPROM_Read
0xEA7E	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0xEA80	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9281 :: 		Pause_ms(Pause);
0xEA82	0x20019A  	MOV	#25, W10
0xEA84	0x07FA08  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9282 :: 		ModbusID            := EEPROM_Read(EE_ModbusIDEeAddr);
0xEA86	0x2F048A  	MOV	#61512, W10
0xEA88	0x2007FB  	MOV	#127, W11
0xEA8A	0x079CEA  	RCALL	_EEPROM_Read
0xEA8C	0x212E01  	MOV	#lo_addr(_ModbusID), W1
0xEA8E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9283 :: 		Modbus_Adress       := ModbusID;
0xEA90	0x212DD1  	MOV	#lo_addr(_Modbus_Adress), W1
0xEA92	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9284 :: 		Pause_ms(Pause);
0xEA94	0x20019A  	MOV	#25, W10
0xEA96	0x07F9FF  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9285 :: 		ModbusBaudRate      := EEPROM_Read(EE_ModbusBaudRate);
0xEA98	0x2F04AA  	MOV	#61514, W10
0xEA9A	0x2007FB  	MOV	#127, W11
0xEA9C	0x079CE1  	RCALL	_EEPROM_Read
0xEA9E	0x2158E1  	MOV	#lo_addr(_ModbusBaudRate), W1
0xEAA0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9287 :: 		Pause_ms(Pause);
0xEAA2	0x20019A  	MOV	#25, W10
0xEAA4	0x07F9F8  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9288 :: 		asm ClrWDT; end;
0xEAA6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9292 :: 		TempFanOffSet       := EEPROM_Read(EE_TempFanOffSetEeAddr);
0xEAA8	0x2F044A  	MOV	#61508, W10
0xEAAA	0x2007FB  	MOV	#127, W11
0xEAAC	0x079CD9  	RCALL	_EEPROM_Read
0xEAAE	0x212101  	MOV	#lo_addr(_TempFanOffSet), W1
0xEAB0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9293 :: 		Pause_ms(Pause);
0xEAB2	0x20019A  	MOV	#25, W10
0xEAB4	0x07F9F0  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9294 :: 		TempFanOnSet        := EEPROM_Read(EE_TempFanOnSetEeAddr);
0xEAB6	0x2F042A  	MOV	#61506, W10
0xEAB8	0x2007FB  	MOV	#127, W11
0xEABA	0x079CD2  	RCALL	_EEPROM_Read
0xEABC	0x212271  	MOV	#lo_addr(_TempFanOnSet), W1
0xEABE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9295 :: 		Pause_ms(Pause);
0xEAC0	0x20019A  	MOV	#25, W10
0xEAC2	0x07F9E9  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9297 :: 		asm ClrWDT; end;
0xEAC4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9299 :: 		TempAlarmSet        := EEPROM_Read(EE_TempAlarmSetEeAddr);
0xEAC6	0x2F040A  	MOV	#61504, W10
0xEAC8	0x2007FB  	MOV	#127, W11
0xEACA	0x079CCA  	RCALL	_EEPROM_Read
0xEACC	0x212281  	MOV	#lo_addr(_TempAlarmSet), W1
0xEACE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9300 :: 		Pause_ms(Pause);
0xEAD0	0x20019A  	MOV	#25, W10
0xEAD2	0x07F9E1  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9301 :: 		ChargeMode          := EEPROM_Read(EE_ChargeModeEeAddr);
0xEAD4	0x2F01CA  	MOV	#61468, W10
0xEAD6	0x2007FB  	MOV	#127, W11
0xEAD8	0x079CC3  	RCALL	_EEPROM_Read
0xEADA	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0xEADC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9302 :: 		Pause_ms(Pause);
0xEADE	0x20019A  	MOV	#25, W10
0xEAE0	0x07F9DA  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9303 :: 		DCOutVoltSet        := EEPROM_Read(EE_DCOutVoltSetEeAddr);
0xEAE2	0x2F02CA  	MOV	#61484, W10
0xEAE4	0x2007FB  	MOV	#127, W11
0xEAE6	0x079CBC  	RCALL	_EEPROM_Read
0xEAE8	0x889910  	MOV	W0, _DCOutVoltSet
;GRR3000LManagementPanel.mpas,9304 :: 		Pause_ms(Pause);
0xEAEA	0x20019A  	MOV	#25, W10
0xEAEC	0x07F9D4  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9305 :: 		DCOutAmpsSet        := EEPROM_Read(EE_DcOutAmpsSetEeAddr);
0xEAEE	0x2F02EA  	MOV	#61486, W10
0xEAF0	0x2007FB  	MOV	#127, W11
0xEAF2	0x079CB6  	RCALL	_EEPROM_Read
0xEAF4	0x889770  	MOV	W0, _DcOutAmpsSet
;GRR3000LManagementPanel.mpas,9306 :: 		Pause_ms(Pause);
0xEAF6	0x20019A  	MOV	#25, W10
0xEAF8	0x07F9CE  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9307 :: 		MaxVoltSet          := EEPROM_Read(EE_MaxVoltSetEeAddr);
0xEAFA	0x2F030A  	MOV	#61488, W10
0xEAFC	0x2007FB  	MOV	#127, W11
0xEAFE	0x079CB0  	RCALL	_EEPROM_Read
0xEB00	0x889790  	MOV	W0, _MaxvoltSet
;GRR3000LManagementPanel.mpas,9308 :: 		Pause_ms(Pause);
0xEB02	0x20019A  	MOV	#25, W10
0xEB04	0x07F9C8  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9309 :: 		MinVoltSet          := EEPROM_Read(EE_MinVoltSetEeAddr);
0xEB06	0x2F032A  	MOV	#61490, W10
0xEB08	0x2007FB  	MOV	#127, W11
0xEB0A	0x079CAA  	RCALL	_EEPROM_Read
0xEB0C	0x8897B0  	MOV	W0, _MinVoltSet
;GRR3000LManagementPanel.mpas,9311 :: 		Pause_ms(Pause);
0xEB0E	0x20019A  	MOV	#25, W10
0xEB10	0x07F9C2  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9312 :: 		asm ClrWDT; end;
0xEB12	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9316 :: 		BatteryAh           := EEPROM_Read(EE_BatteryAhEeAddr);
0xEB14	0x2F012A  	MOV	#61458, W10
0xEB16	0x2007FB  	MOV	#127, W11
0xEB18	0x079CA3  	RCALL	_EEPROM_Read
0xEB1A	0x88AC60  	MOV	W0, _BatteryAh
;GRR3000LManagementPanel.mpas,9317 :: 		Pause_ms(Pause);
0xEB1C	0x20019A  	MOV	#25, W10
0xEB1E	0x07F9BB  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9318 :: 		BoostChargeLimit    := EEPROM_Read(EE_BoostChargeLimitEeAddr);
0xEB20	0x2F028A  	MOV	#61480, W10
0xEB22	0x2007FB  	MOV	#127, W11
0xEB24	0x079C9D  	RCALL	_EEPROM_Read
0xEB26	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,9319 :: 		Pause_ms(Pause);
0xEB28	0x20019A  	MOV	#25, W10
0xEB2A	0x07F9B5  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9320 :: 		FloatChargeLimit    := EEPROM_Read(EE_FloatChargeLimitEeAddr);
0xEB2C	0x2F02AA  	MOV	#61482, W10
0xEB2E	0x2007FB  	MOV	#127, W11
0xEB30	0x079C97  	RCALL	_EEPROM_Read
0xEB32	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,9321 :: 		Pause_ms(Pause);
0xEB34	0x20019A  	MOV	#25, W10
0xEB36	0x07F9AF  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9322 :: 		DeepDischargeVolt   := EEPROM_Read(EE_DeepDischargeVoltEeAddr);
0xEB38	0x2F024A  	MOV	#61476, W10
0xEB3A	0x2007FB  	MOV	#127, W11
0xEB3C	0x079C91  	RCALL	_EEPROM_Read
0xEB3E	0x88AC90  	MOV	W0, _DeepDischargeVolt
;GRR3000LManagementPanel.mpas,9323 :: 		Pause_ms(Pause);
0xEB40	0x20019A  	MOV	#25, W10
0xEB42	0x07F9A9  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9324 :: 		BatteryAmpsSet      := EEPROM_Read(EE_BatteryAmpsBoostEeAddr);
0xEB44	0x2F014A  	MOV	#61460, W10
0xEB46	0x2007FB  	MOV	#127, W11
0xEB48	0x079C8B  	RCALL	_EEPROM_Read
0xEB4A	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,9326 :: 		Pause_ms(Pause);
0xEB4C	0x20019A  	MOV	#25, W10
0xEB4E	0x07F9A3  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9327 :: 		asm ClrWDT; end;
0xEB50	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9329 :: 		BoostChargeVoltage  := EEPROM_Read(EE_BoostChargeVoltEeAddr);
0xEB52	0x2F01EA  	MOV	#61470, W10
0xEB54	0x2007FB  	MOV	#127, W11
0xEB56	0x079C84  	RCALL	_EEPROM_Read
0xEB58	0x88AC00  	MOV	W0, _BoostChargeVoltage
;GRR3000LManagementPanel.mpas,9330 :: 		Pause_ms(Pause);
0xEB5A	0x20019A  	MOV	#25, W10
0xEB5C	0x07F99C  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9331 :: 		FloatChargeVoltage  := EEPROM_Read(EE_FloatChargeVoltEeAddr);
0xEB5E	0x2F020A  	MOV	#61472, W10
0xEB60	0x2007FB  	MOV	#127, W11
0xEB62	0x079C7E  	RCALL	_EEPROM_Read
0xEB64	0x88AC20  	MOV	W0, _FloatChargeVoltage
;GRR3000LManagementPanel.mpas,9332 :: 		Pause_ms(Pause);
0xEB66	0x20019A  	MOV	#25, W10
0xEB68	0x07F996  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9333 :: 		BoostChargeTimeSet  := EEPROM_Read(EE_BoostChargeTimeEeAddr);
0xEB6A	0x2F022A  	MOV	#61474, W10
0xEB6C	0x2007FB  	MOV	#127, W11
0xEB6E	0x079C78  	RCALL	_EEPROM_Read
0xEB70	0x88AC50  	MOV	W0, _BoostChargeTimeSet
;GRR3000LManagementPanel.mpas,9334 :: 		Pause_ms(Pause);
0xEB72	0x20019A  	MOV	#25, W10
0xEB74	0x07F990  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9335 :: 		BoostChargeTime     := BoostChargeTimeSet;
0xEB76	0x80AC50  	MOV	_BoostChargeTimeSet, W0
0xEB78	0xEB0080  	CLR	W1
0xEB7A	0x88AC30  	MOV	W0, _BoostChargeTime
0xEB7C	0x88AC41  	MOV	W1, _BoostChargeTime+2
;GRR3000LManagementPanel.mpas,9336 :: 		DeepDischargeVolt   := EEPROM_Read(EE_DeepDischargeVoltEeAddr);
0xEB7E	0x2F024A  	MOV	#61476, W10
0xEB80	0x2007FB  	MOV	#127, W11
0xEB82	0x079C6E  	RCALL	_EEPROM_Read
0xEB84	0x88AC90  	MOV	W0, _DeepDischargeVolt
;GRR3000LManagementPanel.mpas,9337 :: 		Pause_ms(Pause);
0xEB86	0x20019A  	MOV	#25, W10
0xEB88	0x07F986  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9338 :: 		AutoBFMode          := EEPROM_Read(EE_AutoBFModeEeAddr);
0xEB8A	0x2F026A  	MOV	#61478, W10
0xEB8C	0x2007FB  	MOV	#127, W11
0xEB8E	0x079C68  	RCALL	_EEPROM_Read
0xEB90	0x215961  	MOV	#lo_addr(_AutoBFMode), W1
0xEB92	0xA00011  	BSET	[W1], BitPos(_AutoBFMode+0)
0xEB94	0xAE0000  	BTSS	W0, #0
0xEB96	0xA10011  	BCLR	[W1], BitPos(_AutoBFMode+0)
;GRR3000LManagementPanel.mpas,9339 :: 		Pause_ms(Pause);
0xEB98	0x20019A  	MOV	#25, W10
0xEB9A	0x07F97D  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9341 :: 		asm ClrWDT; end;
0xEB9C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9343 :: 		BoostChargeLimit    := EEPROM_Read(EE_BoostChargeLimitEeAddr);
0xEB9E	0x2F028A  	MOV	#61480, W10
0xEBA0	0x2007FB  	MOV	#127, W11
0xEBA2	0x079C5E  	RCALL	_EEPROM_Read
0xEBA4	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,9344 :: 		Pause_ms(Pause);
0xEBA6	0x20019A  	MOV	#25, W10
0xEBA8	0x07F976  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9345 :: 		FloatChargeLimit    := EEPROM_Read(EE_FloatChargeLimitEeAddr);
0xEBAA	0x2F02AA  	MOV	#61482, W10
0xEBAC	0x2007FB  	MOV	#127, W11
0xEBAE	0x079C58  	RCALL	_EEPROM_Read
0xEBB0	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,9346 :: 		Pause_ms(Pause);
0xEBB2	0x20019A  	MOV	#25, W10
0xEBB4	0x07F970  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9347 :: 		dV_LoadVolt         := EEPROM_Read(EE_dV_LoadVoltEeAddr);
0xEBB6	0x2F052A  	MOV	#61522, W10
0xEBB8	0x2007FB  	MOV	#127, W11
0xEBBA	0x079C52  	RCALL	_EEPROM_Read
0xEBBC	0xEB0080  	CLR	W1
0xEBBE	0x88AD00  	MOV	W0, _dV_LoadVolt
0xEBC0	0x88AD11  	MOV	W1, _dV_LoadVolt+2
;GRR3000LManagementPanel.mpas,9348 :: 		dV_LoadVolt         := dV_LoadVolt - 1000;
0xEBC2	0x203E81  	MOV	#1000, W1
0xEBC4	0x200002  	MOV	#0, W2
0xEBC6	0x215A00  	MOV	#lo_addr(_dV_LoadVolt), W0
0xEBC8	0x109810  	SUBR	W1, [W0], [W0++]
0xEBCA	0x191010  	SUBBR	W2, [W0], [W0--]
;GRR3000LManagementPanel.mpas,9353 :: 		diff_leak_pos := EEPROM_Read(EE_Data_Diff_leak_pos);
0xEBCC	0x2F058A  	MOV	#61528, W10
0xEBCE	0x2007FB  	MOV	#127, W11
0xEBD0	0x079C47  	RCALL	_EEPROM_Read
0xEBD2	0x2159F1  	MOV	#lo_addr(_diff_leak_pos), W1
0xEBD4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9354 :: 		Pause_ms(Pause);
0xEBD6	0x20019A  	MOV	#25, W10
0xEBD8	0x07F95E  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9355 :: 		diff_leak_neg := EEPROM_Read(EE_Data_Diff_leak_neg);
0xEBDA	0x2F05AA  	MOV	#61530, W10
0xEBDC	0x2007FB  	MOV	#127, W11
0xEBDE	0x079C40  	RCALL	_EEPROM_Read
0xEBE0	0x215A41  	MOV	#lo_addr(_diff_leak_neg), W1
0xEBE2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9356 :: 		Pause_ms(Pause);
0xEBE4	0x20019A  	MOV	#25, W10
0xEBE6	0x07F957  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9358 :: 		asm ClrWDT; end;
0xEBE8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9360 :: 		Confirm_AcMenuBit       := EEPROM_Read(EE_ConfirmAcMenuEeAddr);
0xEBEA	0x2F05EA  	MOV	#61534, W10
0xEBEC	0x2007FB  	MOV	#127, W11
0xEBEE	0x079C38  	RCALL	_EEPROM_Read
0xEBF0	0x212A41  	MOV	#lo_addr(_Confirm_AcMenuBit), W1
0xEBF2	0xA09011  	BSET	[W1], BitPos(_Confirm_AcMenuBit+0)
0xEBF4	0xAE0000  	BTSS	W0, #0
0xEBF6	0xA19011  	BCLR	[W1], BitPos(_Confirm_AcMenuBit+0)
;GRR3000LManagementPanel.mpas,9361 :: 		Pause_ms(Pause);
0xEBF8	0x20019A  	MOV	#25, W10
0xEBFA	0x07F94D  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9363 :: 		Confirm_BattMenuBit     := EEPROM_Read(EE_ConfirmBattMenuEeAddr);
0xEBFC	0x2F062A  	MOV	#61538, W10
0xEBFE	0x2007FB  	MOV	#127, W11
0xEC00	0x079C2F  	RCALL	_EEPROM_Read
0xEC02	0x212A41  	MOV	#lo_addr(_Confirm_BattMenuBit), W1
0xEC04	0xA02011  	BSET	[W1], BitPos(_Confirm_BattMenuBit+0)
0xEC06	0xAE0000  	BTSS	W0, #0
0xEC08	0xA12011  	BCLR	[W1], BitPos(_Confirm_BattMenuBit+0)
;GRR3000LManagementPanel.mpas,9364 :: 		Pause_ms(Pause);
0xEC0A	0x20019A  	MOV	#25, W10
0xEC0C	0x07F944  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9366 :: 		Confirm_ClockMenuBit    := EEPROM_Read(EE_ConfirmClockMenuEeAddr);
0xEC0E	0x2F06AA  	MOV	#61546, W10
0xEC10	0x2007FB  	MOV	#127, W11
0xEC12	0x079C26  	RCALL	_EEPROM_Read
0xEC14	0x212A41  	MOV	#lo_addr(_Confirm_ClockMenuBit), W1
0xEC16	0xA05011  	BSET	[W1], BitPos(_Confirm_ClockMenuBit+0)
0xEC18	0xAE0000  	BTSS	W0, #0
0xEC1A	0xA15011  	BCLR	[W1], BitPos(_Confirm_ClockMenuBit+0)
;GRR3000LManagementPanel.mpas,9367 :: 		Pause_ms(Pause);
0xEC1C	0x20019A  	MOV	#25, W10
0xEC1E	0x07F93B  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9369 :: 		Confirm_DcMenuBit       := EEPROM_Read(EE_ConfirmDcMenuEeAddr);
0xEC20	0x2F060A  	MOV	#61536, W10
0xEC22	0x2007FB  	MOV	#127, W11
0xEC24	0x079C1D  	RCALL	_EEPROM_Read
0xEC26	0x212A41  	MOV	#lo_addr(_Confirm_DcMenuBit), W1
0xEC28	0xA08011  	BSET	[W1], BitPos(_Confirm_DcMenuBit+0)
0xEC2A	0xAE0000  	BTSS	W0, #0
0xEC2C	0xA18011  	BCLR	[W1], BitPos(_Confirm_DcMenuBit+0)
;GRR3000LManagementPanel.mpas,9370 :: 		Pause_ms(Pause);
0xEC2E	0x20019A  	MOV	#25, W10
0xEC30	0x07F932  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9375 :: 		asm ClrWDT; end;
0xEC32	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9377 :: 		Confirm_LeakaMenuBit    := EEPROM_Read(EE_ConfirmLeakMenuEeAddr);
0xEC34	0x2F066A  	MOV	#61542, W10
0xEC36	0x2007FB  	MOV	#127, W11
0xEC38	0x079C13  	RCALL	_EEPROM_Read
0xEC3A	0x212A41  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W1
0xEC3C	0xA01011  	BSET	[W1], BitPos(_Confirm_LeakaMenuBit+0)
0xEC3E	0xAE0000  	BTSS	W0, #0
0xEC40	0xA11011  	BCLR	[W1], BitPos(_Confirm_LeakaMenuBit+0)
;GRR3000LManagementPanel.mpas,9378 :: 		Pause_ms(Pause);
0xEC42	0x20019A  	MOV	#25, W10
0xEC44	0x07F928  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9380 :: 		Confirm_ModbusMenuBit   := EEPROM_Read(EE_ConfirmModbusMenuEeAddr);
0xEC46	0x2F06CA  	MOV	#61548, W10
0xEC48	0x2007FB  	MOV	#127, W11
0xEC4A	0x079C0A  	RCALL	_EEPROM_Read
0xEC4C	0x212A41  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W1
0xEC4E	0xA04011  	BSET	[W1], BitPos(_Confirm_ModbusMenuBit+0)
0xEC50	0xAE0000  	BTSS	W0, #0
0xEC52	0xA14011  	BCLR	[W1], BitPos(_Confirm_ModbusMenuBit+0)
;GRR3000LManagementPanel.mpas,9381 :: 		Pause_ms(Pause);
0xEC54	0x20019A  	MOV	#25, W10
0xEC56	0x07F91F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9383 :: 		Confirm_OperaMenuBit    := EEPROM_Read(EE_ConfirmOperaMenuEeAddr);
0xEC58	0x2F064A  	MOV	#61540, W10
0xEC5A	0x2007FB  	MOV	#127, W11
0xEC5C	0x079C01  	RCALL	_EEPROM_Read
0xEC5E	0x212A41  	MOV	#lo_addr(_Confirm_OperaMenuBit), W1
0xEC60	0xA07011  	BSET	[W1], BitPos(_Confirm_OperaMenuBit+0)
0xEC62	0xAE0000  	BTSS	W0, #0
0xEC64	0xA17011  	BCLR	[W1], BitPos(_Confirm_OperaMenuBit+0)
;GRR3000LManagementPanel.mpas,9384 :: 		Pause_ms(Pause);
0xEC66	0x20019A  	MOV	#25, W10
0xEC68	0x07F916  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9386 :: 		Confirm_TempeMenuBit    := EEPROM_Read(EE_ConfirmTempMenuEeAddr);
0xEC6A	0x2F068A  	MOV	#61544, W10
0xEC6C	0x2007FB  	MOV	#127, W11
0xEC6E	0x079BF8  	RCALL	_EEPROM_Read
0xEC70	0x212A41  	MOV	#lo_addr(_Confirm_TempeMenuBit), W1
0xEC72	0xA03011  	BSET	[W1], BitPos(_Confirm_TempeMenuBit+0)
0xEC74	0xAE0000  	BTSS	W0, #0
0xEC76	0xA13011  	BCLR	[W1], BitPos(_Confirm_TempeMenuBit+0)
;GRR3000LManagementPanel.mpas,9387 :: 		Pause_ms(Pause);
0xEC78	0x20019A  	MOV	#25, W10
0xEC7A	0x07F90D  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9389 :: 		User_Password           := EEPROM_Read(EE_PasswordEeAddr);
0xEC7C	0x2F070A  	MOV	#61552, W10
0xEC7E	0x2007FB  	MOV	#127, W11
0xEC80	0x079BEF  	RCALL	_EEPROM_Read
0xEC82	0x88AD40  	MOV	W0, _User_Password
;GRR3000LManagementPanel.mpas,9390 :: 		Pause_ms(Pause);
0xEC84	0x20019A  	MOV	#25, W10
0xEC86	0x07F907  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9392 :: 		asm ClrWDT; end;
0xEC88	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9412 :: 		asm ClrWDT; end;
0xEC8A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9416 :: 		Sample_RedDigital  := Org_LoadVolt;
0xEC8C	0x20CAC0  	MOV	#3244, W0
0xEC8E	0x88AD30  	MOV	W0, _Sample_RedDigital
;GRR3000LManagementPanel.mpas,9418 :: 		if (HucreSayisi = 6) then
0xEC90	0x809FF0  	MOV	_HucreSayisi, W0
0xEC92	0xE10066  	CP	W0, #6
0xEC94	0x3A0003  	BRA NZ	L__Data_EepromRead4322
L__Data_EepromRead5690:
;GRR3000LManagementPanel.mpas,9422 :: 		Sample_RedVolt    := 15;
0xEC96	0x2000F0  	MOV	#15, W0
0xEC98	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,9424 :: 		end else
0xEC9A	0x37003D  	BRA	L__Data_EepromRead4323
L__Data_EepromRead4322:
;GRR3000LManagementPanel.mpas,9425 :: 		if (HucreSayisi = 12) then
0xEC9C	0x809FF0  	MOV	_HucreSayisi, W0
0xEC9E	0xE1006C  	CP	W0, #12
0xECA0	0x3A0007  	BRA NZ	L__Data_EepromRead4325
L__Data_EepromRead5691:
;GRR3000LManagementPanel.mpas,9429 :: 		Sample_RedVolt    := 30;
0xECA2	0x2001E0  	MOV	#30, W0
0xECA4	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,9430 :: 		one_kohm_constant := 1000;
0xECA6	0x203E80  	MOV	#1000, W0
0xECA8	0x88ACC0  	MOV	W0, _one_kohm_constant
;GRR3000LManagementPanel.mpas,9431 :: 		Res_DivideValue   := 990;
0xECAA	0x203DE0  	MOV	#990, W0
0xECAC	0x88ACE0  	MOV	W0, _Res_DivideValue
;GRR3000LManagementPanel.mpas,9433 :: 		end else
0xECAE	0x370033  	BRA	L__Data_EepromRead4326
L__Data_EepromRead4325:
;GRR3000LManagementPanel.mpas,9434 :: 		if (HucreSayisi = 24) then
0xECB0	0x809FF0  	MOV	_HucreSayisi, W0
0xECB2	0xE10078  	CP	W0, #24
0xECB4	0x3A0007  	BRA NZ	L__Data_EepromRead4328
L__Data_EepromRead5692:
;GRR3000LManagementPanel.mpas,9438 :: 		Sample_RedVolt    := 60;
0xECB6	0x2003C0  	MOV	#60, W0
0xECB8	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,9440 :: 		one_kohm_constant := 483;
0xECBA	0x201E30  	MOV	#483, W0
0xECBC	0x88ACC0  	MOV	W0, _one_kohm_constant
;GRR3000LManagementPanel.mpas,9441 :: 		Res_DivideValue   := 463;
0xECBE	0x201CF0  	MOV	#463, W0
0xECC0	0x88ACE0  	MOV	W0, _Res_DivideValue
;GRR3000LManagementPanel.mpas,9443 :: 		end else
0xECC2	0x370029  	BRA	L__Data_EepromRead4329
L__Data_EepromRead4328:
;GRR3000LManagementPanel.mpas,9444 :: 		if ((HucreSayisi >= 54)and(HucreSayisi <= 60)) then
0xECC4	0x200361  	MOV	#54, W1
0xECC6	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xECC8	0xE10810  	CP	W1, [W0]
0xECCA	0xEF2004  	CLR	W2
0xECCC	0x3E0001  	BRA GTU	L__Data_EepromRead5693
0xECCE	0xEEA004  	COM	W2
L__Data_EepromRead5693:
0xECD0	0x2003C1  	MOV	#60, W1
0xECD2	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xECD4	0xE10810  	CP	W1, [W0]
0xECD6	0xEF2000  	CLR	W0
0xECD8	0x390001  	BRA LTU	L__Data_EepromRead5694
0xECDA	0xEEA000  	COM	W0
L__Data_EepromRead5694:
0xECDC	0x610000  	AND	W2, W0, W0
0xECDE	0x320007  	BRA Z	L__Data_EepromRead4331
L__Data_EepromRead5695:
;GRR3000LManagementPanel.mpas,9448 :: 		Sample_RedVolt    := 132;
0xECE0	0x200840  	MOV	#132, W0
0xECE2	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,9450 :: 		one_kohm_constant := 204;
0xECE4	0x200CC0  	MOV	#204, W0
0xECE6	0x88ACC0  	MOV	W0, _one_kohm_constant
;GRR3000LManagementPanel.mpas,9451 :: 		Res_DivideValue   := 205;
0xECE8	0x200CD0  	MOV	#205, W0
0xECEA	0x88ACE0  	MOV	W0, _Res_DivideValue
;GRR3000LManagementPanel.mpas,9453 :: 		end else
0xECEC	0x370014  	BRA	L__Data_EepromRead4332
L__Data_EepromRead4331:
;GRR3000LManagementPanel.mpas,9454 :: 		if ((HucreSayisi = 108)or(HucreSayisi =110)) then
0xECEE	0x2006C1  	MOV	#108, W1
0xECF0	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xECF2	0xE10810  	CP	W1, [W0]
0xECF4	0xEF2004  	CLR	W2
0xECF6	0x3A0001  	BRA NZ	L__Data_EepromRead5696
0xECF8	0xEEA004  	COM	W2
L__Data_EepromRead5696:
0xECFA	0x2006E1  	MOV	#110, W1
0xECFC	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xECFE	0xE10810  	CP	W1, [W0]
0xED00	0xEF2000  	CLR	W0
0xED02	0x3A0001  	BRA NZ	L__Data_EepromRead5697
0xED04	0xEEA000  	COM	W0
L__Data_EepromRead5697:
0xED06	0x710000  	IOR	W2, W0, W0
0xED08	0x320006  	BRA Z	L__Data_EepromRead4334
L__Data_EepromRead5698:
;GRR3000LManagementPanel.mpas,9458 :: 		Sample_RedVolt    := 268;
0xED0A	0x2010C0  	MOV	#268, W0
0xED0C	0x88ACD0  	MOV	W0, _Sample_RedVolt
;GRR3000LManagementPanel.mpas,9459 :: 		one_kohm_constant := 50;
0xED0E	0x200320  	MOV	#50, W0
0xED10	0x88ACC0  	MOV	W0, _one_kohm_constant
;GRR3000LManagementPanel.mpas,9460 :: 		Res_DivideValue   := 50;
0xED12	0x200320  	MOV	#50, W0
0xED14	0x88ACE0  	MOV	W0, _Res_DivideValue
;GRR3000LManagementPanel.mpas,9461 :: 		end;
L__Data_EepromRead4334:
L__Data_EepromRead4332:
L__Data_EepromRead4329:
L__Data_EepromRead4326:
L__Data_EepromRead4323:
;GRR3000LManagementPanel.mpas,9464 :: 		Pause_ms(Pause);
0xED16	0x20019A  	MOV	#25, W10
0xED18	0x07F8BE  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9465 :: 		asm ClrWDT; end;
0xED1A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9467 :: 		if (LanguageBit = Turkish) then
0xED1C	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0xED1E	0x784010  	MOV.B	[W0], W0
0xED20	0xE10463  	CP.B	W0, #3
0xED22	0x3A0002  	BRA NZ	L__Data_EepromRead4337
L__Data_EepromRead5699:
;GRR3000LManagementPanel.mpas,9469 :: 		Turkish_Lang;
0xED24	0x07B757  	RCALL	_Turkish_Lang
;GRR3000LManagementPanel.mpas,9470 :: 		end else
0xED26	0x370005  	BRA	L__Data_EepromRead4338
L__Data_EepromRead4337:
;GRR3000LManagementPanel.mpas,9471 :: 		if (LanguageBit = English) then
0xED28	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0xED2A	0x784010  	MOV.B	[W0], W0
0xED2C	0xE10462  	CP.B	W0, #2
0xED2E	0x3A0001  	BRA NZ	L__Data_EepromRead4340
L__Data_EepromRead5700:
;GRR3000LManagementPanel.mpas,9473 :: 		English_Lang;
0xED30	0x07C667  	RCALL	_English_Lang
;GRR3000LManagementPanel.mpas,9474 :: 		end;
L__Data_EepromRead4340:
L__Data_EepromRead4338:
;GRR3000LManagementPanel.mpas,9476 :: 		ServiceCycle      := EEPROM_Read(EE_ServiceCycleEeAddr);
0xED32	0x2F634A  	MOV	#63028, W10
0xED34	0x2007FB  	MOV	#127, W11
0xED36	0x079B94  	RCALL	_EEPROM_Read
0xED38	0x213D11  	MOV	#lo_addr(_ServiceCycle), W1
0xED3A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9477 :: 		Pause_ms(Pause);
0xED3C	0x20019A  	MOV	#25, W10
0xED3E	0x07F8AB  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9478 :: 		QuitVolt         := EEPROM_Read(EE_QuitVoltEeAddr);
0xED40	0x2F63EA  	MOV	#63038, W10
0xED42	0x2007FB  	MOV	#127, W11
0xED44	0x079B8D  	RCALL	_EEPROM_Read
0xED46	0x889FE0  	MOV	W0, _QuitVolt
;GRR3000LManagementPanel.mpas,9479 :: 		Pause_ms(Pause);
0xED48	0x20019A  	MOV	#25, W10
0xED4A	0x07F8A5  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9480 :: 		QuitTime         := EEPROM_Read(EE_QuitTimeEeAddr);
0xED4C	0x2F640A  	MOV	#63040, W10
0xED4E	0x2007FB  	MOV	#127, W11
0xED50	0x079B87  	RCALL	_EEPROM_Read
0xED52	0x213D41  	MOV	#lo_addr(_QuitTime), W1
0xED54	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9481 :: 		Pause_ms(Pause);
0xED56	0x20019A  	MOV	#25, W10
0xED58	0x07F89E  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9484 :: 		Bakim_Start_Time := EEPROM_Read(EE_BkmStartTimeEeAddr);
0xED5A	0x2F644A  	MOV	#63044, W10
0xED5C	0x2007FB  	MOV	#127, W11
0xED5E	0x079B80  	RCALL	_EEPROM_Read
0xED60	0x889E90  	MOV	W0, _Bakim_Start_Time
;GRR3000LManagementPanel.mpas,9485 :: 		Pause_ms(Pause);
0xED62	0x20019A  	MOV	#25, W10
0xED64	0x07F898  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9486 :: 		Bkm_Status       := EEPROM_Read(EE_BkmStatusEeAddr);
0xED66	0x2F646A  	MOV	#63046, W10
0xED68	0x2007FB  	MOV	#127, W11
0xED6A	0x079B7A  	RCALL	_EEPROM_Read
0xED6C	0x212A41  	MOV	#lo_addr(_Bkm_Status), W1
0xED6E	0xA0B011  	BSET	[W1], BitPos(_Bkm_Status+0)
0xED70	0xAE0000  	BTSS	W0, #0
0xED72	0xA1B011  	BCLR	[W1], BitPos(_Bkm_Status+0)
;GRR3000LManagementPanel.mpas,9487 :: 		Pause_ms(Pause);
0xED74	0x20019A  	MOV	#25, W10
0xED76	0x07F88F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9489 :: 		asm clrwdt; end;
0xED78	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9491 :: 		QuitTime_Sec := (QuitTime * 3600000);// çýkýþ zamaný saat olarak // 1ms timer için 1 sýfýr daha atýldý, GAR24-L' de 10ms timer da 1 sýfýr eksik
0xED7A	0x213D42  	MOV	#lo_addr(_QuitTime), W2
0xED7C	0x2EE800  	MOV	#61056, W0
0xED7E	0x200361  	MOV	#54, W1
0xED80	0xFB8112  	ZE	[W2], W2
0xED82	0xEB0180  	CLR	W3
0xED84	0x079709  	RCALL	__Multiply_32x32
0xED86	0x889180  	MOV	W0, _QuitTime_Sec
0xED88	0x889191  	MOV	W1, _QuitTime_Sec+2
;GRR3000LManagementPanel.mpas,9495 :: 		Service1_Date    := EEPROM_Read(EE_Service1EeAddr);
0xED8A	0x2F636A  	MOV	#63030, W10
0xED8C	0x2007FB  	MOV	#127, W11
0xED8E	0x079B68  	RCALL	_EEPROM_Read
0xED90	0x88A2D0  	MOV	W0, _Service1_Date
;GRR3000LManagementPanel.mpas,9496 :: 		Pause_ms(Pause);
0xED92	0x20019A  	MOV	#25, W10
0xED94	0x07F880  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9497 :: 		Service2_Date    := EEPROM_Read(EE_Service2EeAddr);
0xED96	0x2F638A  	MOV	#63032, W10
0xED98	0x2007FB  	MOV	#127, W11
0xED9A	0x079B62  	RCALL	_EEPROM_Read
0xED9C	0x88A2F0  	MOV	W0, _Service2_Date
;GRR3000LManagementPanel.mpas,9498 :: 		Pause_ms(Pause);
0xED9E	0x20019A  	MOV	#25, W10
0xEDA0	0x07F87A  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9499 :: 		Service3_Date    := EEPROM_Read(EE_Service3EeAddr);
0xEDA2	0x2F63AA  	MOV	#63034, W10
0xEDA4	0x2007FB  	MOV	#127, W11
0xEDA6	0x079B5C  	RCALL	_EEPROM_Read
0xEDA8	0x88A350  	MOV	W0, _Service3_Date
;GRR3000LManagementPanel.mpas,9500 :: 		Pause_ms(Pause);
0xEDAA	0x20019A  	MOV	#25, W10
0xEDAC	0x07F874  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9501 :: 		Service4_Date    := EEPROM_Read(EE_Service4EeAddr);
0xEDAE	0x2F63CA  	MOV	#63036, W10
0xEDB0	0x2007FB  	MOV	#127, W11
0xEDB2	0x079B56  	RCALL	_EEPROM_Read
0xEDB4	0x88A370  	MOV	W0, _Service4_Date
;GRR3000LManagementPanel.mpas,9502 :: 		Pause_ms(Pause);
0xEDB6	0x20019A  	MOV	#25, W10
0xEDB8	0x07F86E  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9504 :: 		FirstStartUpBattMenu := EEPROM_Read(EE_FirstBattMenuEeAddr);
0xEDBA	0x2F086A  	MOV	#61574, W10
0xEDBC	0x2007FB  	MOV	#127, W11
0xEDBE	0x079B50  	RCALL	_EEPROM_Read
0xEDC0	0x2159E1  	MOV	#lo_addr(_FirstStartUpBattMenu), W1
0xEDC2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9505 :: 		Pause_ms(Pause);
0xEDC4	0x20019A  	MOV	#25, W10
0xEDC6	0x07F867  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9506 :: 		asm clrwdt; end;
0xEDC8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9508 :: 		ACVolt_Different := EEPROM_Read(EE_ACVoltDifferentEeAddr);
0xEDCA	0x2F072A  	MOV	#61554, W10
0xEDCC	0x2007FB  	MOV	#127, W11
0xEDCE	0x079B48  	RCALL	_EEPROM_Read
0xEDD0	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xEDD2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9509 :: 		Pause_ms(Pause);
0xEDD4	0x20019A  	MOV	#25, W10
0xEDD6	0x07F85F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9510 :: 		asm clrwdt; end;
0xEDD8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9512 :: 		AC_ProtectBit   := EEPROM_Read(EE_ACProtectEeAddr);
0xEDDA	0x2F074A  	MOV	#61556, W10
0xEDDC	0x2007FB  	MOV	#127, W11
0xEDDE	0x079B40  	RCALL	_EEPROM_Read
0xEDE0	0x212A41  	MOV	#lo_addr(_AC_ProtectBit), W1
0xEDE2	0xA06011  	BSET	[W1], BitPos(_AC_ProtectBit+0)
0xEDE4	0xAE0000  	BTSS	W0, #0
0xEDE6	0xA16011  	BCLR	[W1], BitPos(_AC_ProtectBit+0)
;GRR3000LManagementPanel.mpas,9513 :: 		Pause_ms(Pause);
0xEDE8	0x20019A  	MOV	#25, W10
0xEDEA	0x07F855  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9514 :: 		asm clrwdt; end;
0xEDEC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9516 :: 		KacakSensor   := EEPROM_Read(EE_KacakSensorEeAddr);
0xEDEE	0x2F076A  	MOV	#61558, W10
0xEDF0	0x2007FB  	MOV	#127, W11
0xEDF2	0x079B36  	RCALL	_EEPROM_Read
0xEDF4	0x212A41  	MOV	#lo_addr(_KacakSensor), W1
0xEDF6	0xA00011  	BSET	[W1], BitPos(_KacakSensor+0)
0xEDF8	0xAE0000  	BTSS	W0, #0
0xEDFA	0xA10011  	BCLR	[W1], BitPos(_KacakSensor+0)
;GRR3000LManagementPanel.mpas,9517 :: 		Pause_ms(Pause);
0xEDFC	0x20019A  	MOV	#25, W10
0xEDFE	0x07F84B  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9518 :: 		asm clrwdt; end;
0xEE00	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9520 :: 		DiodeValue    := EEPROM_Read(EE_DiodeValueEeAddr);
0xEE02	0x2F088A  	MOV	#61576, W10
0xEE04	0x2007FB  	MOV	#127, W11
0xEE06	0x079B2C  	RCALL	_EEPROM_Read
0xEE08	0x2158F1  	MOV	#lo_addr(_DiodeValue), W1
0xEE0A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9521 :: 		Pause_ms(Pause);
0xEE0C	0x20019A  	MOV	#25, W10
0xEE0E	0x07F843  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9522 :: 		asm clrwdt; end;
0xEE10	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9524 :: 		Glcd_Fill(0x00);
0xEE12	0xEF2014  	CLR	W10
0xEE14	0x07D55B  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9525 :: 		end;
L_end_Data_EepromRead:
0xEE16	0x7805CF  	POP	W11
0xEE18	0x78054F  	POP	W10
0xEE1A	0x060000  	RETURN
; end of _Data_EepromRead
_Turkish_Lang:
;Language.mpas,265 :: 		begin
;Language.mpas,271 :: 		BoostChargeText  := 'Hýzlý ';
0x5BD4	0x212761  	MOV	#lo_addr(_BoostChargeText), W1
0x5BD6	0xB3C480  	MOV.B	#72, W0
0x5BD8	0x785880  	MOV.B	W0, [W1++]
0x5BDA	0xB3CFD0  	MOV.B	#253, W0
0x5BDC	0x785880  	MOV.B	W0, [W1++]
0x5BDE	0xB3C7A0  	MOV.B	#122, W0
0x5BE0	0x785880  	MOV.B	W0, [W1++]
0x5BE2	0xB3C6C0  	MOV.B	#108, W0
0x5BE4	0x785880  	MOV.B	W0, [W1++]
0x5BE6	0xB3CFD0  	MOV.B	#253, W0
0x5BE8	0x785880  	MOV.B	W0, [W1++]
0x5BEA	0xB3C200  	MOV.B	#32, W0
0x5BEC	0x785880  	MOV.B	W0, [W1++]
0x5BEE	0xEF2000  	CLR	W0
0x5BF0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,272 :: 		FloatChargeText  := 'Normal';
0x5BF2	0x212841  	MOV	#lo_addr(_FloatChargeText), W1
0x5BF4	0xB3C4E0  	MOV.B	#78, W0
0x5BF6	0x785880  	MOV.B	W0, [W1++]
0x5BF8	0xB3C6F0  	MOV.B	#111, W0
0x5BFA	0x785880  	MOV.B	W0, [W1++]
0x5BFC	0xB3C720  	MOV.B	#114, W0
0x5BFE	0x785880  	MOV.B	W0, [W1++]
0x5C00	0xB3C6D0  	MOV.B	#109, W0
0x5C02	0x785880  	MOV.B	W0, [W1++]
0x5C04	0xB3C610  	MOV.B	#97, W0
0x5C06	0x785880  	MOV.B	W0, [W1++]
0x5C08	0xB3C6C0  	MOV.B	#108, W0
0x5C0A	0x785880  	MOV.B	W0, [W1++]
0x5C0C	0xEF2000  	CLR	W0
0x5C0E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,273 :: 		TCompChargeText  := 'S.Komp';
0x5C10	0x2127D1  	MOV	#lo_addr(_TCompChargeText), W1
0x5C12	0xB3C530  	MOV.B	#83, W0
0x5C14	0x785880  	MOV.B	W0, [W1++]
0x5C16	0xB3C2E0  	MOV.B	#46, W0
0x5C18	0x785880  	MOV.B	W0, [W1++]
0x5C1A	0xB3C4B0  	MOV.B	#75, W0
0x5C1C	0x785880  	MOV.B	W0, [W1++]
0x5C1E	0xB3C6F0  	MOV.B	#111, W0
0x5C20	0x785880  	MOV.B	W0, [W1++]
0x5C22	0xB3C6D0  	MOV.B	#109, W0
0x5C24	0x785880  	MOV.B	W0, [W1++]
0x5C26	0xB3C700  	MOV.B	#112, W0
0x5C28	0x785880  	MOV.B	W0, [W1++]
0x5C2A	0xEF2000  	CLR	W0
0x5C2C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,274 :: 		ManualChargeText := 'Manuel';
0x5C2E	0x212291  	MOV	#lo_addr(_ManualChargeText), W1
0x5C30	0xB3C4D0  	MOV.B	#77, W0
0x5C32	0x785880  	MOV.B	W0, [W1++]
0x5C34	0xB3C610  	MOV.B	#97, W0
0x5C36	0x785880  	MOV.B	W0, [W1++]
0x5C38	0xB3C6E0  	MOV.B	#110, W0
0x5C3A	0x785880  	MOV.B	W0, [W1++]
0x5C3C	0xB3C750  	MOV.B	#117, W0
0x5C3E	0x785880  	MOV.B	W0, [W1++]
0x5C40	0xB3C650  	MOV.B	#101, W0
0x5C42	0x785880  	MOV.B	W0, [W1++]
0x5C44	0xB3C6C0  	MOV.B	#108, W0
0x5C46	0x785880  	MOV.B	W0, [W1++]
0x5C48	0xEF2000  	CLR	W0
0x5C4A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,276 :: 		EnableText       := ' Aktif ';
0x5C4C	0x2125B1  	MOV	#lo_addr(_EnableText), W1
0x5C4E	0xB3C200  	MOV.B	#32, W0
0x5C50	0x785880  	MOV.B	W0, [W1++]
0x5C52	0xB3C410  	MOV.B	#65, W0
0x5C54	0x785880  	MOV.B	W0, [W1++]
0x5C56	0xB3C6B0  	MOV.B	#107, W0
0x5C58	0x785880  	MOV.B	W0, [W1++]
0x5C5A	0xB3C740  	MOV.B	#116, W0
0x5C5C	0x785880  	MOV.B	W0, [W1++]
0x5C5E	0xB3C690  	MOV.B	#105, W0
0x5C60	0x785880  	MOV.B	W0, [W1++]
0x5C62	0xB3C660  	MOV.B	#102, W0
0x5C64	0x785880  	MOV.B	W0, [W1++]
0x5C66	0xB3C200  	MOV.B	#32, W0
0x5C68	0x785880  	MOV.B	W0, [W1++]
0x5C6A	0xEF2000  	CLR	W0
0x5C6C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,277 :: 		DisableText      := 'D.Dýþý ';
0x5C6E	0x214151  	MOV	#lo_addr(_DisableText), W1
0x5C70	0xB3C440  	MOV.B	#68, W0
0x5C72	0x785880  	MOV.B	W0, [W1++]
0x5C74	0xB3C2E0  	MOV.B	#46, W0
0x5C76	0x785880  	MOV.B	W0, [W1++]
0x5C78	0xB3C440  	MOV.B	#68, W0
0x5C7A	0x785880  	MOV.B	W0, [W1++]
0x5C7C	0xB3CFD0  	MOV.B	#253, W0
0x5C7E	0x785880  	MOV.B	W0, [W1++]
0x5C80	0xB3CFE0  	MOV.B	#254, W0
0x5C82	0x785880  	MOV.B	W0, [W1++]
0x5C84	0xB3CFD0  	MOV.B	#253, W0
0x5C86	0x785880  	MOV.B	W0, [W1++]
0x5C88	0xB3C200  	MOV.B	#32, W0
0x5C8A	0x785880  	MOV.B	W0, [W1++]
0x5C8C	0xEF2000  	CLR	W0
0x5C8E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,278 :: 		MinuteText       := 'dk';
0x5C90	0x216731  	MOV	#lo_addr(_MinuteText), W1
0x5C92	0xB3C640  	MOV.B	#100, W0
0x5C94	0x785880  	MOV.B	W0, [W1++]
0x5C96	0xB3C6B0  	MOV.B	#107, W0
0x5C98	0x785880  	MOV.B	W0, [W1++]
0x5C9A	0xEF2000  	CLR	W0
0x5C9C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,279 :: 		Flt_AcHigh       := '      AC YÜKSEK      ';
0x5C9E	0x2086A1  	MOV	#lo_addr(_Flt_AcHigh), W1
0x5CA0	0xB3C200  	MOV.B	#32, W0
0x5CA2	0x785880  	MOV.B	W0, [W1++]
0x5CA4	0xB3C200  	MOV.B	#32, W0
0x5CA6	0x785880  	MOV.B	W0, [W1++]
0x5CA8	0xB3C200  	MOV.B	#32, W0
0x5CAA	0x785880  	MOV.B	W0, [W1++]
0x5CAC	0xB3C200  	MOV.B	#32, W0
0x5CAE	0x785880  	MOV.B	W0, [W1++]
0x5CB0	0xB3C200  	MOV.B	#32, W0
0x5CB2	0x785880  	MOV.B	W0, [W1++]
0x5CB4	0xB3C200  	MOV.B	#32, W0
0x5CB6	0x785880  	MOV.B	W0, [W1++]
0x5CB8	0xB3C410  	MOV.B	#65, W0
0x5CBA	0x785880  	MOV.B	W0, [W1++]
0x5CBC	0xB3C430  	MOV.B	#67, W0
0x5CBE	0x785880  	MOV.B	W0, [W1++]
0x5CC0	0xB3C200  	MOV.B	#32, W0
0x5CC2	0x785880  	MOV.B	W0, [W1++]
0x5CC4	0xB3C590  	MOV.B	#89, W0
0x5CC6	0x785880  	MOV.B	W0, [W1++]
0x5CC8	0xB3CDC0  	MOV.B	#220, W0
0x5CCA	0x785880  	MOV.B	W0, [W1++]
0x5CCC	0xB3C4B0  	MOV.B	#75, W0
0x5CCE	0x785880  	MOV.B	W0, [W1++]
0x5CD0	0xB3C530  	MOV.B	#83, W0
0x5CD2	0x785880  	MOV.B	W0, [W1++]
0x5CD4	0xB3C450  	MOV.B	#69, W0
0x5CD6	0x785880  	MOV.B	W0, [W1++]
0x5CD8	0xB3C4B0  	MOV.B	#75, W0
0x5CDA	0x785880  	MOV.B	W0, [W1++]
0x5CDC	0xB3C200  	MOV.B	#32, W0
0x5CDE	0x785880  	MOV.B	W0, [W1++]
0x5CE0	0xB3C200  	MOV.B	#32, W0
0x5CE2	0x785880  	MOV.B	W0, [W1++]
0x5CE4	0xB3C200  	MOV.B	#32, W0
0x5CE6	0x785880  	MOV.B	W0, [W1++]
0x5CE8	0xB3C200  	MOV.B	#32, W0
0x5CEA	0x785880  	MOV.B	W0, [W1++]
0x5CEC	0xB3C200  	MOV.B	#32, W0
0x5CEE	0x785880  	MOV.B	W0, [W1++]
0x5CF0	0xB3C200  	MOV.B	#32, W0
0x5CF2	0x785880  	MOV.B	W0, [W1++]
0x5CF4	0xEF2000  	CLR	W0
0x5CF6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,280 :: 		Flt_AcLow        := '      AC DÜÞÜK       ';
0x5CF8	0x208541  	MOV	#lo_addr(_Flt_AcLow), W1
0x5CFA	0xB3C200  	MOV.B	#32, W0
0x5CFC	0x785880  	MOV.B	W0, [W1++]
0x5CFE	0xB3C200  	MOV.B	#32, W0
0x5D00	0x785880  	MOV.B	W0, [W1++]
0x5D02	0xB3C200  	MOV.B	#32, W0
0x5D04	0x785880  	MOV.B	W0, [W1++]
0x5D06	0xB3C200  	MOV.B	#32, W0
0x5D08	0x785880  	MOV.B	W0, [W1++]
0x5D0A	0xB3C200  	MOV.B	#32, W0
0x5D0C	0x785880  	MOV.B	W0, [W1++]
0x5D0E	0xB3C200  	MOV.B	#32, W0
0x5D10	0x785880  	MOV.B	W0, [W1++]
0x5D12	0xB3C410  	MOV.B	#65, W0
0x5D14	0x785880  	MOV.B	W0, [W1++]
0x5D16	0xB3C430  	MOV.B	#67, W0
0x5D18	0x785880  	MOV.B	W0, [W1++]
0x5D1A	0xB3C200  	MOV.B	#32, W0
0x5D1C	0x785880  	MOV.B	W0, [W1++]
0x5D1E	0xB3C440  	MOV.B	#68, W0
0x5D20	0x785880  	MOV.B	W0, [W1++]
0x5D22	0xB3CDC0  	MOV.B	#220, W0
0x5D24	0x785880  	MOV.B	W0, [W1++]
0x5D26	0xB3CDE0  	MOV.B	#222, W0
0x5D28	0x785880  	MOV.B	W0, [W1++]
0x5D2A	0xB3CDC0  	MOV.B	#220, W0
0x5D2C	0x785880  	MOV.B	W0, [W1++]
0x5D2E	0xB3C4B0  	MOV.B	#75, W0
0x5D30	0x785880  	MOV.B	W0, [W1++]
0x5D32	0xB3C200  	MOV.B	#32, W0
0x5D34	0x785880  	MOV.B	W0, [W1++]
0x5D36	0xB3C200  	MOV.B	#32, W0
0x5D38	0x785880  	MOV.B	W0, [W1++]
0x5D3A	0xB3C200  	MOV.B	#32, W0
0x5D3C	0x785880  	MOV.B	W0, [W1++]
0x5D3E	0xB3C200  	MOV.B	#32, W0
0x5D40	0x785880  	MOV.B	W0, [W1++]
0x5D42	0xB3C200  	MOV.B	#32, W0
0x5D44	0x785880  	MOV.B	W0, [W1++]
0x5D46	0xB3C200  	MOV.B	#32, W0
0x5D48	0x785880  	MOV.B	W0, [W1++]
0x5D4A	0xB3C200  	MOV.B	#32, W0
0x5D4C	0x785880  	MOV.B	W0, [W1++]
0x5D4E	0xEF2000  	CLR	W0
0x5D50	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,281 :: 		Flt_AcDiff       := 'AC GERÝLÝMLER FARKLI ';
0x5D52	0x208801  	MOV	#lo_addr(_Flt_AcDiff), W1
0x5D54	0xB3C410  	MOV.B	#65, W0
0x5D56	0x785880  	MOV.B	W0, [W1++]
0x5D58	0xB3C430  	MOV.B	#67, W0
0x5D5A	0x785880  	MOV.B	W0, [W1++]
0x5D5C	0xB3C200  	MOV.B	#32, W0
0x5D5E	0x785880  	MOV.B	W0, [W1++]
0x5D60	0xB3C470  	MOV.B	#71, W0
0x5D62	0x785880  	MOV.B	W0, [W1++]
0x5D64	0xB3C450  	MOV.B	#69, W0
0x5D66	0x785880  	MOV.B	W0, [W1++]
0x5D68	0xB3C520  	MOV.B	#82, W0
0x5D6A	0x785880  	MOV.B	W0, [W1++]
0x5D6C	0xB3CDD0  	MOV.B	#221, W0
0x5D6E	0x785880  	MOV.B	W0, [W1++]
0x5D70	0xB3C4C0  	MOV.B	#76, W0
0x5D72	0x785880  	MOV.B	W0, [W1++]
0x5D74	0xB3CDD0  	MOV.B	#221, W0
0x5D76	0x785880  	MOV.B	W0, [W1++]
0x5D78	0xB3C4D0  	MOV.B	#77, W0
0x5D7A	0x785880  	MOV.B	W0, [W1++]
0x5D7C	0xB3C4C0  	MOV.B	#76, W0
0x5D7E	0x785880  	MOV.B	W0, [W1++]
0x5D80	0xB3C450  	MOV.B	#69, W0
0x5D82	0x785880  	MOV.B	W0, [W1++]
0x5D84	0xB3C520  	MOV.B	#82, W0
0x5D86	0x785880  	MOV.B	W0, [W1++]
0x5D88	0xB3C200  	MOV.B	#32, W0
0x5D8A	0x785880  	MOV.B	W0, [W1++]
0x5D8C	0xB3C460  	MOV.B	#70, W0
0x5D8E	0x785880  	MOV.B	W0, [W1++]
0x5D90	0xB3C410  	MOV.B	#65, W0
0x5D92	0x785880  	MOV.B	W0, [W1++]
0x5D94	0xB3C520  	MOV.B	#82, W0
0x5D96	0x785880  	MOV.B	W0, [W1++]
0x5D98	0xB3C4B0  	MOV.B	#75, W0
0x5D9A	0x785880  	MOV.B	W0, [W1++]
0x5D9C	0xB3C4C0  	MOV.B	#76, W0
0x5D9E	0x785880  	MOV.B	W0, [W1++]
0x5DA0	0xB3C490  	MOV.B	#73, W0
0x5DA2	0x785880  	MOV.B	W0, [W1++]
0x5DA4	0xB3C200  	MOV.B	#32, W0
0x5DA6	0x785880  	MOV.B	W0, [W1++]
0x5DA8	0xEF2000  	CLR	W0
0x5DAA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,282 :: 		Flt_DcHigh       := '      DC YÜKSEK      ';
0x5DAC	0x208AC1  	MOV	#lo_addr(_Flt_DcHigh), W1
0x5DAE	0xB3C200  	MOV.B	#32, W0
0x5DB0	0x785880  	MOV.B	W0, [W1++]
0x5DB2	0xB3C200  	MOV.B	#32, W0
0x5DB4	0x785880  	MOV.B	W0, [W1++]
0x5DB6	0xB3C200  	MOV.B	#32, W0
0x5DB8	0x785880  	MOV.B	W0, [W1++]
0x5DBA	0xB3C200  	MOV.B	#32, W0
0x5DBC	0x785880  	MOV.B	W0, [W1++]
0x5DBE	0xB3C200  	MOV.B	#32, W0
0x5DC0	0x785880  	MOV.B	W0, [W1++]
0x5DC2	0xB3C200  	MOV.B	#32, W0
0x5DC4	0x785880  	MOV.B	W0, [W1++]
0x5DC6	0xB3C440  	MOV.B	#68, W0
0x5DC8	0x785880  	MOV.B	W0, [W1++]
0x5DCA	0xB3C430  	MOV.B	#67, W0
0x5DCC	0x785880  	MOV.B	W0, [W1++]
0x5DCE	0xB3C200  	MOV.B	#32, W0
0x5DD0	0x785880  	MOV.B	W0, [W1++]
0x5DD2	0xB3C590  	MOV.B	#89, W0
0x5DD4	0x785880  	MOV.B	W0, [W1++]
0x5DD6	0xB3CDC0  	MOV.B	#220, W0
0x5DD8	0x785880  	MOV.B	W0, [W1++]
0x5DDA	0xB3C4B0  	MOV.B	#75, W0
0x5DDC	0x785880  	MOV.B	W0, [W1++]
0x5DDE	0xB3C530  	MOV.B	#83, W0
0x5DE0	0x785880  	MOV.B	W0, [W1++]
0x5DE2	0xB3C450  	MOV.B	#69, W0
0x5DE4	0x785880  	MOV.B	W0, [W1++]
0x5DE6	0xB3C4B0  	MOV.B	#75, W0
0x5DE8	0x785880  	MOV.B	W0, [W1++]
0x5DEA	0xB3C200  	MOV.B	#32, W0
0x5DEC	0x785880  	MOV.B	W0, [W1++]
0x5DEE	0xB3C200  	MOV.B	#32, W0
0x5DF0	0x785880  	MOV.B	W0, [W1++]
0x5DF2	0xB3C200  	MOV.B	#32, W0
0x5DF4	0x785880  	MOV.B	W0, [W1++]
0x5DF6	0xB3C200  	MOV.B	#32, W0
0x5DF8	0x785880  	MOV.B	W0, [W1++]
0x5DFA	0xB3C200  	MOV.B	#32, W0
0x5DFC	0x785880  	MOV.B	W0, [W1++]
0x5DFE	0xB3C200  	MOV.B	#32, W0
0x5E00	0x785880  	MOV.B	W0, [W1++]
0x5E02	0xEF2000  	CLR	W0
0x5E04	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,283 :: 		Flt_DcLow        := '      DC DÜÞÜK       ';
0x5E06	0x208961  	MOV	#lo_addr(_Flt_DcLow), W1
0x5E08	0xB3C200  	MOV.B	#32, W0
0x5E0A	0x785880  	MOV.B	W0, [W1++]
0x5E0C	0xB3C200  	MOV.B	#32, W0
0x5E0E	0x785880  	MOV.B	W0, [W1++]
0x5E10	0xB3C200  	MOV.B	#32, W0
0x5E12	0x785880  	MOV.B	W0, [W1++]
0x5E14	0xB3C200  	MOV.B	#32, W0
0x5E16	0x785880  	MOV.B	W0, [W1++]
0x5E18	0xB3C200  	MOV.B	#32, W0
0x5E1A	0x785880  	MOV.B	W0, [W1++]
0x5E1C	0xB3C200  	MOV.B	#32, W0
0x5E1E	0x785880  	MOV.B	W0, [W1++]
0x5E20	0xB3C440  	MOV.B	#68, W0
0x5E22	0x785880  	MOV.B	W0, [W1++]
0x5E24	0xB3C430  	MOV.B	#67, W0
0x5E26	0x785880  	MOV.B	W0, [W1++]
0x5E28	0xB3C200  	MOV.B	#32, W0
0x5E2A	0x785880  	MOV.B	W0, [W1++]
0x5E2C	0xB3C440  	MOV.B	#68, W0
0x5E2E	0x785880  	MOV.B	W0, [W1++]
0x5E30	0xB3CDC0  	MOV.B	#220, W0
0x5E32	0x785880  	MOV.B	W0, [W1++]
0x5E34	0xB3CDE0  	MOV.B	#222, W0
0x5E36	0x785880  	MOV.B	W0, [W1++]
0x5E38	0xB3CDC0  	MOV.B	#220, W0
0x5E3A	0x785880  	MOV.B	W0, [W1++]
0x5E3C	0xB3C4B0  	MOV.B	#75, W0
0x5E3E	0x785880  	MOV.B	W0, [W1++]
0x5E40	0xB3C200  	MOV.B	#32, W0
0x5E42	0x785880  	MOV.B	W0, [W1++]
0x5E44	0xB3C200  	MOV.B	#32, W0
0x5E46	0x785880  	MOV.B	W0, [W1++]
0x5E48	0xB3C200  	MOV.B	#32, W0
0x5E4A	0x785880  	MOV.B	W0, [W1++]
0x5E4C	0xB3C200  	MOV.B	#32, W0
0x5E4E	0x785880  	MOV.B	W0, [W1++]
0x5E50	0xB3C200  	MOV.B	#32, W0
0x5E52	0x785880  	MOV.B	W0, [W1++]
0x5E54	0xB3C200  	MOV.B	#32, W0
0x5E56	0x785880  	MOV.B	W0, [W1++]
0x5E58	0xB3C200  	MOV.B	#32, W0
0x5E5A	0x785880  	MOV.B	W0, [W1++]
0x5E5C	0xEF2000  	CLR	W0
0x5E5E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,284 :: 		Flt_Pleakage     := '      (+) KAÇAK      ';
0x5E60	0x20FD41  	MOV	#lo_addr(_Flt_Pleakage), W1
0x5E62	0xB3C200  	MOV.B	#32, W0
0x5E64	0x785880  	MOV.B	W0, [W1++]
0x5E66	0xB3C200  	MOV.B	#32, W0
0x5E68	0x785880  	MOV.B	W0, [W1++]
0x5E6A	0xB3C200  	MOV.B	#32, W0
0x5E6C	0x785880  	MOV.B	W0, [W1++]
0x5E6E	0xB3C200  	MOV.B	#32, W0
0x5E70	0x785880  	MOV.B	W0, [W1++]
0x5E72	0xB3C200  	MOV.B	#32, W0
0x5E74	0x785880  	MOV.B	W0, [W1++]
0x5E76	0xB3C200  	MOV.B	#32, W0
0x5E78	0x785880  	MOV.B	W0, [W1++]
0x5E7A	0xB3C280  	MOV.B	#40, W0
0x5E7C	0x785880  	MOV.B	W0, [W1++]
0x5E7E	0xB3C2B0  	MOV.B	#43, W0
0x5E80	0x785880  	MOV.B	W0, [W1++]
0x5E82	0xB3C290  	MOV.B	#41, W0
0x5E84	0x785880  	MOV.B	W0, [W1++]
0x5E86	0xB3C200  	MOV.B	#32, W0
0x5E88	0x785880  	MOV.B	W0, [W1++]
0x5E8A	0xB3C4B0  	MOV.B	#75, W0
0x5E8C	0x785880  	MOV.B	W0, [W1++]
0x5E8E	0xB3C410  	MOV.B	#65, W0
0x5E90	0x785880  	MOV.B	W0, [W1++]
0x5E92	0xB3CC70  	MOV.B	#199, W0
0x5E94	0x785880  	MOV.B	W0, [W1++]
0x5E96	0xB3C410  	MOV.B	#65, W0
0x5E98	0x785880  	MOV.B	W0, [W1++]
0x5E9A	0xB3C4B0  	MOV.B	#75, W0
0x5E9C	0x785880  	MOV.B	W0, [W1++]
0x5E9E	0xB3C200  	MOV.B	#32, W0
0x5EA0	0x785880  	MOV.B	W0, [W1++]
0x5EA2	0xB3C200  	MOV.B	#32, W0
0x5EA4	0x785880  	MOV.B	W0, [W1++]
0x5EA6	0xB3C200  	MOV.B	#32, W0
0x5EA8	0x785880  	MOV.B	W0, [W1++]
0x5EAA	0xB3C200  	MOV.B	#32, W0
0x5EAC	0x785880  	MOV.B	W0, [W1++]
0x5EAE	0xB3C200  	MOV.B	#32, W0
0x5EB0	0x785880  	MOV.B	W0, [W1++]
0x5EB2	0xB3C200  	MOV.B	#32, W0
0x5EB4	0x785880  	MOV.B	W0, [W1++]
0x5EB6	0xEF2000  	CLR	W0
0x5EB8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,285 :: 		Flt_Nleakage     := '      (-) KAÇAK      ';
0x5EBA	0x20FBE1  	MOV	#lo_addr(_Flt_Nleakage), W1
0x5EBC	0xB3C200  	MOV.B	#32, W0
0x5EBE	0x785880  	MOV.B	W0, [W1++]
0x5EC0	0xB3C200  	MOV.B	#32, W0
0x5EC2	0x785880  	MOV.B	W0, [W1++]
0x5EC4	0xB3C200  	MOV.B	#32, W0
0x5EC6	0x785880  	MOV.B	W0, [W1++]
0x5EC8	0xB3C200  	MOV.B	#32, W0
0x5ECA	0x785880  	MOV.B	W0, [W1++]
0x5ECC	0xB3C200  	MOV.B	#32, W0
0x5ECE	0x785880  	MOV.B	W0, [W1++]
0x5ED0	0xB3C200  	MOV.B	#32, W0
0x5ED2	0x785880  	MOV.B	W0, [W1++]
0x5ED4	0xB3C280  	MOV.B	#40, W0
0x5ED6	0x785880  	MOV.B	W0, [W1++]
0x5ED8	0xB3C2D0  	MOV.B	#45, W0
0x5EDA	0x785880  	MOV.B	W0, [W1++]
0x5EDC	0xB3C290  	MOV.B	#41, W0
0x5EDE	0x785880  	MOV.B	W0, [W1++]
0x5EE0	0xB3C200  	MOV.B	#32, W0
0x5EE2	0x785880  	MOV.B	W0, [W1++]
0x5EE4	0xB3C4B0  	MOV.B	#75, W0
0x5EE6	0x785880  	MOV.B	W0, [W1++]
0x5EE8	0xB3C410  	MOV.B	#65, W0
0x5EEA	0x785880  	MOV.B	W0, [W1++]
0x5EEC	0xB3CC70  	MOV.B	#199, W0
0x5EEE	0x785880  	MOV.B	W0, [W1++]
0x5EF0	0xB3C410  	MOV.B	#65, W0
0x5EF2	0x785880  	MOV.B	W0, [W1++]
0x5EF4	0xB3C4B0  	MOV.B	#75, W0
0x5EF6	0x785880  	MOV.B	W0, [W1++]
0x5EF8	0xB3C200  	MOV.B	#32, W0
0x5EFA	0x785880  	MOV.B	W0, [W1++]
0x5EFC	0xB3C200  	MOV.B	#32, W0
0x5EFE	0x785880  	MOV.B	W0, [W1++]
0x5F00	0xB3C200  	MOV.B	#32, W0
0x5F02	0x785880  	MOV.B	W0, [W1++]
0x5F04	0xB3C200  	MOV.B	#32, W0
0x5F06	0x785880  	MOV.B	W0, [W1++]
0x5F08	0xB3C200  	MOV.B	#32, W0
0x5F0A	0x785880  	MOV.B	W0, [W1++]
0x5F0C	0xB3C200  	MOV.B	#32, W0
0x5F0E	0x785880  	MOV.B	W0, [W1++]
0x5F10	0xEF2000  	CLR	W0
0x5F12	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,286 :: 		Flt_BattLimit    := ' AKÜ AKIM SINIRLAMA  ';
0x5F14	0x20FEA1  	MOV	#lo_addr(_Flt_BattLimit), W1
0x5F16	0xB3C200  	MOV.B	#32, W0
0x5F18	0x785880  	MOV.B	W0, [W1++]
0x5F1A	0xB3C410  	MOV.B	#65, W0
0x5F1C	0x785880  	MOV.B	W0, [W1++]
0x5F1E	0xB3C4B0  	MOV.B	#75, W0
0x5F20	0x785880  	MOV.B	W0, [W1++]
0x5F22	0xB3CDC0  	MOV.B	#220, W0
0x5F24	0x785880  	MOV.B	W0, [W1++]
0x5F26	0xB3C200  	MOV.B	#32, W0
0x5F28	0x785880  	MOV.B	W0, [W1++]
0x5F2A	0xB3C410  	MOV.B	#65, W0
0x5F2C	0x785880  	MOV.B	W0, [W1++]
0x5F2E	0xB3C4B0  	MOV.B	#75, W0
0x5F30	0x785880  	MOV.B	W0, [W1++]
0x5F32	0xB3C490  	MOV.B	#73, W0
0x5F34	0x785880  	MOV.B	W0, [W1++]
0x5F36	0xB3C4D0  	MOV.B	#77, W0
0x5F38	0x785880  	MOV.B	W0, [W1++]
0x5F3A	0xB3C200  	MOV.B	#32, W0
0x5F3C	0x785880  	MOV.B	W0, [W1++]
0x5F3E	0xB3C530  	MOV.B	#83, W0
0x5F40	0x785880  	MOV.B	W0, [W1++]
0x5F42	0xB3C490  	MOV.B	#73, W0
0x5F44	0x785880  	MOV.B	W0, [W1++]
0x5F46	0xB3C4E0  	MOV.B	#78, W0
0x5F48	0x785880  	MOV.B	W0, [W1++]
0x5F4A	0xB3C490  	MOV.B	#73, W0
0x5F4C	0x785880  	MOV.B	W0, [W1++]
0x5F4E	0xB3C520  	MOV.B	#82, W0
0x5F50	0x785880  	MOV.B	W0, [W1++]
0x5F52	0xB3C4C0  	MOV.B	#76, W0
0x5F54	0x785880  	MOV.B	W0, [W1++]
0x5F56	0xB3C410  	MOV.B	#65, W0
0x5F58	0x785880  	MOV.B	W0, [W1++]
0x5F5A	0xB3C4D0  	MOV.B	#77, W0
0x5F5C	0x785880  	MOV.B	W0, [W1++]
0x5F5E	0xB3C410  	MOV.B	#65, W0
0x5F60	0x785880  	MOV.B	W0, [W1++]
0x5F62	0xB3C200  	MOV.B	#32, W0
0x5F64	0x785880  	MOV.B	W0, [W1++]
0x5F66	0xB3C200  	MOV.B	#32, W0
0x5F68	0x785880  	MOV.B	W0, [W1++]
0x5F6A	0xEF2000  	CLR	W0
0x5F6C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,287 :: 		Flt_ChrgLimit    := 'REDRESÖR AKIM SINIRL.';
0x5F6E	0x210161  	MOV	#lo_addr(_Flt_ChrgLimit), W1
0x5F70	0xB3C520  	MOV.B	#82, W0
0x5F72	0x785880  	MOV.B	W0, [W1++]
0x5F74	0xB3C450  	MOV.B	#69, W0
0x5F76	0x785880  	MOV.B	W0, [W1++]
0x5F78	0xB3C440  	MOV.B	#68, W0
0x5F7A	0x785880  	MOV.B	W0, [W1++]
0x5F7C	0xB3C520  	MOV.B	#82, W0
0x5F7E	0x785880  	MOV.B	W0, [W1++]
0x5F80	0xB3C450  	MOV.B	#69, W0
0x5F82	0x785880  	MOV.B	W0, [W1++]
0x5F84	0xB3C530  	MOV.B	#83, W0
0x5F86	0x785880  	MOV.B	W0, [W1++]
0x5F88	0xB3CD60  	MOV.B	#214, W0
0x5F8A	0x785880  	MOV.B	W0, [W1++]
0x5F8C	0xB3C520  	MOV.B	#82, W0
0x5F8E	0x785880  	MOV.B	W0, [W1++]
0x5F90	0xB3C200  	MOV.B	#32, W0
0x5F92	0x785880  	MOV.B	W0, [W1++]
0x5F94	0xB3C410  	MOV.B	#65, W0
0x5F96	0x785880  	MOV.B	W0, [W1++]
0x5F98	0xB3C4B0  	MOV.B	#75, W0
0x5F9A	0x785880  	MOV.B	W0, [W1++]
0x5F9C	0xB3C490  	MOV.B	#73, W0
0x5F9E	0x785880  	MOV.B	W0, [W1++]
0x5FA0	0xB3C4D0  	MOV.B	#77, W0
0x5FA2	0x785880  	MOV.B	W0, [W1++]
0x5FA4	0xB3C200  	MOV.B	#32, W0
0x5FA6	0x785880  	MOV.B	W0, [W1++]
0x5FA8	0xB3C530  	MOV.B	#83, W0
0x5FAA	0x785880  	MOV.B	W0, [W1++]
0x5FAC	0xB3C490  	MOV.B	#73, W0
0x5FAE	0x785880  	MOV.B	W0, [W1++]
0x5FB0	0xB3C4E0  	MOV.B	#78, W0
0x5FB2	0x785880  	MOV.B	W0, [W1++]
0x5FB4	0xB3C490  	MOV.B	#73, W0
0x5FB6	0x785880  	MOV.B	W0, [W1++]
0x5FB8	0xB3C520  	MOV.B	#82, W0
0x5FBA	0x785880  	MOV.B	W0, [W1++]
0x5FBC	0xB3C4C0  	MOV.B	#76, W0
0x5FBE	0x785880  	MOV.B	W0, [W1++]
0x5FC0	0xB3C2E0  	MOV.B	#46, W0
0x5FC2	0x785880  	MOV.B	W0, [W1++]
0x5FC4	0xEF2000  	CLR	W0
0x5FC6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,288 :: 		Flt_FanFault     := '      FAN ARIZA      ';
0x5FC8	0x210001  	MOV	#lo_addr(_Flt_FanFault), W1
0x5FCA	0xB3C200  	MOV.B	#32, W0
0x5FCC	0x785880  	MOV.B	W0, [W1++]
0x5FCE	0xB3C200  	MOV.B	#32, W0
0x5FD0	0x785880  	MOV.B	W0, [W1++]
0x5FD2	0xB3C200  	MOV.B	#32, W0
0x5FD4	0x785880  	MOV.B	W0, [W1++]
0x5FD6	0xB3C200  	MOV.B	#32, W0
0x5FD8	0x785880  	MOV.B	W0, [W1++]
0x5FDA	0xB3C200  	MOV.B	#32, W0
0x5FDC	0x785880  	MOV.B	W0, [W1++]
0x5FDE	0xB3C200  	MOV.B	#32, W0
0x5FE0	0x785880  	MOV.B	W0, [W1++]
0x5FE2	0xB3C460  	MOV.B	#70, W0
0x5FE4	0x785880  	MOV.B	W0, [W1++]
0x5FE6	0xB3C410  	MOV.B	#65, W0
0x5FE8	0x785880  	MOV.B	W0, [W1++]
0x5FEA	0xB3C4E0  	MOV.B	#78, W0
0x5FEC	0x785880  	MOV.B	W0, [W1++]
0x5FEE	0xB3C200  	MOV.B	#32, W0
0x5FF0	0x785880  	MOV.B	W0, [W1++]
0x5FF2	0xB3C410  	MOV.B	#65, W0
0x5FF4	0x785880  	MOV.B	W0, [W1++]
0x5FF6	0xB3C520  	MOV.B	#82, W0
0x5FF8	0x785880  	MOV.B	W0, [W1++]
0x5FFA	0xB3C490  	MOV.B	#73, W0
0x5FFC	0x785880  	MOV.B	W0, [W1++]
0x5FFE	0xB3C5A0  	MOV.B	#90, W0
0x6000	0x785880  	MOV.B	W0, [W1++]
0x6002	0xB3C410  	MOV.B	#65, W0
0x6004	0x785880  	MOV.B	W0, [W1++]
0x6006	0xB3C200  	MOV.B	#32, W0
0x6008	0x785880  	MOV.B	W0, [W1++]
0x600A	0xB3C200  	MOV.B	#32, W0
0x600C	0x785880  	MOV.B	W0, [W1++]
0x600E	0xB3C200  	MOV.B	#32, W0
0x6010	0x785880  	MOV.B	W0, [W1++]
0x6012	0xB3C200  	MOV.B	#32, W0
0x6014	0x785880  	MOV.B	W0, [W1++]
0x6016	0xB3C200  	MOV.B	#32, W0
0x6018	0x785880  	MOV.B	W0, [W1++]
0x601A	0xB3C200  	MOV.B	#32, W0
0x601C	0x785880  	MOV.B	W0, [W1++]
0x601E	0xEF2000  	CLR	W0
0x6020	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,289 :: 		Flt_RedHighTemp  := '    TERMAL KORUMA    ';
0x6022	0x20F661  	MOV	#lo_addr(_Flt_RedHighTemp), W1
0x6024	0xB3C200  	MOV.B	#32, W0
0x6026	0x785880  	MOV.B	W0, [W1++]
0x6028	0xB3C200  	MOV.B	#32, W0
0x602A	0x785880  	MOV.B	W0, [W1++]
0x602C	0xB3C200  	MOV.B	#32, W0
0x602E	0x785880  	MOV.B	W0, [W1++]
0x6030	0xB3C200  	MOV.B	#32, W0
0x6032	0x785880  	MOV.B	W0, [W1++]
0x6034	0xB3C540  	MOV.B	#84, W0
0x6036	0x785880  	MOV.B	W0, [W1++]
0x6038	0xB3C450  	MOV.B	#69, W0
0x603A	0x785880  	MOV.B	W0, [W1++]
0x603C	0xB3C520  	MOV.B	#82, W0
0x603E	0x785880  	MOV.B	W0, [W1++]
0x6040	0xB3C4D0  	MOV.B	#77, W0
0x6042	0x785880  	MOV.B	W0, [W1++]
0x6044	0xB3C410  	MOV.B	#65, W0
0x6046	0x785880  	MOV.B	W0, [W1++]
0x6048	0xB3C4C0  	MOV.B	#76, W0
0x604A	0x785880  	MOV.B	W0, [W1++]
0x604C	0xB3C200  	MOV.B	#32, W0
0x604E	0x785880  	MOV.B	W0, [W1++]
0x6050	0xB3C4B0  	MOV.B	#75, W0
0x6052	0x785880  	MOV.B	W0, [W1++]
0x6054	0xB3C4F0  	MOV.B	#79, W0
0x6056	0x785880  	MOV.B	W0, [W1++]
0x6058	0xB3C520  	MOV.B	#82, W0
0x605A	0x785880  	MOV.B	W0, [W1++]
0x605C	0xB3C550  	MOV.B	#85, W0
0x605E	0x785880  	MOV.B	W0, [W1++]
0x6060	0xB3C4D0  	MOV.B	#77, W0
0x6062	0x785880  	MOV.B	W0, [W1++]
0x6064	0xB3C410  	MOV.B	#65, W0
0x6066	0x785880  	MOV.B	W0, [W1++]
0x6068	0xB3C200  	MOV.B	#32, W0
0x606A	0x785880  	MOV.B	W0, [W1++]
0x606C	0xB3C200  	MOV.B	#32, W0
0x606E	0x785880  	MOV.B	W0, [W1++]
0x6070	0xB3C200  	MOV.B	#32, W0
0x6072	0x785880  	MOV.B	W0, [W1++]
0x6074	0xB3C200  	MOV.B	#32, W0
0x6076	0x785880  	MOV.B	W0, [W1++]
0x6078	0xEF2000  	CLR	W0
0x607A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,290 :: 		Flt_HighTemp     := '    AÞIRI SICAKLIK   ';
0x607C	0x20F501  	MOV	#lo_addr(_Flt_HighTemp), W1
0x607E	0xB3C200  	MOV.B	#32, W0
0x6080	0x785880  	MOV.B	W0, [W1++]
0x6082	0xB3C200  	MOV.B	#32, W0
0x6084	0x785880  	MOV.B	W0, [W1++]
0x6086	0xB3C200  	MOV.B	#32, W0
0x6088	0x785880  	MOV.B	W0, [W1++]
0x608A	0xB3C200  	MOV.B	#32, W0
0x608C	0x785880  	MOV.B	W0, [W1++]
0x608E	0xB3C410  	MOV.B	#65, W0
0x6090	0x785880  	MOV.B	W0, [W1++]
0x6092	0xB3CDE0  	MOV.B	#222, W0
0x6094	0x785880  	MOV.B	W0, [W1++]
0x6096	0xB3C490  	MOV.B	#73, W0
0x6098	0x785880  	MOV.B	W0, [W1++]
0x609A	0xB3C520  	MOV.B	#82, W0
0x609C	0x785880  	MOV.B	W0, [W1++]
0x609E	0xB3C490  	MOV.B	#73, W0
0x60A0	0x785880  	MOV.B	W0, [W1++]
0x60A2	0xB3C200  	MOV.B	#32, W0
0x60A4	0x785880  	MOV.B	W0, [W1++]
0x60A6	0xB3C530  	MOV.B	#83, W0
0x60A8	0x785880  	MOV.B	W0, [W1++]
0x60AA	0xB3C490  	MOV.B	#73, W0
0x60AC	0x785880  	MOV.B	W0, [W1++]
0x60AE	0xB3C430  	MOV.B	#67, W0
0x60B0	0x785880  	MOV.B	W0, [W1++]
0x60B2	0xB3C410  	MOV.B	#65, W0
0x60B4	0x785880  	MOV.B	W0, [W1++]
0x60B6	0xB3C4B0  	MOV.B	#75, W0
0x60B8	0x785880  	MOV.B	W0, [W1++]
0x60BA	0xB3C4C0  	MOV.B	#76, W0
0x60BC	0x785880  	MOV.B	W0, [W1++]
0x60BE	0xB3C490  	MOV.B	#73, W0
0x60C0	0x785880  	MOV.B	W0, [W1++]
0x60C2	0xB3C4B0  	MOV.B	#75, W0
0x60C4	0x785880  	MOV.B	W0, [W1++]
0x60C6	0xB3C200  	MOV.B	#32, W0
0x60C8	0x785880  	MOV.B	W0, [W1++]
0x60CA	0xB3C200  	MOV.B	#32, W0
0x60CC	0x785880  	MOV.B	W0, [W1++]
0x60CE	0xB3C200  	MOV.B	#32, W0
0x60D0	0x785880  	MOV.B	W0, [W1++]
0x60D2	0xEF2000  	CLR	W0
0x60D4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,291 :: 		Flt_AcMCB        := '  AC SÝGORTA KAPALI  ';
0x60D6	0x20F7C1  	MOV	#lo_addr(_Flt_AcMCB), W1
0x60D8	0xB3C200  	MOV.B	#32, W0
0x60DA	0x785880  	MOV.B	W0, [W1++]
0x60DC	0xB3C200  	MOV.B	#32, W0
0x60DE	0x785880  	MOV.B	W0, [W1++]
0x60E0	0xB3C410  	MOV.B	#65, W0
0x60E2	0x785880  	MOV.B	W0, [W1++]
0x60E4	0xB3C430  	MOV.B	#67, W0
0x60E6	0x785880  	MOV.B	W0, [W1++]
0x60E8	0xB3C200  	MOV.B	#32, W0
0x60EA	0x785880  	MOV.B	W0, [W1++]
0x60EC	0xB3C530  	MOV.B	#83, W0
0x60EE	0x785880  	MOV.B	W0, [W1++]
0x60F0	0xB3CDD0  	MOV.B	#221, W0
0x60F2	0x785880  	MOV.B	W0, [W1++]
0x60F4	0xB3C470  	MOV.B	#71, W0
0x60F6	0x785880  	MOV.B	W0, [W1++]
0x60F8	0xB3C4F0  	MOV.B	#79, W0
0x60FA	0x785880  	MOV.B	W0, [W1++]
0x60FC	0xB3C520  	MOV.B	#82, W0
0x60FE	0x785880  	MOV.B	W0, [W1++]
0x6100	0xB3C540  	MOV.B	#84, W0
0x6102	0x785880  	MOV.B	W0, [W1++]
0x6104	0xB3C410  	MOV.B	#65, W0
0x6106	0x785880  	MOV.B	W0, [W1++]
0x6108	0xB3C200  	MOV.B	#32, W0
0x610A	0x785880  	MOV.B	W0, [W1++]
0x610C	0xB3C4B0  	MOV.B	#75, W0
0x610E	0x785880  	MOV.B	W0, [W1++]
0x6110	0xB3C410  	MOV.B	#65, W0
0x6112	0x785880  	MOV.B	W0, [W1++]
0x6114	0xB3C500  	MOV.B	#80, W0
0x6116	0x785880  	MOV.B	W0, [W1++]
0x6118	0xB3C410  	MOV.B	#65, W0
0x611A	0x785880  	MOV.B	W0, [W1++]
0x611C	0xB3C4C0  	MOV.B	#76, W0
0x611E	0x785880  	MOV.B	W0, [W1++]
0x6120	0xB3C490  	MOV.B	#73, W0
0x6122	0x785880  	MOV.B	W0, [W1++]
0x6124	0xB3C200  	MOV.B	#32, W0
0x6126	0x785880  	MOV.B	W0, [W1++]
0x6128	0xB3C200  	MOV.B	#32, W0
0x612A	0x785880  	MOV.B	W0, [W1++]
0x612C	0xEF2000  	CLR	W0
0x612E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,292 :: 		Flt_DcMCB        := '  DC SÝGORTA KAPALI  ';
0x6130	0x20FA81  	MOV	#lo_addr(_Flt_DcMCB), W1
0x6132	0xB3C200  	MOV.B	#32, W0
0x6134	0x785880  	MOV.B	W0, [W1++]
0x6136	0xB3C200  	MOV.B	#32, W0
0x6138	0x785880  	MOV.B	W0, [W1++]
0x613A	0xB3C440  	MOV.B	#68, W0
0x613C	0x785880  	MOV.B	W0, [W1++]
0x613E	0xB3C430  	MOV.B	#67, W0
0x6140	0x785880  	MOV.B	W0, [W1++]
0x6142	0xB3C200  	MOV.B	#32, W0
0x6144	0x785880  	MOV.B	W0, [W1++]
0x6146	0xB3C530  	MOV.B	#83, W0
0x6148	0x785880  	MOV.B	W0, [W1++]
0x614A	0xB3CDD0  	MOV.B	#221, W0
0x614C	0x785880  	MOV.B	W0, [W1++]
0x614E	0xB3C470  	MOV.B	#71, W0
0x6150	0x785880  	MOV.B	W0, [W1++]
0x6152	0xB3C4F0  	MOV.B	#79, W0
0x6154	0x785880  	MOV.B	W0, [W1++]
0x6156	0xB3C520  	MOV.B	#82, W0
0x6158	0x785880  	MOV.B	W0, [W1++]
0x615A	0xB3C540  	MOV.B	#84, W0
0x615C	0x785880  	MOV.B	W0, [W1++]
0x615E	0xB3C410  	MOV.B	#65, W0
0x6160	0x785880  	MOV.B	W0, [W1++]
0x6162	0xB3C200  	MOV.B	#32, W0
0x6164	0x785880  	MOV.B	W0, [W1++]
0x6166	0xB3C4B0  	MOV.B	#75, W0
0x6168	0x785880  	MOV.B	W0, [W1++]
0x616A	0xB3C410  	MOV.B	#65, W0
0x616C	0x785880  	MOV.B	W0, [W1++]
0x616E	0xB3C500  	MOV.B	#80, W0
0x6170	0x785880  	MOV.B	W0, [W1++]
0x6172	0xB3C410  	MOV.B	#65, W0
0x6174	0x785880  	MOV.B	W0, [W1++]
0x6176	0xB3C4C0  	MOV.B	#76, W0
0x6178	0x785880  	MOV.B	W0, [W1++]
0x617A	0xB3C490  	MOV.B	#73, W0
0x617C	0x785880  	MOV.B	W0, [W1++]
0x617E	0xB3C200  	MOV.B	#32, W0
0x6180	0x785880  	MOV.B	W0, [W1++]
0x6182	0xB3C200  	MOV.B	#32, W0
0x6184	0x785880  	MOV.B	W0, [W1++]
0x6186	0xEF2000  	CLR	W0
0x6188	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,293 :: 		Flt_BattMCB      := 'AKÜ SÝGORTASI KAPALI ';
0x618A	0x20F921  	MOV	#lo_addr(_Flt_BattMCB), W1
0x618C	0xB3C410  	MOV.B	#65, W0
0x618E	0x785880  	MOV.B	W0, [W1++]
0x6190	0xB3C4B0  	MOV.B	#75, W0
0x6192	0x785880  	MOV.B	W0, [W1++]
0x6194	0xB3CDC0  	MOV.B	#220, W0
0x6196	0x785880  	MOV.B	W0, [W1++]
0x6198	0xB3C200  	MOV.B	#32, W0
0x619A	0x785880  	MOV.B	W0, [W1++]
0x619C	0xB3C530  	MOV.B	#83, W0
0x619E	0x785880  	MOV.B	W0, [W1++]
0x61A0	0xB3CDD0  	MOV.B	#221, W0
0x61A2	0x785880  	MOV.B	W0, [W1++]
0x61A4	0xB3C470  	MOV.B	#71, W0
0x61A6	0x785880  	MOV.B	W0, [W1++]
0x61A8	0xB3C4F0  	MOV.B	#79, W0
0x61AA	0x785880  	MOV.B	W0, [W1++]
0x61AC	0xB3C520  	MOV.B	#82, W0
0x61AE	0x785880  	MOV.B	W0, [W1++]
0x61B0	0xB3C540  	MOV.B	#84, W0
0x61B2	0x785880  	MOV.B	W0, [W1++]
0x61B4	0xB3C410  	MOV.B	#65, W0
0x61B6	0x785880  	MOV.B	W0, [W1++]
0x61B8	0xB3C530  	MOV.B	#83, W0
0x61BA	0x785880  	MOV.B	W0, [W1++]
0x61BC	0xB3C490  	MOV.B	#73, W0
0x61BE	0x785880  	MOV.B	W0, [W1++]
0x61C0	0xB3C200  	MOV.B	#32, W0
0x61C2	0x785880  	MOV.B	W0, [W1++]
0x61C4	0xB3C4B0  	MOV.B	#75, W0
0x61C6	0x785880  	MOV.B	W0, [W1++]
0x61C8	0xB3C410  	MOV.B	#65, W0
0x61CA	0x785880  	MOV.B	W0, [W1++]
0x61CC	0xB3C500  	MOV.B	#80, W0
0x61CE	0x785880  	MOV.B	W0, [W1++]
0x61D0	0xB3C410  	MOV.B	#65, W0
0x61D2	0x785880  	MOV.B	W0, [W1++]
0x61D4	0xB3C4C0  	MOV.B	#76, W0
0x61D6	0x785880  	MOV.B	W0, [W1++]
0x61D8	0xB3C490  	MOV.B	#73, W0
0x61DA	0x785880  	MOV.B	W0, [W1++]
0x61DC	0xB3C200  	MOV.B	#32, W0
0x61DE	0x785880  	MOV.B	W0, [W1++]
0x61E0	0xEF2000  	CLR	W0
0x61E2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,294 :: 		Flt_BattReverse  := ' AKÜ BAGLANTISI TERS ';
0x61E4	0x2102C1  	MOV	#lo_addr(_Flt_BattReverse), W1
0x61E6	0xB3C200  	MOV.B	#32, W0
0x61E8	0x785880  	MOV.B	W0, [W1++]
0x61EA	0xB3C410  	MOV.B	#65, W0
0x61EC	0x785880  	MOV.B	W0, [W1++]
0x61EE	0xB3C4B0  	MOV.B	#75, W0
0x61F0	0x785880  	MOV.B	W0, [W1++]
0x61F2	0xB3CDC0  	MOV.B	#220, W0
0x61F4	0x785880  	MOV.B	W0, [W1++]
0x61F6	0xB3C200  	MOV.B	#32, W0
0x61F8	0x785880  	MOV.B	W0, [W1++]
0x61FA	0xB3C420  	MOV.B	#66, W0
0x61FC	0x785880  	MOV.B	W0, [W1++]
0x61FE	0xB3C410  	MOV.B	#65, W0
0x6200	0x785880  	MOV.B	W0, [W1++]
0x6202	0xB3C470  	MOV.B	#71, W0
0x6204	0x785880  	MOV.B	W0, [W1++]
0x6206	0xB3C4C0  	MOV.B	#76, W0
0x6208	0x785880  	MOV.B	W0, [W1++]
0x620A	0xB3C410  	MOV.B	#65, W0
0x620C	0x785880  	MOV.B	W0, [W1++]
0x620E	0xB3C4E0  	MOV.B	#78, W0
0x6210	0x785880  	MOV.B	W0, [W1++]
0x6212	0xB3C540  	MOV.B	#84, W0
0x6214	0x785880  	MOV.B	W0, [W1++]
0x6216	0xB3C490  	MOV.B	#73, W0
0x6218	0x785880  	MOV.B	W0, [W1++]
0x621A	0xB3C530  	MOV.B	#83, W0
0x621C	0x785880  	MOV.B	W0, [W1++]
0x621E	0xB3C490  	MOV.B	#73, W0
0x6220	0x785880  	MOV.B	W0, [W1++]
0x6222	0xB3C200  	MOV.B	#32, W0
0x6224	0x785880  	MOV.B	W0, [W1++]
0x6226	0xB3C540  	MOV.B	#84, W0
0x6228	0x785880  	MOV.B	W0, [W1++]
0x622A	0xB3C450  	MOV.B	#69, W0
0x622C	0x785880  	MOV.B	W0, [W1++]
0x622E	0xB3C520  	MOV.B	#82, W0
0x6230	0x785880  	MOV.B	W0, [W1++]
0x6232	0xB3C530  	MOV.B	#83, W0
0x6234	0x785880  	MOV.B	W0, [W1++]
0x6236	0xB3C200  	MOV.B	#32, W0
0x6238	0x785880  	MOV.B	W0, [W1++]
0x623A	0xEF2000  	CLR	W0
0x623C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,295 :: 		Flt_RedFault     := ' REDRESÖR GENEL HATA ';
0x623E	0x210B81  	MOV	#lo_addr(_Flt_RedFault), W1
0x6240	0xB3C200  	MOV.B	#32, W0
0x6242	0x785880  	MOV.B	W0, [W1++]
0x6244	0xB3C520  	MOV.B	#82, W0
0x6246	0x785880  	MOV.B	W0, [W1++]
0x6248	0xB3C450  	MOV.B	#69, W0
0x624A	0x785880  	MOV.B	W0, [W1++]
0x624C	0xB3C440  	MOV.B	#68, W0
0x624E	0x785880  	MOV.B	W0, [W1++]
0x6250	0xB3C520  	MOV.B	#82, W0
0x6252	0x785880  	MOV.B	W0, [W1++]
0x6254	0xB3C450  	MOV.B	#69, W0
0x6256	0x785880  	MOV.B	W0, [W1++]
0x6258	0xB3C530  	MOV.B	#83, W0
0x625A	0x785880  	MOV.B	W0, [W1++]
0x625C	0xB3CD60  	MOV.B	#214, W0
0x625E	0x785880  	MOV.B	W0, [W1++]
0x6260	0xB3C520  	MOV.B	#82, W0
0x6262	0x785880  	MOV.B	W0, [W1++]
0x6264	0xB3C200  	MOV.B	#32, W0
0x6266	0x785880  	MOV.B	W0, [W1++]
0x6268	0xB3C470  	MOV.B	#71, W0
0x626A	0x785880  	MOV.B	W0, [W1++]
0x626C	0xB3C450  	MOV.B	#69, W0
0x626E	0x785880  	MOV.B	W0, [W1++]
0x6270	0xB3C4E0  	MOV.B	#78, W0
0x6272	0x785880  	MOV.B	W0, [W1++]
0x6274	0xB3C450  	MOV.B	#69, W0
0x6276	0x785880  	MOV.B	W0, [W1++]
0x6278	0xB3C4C0  	MOV.B	#76, W0
0x627A	0x785880  	MOV.B	W0, [W1++]
0x627C	0xB3C200  	MOV.B	#32, W0
0x627E	0x785880  	MOV.B	W0, [W1++]
0x6280	0xB3C480  	MOV.B	#72, W0
0x6282	0x785880  	MOV.B	W0, [W1++]
0x6284	0xB3C410  	MOV.B	#65, W0
0x6286	0x785880  	MOV.B	W0, [W1++]
0x6288	0xB3C540  	MOV.B	#84, W0
0x628A	0x785880  	MOV.B	W0, [W1++]
0x628C	0xB3C410  	MOV.B	#65, W0
0x628E	0x785880  	MOV.B	W0, [W1++]
0x6290	0xB3C200  	MOV.B	#32, W0
0x6292	0x785880  	MOV.B	W0, [W1++]
0x6294	0xEF2000  	CLR	W0
0x6296	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,296 :: 		Flt_ThryComm     := '0xGTT1A HABERL. HATA ';
0x6298	0x210A21  	MOV	#lo_addr(_Flt_ThryComm), W1
0x629A	0xB3C300  	MOV.B	#48, W0
0x629C	0x785880  	MOV.B	W0, [W1++]
0x629E	0xB3C780  	MOV.B	#120, W0
0x62A0	0x785880  	MOV.B	W0, [W1++]
0x62A2	0xB3C470  	MOV.B	#71, W0
0x62A4	0x785880  	MOV.B	W0, [W1++]
0x62A6	0xB3C540  	MOV.B	#84, W0
0x62A8	0x785880  	MOV.B	W0, [W1++]
0x62AA	0xB3C540  	MOV.B	#84, W0
0x62AC	0x785880  	MOV.B	W0, [W1++]
0x62AE	0xB3C310  	MOV.B	#49, W0
0x62B0	0x785880  	MOV.B	W0, [W1++]
0x62B2	0xB3C410  	MOV.B	#65, W0
0x62B4	0x785880  	MOV.B	W0, [W1++]
0x62B6	0xB3C200  	MOV.B	#32, W0
0x62B8	0x785880  	MOV.B	W0, [W1++]
0x62BA	0xB3C480  	MOV.B	#72, W0
0x62BC	0x785880  	MOV.B	W0, [W1++]
0x62BE	0xB3C410  	MOV.B	#65, W0
0x62C0	0x785880  	MOV.B	W0, [W1++]
0x62C2	0xB3C420  	MOV.B	#66, W0
0x62C4	0x785880  	MOV.B	W0, [W1++]
0x62C6	0xB3C450  	MOV.B	#69, W0
0x62C8	0x785880  	MOV.B	W0, [W1++]
0x62CA	0xB3C520  	MOV.B	#82, W0
0x62CC	0x785880  	MOV.B	W0, [W1++]
0x62CE	0xB3C4C0  	MOV.B	#76, W0
0x62D0	0x785880  	MOV.B	W0, [W1++]
0x62D2	0xB3C2E0  	MOV.B	#46, W0
0x62D4	0x785880  	MOV.B	W0, [W1++]
0x62D6	0xB3C200  	MOV.B	#32, W0
0x62D8	0x785880  	MOV.B	W0, [W1++]
0x62DA	0xB3C480  	MOV.B	#72, W0
0x62DC	0x785880  	MOV.B	W0, [W1++]
0x62DE	0xB3C410  	MOV.B	#65, W0
0x62E0	0x785880  	MOV.B	W0, [W1++]
0x62E2	0xB3C540  	MOV.B	#84, W0
0x62E4	0x785880  	MOV.B	W0, [W1++]
0x62E6	0xB3C410  	MOV.B	#65, W0
0x62E8	0x785880  	MOV.B	W0, [W1++]
0x62EA	0xB3C200  	MOV.B	#32, W0
0x62EC	0x785880  	MOV.B	W0, [W1++]
0x62EE	0xEF2000  	CLR	W0
0x62F0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,297 :: 		Flt_AcMult       := '0xACMF2 HABERL. HATA ';
0x62F2	0x210CE1  	MOV	#lo_addr(_Flt_AcMult), W1
0x62F4	0xB3C300  	MOV.B	#48, W0
0x62F6	0x785880  	MOV.B	W0, [W1++]
0x62F8	0xB3C780  	MOV.B	#120, W0
0x62FA	0x785880  	MOV.B	W0, [W1++]
0x62FC	0xB3C410  	MOV.B	#65, W0
0x62FE	0x785880  	MOV.B	W0, [W1++]
0x6300	0xB3C430  	MOV.B	#67, W0
0x6302	0x785880  	MOV.B	W0, [W1++]
0x6304	0xB3C4D0  	MOV.B	#77, W0
0x6306	0x785880  	MOV.B	W0, [W1++]
0x6308	0xB3C460  	MOV.B	#70, W0
0x630A	0x785880  	MOV.B	W0, [W1++]
0x630C	0xB3C320  	MOV.B	#50, W0
0x630E	0x785880  	MOV.B	W0, [W1++]
0x6310	0xB3C200  	MOV.B	#32, W0
0x6312	0x785880  	MOV.B	W0, [W1++]
0x6314	0xB3C480  	MOV.B	#72, W0
0x6316	0x785880  	MOV.B	W0, [W1++]
0x6318	0xB3C410  	MOV.B	#65, W0
0x631A	0x785880  	MOV.B	W0, [W1++]
0x631C	0xB3C420  	MOV.B	#66, W0
0x631E	0x785880  	MOV.B	W0, [W1++]
0x6320	0xB3C450  	MOV.B	#69, W0
0x6322	0x785880  	MOV.B	W0, [W1++]
0x6324	0xB3C520  	MOV.B	#82, W0
0x6326	0x785880  	MOV.B	W0, [W1++]
0x6328	0xB3C4C0  	MOV.B	#76, W0
0x632A	0x785880  	MOV.B	W0, [W1++]
0x632C	0xB3C2E0  	MOV.B	#46, W0
0x632E	0x785880  	MOV.B	W0, [W1++]
0x6330	0xB3C200  	MOV.B	#32, W0
0x6332	0x785880  	MOV.B	W0, [W1++]
0x6334	0xB3C480  	MOV.B	#72, W0
0x6336	0x785880  	MOV.B	W0, [W1++]
0x6338	0xB3C410  	MOV.B	#65, W0
0x633A	0x785880  	MOV.B	W0, [W1++]
0x633C	0xB3C540  	MOV.B	#84, W0
0x633E	0x785880  	MOV.B	W0, [W1++]
0x6340	0xB3C410  	MOV.B	#65, W0
0x6342	0x785880  	MOV.B	W0, [W1++]
0x6344	0xB3C200  	MOV.B	#32, W0
0x6346	0x785880  	MOV.B	W0, [W1++]
0x6348	0xEF2000  	CLR	W0
0x634A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,298 :: 		Flt_Rly          := '0xFLTM3 HABERL. HATA ';
0x634C	0x210FA1  	MOV	#lo_addr(_Flt_Rly), W1
0x634E	0xB3C300  	MOV.B	#48, W0
0x6350	0x785880  	MOV.B	W0, [W1++]
0x6352	0xB3C780  	MOV.B	#120, W0
0x6354	0x785880  	MOV.B	W0, [W1++]
0x6356	0xB3C460  	MOV.B	#70, W0
0x6358	0x785880  	MOV.B	W0, [W1++]
0x635A	0xB3C4C0  	MOV.B	#76, W0
0x635C	0x785880  	MOV.B	W0, [W1++]
0x635E	0xB3C540  	MOV.B	#84, W0
0x6360	0x785880  	MOV.B	W0, [W1++]
0x6362	0xB3C4D0  	MOV.B	#77, W0
0x6364	0x785880  	MOV.B	W0, [W1++]
0x6366	0xB3C330  	MOV.B	#51, W0
0x6368	0x785880  	MOV.B	W0, [W1++]
0x636A	0xB3C200  	MOV.B	#32, W0
0x636C	0x785880  	MOV.B	W0, [W1++]
0x636E	0xB3C480  	MOV.B	#72, W0
0x6370	0x785880  	MOV.B	W0, [W1++]
0x6372	0xB3C410  	MOV.B	#65, W0
0x6374	0x785880  	MOV.B	W0, [W1++]
0x6376	0xB3C420  	MOV.B	#66, W0
0x6378	0x785880  	MOV.B	W0, [W1++]
0x637A	0xB3C450  	MOV.B	#69, W0
0x637C	0x785880  	MOV.B	W0, [W1++]
0x637E	0xB3C520  	MOV.B	#82, W0
0x6380	0x785880  	MOV.B	W0, [W1++]
0x6382	0xB3C4C0  	MOV.B	#76, W0
0x6384	0x785880  	MOV.B	W0, [W1++]
0x6386	0xB3C2E0  	MOV.B	#46, W0
0x6388	0x785880  	MOV.B	W0, [W1++]
0x638A	0xB3C200  	MOV.B	#32, W0
0x638C	0x785880  	MOV.B	W0, [W1++]
0x638E	0xB3C480  	MOV.B	#72, W0
0x6390	0x785880  	MOV.B	W0, [W1++]
0x6392	0xB3C410  	MOV.B	#65, W0
0x6394	0x785880  	MOV.B	W0, [W1++]
0x6396	0xB3C540  	MOV.B	#84, W0
0x6398	0x785880  	MOV.B	W0, [W1++]
0x639A	0xB3C410  	MOV.B	#65, W0
0x639C	0x785880  	MOV.B	W0, [W1++]
0x639E	0xB3C200  	MOV.B	#32, W0
0x63A0	0x785880  	MOV.B	W0, [W1++]
0x63A2	0xEF2000  	CLR	W0
0x63A4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,299 :: 		Flt_Volt         := '0xDISM4 HABERL. HATA ';
0x63A6	0x210E41  	MOV	#lo_addr(_Flt_Volt), W1
0x63A8	0xB3C300  	MOV.B	#48, W0
0x63AA	0x785880  	MOV.B	W0, [W1++]
0x63AC	0xB3C780  	MOV.B	#120, W0
0x63AE	0x785880  	MOV.B	W0, [W1++]
0x63B0	0xB3C440  	MOV.B	#68, W0
0x63B2	0x785880  	MOV.B	W0, [W1++]
0x63B4	0xB3C490  	MOV.B	#73, W0
0x63B6	0x785880  	MOV.B	W0, [W1++]
0x63B8	0xB3C530  	MOV.B	#83, W0
0x63BA	0x785880  	MOV.B	W0, [W1++]
0x63BC	0xB3C4D0  	MOV.B	#77, W0
0x63BE	0x785880  	MOV.B	W0, [W1++]
0x63C0	0xB3C340  	MOV.B	#52, W0
0x63C2	0x785880  	MOV.B	W0, [W1++]
0x63C4	0xB3C200  	MOV.B	#32, W0
0x63C6	0x785880  	MOV.B	W0, [W1++]
0x63C8	0xB3C480  	MOV.B	#72, W0
0x63CA	0x785880  	MOV.B	W0, [W1++]
0x63CC	0xB3C410  	MOV.B	#65, W0
0x63CE	0x785880  	MOV.B	W0, [W1++]
0x63D0	0xB3C420  	MOV.B	#66, W0
0x63D2	0x785880  	MOV.B	W0, [W1++]
0x63D4	0xB3C450  	MOV.B	#69, W0
0x63D6	0x785880  	MOV.B	W0, [W1++]
0x63D8	0xB3C520  	MOV.B	#82, W0
0x63DA	0x785880  	MOV.B	W0, [W1++]
0x63DC	0xB3C4C0  	MOV.B	#76, W0
0x63DE	0x785880  	MOV.B	W0, [W1++]
0x63E0	0xB3C2E0  	MOV.B	#46, W0
0x63E2	0x785880  	MOV.B	W0, [W1++]
0x63E4	0xB3C200  	MOV.B	#32, W0
0x63E6	0x785880  	MOV.B	W0, [W1++]
0x63E8	0xB3C480  	MOV.B	#72, W0
0x63EA	0x785880  	MOV.B	W0, [W1++]
0x63EC	0xB3C410  	MOV.B	#65, W0
0x63EE	0x785880  	MOV.B	W0, [W1++]
0x63F0	0xB3C540  	MOV.B	#84, W0
0x63F2	0x785880  	MOV.B	W0, [W1++]
0x63F4	0xB3C410  	MOV.B	#65, W0
0x63F6	0x785880  	MOV.B	W0, [W1++]
0x63F8	0xB3C200  	MOV.B	#32, W0
0x63FA	0x785880  	MOV.B	W0, [W1++]
0x63FC	0xEF2000  	CLR	W0
0x63FE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,300 :: 		Flt_DDschrg      := '  AKÜ DERÝN DEÞARJ   ';
0x6400	0x210581  	MOV	#lo_addr(_Flt_DDschrg), W1
0x6402	0xB3C200  	MOV.B	#32, W0
0x6404	0x785880  	MOV.B	W0, [W1++]
0x6406	0xB3C200  	MOV.B	#32, W0
0x6408	0x785880  	MOV.B	W0, [W1++]
0x640A	0xB3C410  	MOV.B	#65, W0
0x640C	0x785880  	MOV.B	W0, [W1++]
0x640E	0xB3C4B0  	MOV.B	#75, W0
0x6410	0x785880  	MOV.B	W0, [W1++]
0x6412	0xB3CDC0  	MOV.B	#220, W0
0x6414	0x785880  	MOV.B	W0, [W1++]
0x6416	0xB3C200  	MOV.B	#32, W0
0x6418	0x785880  	MOV.B	W0, [W1++]
0x641A	0xB3C440  	MOV.B	#68, W0
0x641C	0x785880  	MOV.B	W0, [W1++]
0x641E	0xB3C450  	MOV.B	#69, W0
0x6420	0x785880  	MOV.B	W0, [W1++]
0x6422	0xB3C520  	MOV.B	#82, W0
0x6424	0x785880  	MOV.B	W0, [W1++]
0x6426	0xB3CDD0  	MOV.B	#221, W0
0x6428	0x785880  	MOV.B	W0, [W1++]
0x642A	0xB3C4E0  	MOV.B	#78, W0
0x642C	0x785880  	MOV.B	W0, [W1++]
0x642E	0xB3C200  	MOV.B	#32, W0
0x6430	0x785880  	MOV.B	W0, [W1++]
0x6432	0xB3C440  	MOV.B	#68, W0
0x6434	0x785880  	MOV.B	W0, [W1++]
0x6436	0xB3C450  	MOV.B	#69, W0
0x6438	0x785880  	MOV.B	W0, [W1++]
0x643A	0xB3CDE0  	MOV.B	#222, W0
0x643C	0x785880  	MOV.B	W0, [W1++]
0x643E	0xB3C410  	MOV.B	#65, W0
0x6440	0x785880  	MOV.B	W0, [W1++]
0x6442	0xB3C520  	MOV.B	#82, W0
0x6444	0x785880  	MOV.B	W0, [W1++]
0x6446	0xB3C4A0  	MOV.B	#74, W0
0x6448	0x785880  	MOV.B	W0, [W1++]
0x644A	0xB3C200  	MOV.B	#32, W0
0x644C	0x785880  	MOV.B	W0, [W1++]
0x644E	0xB3C200  	MOV.B	#32, W0
0x6450	0x785880  	MOV.B	W0, [W1++]
0x6452	0xB3C200  	MOV.B	#32, W0
0x6454	0x785880  	MOV.B	W0, [W1++]
0x6456	0xEF2000  	CLR	W0
0x6458	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,301 :: 		SingleText       := ' Tekli ';
0x645A	0x215321  	MOV	#lo_addr(_SingleText), W1
0x645C	0xB3C200  	MOV.B	#32, W0
0x645E	0x785880  	MOV.B	W0, [W1++]
0x6460	0xB3C540  	MOV.B	#84, W0
0x6462	0x785880  	MOV.B	W0, [W1++]
0x6464	0xB3C650  	MOV.B	#101, W0
0x6466	0x785880  	MOV.B	W0, [W1++]
0x6468	0xB3C6B0  	MOV.B	#107, W0
0x646A	0x785880  	MOV.B	W0, [W1++]
0x646C	0xB3C6C0  	MOV.B	#108, W0
0x646E	0x785880  	MOV.B	W0, [W1++]
0x6470	0xB3C690  	MOV.B	#105, W0
0x6472	0x785880  	MOV.B	W0, [W1++]
0x6474	0xB3C200  	MOV.B	#32, W0
0x6476	0x785880  	MOV.B	W0, [W1++]
0x6478	0xEF2000  	CLR	W0
0x647A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,302 :: 		ParalelText      := 'Paralel';
0x647C	0x2153F1  	MOV	#lo_addr(_ParalelText), W1
0x647E	0xB3C500  	MOV.B	#80, W0
0x6480	0x785880  	MOV.B	W0, [W1++]
0x6482	0xB3C610  	MOV.B	#97, W0
0x6484	0x785880  	MOV.B	W0, [W1++]
0x6486	0xB3C720  	MOV.B	#114, W0
0x6488	0x785880  	MOV.B	W0, [W1++]
0x648A	0xB3C610  	MOV.B	#97, W0
0x648C	0x785880  	MOV.B	W0, [W1++]
0x648E	0xB3C6C0  	MOV.B	#108, W0
0x6490	0x785880  	MOV.B	W0, [W1++]
0x6492	0xB3C650  	MOV.B	#101, W0
0x6494	0x785880  	MOV.B	W0, [W1++]
0x6496	0xB3C6C0  	MOV.B	#108, W0
0x6498	0x785880  	MOV.B	W0, [W1++]
0x649A	0xEF2000  	CLR	W0
0x649C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,303 :: 		BackupText       := 'Yedekli';
0x649E	0x2152A1  	MOV	#lo_addr(_BackupText), W1
0x64A0	0xB3C590  	MOV.B	#89, W0
0x64A2	0x785880  	MOV.B	W0, [W1++]
0x64A4	0xB3C650  	MOV.B	#101, W0
0x64A6	0x785880  	MOV.B	W0, [W1++]
0x64A8	0xB3C640  	MOV.B	#100, W0
0x64AA	0x785880  	MOV.B	W0, [W1++]
0x64AC	0xB3C650  	MOV.B	#101, W0
0x64AE	0x785880  	MOV.B	W0, [W1++]
0x64B0	0xB3C6B0  	MOV.B	#107, W0
0x64B2	0x785880  	MOV.B	W0, [W1++]
0x64B4	0xB3C6C0  	MOV.B	#108, W0
0x64B6	0x785880  	MOV.B	W0, [W1++]
0x64B8	0xB3C690  	MOV.B	#105, W0
0x64BA	0x785880  	MOV.B	W0, [W1++]
0x64BC	0xEF2000  	CLR	W0
0x64BE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,304 :: 		PassNewText      := 'Yeni Þifre Girin ';
0x64C0	0x215BF1  	MOV	#lo_addr(_PassNewText), W1
0x64C2	0xB3C590  	MOV.B	#89, W0
0x64C4	0x785880  	MOV.B	W0, [W1++]
0x64C6	0xB3C650  	MOV.B	#101, W0
0x64C8	0x785880  	MOV.B	W0, [W1++]
0x64CA	0xB3C6E0  	MOV.B	#110, W0
0x64CC	0x785880  	MOV.B	W0, [W1++]
0x64CE	0xB3C690  	MOV.B	#105, W0
0x64D0	0x785880  	MOV.B	W0, [W1++]
0x64D2	0xB3C200  	MOV.B	#32, W0
0x64D4	0x785880  	MOV.B	W0, [W1++]
0x64D6	0xB3CDE0  	MOV.B	#222, W0
0x64D8	0x785880  	MOV.B	W0, [W1++]
0x64DA	0xB3C690  	MOV.B	#105, W0
0x64DC	0x785880  	MOV.B	W0, [W1++]
0x64DE	0xB3C660  	MOV.B	#102, W0
0x64E0	0x785880  	MOV.B	W0, [W1++]
0x64E2	0xB3C720  	MOV.B	#114, W0
0x64E4	0x785880  	MOV.B	W0, [W1++]
0x64E6	0xB3C650  	MOV.B	#101, W0
0x64E8	0x785880  	MOV.B	W0, [W1++]
0x64EA	0xB3C200  	MOV.B	#32, W0
0x64EC	0x785880  	MOV.B	W0, [W1++]
0x64EE	0xB3C470  	MOV.B	#71, W0
0x64F0	0x785880  	MOV.B	W0, [W1++]
0x64F2	0xB3C690  	MOV.B	#105, W0
0x64F4	0x785880  	MOV.B	W0, [W1++]
0x64F6	0xB3C720  	MOV.B	#114, W0
0x64F8	0x785880  	MOV.B	W0, [W1++]
0x64FA	0xB3C690  	MOV.B	#105, W0
0x64FC	0x785880  	MOV.B	W0, [W1++]
0x64FE	0xB3C6E0  	MOV.B	#110, W0
0x6500	0x785880  	MOV.B	W0, [W1++]
0x6502	0xB3C200  	MOV.B	#32, W0
0x6504	0x785880  	MOV.B	W0, [W1++]
0x6506	0xEF2000  	CLR	W0
0x6508	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,305 :: 		PassInputText    := 'Þifrenizi Giriniz';
0x650A	0x215FA1  	MOV	#lo_addr(_PassInputText), W1
0x650C	0xB3CDE0  	MOV.B	#222, W0
0x650E	0x785880  	MOV.B	W0, [W1++]
0x6510	0xB3C690  	MOV.B	#105, W0
0x6512	0x785880  	MOV.B	W0, [W1++]
0x6514	0xB3C660  	MOV.B	#102, W0
0x6516	0x785880  	MOV.B	W0, [W1++]
0x6518	0xB3C720  	MOV.B	#114, W0
0x651A	0x785880  	MOV.B	W0, [W1++]
0x651C	0xB3C650  	MOV.B	#101, W0
0x651E	0x785880  	MOV.B	W0, [W1++]
0x6520	0xB3C6E0  	MOV.B	#110, W0
0x6522	0x785880  	MOV.B	W0, [W1++]
0x6524	0xB3C690  	MOV.B	#105, W0
0x6526	0x785880  	MOV.B	W0, [W1++]
0x6528	0xB3C7A0  	MOV.B	#122, W0
0x652A	0x785880  	MOV.B	W0, [W1++]
0x652C	0xB3C690  	MOV.B	#105, W0
0x652E	0x785880  	MOV.B	W0, [W1++]
0x6530	0xB3C200  	MOV.B	#32, W0
0x6532	0x785880  	MOV.B	W0, [W1++]
0x6534	0xB3C470  	MOV.B	#71, W0
0x6536	0x785880  	MOV.B	W0, [W1++]
0x6538	0xB3C690  	MOV.B	#105, W0
0x653A	0x785880  	MOV.B	W0, [W1++]
0x653C	0xB3C720  	MOV.B	#114, W0
0x653E	0x785880  	MOV.B	W0, [W1++]
0x6540	0xB3C690  	MOV.B	#105, W0
0x6542	0x785880  	MOV.B	W0, [W1++]
0x6544	0xB3C6E0  	MOV.B	#110, W0
0x6546	0x785880  	MOV.B	W0, [W1++]
0x6548	0xB3C690  	MOV.B	#105, W0
0x654A	0x785880  	MOV.B	W0, [W1++]
0x654C	0xB3C7A0  	MOV.B	#122, W0
0x654E	0x785880  	MOV.B	W0, [W1++]
0x6550	0xEF2000  	CLR	W0
0x6552	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,306 :: 		Flt_RedHata      := '    REDRESÖR HATA    ';
0x6554	0x210421  	MOV	#lo_addr(_Flt_RedHata), W1
0x6556	0xB3C200  	MOV.B	#32, W0
0x6558	0x785880  	MOV.B	W0, [W1++]
0x655A	0xB3C200  	MOV.B	#32, W0
0x655C	0x785880  	MOV.B	W0, [W1++]
0x655E	0xB3C200  	MOV.B	#32, W0
0x6560	0x785880  	MOV.B	W0, [W1++]
0x6562	0xB3C200  	MOV.B	#32, W0
0x6564	0x785880  	MOV.B	W0, [W1++]
0x6566	0xB3C520  	MOV.B	#82, W0
0x6568	0x785880  	MOV.B	W0, [W1++]
0x656A	0xB3C450  	MOV.B	#69, W0
0x656C	0x785880  	MOV.B	W0, [W1++]
0x656E	0xB3C440  	MOV.B	#68, W0
0x6570	0x785880  	MOV.B	W0, [W1++]
0x6572	0xB3C520  	MOV.B	#82, W0
0x6574	0x785880  	MOV.B	W0, [W1++]
0x6576	0xB3C450  	MOV.B	#69, W0
0x6578	0x785880  	MOV.B	W0, [W1++]
0x657A	0xB3C530  	MOV.B	#83, W0
0x657C	0x785880  	MOV.B	W0, [W1++]
0x657E	0xB3CD60  	MOV.B	#214, W0
0x6580	0x785880  	MOV.B	W0, [W1++]
0x6582	0xB3C520  	MOV.B	#82, W0
0x6584	0x785880  	MOV.B	W0, [W1++]
0x6586	0xB3C200  	MOV.B	#32, W0
0x6588	0x785880  	MOV.B	W0, [W1++]
0x658A	0xB3C480  	MOV.B	#72, W0
0x658C	0x785880  	MOV.B	W0, [W1++]
0x658E	0xB3C410  	MOV.B	#65, W0
0x6590	0x785880  	MOV.B	W0, [W1++]
0x6592	0xB3C540  	MOV.B	#84, W0
0x6594	0x785880  	MOV.B	W0, [W1++]
0x6596	0xB3C410  	MOV.B	#65, W0
0x6598	0x785880  	MOV.B	W0, [W1++]
0x659A	0xB3C200  	MOV.B	#32, W0
0x659C	0x785880  	MOV.B	W0, [W1++]
0x659E	0xB3C200  	MOV.B	#32, W0
0x65A0	0x785880  	MOV.B	W0, [W1++]
0x65A2	0xB3C200  	MOV.B	#32, W0
0x65A4	0x785880  	MOV.B	W0, [W1++]
0x65A6	0xB3C200  	MOV.B	#32, W0
0x65A8	0x785880  	MOV.B	W0, [W1++]
0x65AA	0xEF2000  	CLR	W0
0x65AC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,308 :: 		Title_DroppMenu   := '    ÇALIÞMA MODU    ';
0x65AE	0x213891  	MOV	#lo_addr(_Title_DroppMenu), W1
0x65B0	0xB3C200  	MOV.B	#32, W0
0x65B2	0x785880  	MOV.B	W0, [W1++]
0x65B4	0xB3C200  	MOV.B	#32, W0
0x65B6	0x785880  	MOV.B	W0, [W1++]
0x65B8	0xB3C200  	MOV.B	#32, W0
0x65BA	0x785880  	MOV.B	W0, [W1++]
0x65BC	0xB3C200  	MOV.B	#32, W0
0x65BE	0x785880  	MOV.B	W0, [W1++]
0x65C0	0xB3CC70  	MOV.B	#199, W0
0x65C2	0x785880  	MOV.B	W0, [W1++]
0x65C4	0xB3C410  	MOV.B	#65, W0
0x65C6	0x785880  	MOV.B	W0, [W1++]
0x65C8	0xB3C4C0  	MOV.B	#76, W0
0x65CA	0x785880  	MOV.B	W0, [W1++]
0x65CC	0xB3C490  	MOV.B	#73, W0
0x65CE	0x785880  	MOV.B	W0, [W1++]
0x65D0	0xB3CDE0  	MOV.B	#222, W0
0x65D2	0x785880  	MOV.B	W0, [W1++]
0x65D4	0xB3C4D0  	MOV.B	#77, W0
0x65D6	0x785880  	MOV.B	W0, [W1++]
0x65D8	0xB3C410  	MOV.B	#65, W0
0x65DA	0x785880  	MOV.B	W0, [W1++]
0x65DC	0xB3C200  	MOV.B	#32, W0
0x65DE	0x785880  	MOV.B	W0, [W1++]
0x65E0	0xB3C4D0  	MOV.B	#77, W0
0x65E2	0x785880  	MOV.B	W0, [W1++]
0x65E4	0xB3C4F0  	MOV.B	#79, W0
0x65E6	0x785880  	MOV.B	W0, [W1++]
0x65E8	0xB3C440  	MOV.B	#68, W0
0x65EA	0x785880  	MOV.B	W0, [W1++]
0x65EC	0xB3C550  	MOV.B	#85, W0
0x65EE	0x785880  	MOV.B	W0, [W1++]
0x65F0	0xB3C200  	MOV.B	#32, W0
0x65F2	0x785880  	MOV.B	W0, [W1++]
0x65F4	0xB3C200  	MOV.B	#32, W0
0x65F6	0x785880  	MOV.B	W0, [W1++]
0x65F8	0xB3C200  	MOV.B	#32, W0
0x65FA	0x785880  	MOV.B	W0, [W1++]
0x65FC	0xB3C200  	MOV.B	#32, W0
0x65FE	0x785880  	MOV.B	W0, [W1++]
0x6600	0xEF2000  	CLR	W0
0x6602	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,309 :: 		Title_AcMenu      := '  AC GÝRÝÞ AYARLARI ';
0x6604	0x213731  	MOV	#lo_addr(_Title_AcMenu), W1
0x6606	0xB3C200  	MOV.B	#32, W0
0x6608	0x785880  	MOV.B	W0, [W1++]
0x660A	0xB3C200  	MOV.B	#32, W0
0x660C	0x785880  	MOV.B	W0, [W1++]
0x660E	0xB3C410  	MOV.B	#65, W0
0x6610	0x785880  	MOV.B	W0, [W1++]
0x6612	0xB3C430  	MOV.B	#67, W0
0x6614	0x785880  	MOV.B	W0, [W1++]
0x6616	0xB3C200  	MOV.B	#32, W0
0x6618	0x785880  	MOV.B	W0, [W1++]
0x661A	0xB3C470  	MOV.B	#71, W0
0x661C	0x785880  	MOV.B	W0, [W1++]
0x661E	0xB3CDD0  	MOV.B	#221, W0
0x6620	0x785880  	MOV.B	W0, [W1++]
0x6622	0xB3C520  	MOV.B	#82, W0
0x6624	0x785880  	MOV.B	W0, [W1++]
0x6626	0xB3CDD0  	MOV.B	#221, W0
0x6628	0x785880  	MOV.B	W0, [W1++]
0x662A	0xB3CDE0  	MOV.B	#222, W0
0x662C	0x785880  	MOV.B	W0, [W1++]
0x662E	0xB3C200  	MOV.B	#32, W0
0x6630	0x785880  	MOV.B	W0, [W1++]
0x6632	0xB3C410  	MOV.B	#65, W0
0x6634	0x785880  	MOV.B	W0, [W1++]
0x6636	0xB3C590  	MOV.B	#89, W0
0x6638	0x785880  	MOV.B	W0, [W1++]
0x663A	0xB3C410  	MOV.B	#65, W0
0x663C	0x785880  	MOV.B	W0, [W1++]
0x663E	0xB3C520  	MOV.B	#82, W0
0x6640	0x785880  	MOV.B	W0, [W1++]
0x6642	0xB3C4C0  	MOV.B	#76, W0
0x6644	0x785880  	MOV.B	W0, [W1++]
0x6646	0xB3C410  	MOV.B	#65, W0
0x6648	0x785880  	MOV.B	W0, [W1++]
0x664A	0xB3C520  	MOV.B	#82, W0
0x664C	0x785880  	MOV.B	W0, [W1++]
0x664E	0xB3C490  	MOV.B	#73, W0
0x6650	0x785880  	MOV.B	W0, [W1++]
0x6652	0xB3C200  	MOV.B	#32, W0
0x6654	0x785880  	MOV.B	W0, [W1++]
0x6656	0xEF2000  	CLR	W0
0x6658	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,310 :: 		Title_DcMenu      := '  DC ÇIKIÞ AYARLARI ';
0x665A	0x212A61  	MOV	#lo_addr(_Title_DcMenu), W1
0x665C	0xB3C200  	MOV.B	#32, W0
0x665E	0x785880  	MOV.B	W0, [W1++]
0x6660	0xB3C200  	MOV.B	#32, W0
0x6662	0x785880  	MOV.B	W0, [W1++]
0x6664	0xB3C440  	MOV.B	#68, W0
0x6666	0x785880  	MOV.B	W0, [W1++]
0x6668	0xB3C430  	MOV.B	#67, W0
0x666A	0x785880  	MOV.B	W0, [W1++]
0x666C	0xB3C200  	MOV.B	#32, W0
0x666E	0x785880  	MOV.B	W0, [W1++]
0x6670	0xB3CC70  	MOV.B	#199, W0
0x6672	0x785880  	MOV.B	W0, [W1++]
0x6674	0xB3C490  	MOV.B	#73, W0
0x6676	0x785880  	MOV.B	W0, [W1++]
0x6678	0xB3C4B0  	MOV.B	#75, W0
0x667A	0x785880  	MOV.B	W0, [W1++]
0x667C	0xB3C490  	MOV.B	#73, W0
0x667E	0x785880  	MOV.B	W0, [W1++]
0x6680	0xB3CDE0  	MOV.B	#222, W0
0x6682	0x785880  	MOV.B	W0, [W1++]
0x6684	0xB3C200  	MOV.B	#32, W0
0x6686	0x785880  	MOV.B	W0, [W1++]
0x6688	0xB3C410  	MOV.B	#65, W0
0x668A	0x785880  	MOV.B	W0, [W1++]
0x668C	0xB3C590  	MOV.B	#89, W0
0x668E	0x785880  	MOV.B	W0, [W1++]
0x6690	0xB3C410  	MOV.B	#65, W0
0x6692	0x785880  	MOV.B	W0, [W1++]
0x6694	0xB3C520  	MOV.B	#82, W0
0x6696	0x785880  	MOV.B	W0, [W1++]
0x6698	0xB3C4C0  	MOV.B	#76, W0
0x669A	0x785880  	MOV.B	W0, [W1++]
0x669C	0xB3C410  	MOV.B	#65, W0
0x669E	0x785880  	MOV.B	W0, [W1++]
0x66A0	0xB3C520  	MOV.B	#82, W0
0x66A2	0x785880  	MOV.B	W0, [W1++]
0x66A4	0xB3C490  	MOV.B	#73, W0
0x66A6	0x785880  	MOV.B	W0, [W1++]
0x66A8	0xB3C200  	MOV.B	#32, W0
0x66AA	0x785880  	MOV.B	W0, [W1++]
0x66AC	0xEF2000  	CLR	W0
0x66AE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,311 :: 		Title_BattMenu    := '    AKÜ AYARLARI    ';
0x66B0	0x213B31  	MOV	#lo_addr(_Title_BattMenu), W1
0x66B2	0xB3C200  	MOV.B	#32, W0
0x66B4	0x785880  	MOV.B	W0, [W1++]
0x66B6	0xB3C200  	MOV.B	#32, W0
0x66B8	0x785880  	MOV.B	W0, [W1++]
0x66BA	0xB3C200  	MOV.B	#32, W0
0x66BC	0x785880  	MOV.B	W0, [W1++]
0x66BE	0xB3C200  	MOV.B	#32, W0
0x66C0	0x785880  	MOV.B	W0, [W1++]
0x66C2	0xB3C410  	MOV.B	#65, W0
0x66C4	0x785880  	MOV.B	W0, [W1++]
0x66C6	0xB3C4B0  	MOV.B	#75, W0
0x66C8	0x785880  	MOV.B	W0, [W1++]
0x66CA	0xB3CDC0  	MOV.B	#220, W0
0x66CC	0x785880  	MOV.B	W0, [W1++]
0x66CE	0xB3C200  	MOV.B	#32, W0
0x66D0	0x785880  	MOV.B	W0, [W1++]
0x66D2	0xB3C410  	MOV.B	#65, W0
0x66D4	0x785880  	MOV.B	W0, [W1++]
0x66D6	0xB3C590  	MOV.B	#89, W0
0x66D8	0x785880  	MOV.B	W0, [W1++]
0x66DA	0xB3C410  	MOV.B	#65, W0
0x66DC	0x785880  	MOV.B	W0, [W1++]
0x66DE	0xB3C520  	MOV.B	#82, W0
0x66E0	0x785880  	MOV.B	W0, [W1++]
0x66E2	0xB3C4C0  	MOV.B	#76, W0
0x66E4	0x785880  	MOV.B	W0, [W1++]
0x66E6	0xB3C410  	MOV.B	#65, W0
0x66E8	0x785880  	MOV.B	W0, [W1++]
0x66EA	0xB3C520  	MOV.B	#82, W0
0x66EC	0x785880  	MOV.B	W0, [W1++]
0x66EE	0xB3C490  	MOV.B	#73, W0
0x66F0	0x785880  	MOV.B	W0, [W1++]
0x66F2	0xB3C200  	MOV.B	#32, W0
0x66F4	0x785880  	MOV.B	W0, [W1++]
0x66F6	0xB3C200  	MOV.B	#32, W0
0x66F8	0x785880  	MOV.B	W0, [W1++]
0x66FA	0xB3C200  	MOV.B	#32, W0
0x66FC	0x785880  	MOV.B	W0, [W1++]
0x66FE	0xB3C200  	MOV.B	#32, W0
0x6700	0x785880  	MOV.B	W0, [W1++]
0x6702	0xEF2000  	CLR	W0
0x6704	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,312 :: 		Title_BattMenu1   := '   AKÜ AYARLARI 1-2>';
0x6706	0x215471  	MOV	#lo_addr(_Title_BattMenu1), W1
0x6708	0xB3C200  	MOV.B	#32, W0
0x670A	0x785880  	MOV.B	W0, [W1++]
0x670C	0xB3C200  	MOV.B	#32, W0
0x670E	0x785880  	MOV.B	W0, [W1++]
0x6710	0xB3C200  	MOV.B	#32, W0
0x6712	0x785880  	MOV.B	W0, [W1++]
0x6714	0xB3C410  	MOV.B	#65, W0
0x6716	0x785880  	MOV.B	W0, [W1++]
0x6718	0xB3C4B0  	MOV.B	#75, W0
0x671A	0x785880  	MOV.B	W0, [W1++]
0x671C	0xB3CDC0  	MOV.B	#220, W0
0x671E	0x785880  	MOV.B	W0, [W1++]
0x6720	0xB3C200  	MOV.B	#32, W0
0x6722	0x785880  	MOV.B	W0, [W1++]
0x6724	0xB3C410  	MOV.B	#65, W0
0x6726	0x785880  	MOV.B	W0, [W1++]
0x6728	0xB3C590  	MOV.B	#89, W0
0x672A	0x785880  	MOV.B	W0, [W1++]
0x672C	0xB3C410  	MOV.B	#65, W0
0x672E	0x785880  	MOV.B	W0, [W1++]
0x6730	0xB3C520  	MOV.B	#82, W0
0x6732	0x785880  	MOV.B	W0, [W1++]
0x6734	0xB3C4C0  	MOV.B	#76, W0
0x6736	0x785880  	MOV.B	W0, [W1++]
0x6738	0xB3C410  	MOV.B	#65, W0
0x673A	0x785880  	MOV.B	W0, [W1++]
0x673C	0xB3C520  	MOV.B	#82, W0
0x673E	0x785880  	MOV.B	W0, [W1++]
0x6740	0xB3C490  	MOV.B	#73, W0
0x6742	0x785880  	MOV.B	W0, [W1++]
0x6744	0xB3C200  	MOV.B	#32, W0
0x6746	0x785880  	MOV.B	W0, [W1++]
0x6748	0xB3C310  	MOV.B	#49, W0
0x674A	0x785880  	MOV.B	W0, [W1++]
0x674C	0xB3C2D0  	MOV.B	#45, W0
0x674E	0x785880  	MOV.B	W0, [W1++]
0x6750	0xB3C320  	MOV.B	#50, W0
0x6752	0x785880  	MOV.B	W0, [W1++]
0x6754	0xB3C3E0  	MOV.B	#62, W0
0x6756	0x785880  	MOV.B	W0, [W1++]
0x6758	0xEF2000  	CLR	W0
0x675A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,313 :: 		Title_BattMenu2   := '   AKÜ AYARLARI 2-2<';
0x675C	0x2165E1  	MOV	#lo_addr(_Title_BattMenu2), W1
0x675E	0xB3C200  	MOV.B	#32, W0
0x6760	0x785880  	MOV.B	W0, [W1++]
0x6762	0xB3C200  	MOV.B	#32, W0
0x6764	0x785880  	MOV.B	W0, [W1++]
0x6766	0xB3C200  	MOV.B	#32, W0
0x6768	0x785880  	MOV.B	W0, [W1++]
0x676A	0xB3C410  	MOV.B	#65, W0
0x676C	0x785880  	MOV.B	W0, [W1++]
0x676E	0xB3C4B0  	MOV.B	#75, W0
0x6770	0x785880  	MOV.B	W0, [W1++]
0x6772	0xB3CDC0  	MOV.B	#220, W0
0x6774	0x785880  	MOV.B	W0, [W1++]
0x6776	0xB3C200  	MOV.B	#32, W0
0x6778	0x785880  	MOV.B	W0, [W1++]
0x677A	0xB3C410  	MOV.B	#65, W0
0x677C	0x785880  	MOV.B	W0, [W1++]
0x677E	0xB3C590  	MOV.B	#89, W0
0x6780	0x785880  	MOV.B	W0, [W1++]
0x6782	0xB3C410  	MOV.B	#65, W0
0x6784	0x785880  	MOV.B	W0, [W1++]
0x6786	0xB3C520  	MOV.B	#82, W0
0x6788	0x785880  	MOV.B	W0, [W1++]
0x678A	0xB3C4C0  	MOV.B	#76, W0
0x678C	0x785880  	MOV.B	W0, [W1++]
0x678E	0xB3C410  	MOV.B	#65, W0
0x6790	0x785880  	MOV.B	W0, [W1++]
0x6792	0xB3C520  	MOV.B	#82, W0
0x6794	0x785880  	MOV.B	W0, [W1++]
0x6796	0xB3C490  	MOV.B	#73, W0
0x6798	0x785880  	MOV.B	W0, [W1++]
0x679A	0xB3C200  	MOV.B	#32, W0
0x679C	0x785880  	MOV.B	W0, [W1++]
0x679E	0xB3C320  	MOV.B	#50, W0
0x67A0	0x785880  	MOV.B	W0, [W1++]
0x67A2	0xB3C2D0  	MOV.B	#45, W0
0x67A4	0x785880  	MOV.B	W0, [W1++]
0x67A6	0xB3C320  	MOV.B	#50, W0
0x67A8	0x785880  	MOV.B	W0, [W1++]
0x67AA	0xB3C3C0  	MOV.B	#60, W0
0x67AC	0x785880  	MOV.B	W0, [W1++]
0x67AE	0xEF2000  	CLR	W0
0x67B0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,314 :: 		Title_BattServMenu:= '  AKÜ-TEST ve BAKIM ';
0x67B2	0x213E31  	MOV	#lo_addr(_Title_BattServMenu), W1
0x67B4	0xB3C200  	MOV.B	#32, W0
0x67B6	0x785880  	MOV.B	W0, [W1++]
0x67B8	0xB3C200  	MOV.B	#32, W0
0x67BA	0x785880  	MOV.B	W0, [W1++]
0x67BC	0xB3C410  	MOV.B	#65, W0
0x67BE	0x785880  	MOV.B	W0, [W1++]
0x67C0	0xB3C4B0  	MOV.B	#75, W0
0x67C2	0x785880  	MOV.B	W0, [W1++]
0x67C4	0xB3CDC0  	MOV.B	#220, W0
0x67C6	0x785880  	MOV.B	W0, [W1++]
0x67C8	0xB3C2D0  	MOV.B	#45, W0
0x67CA	0x785880  	MOV.B	W0, [W1++]
0x67CC	0xB3C540  	MOV.B	#84, W0
0x67CE	0x785880  	MOV.B	W0, [W1++]
0x67D0	0xB3C450  	MOV.B	#69, W0
0x67D2	0x785880  	MOV.B	W0, [W1++]
0x67D4	0xB3C530  	MOV.B	#83, W0
0x67D6	0x785880  	MOV.B	W0, [W1++]
0x67D8	0xB3C540  	MOV.B	#84, W0
0x67DA	0x785880  	MOV.B	W0, [W1++]
0x67DC	0xB3C200  	MOV.B	#32, W0
0x67DE	0x785880  	MOV.B	W0, [W1++]
0x67E0	0xB3C760  	MOV.B	#118, W0
0x67E2	0x785880  	MOV.B	W0, [W1++]
0x67E4	0xB3C650  	MOV.B	#101, W0
0x67E6	0x785880  	MOV.B	W0, [W1++]
0x67E8	0xB3C200  	MOV.B	#32, W0
0x67EA	0x785880  	MOV.B	W0, [W1++]
0x67EC	0xB3C420  	MOV.B	#66, W0
0x67EE	0x785880  	MOV.B	W0, [W1++]
0x67F0	0xB3C410  	MOV.B	#65, W0
0x67F2	0x785880  	MOV.B	W0, [W1++]
0x67F4	0xB3C4B0  	MOV.B	#75, W0
0x67F6	0x785880  	MOV.B	W0, [W1++]
0x67F8	0xB3C490  	MOV.B	#73, W0
0x67FA	0x785880  	MOV.B	W0, [W1++]
0x67FC	0xB3C4D0  	MOV.B	#77, W0
0x67FE	0x785880  	MOV.B	W0, [W1++]
0x6800	0xB3C200  	MOV.B	#32, W0
0x6802	0x785880  	MOV.B	W0, [W1++]
0x6804	0xEF2000  	CLR	W0
0x6806	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,315 :: 		Title_ClockMenu   := ' SAAT-TARÝH AYARLARI';
0x6808	0x211E41  	MOV	#lo_addr(_Title_ClockMenu), W1
0x680A	0xB3C200  	MOV.B	#32, W0
0x680C	0x785880  	MOV.B	W0, [W1++]
0x680E	0xB3C530  	MOV.B	#83, W0
0x6810	0x785880  	MOV.B	W0, [W1++]
0x6812	0xB3C410  	MOV.B	#65, W0
0x6814	0x785880  	MOV.B	W0, [W1++]
0x6816	0xB3C410  	MOV.B	#65, W0
0x6818	0x785880  	MOV.B	W0, [W1++]
0x681A	0xB3C540  	MOV.B	#84, W0
0x681C	0x785880  	MOV.B	W0, [W1++]
0x681E	0xB3C2D0  	MOV.B	#45, W0
0x6820	0x785880  	MOV.B	W0, [W1++]
0x6822	0xB3C540  	MOV.B	#84, W0
0x6824	0x785880  	MOV.B	W0, [W1++]
0x6826	0xB3C410  	MOV.B	#65, W0
0x6828	0x785880  	MOV.B	W0, [W1++]
0x682A	0xB3C520  	MOV.B	#82, W0
0x682C	0x785880  	MOV.B	W0, [W1++]
0x682E	0xB3CDD0  	MOV.B	#221, W0
0x6830	0x785880  	MOV.B	W0, [W1++]
0x6832	0xB3C480  	MOV.B	#72, W0
0x6834	0x785880  	MOV.B	W0, [W1++]
0x6836	0xB3C200  	MOV.B	#32, W0
0x6838	0x785880  	MOV.B	W0, [W1++]
0x683A	0xB3C410  	MOV.B	#65, W0
0x683C	0x785880  	MOV.B	W0, [W1++]
0x683E	0xB3C590  	MOV.B	#89, W0
0x6840	0x785880  	MOV.B	W0, [W1++]
0x6842	0xB3C410  	MOV.B	#65, W0
0x6844	0x785880  	MOV.B	W0, [W1++]
0x6846	0xB3C520  	MOV.B	#82, W0
0x6848	0x785880  	MOV.B	W0, [W1++]
0x684A	0xB3C4C0  	MOV.B	#76, W0
0x684C	0x785880  	MOV.B	W0, [W1++]
0x684E	0xB3C410  	MOV.B	#65, W0
0x6850	0x785880  	MOV.B	W0, [W1++]
0x6852	0xB3C520  	MOV.B	#82, W0
0x6854	0x785880  	MOV.B	W0, [W1++]
0x6856	0xB3C490  	MOV.B	#73, W0
0x6858	0x785880  	MOV.B	W0, [W1++]
0x685A	0xEF2000  	CLR	W0
0x685C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,316 :: 		Title_LangMenu    := '     DÝL AYARLARI   ';
0x685E	0x213491  	MOV	#lo_addr(_Title_LangMenu), W1
0x6860	0xB3C200  	MOV.B	#32, W0
0x6862	0x785880  	MOV.B	W0, [W1++]
0x6864	0xB3C200  	MOV.B	#32, W0
0x6866	0x785880  	MOV.B	W0, [W1++]
0x6868	0xB3C200  	MOV.B	#32, W0
0x686A	0x785880  	MOV.B	W0, [W1++]
0x686C	0xB3C200  	MOV.B	#32, W0
0x686E	0x785880  	MOV.B	W0, [W1++]
0x6870	0xB3C200  	MOV.B	#32, W0
0x6872	0x785880  	MOV.B	W0, [W1++]
0x6874	0xB3C440  	MOV.B	#68, W0
0x6876	0x785880  	MOV.B	W0, [W1++]
0x6878	0xB3CDD0  	MOV.B	#221, W0
0x687A	0x785880  	MOV.B	W0, [W1++]
0x687C	0xB3C4C0  	MOV.B	#76, W0
0x687E	0x785880  	MOV.B	W0, [W1++]
0x6880	0xB3C200  	MOV.B	#32, W0
0x6882	0x785880  	MOV.B	W0, [W1++]
0x6884	0xB3C410  	MOV.B	#65, W0
0x6886	0x785880  	MOV.B	W0, [W1++]
0x6888	0xB3C590  	MOV.B	#89, W0
0x688A	0x785880  	MOV.B	W0, [W1++]
0x688C	0xB3C410  	MOV.B	#65, W0
0x688E	0x785880  	MOV.B	W0, [W1++]
0x6890	0xB3C520  	MOV.B	#82, W0
0x6892	0x785880  	MOV.B	W0, [W1++]
0x6894	0xB3C4C0  	MOV.B	#76, W0
0x6896	0x785880  	MOV.B	W0, [W1++]
0x6898	0xB3C410  	MOV.B	#65, W0
0x689A	0x785880  	MOV.B	W0, [W1++]
0x689C	0xB3C520  	MOV.B	#82, W0
0x689E	0x785880  	MOV.B	W0, [W1++]
0x68A0	0xB3C490  	MOV.B	#73, W0
0x68A2	0x785880  	MOV.B	W0, [W1++]
0x68A4	0xB3C200  	MOV.B	#32, W0
0x68A6	0x785880  	MOV.B	W0, [W1++]
0x68A8	0xB3C200  	MOV.B	#32, W0
0x68AA	0x785880  	MOV.B	W0, [W1++]
0x68AC	0xB3C200  	MOV.B	#32, W0
0x68AE	0x785880  	MOV.B	W0, [W1++]
0x68B0	0xEF2000  	CLR	W0
0x68B2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,317 :: 		Title_LogMenu     := '    OLAY GEÇMÝÞÝ    ';
0x68B4	0x2106E1  	MOV	#lo_addr(_Title_LogMenu), W1
0x68B6	0xB3C200  	MOV.B	#32, W0
0x68B8	0x785880  	MOV.B	W0, [W1++]
0x68BA	0xB3C200  	MOV.B	#32, W0
0x68BC	0x785880  	MOV.B	W0, [W1++]
0x68BE	0xB3C200  	MOV.B	#32, W0
0x68C0	0x785880  	MOV.B	W0, [W1++]
0x68C2	0xB3C200  	MOV.B	#32, W0
0x68C4	0x785880  	MOV.B	W0, [W1++]
0x68C6	0xB3C4F0  	MOV.B	#79, W0
0x68C8	0x785880  	MOV.B	W0, [W1++]
0x68CA	0xB3C4C0  	MOV.B	#76, W0
0x68CC	0x785880  	MOV.B	W0, [W1++]
0x68CE	0xB3C410  	MOV.B	#65, W0
0x68D0	0x785880  	MOV.B	W0, [W1++]
0x68D2	0xB3C590  	MOV.B	#89, W0
0x68D4	0x785880  	MOV.B	W0, [W1++]
0x68D6	0xB3C200  	MOV.B	#32, W0
0x68D8	0x785880  	MOV.B	W0, [W1++]
0x68DA	0xB3C470  	MOV.B	#71, W0
0x68DC	0x785880  	MOV.B	W0, [W1++]
0x68DE	0xB3C450  	MOV.B	#69, W0
0x68E0	0x785880  	MOV.B	W0, [W1++]
0x68E2	0xB3CC70  	MOV.B	#199, W0
0x68E4	0x785880  	MOV.B	W0, [W1++]
0x68E6	0xB3C4D0  	MOV.B	#77, W0
0x68E8	0x785880  	MOV.B	W0, [W1++]
0x68EA	0xB3CDD0  	MOV.B	#221, W0
0x68EC	0x785880  	MOV.B	W0, [W1++]
0x68EE	0xB3CDE0  	MOV.B	#222, W0
0x68F0	0x785880  	MOV.B	W0, [W1++]
0x68F2	0xB3CDD0  	MOV.B	#221, W0
0x68F4	0x785880  	MOV.B	W0, [W1++]
0x68F6	0xB3C200  	MOV.B	#32, W0
0x68F8	0x785880  	MOV.B	W0, [W1++]
0x68FA	0xB3C200  	MOV.B	#32, W0
0x68FC	0x785880  	MOV.B	W0, [W1++]
0x68FE	0xB3C200  	MOV.B	#32, W0
0x6900	0x785880  	MOV.B	W0, [W1++]
0x6902	0xB3C200  	MOV.B	#32, W0
0x6904	0x785880  	MOV.B	W0, [W1++]
0x6906	0xEF2000  	CLR	W0
0x6908	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,318 :: 		Title_LeakMenu    := 'KAÇAK AKIM AYARLARI ';
0x690A	0x212371  	MOV	#lo_addr(_Title_LeakMenu), W1
0x690C	0xB3C4B0  	MOV.B	#75, W0
0x690E	0x785880  	MOV.B	W0, [W1++]
0x6910	0xB3C410  	MOV.B	#65, W0
0x6912	0x785880  	MOV.B	W0, [W1++]
0x6914	0xB3CC70  	MOV.B	#199, W0
0x6916	0x785880  	MOV.B	W0, [W1++]
0x6918	0xB3C410  	MOV.B	#65, W0
0x691A	0x785880  	MOV.B	W0, [W1++]
0x691C	0xB3C4B0  	MOV.B	#75, W0
0x691E	0x785880  	MOV.B	W0, [W1++]
0x6920	0xB3C200  	MOV.B	#32, W0
0x6922	0x785880  	MOV.B	W0, [W1++]
0x6924	0xB3C410  	MOV.B	#65, W0
0x6926	0x785880  	MOV.B	W0, [W1++]
0x6928	0xB3C4B0  	MOV.B	#75, W0
0x692A	0x785880  	MOV.B	W0, [W1++]
0x692C	0xB3C490  	MOV.B	#73, W0
0x692E	0x785880  	MOV.B	W0, [W1++]
0x6930	0xB3C4D0  	MOV.B	#77, W0
0x6932	0x785880  	MOV.B	W0, [W1++]
0x6934	0xB3C200  	MOV.B	#32, W0
0x6936	0x785880  	MOV.B	W0, [W1++]
0x6938	0xB3C410  	MOV.B	#65, W0
0x693A	0x785880  	MOV.B	W0, [W1++]
0x693C	0xB3C590  	MOV.B	#89, W0
0x693E	0x785880  	MOV.B	W0, [W1++]
0x6940	0xB3C410  	MOV.B	#65, W0
0x6942	0x785880  	MOV.B	W0, [W1++]
0x6944	0xB3C520  	MOV.B	#82, W0
0x6946	0x785880  	MOV.B	W0, [W1++]
0x6948	0xB3C4C0  	MOV.B	#76, W0
0x694A	0x785880  	MOV.B	W0, [W1++]
0x694C	0xB3C410  	MOV.B	#65, W0
0x694E	0x785880  	MOV.B	W0, [W1++]
0x6950	0xB3C520  	MOV.B	#82, W0
0x6952	0x785880  	MOV.B	W0, [W1++]
0x6954	0xB3C490  	MOV.B	#73, W0
0x6956	0x785880  	MOV.B	W0, [W1++]
0x6958	0xB3C200  	MOV.B	#32, W0
0x695A	0x785880  	MOV.B	W0, [W1++]
0x695C	0xEF2000  	CLR	W0
0x695E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,319 :: 		Title_ModbusMenu  := '   MODBUS AYARLARI  ';
0x6960	0x2139E1  	MOV	#lo_addr(_Title_ModbusMenu), W1
0x6962	0xB3C200  	MOV.B	#32, W0
0x6964	0x785880  	MOV.B	W0, [W1++]
0x6966	0xB3C200  	MOV.B	#32, W0
0x6968	0x785880  	MOV.B	W0, [W1++]
0x696A	0xB3C200  	MOV.B	#32, W0
0x696C	0x785880  	MOV.B	W0, [W1++]
0x696E	0xB3C4D0  	MOV.B	#77, W0
0x6970	0x785880  	MOV.B	W0, [W1++]
0x6972	0xB3C4F0  	MOV.B	#79, W0
0x6974	0x785880  	MOV.B	W0, [W1++]
0x6976	0xB3C440  	MOV.B	#68, W0
0x6978	0x785880  	MOV.B	W0, [W1++]
0x697A	0xB3C420  	MOV.B	#66, W0
0x697C	0x785880  	MOV.B	W0, [W1++]
0x697E	0xB3C550  	MOV.B	#85, W0
0x6980	0x785880  	MOV.B	W0, [W1++]
0x6982	0xB3C530  	MOV.B	#83, W0
0x6984	0x785880  	MOV.B	W0, [W1++]
0x6986	0xB3C200  	MOV.B	#32, W0
0x6988	0x785880  	MOV.B	W0, [W1++]
0x698A	0xB3C410  	MOV.B	#65, W0
0x698C	0x785880  	MOV.B	W0, [W1++]
0x698E	0xB3C590  	MOV.B	#89, W0
0x6990	0x785880  	MOV.B	W0, [W1++]
0x6992	0xB3C410  	MOV.B	#65, W0
0x6994	0x785880  	MOV.B	W0, [W1++]
0x6996	0xB3C520  	MOV.B	#82, W0
0x6998	0x785880  	MOV.B	W0, [W1++]
0x699A	0xB3C4C0  	MOV.B	#76, W0
0x699C	0x785880  	MOV.B	W0, [W1++]
0x699E	0xB3C410  	MOV.B	#65, W0
0x69A0	0x785880  	MOV.B	W0, [W1++]
0x69A2	0xB3C520  	MOV.B	#82, W0
0x69A4	0x785880  	MOV.B	W0, [W1++]
0x69A6	0xB3C490  	MOV.B	#73, W0
0x69A8	0x785880  	MOV.B	W0, [W1++]
0x69AA	0xB3C200  	MOV.B	#32, W0
0x69AC	0x785880  	MOV.B	W0, [W1++]
0x69AE	0xB3C200  	MOV.B	#32, W0
0x69B0	0x785880  	MOV.B	W0, [W1++]
0x69B2	0xEF2000  	CLR	W0
0x69B4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,320 :: 		Title_TempMenu    := '  SICAKLIK AYARLARI ';
0x69B6	0x211B21  	MOV	#lo_addr(_Title_TempMenu), W1
0x69B8	0xB3C200  	MOV.B	#32, W0
0x69BA	0x785880  	MOV.B	W0, [W1++]
0x69BC	0xB3C200  	MOV.B	#32, W0
0x69BE	0x785880  	MOV.B	W0, [W1++]
0x69C0	0xB3C530  	MOV.B	#83, W0
0x69C2	0x785880  	MOV.B	W0, [W1++]
0x69C4	0xB3C490  	MOV.B	#73, W0
0x69C6	0x785880  	MOV.B	W0, [W1++]
0x69C8	0xB3C430  	MOV.B	#67, W0
0x69CA	0x785880  	MOV.B	W0, [W1++]
0x69CC	0xB3C410  	MOV.B	#65, W0
0x69CE	0x785880  	MOV.B	W0, [W1++]
0x69D0	0xB3C4B0  	MOV.B	#75, W0
0x69D2	0x785880  	MOV.B	W0, [W1++]
0x69D4	0xB3C4C0  	MOV.B	#76, W0
0x69D6	0x785880  	MOV.B	W0, [W1++]
0x69D8	0xB3C490  	MOV.B	#73, W0
0x69DA	0x785880  	MOV.B	W0, [W1++]
0x69DC	0xB3C4B0  	MOV.B	#75, W0
0x69DE	0x785880  	MOV.B	W0, [W1++]
0x69E0	0xB3C200  	MOV.B	#32, W0
0x69E2	0x785880  	MOV.B	W0, [W1++]
0x69E4	0xB3C410  	MOV.B	#65, W0
0x69E6	0x785880  	MOV.B	W0, [W1++]
0x69E8	0xB3C590  	MOV.B	#89, W0
0x69EA	0x785880  	MOV.B	W0, [W1++]
0x69EC	0xB3C410  	MOV.B	#65, W0
0x69EE	0x785880  	MOV.B	W0, [W1++]
0x69F0	0xB3C520  	MOV.B	#82, W0
0x69F2	0x785880  	MOV.B	W0, [W1++]
0x69F4	0xB3C4C0  	MOV.B	#76, W0
0x69F6	0x785880  	MOV.B	W0, [W1++]
0x69F8	0xB3C410  	MOV.B	#65, W0
0x69FA	0x785880  	MOV.B	W0, [W1++]
0x69FC	0xB3C520  	MOV.B	#82, W0
0x69FE	0x785880  	MOV.B	W0, [W1++]
0x6A00	0xB3C490  	MOV.B	#73, W0
0x6A02	0x785880  	MOV.B	W0, [W1++]
0x6A04	0xB3C200  	MOV.B	#32, W0
0x6A06	0x785880  	MOV.B	W0, [W1++]
0x6A08	0xEF2000  	CLR	W0
0x6A0A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,321 :: 		Title_AuthMenu    := '   YETKÝ AYARLARI   ';
0x6A0C	0x2135E1  	MOV	#lo_addr(_Title_AuthMenu), W1
0x6A0E	0xB3C200  	MOV.B	#32, W0
0x6A10	0x785880  	MOV.B	W0, [W1++]
0x6A12	0xB3C200  	MOV.B	#32, W0
0x6A14	0x785880  	MOV.B	W0, [W1++]
0x6A16	0xB3C200  	MOV.B	#32, W0
0x6A18	0x785880  	MOV.B	W0, [W1++]
0x6A1A	0xB3C590  	MOV.B	#89, W0
0x6A1C	0x785880  	MOV.B	W0, [W1++]
0x6A1E	0xB3C450  	MOV.B	#69, W0
0x6A20	0x785880  	MOV.B	W0, [W1++]
0x6A22	0xB3C540  	MOV.B	#84, W0
0x6A24	0x785880  	MOV.B	W0, [W1++]
0x6A26	0xB3C4B0  	MOV.B	#75, W0
0x6A28	0x785880  	MOV.B	W0, [W1++]
0x6A2A	0xB3CDD0  	MOV.B	#221, W0
0x6A2C	0x785880  	MOV.B	W0, [W1++]
0x6A2E	0xB3C200  	MOV.B	#32, W0
0x6A30	0x785880  	MOV.B	W0, [W1++]
0x6A32	0xB3C410  	MOV.B	#65, W0
0x6A34	0x785880  	MOV.B	W0, [W1++]
0x6A36	0xB3C590  	MOV.B	#89, W0
0x6A38	0x785880  	MOV.B	W0, [W1++]
0x6A3A	0xB3C410  	MOV.B	#65, W0
0x6A3C	0x785880  	MOV.B	W0, [W1++]
0x6A3E	0xB3C520  	MOV.B	#82, W0
0x6A40	0x785880  	MOV.B	W0, [W1++]
0x6A42	0xB3C4C0  	MOV.B	#76, W0
0x6A44	0x785880  	MOV.B	W0, [W1++]
0x6A46	0xB3C410  	MOV.B	#65, W0
0x6A48	0x785880  	MOV.B	W0, [W1++]
0x6A4A	0xB3C520  	MOV.B	#82, W0
0x6A4C	0x785880  	MOV.B	W0, [W1++]
0x6A4E	0xB3C490  	MOV.B	#73, W0
0x6A50	0x785880  	MOV.B	W0, [W1++]
0x6A52	0xB3C200  	MOV.B	#32, W0
0x6A54	0x785880  	MOV.B	W0, [W1++]
0x6A56	0xB3C200  	MOV.B	#32, W0
0x6A58	0x785880  	MOV.B	W0, [W1++]
0x6A5A	0xB3C200  	MOV.B	#32, W0
0x6A5C	0x785880  	MOV.B	W0, [W1++]
0x6A5E	0xEF2000  	CLR	W0
0x6A60	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,322 :: 		Title_AuthMenu1   := 'YETKÝ AYARLARI -1-2>';
0x6A62	0x216D01  	MOV	#lo_addr(_Title_AuthMenu1), W1
0x6A64	0xB3C590  	MOV.B	#89, W0
0x6A66	0x785880  	MOV.B	W0, [W1++]
0x6A68	0xB3C450  	MOV.B	#69, W0
0x6A6A	0x785880  	MOV.B	W0, [W1++]
0x6A6C	0xB3C540  	MOV.B	#84, W0
0x6A6E	0x785880  	MOV.B	W0, [W1++]
0x6A70	0xB3C4B0  	MOV.B	#75, W0
0x6A72	0x785880  	MOV.B	W0, [W1++]
0x6A74	0xB3CDD0  	MOV.B	#221, W0
0x6A76	0x785880  	MOV.B	W0, [W1++]
0x6A78	0xB3C200  	MOV.B	#32, W0
0x6A7A	0x785880  	MOV.B	W0, [W1++]
0x6A7C	0xB3C410  	MOV.B	#65, W0
0x6A7E	0x785880  	MOV.B	W0, [W1++]
0x6A80	0xB3C590  	MOV.B	#89, W0
0x6A82	0x785880  	MOV.B	W0, [W1++]
0x6A84	0xB3C410  	MOV.B	#65, W0
0x6A86	0x785880  	MOV.B	W0, [W1++]
0x6A88	0xB3C520  	MOV.B	#82, W0
0x6A8A	0x785880  	MOV.B	W0, [W1++]
0x6A8C	0xB3C4C0  	MOV.B	#76, W0
0x6A8E	0x785880  	MOV.B	W0, [W1++]
0x6A90	0xB3C410  	MOV.B	#65, W0
0x6A92	0x785880  	MOV.B	W0, [W1++]
0x6A94	0xB3C520  	MOV.B	#82, W0
0x6A96	0x785880  	MOV.B	W0, [W1++]
0x6A98	0xB3C490  	MOV.B	#73, W0
0x6A9A	0x785880  	MOV.B	W0, [W1++]
0x6A9C	0xB3C200  	MOV.B	#32, W0
0x6A9E	0x785880  	MOV.B	W0, [W1++]
0x6AA0	0xB3C2D0  	MOV.B	#45, W0
0x6AA2	0x785880  	MOV.B	W0, [W1++]
0x6AA4	0xB3C310  	MOV.B	#49, W0
0x6AA6	0x785880  	MOV.B	W0, [W1++]
0x6AA8	0xB3C2D0  	MOV.B	#45, W0
0x6AAA	0x785880  	MOV.B	W0, [W1++]
0x6AAC	0xB3C320  	MOV.B	#50, W0
0x6AAE	0x785880  	MOV.B	W0, [W1++]
0x6AB0	0xB3C3E0  	MOV.B	#62, W0
0x6AB2	0x785880  	MOV.B	W0, [W1++]
0x6AB4	0xEF2000  	CLR	W0
0x6AB6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,323 :: 		Title_AuthMenu2   := 'YETKÝ AYARLARI -2-2<';
0x6AB8	0x217091  	MOV	#lo_addr(_Title_AuthMenu2), W1
0x6ABA	0xB3C590  	MOV.B	#89, W0
0x6ABC	0x785880  	MOV.B	W0, [W1++]
0x6ABE	0xB3C450  	MOV.B	#69, W0
0x6AC0	0x785880  	MOV.B	W0, [W1++]
0x6AC2	0xB3C540  	MOV.B	#84, W0
0x6AC4	0x785880  	MOV.B	W0, [W1++]
0x6AC6	0xB3C4B0  	MOV.B	#75, W0
0x6AC8	0x785880  	MOV.B	W0, [W1++]
0x6ACA	0xB3CDD0  	MOV.B	#221, W0
0x6ACC	0x785880  	MOV.B	W0, [W1++]
0x6ACE	0xB3C200  	MOV.B	#32, W0
0x6AD0	0x785880  	MOV.B	W0, [W1++]
0x6AD2	0xB3C410  	MOV.B	#65, W0
0x6AD4	0x785880  	MOV.B	W0, [W1++]
0x6AD6	0xB3C590  	MOV.B	#89, W0
0x6AD8	0x785880  	MOV.B	W0, [W1++]
0x6ADA	0xB3C410  	MOV.B	#65, W0
0x6ADC	0x785880  	MOV.B	W0, [W1++]
0x6ADE	0xB3C520  	MOV.B	#82, W0
0x6AE0	0x785880  	MOV.B	W0, [W1++]
0x6AE2	0xB3C4C0  	MOV.B	#76, W0
0x6AE4	0x785880  	MOV.B	W0, [W1++]
0x6AE6	0xB3C410  	MOV.B	#65, W0
0x6AE8	0x785880  	MOV.B	W0, [W1++]
0x6AEA	0xB3C520  	MOV.B	#82, W0
0x6AEC	0x785880  	MOV.B	W0, [W1++]
0x6AEE	0xB3C490  	MOV.B	#73, W0
0x6AF0	0x785880  	MOV.B	W0, [W1++]
0x6AF2	0xB3C200  	MOV.B	#32, W0
0x6AF4	0x785880  	MOV.B	W0, [W1++]
0x6AF6	0xB3C2D0  	MOV.B	#45, W0
0x6AF8	0x785880  	MOV.B	W0, [W1++]
0x6AFA	0xB3C320  	MOV.B	#50, W0
0x6AFC	0x785880  	MOV.B	W0, [W1++]
0x6AFE	0xB3C2D0  	MOV.B	#45, W0
0x6B00	0x785880  	MOV.B	W0, [W1++]
0x6B02	0xB3C320  	MOV.B	#50, W0
0x6B04	0x785880  	MOV.B	W0, [W1++]
0x6B06	0xB3C3C0  	MOV.B	#60, W0
0x6B08	0x785880  	MOV.B	W0, [W1++]
0x6B0A	0xEF2000  	CLR	W0
0x6B0C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,324 :: 		Title_Event       := '    OLAY GEÇMÝÞÝ    ';
0x6B0E	0x213341  	MOV	#lo_addr(_Title_Event), W1
0x6B10	0xB3C200  	MOV.B	#32, W0
0x6B12	0x785880  	MOV.B	W0, [W1++]
0x6B14	0xB3C200  	MOV.B	#32, W0
0x6B16	0x785880  	MOV.B	W0, [W1++]
0x6B18	0xB3C200  	MOV.B	#32, W0
0x6B1A	0x785880  	MOV.B	W0, [W1++]
0x6B1C	0xB3C200  	MOV.B	#32, W0
0x6B1E	0x785880  	MOV.B	W0, [W1++]
0x6B20	0xB3C4F0  	MOV.B	#79, W0
0x6B22	0x785880  	MOV.B	W0, [W1++]
0x6B24	0xB3C4C0  	MOV.B	#76, W0
0x6B26	0x785880  	MOV.B	W0, [W1++]
0x6B28	0xB3C410  	MOV.B	#65, W0
0x6B2A	0x785880  	MOV.B	W0, [W1++]
0x6B2C	0xB3C590  	MOV.B	#89, W0
0x6B2E	0x785880  	MOV.B	W0, [W1++]
0x6B30	0xB3C200  	MOV.B	#32, W0
0x6B32	0x785880  	MOV.B	W0, [W1++]
0x6B34	0xB3C470  	MOV.B	#71, W0
0x6B36	0x785880  	MOV.B	W0, [W1++]
0x6B38	0xB3C450  	MOV.B	#69, W0
0x6B3A	0x785880  	MOV.B	W0, [W1++]
0x6B3C	0xB3CC70  	MOV.B	#199, W0
0x6B3E	0x785880  	MOV.B	W0, [W1++]
0x6B40	0xB3C4D0  	MOV.B	#77, W0
0x6B42	0x785880  	MOV.B	W0, [W1++]
0x6B44	0xB3CDD0  	MOV.B	#221, W0
0x6B46	0x785880  	MOV.B	W0, [W1++]
0x6B48	0xB3CDE0  	MOV.B	#222, W0
0x6B4A	0x785880  	MOV.B	W0, [W1++]
0x6B4C	0xB3CDD0  	MOV.B	#221, W0
0x6B4E	0x785880  	MOV.B	W0, [W1++]
0x6B50	0xB3C200  	MOV.B	#32, W0
0x6B52	0x785880  	MOV.B	W0, [W1++]
0x6B54	0xB3C200  	MOV.B	#32, W0
0x6B56	0x785880  	MOV.B	W0, [W1++]
0x6B58	0xB3C200  	MOV.B	#32, W0
0x6B5A	0x785880  	MOV.B	W0, [W1++]
0x6B5C	0xB3C200  	MOV.B	#32, W0
0x6B5E	0x785880  	MOV.B	W0, [W1++]
0x6B60	0xEF2000  	CLR	W0
0x6B62	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,326 :: 		SubTitle_DropMod  := 'DROP. MODU  =';
0x6B64	0x2150E1  	MOV	#lo_addr(_SubTitle_DropMod), W1
0x6B66	0xB3C440  	MOV.B	#68, W0
0x6B68	0x785880  	MOV.B	W0, [W1++]
0x6B6A	0xB3C520  	MOV.B	#82, W0
0x6B6C	0x785880  	MOV.B	W0, [W1++]
0x6B6E	0xB3C4F0  	MOV.B	#79, W0
0x6B70	0x785880  	MOV.B	W0, [W1++]
0x6B72	0xB3C500  	MOV.B	#80, W0
0x6B74	0x785880  	MOV.B	W0, [W1++]
0x6B76	0xB3C2E0  	MOV.B	#46, W0
0x6B78	0x785880  	MOV.B	W0, [W1++]
0x6B7A	0xB3C200  	MOV.B	#32, W0
0x6B7C	0x785880  	MOV.B	W0, [W1++]
0x6B7E	0xB3C4D0  	MOV.B	#77, W0
0x6B80	0x785880  	MOV.B	W0, [W1++]
0x6B82	0xB3C4F0  	MOV.B	#79, W0
0x6B84	0x785880  	MOV.B	W0, [W1++]
0x6B86	0xB3C440  	MOV.B	#68, W0
0x6B88	0x785880  	MOV.B	W0, [W1++]
0x6B8A	0xB3C550  	MOV.B	#85, W0
0x6B8C	0x785880  	MOV.B	W0, [W1++]
0x6B8E	0xB3C200  	MOV.B	#32, W0
0x6B90	0x785880  	MOV.B	W0, [W1++]
0x6B92	0xB3C200  	MOV.B	#32, W0
0x6B94	0x785880  	MOV.B	W0, [W1++]
0x6B96	0xB3C3D0  	MOV.B	#61, W0
0x6B98	0x785880  	MOV.B	W0, [W1++]
0x6B9A	0xEF2000  	CLR	W0
0x6B9C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,327 :: 		SubTitle_OpMod    := 'Çalýþma Modu=';
0x6B9E	0x215001  	MOV	#lo_addr(_SubTitle_OpMod), W1
0x6BA0	0xB3CC70  	MOV.B	#199, W0
0x6BA2	0x785880  	MOV.B	W0, [W1++]
0x6BA4	0xB3C610  	MOV.B	#97, W0
0x6BA6	0x785880  	MOV.B	W0, [W1++]
0x6BA8	0xB3C6C0  	MOV.B	#108, W0
0x6BAA	0x785880  	MOV.B	W0, [W1++]
0x6BAC	0xB3CFD0  	MOV.B	#253, W0
0x6BAE	0x785880  	MOV.B	W0, [W1++]
0x6BB0	0xB3CFE0  	MOV.B	#254, W0
0x6BB2	0x785880  	MOV.B	W0, [W1++]
0x6BB4	0xB3C6D0  	MOV.B	#109, W0
0x6BB6	0x785880  	MOV.B	W0, [W1++]
0x6BB8	0xB3C610  	MOV.B	#97, W0
0x6BBA	0x785880  	MOV.B	W0, [W1++]
0x6BBC	0xB3C200  	MOV.B	#32, W0
0x6BBE	0x785880  	MOV.B	W0, [W1++]
0x6BC0	0xB3C4D0  	MOV.B	#77, W0
0x6BC2	0x785880  	MOV.B	W0, [W1++]
0x6BC4	0xB3C6F0  	MOV.B	#111, W0
0x6BC6	0x785880  	MOV.B	W0, [W1++]
0x6BC8	0xB3C640  	MOV.B	#100, W0
0x6BCA	0x785880  	MOV.B	W0, [W1++]
0x6BCC	0xB3C750  	MOV.B	#117, W0
0x6BCE	0x785880  	MOV.B	W0, [W1++]
0x6BD0	0xB3C3D0  	MOV.B	#61, W0
0x6BD2	0x785880  	MOV.B	W0, [W1++]
0x6BD4	0xEF2000  	CLR	W0
0x6BD6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,328 :: 		SubTitle_MS       := 'Master/Slave=';
0x6BD8	0x2151C1  	MOV	#lo_addr(_SubTitle_MS), W1
0x6BDA	0xB3C4D0  	MOV.B	#77, W0
0x6BDC	0x785880  	MOV.B	W0, [W1++]
0x6BDE	0xB3C610  	MOV.B	#97, W0
0x6BE0	0x785880  	MOV.B	W0, [W1++]
0x6BE2	0xB3C730  	MOV.B	#115, W0
0x6BE4	0x785880  	MOV.B	W0, [W1++]
0x6BE6	0xB3C740  	MOV.B	#116, W0
0x6BE8	0x785880  	MOV.B	W0, [W1++]
0x6BEA	0xB3C650  	MOV.B	#101, W0
0x6BEC	0x785880  	MOV.B	W0, [W1++]
0x6BEE	0xB3C720  	MOV.B	#114, W0
0x6BF0	0x785880  	MOV.B	W0, [W1++]
0x6BF2	0xB3C2F0  	MOV.B	#47, W0
0x6BF4	0x785880  	MOV.B	W0, [W1++]
0x6BF6	0xB3C530  	MOV.B	#83, W0
0x6BF8	0x785880  	MOV.B	W0, [W1++]
0x6BFA	0xB3C6C0  	MOV.B	#108, W0
0x6BFC	0x785880  	MOV.B	W0, [W1++]
0x6BFE	0xB3C610  	MOV.B	#97, W0
0x6C00	0x785880  	MOV.B	W0, [W1++]
0x6C02	0xB3C760  	MOV.B	#118, W0
0x6C04	0x785880  	MOV.B	W0, [W1++]
0x6C06	0xB3C650  	MOV.B	#101, W0
0x6C08	0x785880  	MOV.B	W0, [W1++]
0x6C0A	0xB3C3D0  	MOV.B	#61, W0
0x6C0C	0x785880  	MOV.B	W0, [W1++]
0x6C0E	0xEF2000  	CLR	W0
0x6C10	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,329 :: 		SubTitle_Back     := 'Geri';
0x6C12	0x214541  	MOV	#lo_addr(_SubTitle_Back), W1
0x6C14	0xB3C470  	MOV.B	#71, W0
0x6C16	0x785880  	MOV.B	W0, [W1++]
0x6C18	0xB3C650  	MOV.B	#101, W0
0x6C1A	0x785880  	MOV.B	W0, [W1++]
0x6C1C	0xB3C720  	MOV.B	#114, W0
0x6C1E	0x785880  	MOV.B	W0, [W1++]
0x6C20	0xB3C690  	MOV.B	#105, W0
0x6C22	0x785880  	MOV.B	W0, [W1++]
0x6C24	0xEF2000  	CLR	W0
0x6C26	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,330 :: 		SubTitle_MaxVolt  := 'Max. Gerilim=';
0x6C28	0x213141  	MOV	#lo_addr(_SubTitle_MaxVolt), W1
0x6C2A	0xB3C4D0  	MOV.B	#77, W0
0x6C2C	0x785880  	MOV.B	W0, [W1++]
0x6C2E	0xB3C610  	MOV.B	#97, W0
0x6C30	0x785880  	MOV.B	W0, [W1++]
0x6C32	0xB3C780  	MOV.B	#120, W0
0x6C34	0x785880  	MOV.B	W0, [W1++]
0x6C36	0xB3C2E0  	MOV.B	#46, W0
0x6C38	0x785880  	MOV.B	W0, [W1++]
0x6C3A	0xB3C200  	MOV.B	#32, W0
0x6C3C	0x785880  	MOV.B	W0, [W1++]
0x6C3E	0xB3C470  	MOV.B	#71, W0
0x6C40	0x785880  	MOV.B	W0, [W1++]
0x6C42	0xB3C650  	MOV.B	#101, W0
0x6C44	0x785880  	MOV.B	W0, [W1++]
0x6C46	0xB3C720  	MOV.B	#114, W0
0x6C48	0x785880  	MOV.B	W0, [W1++]
0x6C4A	0xB3C690  	MOV.B	#105, W0
0x6C4C	0x785880  	MOV.B	W0, [W1++]
0x6C4E	0xB3C6C0  	MOV.B	#108, W0
0x6C50	0x785880  	MOV.B	W0, [W1++]
0x6C52	0xB3C690  	MOV.B	#105, W0
0x6C54	0x785880  	MOV.B	W0, [W1++]
0x6C56	0xB3C6D0  	MOV.B	#109, W0
0x6C58	0x785880  	MOV.B	W0, [W1++]
0x6C5A	0xB3C3D0  	MOV.B	#61, W0
0x6C5C	0x785880  	MOV.B	W0, [W1++]
0x6C5E	0xEF2000  	CLR	W0
0x6C60	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,331 :: 		SubTitle_MinVolt  := 'Min. Gerilim=';
0x6C62	0x213241  	MOV	#lo_addr(_SubTitle_MinVolt), W1
0x6C64	0xB3C4D0  	MOV.B	#77, W0
0x6C66	0x785880  	MOV.B	W0, [W1++]
0x6C68	0xB3C690  	MOV.B	#105, W0
0x6C6A	0x785880  	MOV.B	W0, [W1++]
0x6C6C	0xB3C6E0  	MOV.B	#110, W0
0x6C6E	0x785880  	MOV.B	W0, [W1++]
0x6C70	0xB3C2E0  	MOV.B	#46, W0
0x6C72	0x785880  	MOV.B	W0, [W1++]
0x6C74	0xB3C200  	MOV.B	#32, W0
0x6C76	0x785880  	MOV.B	W0, [W1++]
0x6C78	0xB3C470  	MOV.B	#71, W0
0x6C7A	0x785880  	MOV.B	W0, [W1++]
0x6C7C	0xB3C650  	MOV.B	#101, W0
0x6C7E	0x785880  	MOV.B	W0, [W1++]
0x6C80	0xB3C720  	MOV.B	#114, W0
0x6C82	0x785880  	MOV.B	W0, [W1++]
0x6C84	0xB3C690  	MOV.B	#105, W0
0x6C86	0x785880  	MOV.B	W0, [W1++]
0x6C88	0xB3C6C0  	MOV.B	#108, W0
0x6C8A	0x785880  	MOV.B	W0, [W1++]
0x6C8C	0xB3C690  	MOV.B	#105, W0
0x6C8E	0x785880  	MOV.B	W0, [W1++]
0x6C90	0xB3C6D0  	MOV.B	#109, W0
0x6C92	0x785880  	MOV.B	W0, [W1++]
0x6C94	0xB3C3D0  	MOV.B	#61, W0
0x6C96	0x785880  	MOV.B	W0, [W1++]
0x6C98	0xEF2000  	CLR	W0
0x6C9A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,332 :: 		SubTitle_VoltDiff := 'Volt. Fark  =';
0x6C9C	0x212C91  	MOV	#lo_addr(_SubTitle_VoltDiff), W1
0x6C9E	0xB3C560  	MOV.B	#86, W0
0x6CA0	0x785880  	MOV.B	W0, [W1++]
0x6CA2	0xB3C6F0  	MOV.B	#111, W0
0x6CA4	0x785880  	MOV.B	W0, [W1++]
0x6CA6	0xB3C6C0  	MOV.B	#108, W0
0x6CA8	0x785880  	MOV.B	W0, [W1++]
0x6CAA	0xB3C740  	MOV.B	#116, W0
0x6CAC	0x785880  	MOV.B	W0, [W1++]
0x6CAE	0xB3C2E0  	MOV.B	#46, W0
0x6CB0	0x785880  	MOV.B	W0, [W1++]
0x6CB2	0xB3C200  	MOV.B	#32, W0
0x6CB4	0x785880  	MOV.B	W0, [W1++]
0x6CB6	0xB3C460  	MOV.B	#70, W0
0x6CB8	0x785880  	MOV.B	W0, [W1++]
0x6CBA	0xB3C610  	MOV.B	#97, W0
0x6CBC	0x785880  	MOV.B	W0, [W1++]
0x6CBE	0xB3C720  	MOV.B	#114, W0
0x6CC0	0x785880  	MOV.B	W0, [W1++]
0x6CC2	0xB3C6B0  	MOV.B	#107, W0
0x6CC4	0x785880  	MOV.B	W0, [W1++]
0x6CC6	0xB3C200  	MOV.B	#32, W0
0x6CC8	0x785880  	MOV.B	W0, [W1++]
0x6CCA	0xB3C200  	MOV.B	#32, W0
0x6CCC	0x785880  	MOV.B	W0, [W1++]
0x6CCE	0xB3C3D0  	MOV.B	#61, W0
0x6CD0	0x785880  	MOV.B	W0, [W1++]
0x6CD2	0xEF2000  	CLR	W0
0x6CD4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,333 :: 		SubTitle_VoltProt := 'AC Koruma   =';
0x6CD6	0x212BB1  	MOV	#lo_addr(_SubTitle_VoltProt), W1
0x6CD8	0xB3C410  	MOV.B	#65, W0
0x6CDA	0x785880  	MOV.B	W0, [W1++]
0x6CDC	0xB3C430  	MOV.B	#67, W0
0x6CDE	0x785880  	MOV.B	W0, [W1++]
0x6CE0	0xB3C200  	MOV.B	#32, W0
0x6CE2	0x785880  	MOV.B	W0, [W1++]
0x6CE4	0xB3C4B0  	MOV.B	#75, W0
0x6CE6	0x785880  	MOV.B	W0, [W1++]
0x6CE8	0xB3C6F0  	MOV.B	#111, W0
0x6CEA	0x785880  	MOV.B	W0, [W1++]
0x6CEC	0xB3C720  	MOV.B	#114, W0
0x6CEE	0x785880  	MOV.B	W0, [W1++]
0x6CF0	0xB3C750  	MOV.B	#117, W0
0x6CF2	0x785880  	MOV.B	W0, [W1++]
0x6CF4	0xB3C6D0  	MOV.B	#109, W0
0x6CF6	0x785880  	MOV.B	W0, [W1++]
0x6CF8	0xB3C610  	MOV.B	#97, W0
0x6CFA	0x785880  	MOV.B	W0, [W1++]
0x6CFC	0xB3C200  	MOV.B	#32, W0
0x6CFE	0x785880  	MOV.B	W0, [W1++]
0x6D00	0xB3C200  	MOV.B	#32, W0
0x6D02	0x785880  	MOV.B	W0, [W1++]
0x6D04	0xB3C200  	MOV.B	#32, W0
0x6D06	0x785880  	MOV.B	W0, [W1++]
0x6D08	0xB3C3D0  	MOV.B	#61, W0
0x6D0A	0x785880  	MOV.B	W0, [W1++]
0x6D0C	0xEF2000  	CLR	W0
0x6D0E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,334 :: 		SubTitle_Pleak    := '(+) Kaçak   =';
0x6D10	0x212671  	MOV	#lo_addr(_SubTitle_Pleak), W1
0x6D12	0xB3C280  	MOV.B	#40, W0
0x6D14	0x785880  	MOV.B	W0, [W1++]
0x6D16	0xB3C2B0  	MOV.B	#43, W0
0x6D18	0x785880  	MOV.B	W0, [W1++]
0x6D1A	0xB3C290  	MOV.B	#41, W0
0x6D1C	0x785880  	MOV.B	W0, [W1++]
0x6D1E	0xB3C200  	MOV.B	#32, W0
0x6D20	0x785880  	MOV.B	W0, [W1++]
0x6D22	0xB3C4B0  	MOV.B	#75, W0
0x6D24	0x785880  	MOV.B	W0, [W1++]
0x6D26	0xB3C610  	MOV.B	#97, W0
0x6D28	0x785880  	MOV.B	W0, [W1++]
0x6D2A	0xB3CE70  	MOV.B	#231, W0
0x6D2C	0x785880  	MOV.B	W0, [W1++]
0x6D2E	0xB3C610  	MOV.B	#97, W0
0x6D30	0x785880  	MOV.B	W0, [W1++]
0x6D32	0xB3C6B0  	MOV.B	#107, W0
0x6D34	0x785880  	MOV.B	W0, [W1++]
0x6D36	0xB3C200  	MOV.B	#32, W0
0x6D38	0x785880  	MOV.B	W0, [W1++]
0x6D3A	0xB3C200  	MOV.B	#32, W0
0x6D3C	0x785880  	MOV.B	W0, [W1++]
0x6D3E	0xB3C200  	MOV.B	#32, W0
0x6D40	0x785880  	MOV.B	W0, [W1++]
0x6D42	0xB3C3D0  	MOV.B	#61, W0
0x6D44	0x785880  	MOV.B	W0, [W1++]
0x6D46	0xEF2000  	CLR	W0
0x6D48	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,335 :: 		SubTitle_Nleak    := '(-) Kaçak   =';
0x6D4A	0x2128C1  	MOV	#lo_addr(_SubTitle_Nleak), W1
0x6D4C	0xB3C280  	MOV.B	#40, W0
0x6D4E	0x785880  	MOV.B	W0, [W1++]
0x6D50	0xB3C2D0  	MOV.B	#45, W0
0x6D52	0x785880  	MOV.B	W0, [W1++]
0x6D54	0xB3C290  	MOV.B	#41, W0
0x6D56	0x785880  	MOV.B	W0, [W1++]
0x6D58	0xB3C200  	MOV.B	#32, W0
0x6D5A	0x785880  	MOV.B	W0, [W1++]
0x6D5C	0xB3C4B0  	MOV.B	#75, W0
0x6D5E	0x785880  	MOV.B	W0, [W1++]
0x6D60	0xB3C610  	MOV.B	#97, W0
0x6D62	0x785880  	MOV.B	W0, [W1++]
0x6D64	0xB3CE70  	MOV.B	#231, W0
0x6D66	0x785880  	MOV.B	W0, [W1++]
0x6D68	0xB3C610  	MOV.B	#97, W0
0x6D6A	0x785880  	MOV.B	W0, [W1++]
0x6D6C	0xB3C6B0  	MOV.B	#107, W0
0x6D6E	0x785880  	MOV.B	W0, [W1++]
0x6D70	0xB3C200  	MOV.B	#32, W0
0x6D72	0x785880  	MOV.B	W0, [W1++]
0x6D74	0xB3C200  	MOV.B	#32, W0
0x6D76	0x785880  	MOV.B	W0, [W1++]
0x6D78	0xB3C200  	MOV.B	#32, W0
0x6D7A	0x785880  	MOV.B	W0, [W1++]
0x6D7C	0xB3C3D0  	MOV.B	#61, W0
0x6D7E	0x785880  	MOV.B	W0, [W1++]
0x6D80	0xEF2000  	CLR	W0
0x6D82	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,336 :: 		SubTitle_Id       := 'Modbus ID   =';
0x6D84	0x215E61  	MOV	#lo_addr(_SubTitle_Id), W1
0x6D86	0xB3C4D0  	MOV.B	#77, W0
0x6D88	0x785880  	MOV.B	W0, [W1++]
0x6D8A	0xB3C6F0  	MOV.B	#111, W0
0x6D8C	0x785880  	MOV.B	W0, [W1++]
0x6D8E	0xB3C640  	MOV.B	#100, W0
0x6D90	0x785880  	MOV.B	W0, [W1++]
0x6D92	0xB3C620  	MOV.B	#98, W0
0x6D94	0x785880  	MOV.B	W0, [W1++]
0x6D96	0xB3C750  	MOV.B	#117, W0
0x6D98	0x785880  	MOV.B	W0, [W1++]
0x6D9A	0xB3C730  	MOV.B	#115, W0
0x6D9C	0x785880  	MOV.B	W0, [W1++]
0x6D9E	0xB3C200  	MOV.B	#32, W0
0x6DA0	0x785880  	MOV.B	W0, [W1++]
0x6DA2	0xB3C490  	MOV.B	#73, W0
0x6DA4	0x785880  	MOV.B	W0, [W1++]
0x6DA6	0xB3C440  	MOV.B	#68, W0
0x6DA8	0x785880  	MOV.B	W0, [W1++]
0x6DAA	0xB3C200  	MOV.B	#32, W0
0x6DAC	0x785880  	MOV.B	W0, [W1++]
0x6DAE	0xB3C200  	MOV.B	#32, W0
0x6DB0	0x785880  	MOV.B	W0, [W1++]
0x6DB2	0xB3C200  	MOV.B	#32, W0
0x6DB4	0x785880  	MOV.B	W0, [W1++]
0x6DB6	0xB3C3D0  	MOV.B	#61, W0
0x6DB8	0x785880  	MOV.B	W0, [W1++]
0x6DBA	0xEF2000  	CLR	W0
0x6DBC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,337 :: 		SubTitle_BaudRate := 'Baud Rate   =';
0x6DBE	0x215D81  	MOV	#lo_addr(_SubTitle_BaudRate), W1
0x6DC0	0xB3C420  	MOV.B	#66, W0
0x6DC2	0x785880  	MOV.B	W0, [W1++]
0x6DC4	0xB3C610  	MOV.B	#97, W0
0x6DC6	0x785880  	MOV.B	W0, [W1++]
0x6DC8	0xB3C750  	MOV.B	#117, W0
0x6DCA	0x785880  	MOV.B	W0, [W1++]
0x6DCC	0xB3C640  	MOV.B	#100, W0
0x6DCE	0x785880  	MOV.B	W0, [W1++]
0x6DD0	0xB3C200  	MOV.B	#32, W0
0x6DD2	0x785880  	MOV.B	W0, [W1++]
0x6DD4	0xB3C520  	MOV.B	#82, W0
0x6DD6	0x785880  	MOV.B	W0, [W1++]
0x6DD8	0xB3C610  	MOV.B	#97, W0
0x6DDA	0x785880  	MOV.B	W0, [W1++]
0x6DDC	0xB3C740  	MOV.B	#116, W0
0x6DDE	0x785880  	MOV.B	W0, [W1++]
0x6DE0	0xB3C650  	MOV.B	#101, W0
0x6DE2	0x785880  	MOV.B	W0, [W1++]
0x6DE4	0xB3C200  	MOV.B	#32, W0
0x6DE6	0x785880  	MOV.B	W0, [W1++]
0x6DE8	0xB3C200  	MOV.B	#32, W0
0x6DEA	0x785880  	MOV.B	W0, [W1++]
0x6DEC	0xB3C200  	MOV.B	#32, W0
0x6DEE	0x785880  	MOV.B	W0, [W1++]
0x6DF0	0xB3C3D0  	MOV.B	#61, W0
0x6DF2	0x785880  	MOV.B	W0, [W1++]
0x6DF4	0xEF2000  	CLR	W0
0x6DF6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,338 :: 		SubTitle_TempAlarm:= 'Alarm       =';
0x6DF8	0x211D51  	MOV	#lo_addr(_SubTitle_TempAlarm), W1
0x6DFA	0xB3C410  	MOV.B	#65, W0
0x6DFC	0x785880  	MOV.B	W0, [W1++]
0x6DFE	0xB3C6C0  	MOV.B	#108, W0
0x6E00	0x785880  	MOV.B	W0, [W1++]
0x6E02	0xB3C610  	MOV.B	#97, W0
0x6E04	0x785880  	MOV.B	W0, [W1++]
0x6E06	0xB3C720  	MOV.B	#114, W0
0x6E08	0x785880  	MOV.B	W0, [W1++]
0x6E0A	0xB3C6D0  	MOV.B	#109, W0
0x6E0C	0x785880  	MOV.B	W0, [W1++]
0x6E0E	0xB3C200  	MOV.B	#32, W0
0x6E10	0x785880  	MOV.B	W0, [W1++]
0x6E12	0xB3C200  	MOV.B	#32, W0
0x6E14	0x785880  	MOV.B	W0, [W1++]
0x6E16	0xB3C200  	MOV.B	#32, W0
0x6E18	0x785880  	MOV.B	W0, [W1++]
0x6E1A	0xB3C200  	MOV.B	#32, W0
0x6E1C	0x785880  	MOV.B	W0, [W1++]
0x6E1E	0xB3C200  	MOV.B	#32, W0
0x6E20	0x785880  	MOV.B	W0, [W1++]
0x6E22	0xB3C200  	MOV.B	#32, W0
0x6E24	0x785880  	MOV.B	W0, [W1++]
0x6E26	0xB3C200  	MOV.B	#32, W0
0x6E28	0x785880  	MOV.B	W0, [W1++]
0x6E2A	0xB3C3D0  	MOV.B	#61, W0
0x6E2C	0x785880  	MOV.B	W0, [W1++]
0x6E2E	0xEF2000  	CLR	W0
0x6E30	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,339 :: 		SubTitle_FanOn    := 'Fan On      =';
0x6E32	0x211C71  	MOV	#lo_addr(_SubTitle_FanOn), W1
0x6E34	0xB3C460  	MOV.B	#70, W0
0x6E36	0x785880  	MOV.B	W0, [W1++]
0x6E38	0xB3C610  	MOV.B	#97, W0
0x6E3A	0x785880  	MOV.B	W0, [W1++]
0x6E3C	0xB3C6E0  	MOV.B	#110, W0
0x6E3E	0x785880  	MOV.B	W0, [W1++]
0x6E40	0xB3C200  	MOV.B	#32, W0
0x6E42	0x785880  	MOV.B	W0, [W1++]
0x6E44	0xB3C4F0  	MOV.B	#79, W0
0x6E46	0x785880  	MOV.B	W0, [W1++]
0x6E48	0xB3C6E0  	MOV.B	#110, W0
0x6E4A	0x785880  	MOV.B	W0, [W1++]
0x6E4C	0xB3C200  	MOV.B	#32, W0
0x6E4E	0x785880  	MOV.B	W0, [W1++]
0x6E50	0xB3C200  	MOV.B	#32, W0
0x6E52	0x785880  	MOV.B	W0, [W1++]
0x6E54	0xB3C200  	MOV.B	#32, W0
0x6E56	0x785880  	MOV.B	W0, [W1++]
0x6E58	0xB3C200  	MOV.B	#32, W0
0x6E5A	0x785880  	MOV.B	W0, [W1++]
0x6E5C	0xB3C200  	MOV.B	#32, W0
0x6E5E	0x785880  	MOV.B	W0, [W1++]
0x6E60	0xB3C200  	MOV.B	#32, W0
0x6E62	0x785880  	MOV.B	W0, [W1++]
0x6E64	0xB3C3D0  	MOV.B	#61, W0
0x6E66	0x785880  	MOV.B	W0, [W1++]
0x6E68	0xEF2000  	CLR	W0
0x6E6A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,340 :: 		SubTitle_FanOff   := 'Fan Off     =';
0x6E6C	0x212021  	MOV	#lo_addr(_SubTitle_FanOff), W1
0x6E6E	0xB3C460  	MOV.B	#70, W0
0x6E70	0x785880  	MOV.B	W0, [W1++]
0x6E72	0xB3C610  	MOV.B	#97, W0
0x6E74	0x785880  	MOV.B	W0, [W1++]
0x6E76	0xB3C6E0  	MOV.B	#110, W0
0x6E78	0x785880  	MOV.B	W0, [W1++]
0x6E7A	0xB3C200  	MOV.B	#32, W0
0x6E7C	0x785880  	MOV.B	W0, [W1++]
0x6E7E	0xB3C4F0  	MOV.B	#79, W0
0x6E80	0x785880  	MOV.B	W0, [W1++]
0x6E82	0xB3C660  	MOV.B	#102, W0
0x6E84	0x785880  	MOV.B	W0, [W1++]
0x6E86	0xB3C660  	MOV.B	#102, W0
0x6E88	0x785880  	MOV.B	W0, [W1++]
0x6E8A	0xB3C200  	MOV.B	#32, W0
0x6E8C	0x785880  	MOV.B	W0, [W1++]
0x6E8E	0xB3C200  	MOV.B	#32, W0
0x6E90	0x785880  	MOV.B	W0, [W1++]
0x6E92	0xB3C200  	MOV.B	#32, W0
0x6E94	0x785880  	MOV.B	W0, [W1++]
0x6E96	0xB3C200  	MOV.B	#32, W0
0x6E98	0x785880  	MOV.B	W0, [W1++]
0x6E9A	0xB3C200  	MOV.B	#32, W0
0x6E9C	0x785880  	MOV.B	W0, [W1++]
0x6E9E	0xB3C3D0  	MOV.B	#61, W0
0x6EA0	0x785880  	MOV.B	W0, [W1++]
0x6EA2	0xEF2000  	CLR	W0
0x6EA4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,341 :: 		SubTitle_TempComp := 'SICAKLIK KOMPANZASYON';
0x6EA6	0x212111  	MOV	#lo_addr(_SubTitle_TempComp), W1
0x6EA8	0xB3C530  	MOV.B	#83, W0
0x6EAA	0x785880  	MOV.B	W0, [W1++]
0x6EAC	0xB3C490  	MOV.B	#73, W0
0x6EAE	0x785880  	MOV.B	W0, [W1++]
0x6EB0	0xB3C430  	MOV.B	#67, W0
0x6EB2	0x785880  	MOV.B	W0, [W1++]
0x6EB4	0xB3C410  	MOV.B	#65, W0
0x6EB6	0x785880  	MOV.B	W0, [W1++]
0x6EB8	0xB3C4B0  	MOV.B	#75, W0
0x6EBA	0x785880  	MOV.B	W0, [W1++]
0x6EBC	0xB3C4C0  	MOV.B	#76, W0
0x6EBE	0x785880  	MOV.B	W0, [W1++]
0x6EC0	0xB3C490  	MOV.B	#73, W0
0x6EC2	0x785880  	MOV.B	W0, [W1++]
0x6EC4	0xB3C4B0  	MOV.B	#75, W0
0x6EC6	0x785880  	MOV.B	W0, [W1++]
0x6EC8	0xB3C200  	MOV.B	#32, W0
0x6ECA	0x785880  	MOV.B	W0, [W1++]
0x6ECC	0xB3C4B0  	MOV.B	#75, W0
0x6ECE	0x785880  	MOV.B	W0, [W1++]
0x6ED0	0xB3C4F0  	MOV.B	#79, W0
0x6ED2	0x785880  	MOV.B	W0, [W1++]
0x6ED4	0xB3C4D0  	MOV.B	#77, W0
0x6ED6	0x785880  	MOV.B	W0, [W1++]
0x6ED8	0xB3C500  	MOV.B	#80, W0
0x6EDA	0x785880  	MOV.B	W0, [W1++]
0x6EDC	0xB3C410  	MOV.B	#65, W0
0x6EDE	0x785880  	MOV.B	W0, [W1++]
0x6EE0	0xB3C4E0  	MOV.B	#78, W0
0x6EE2	0x785880  	MOV.B	W0, [W1++]
0x6EE4	0xB3C5A0  	MOV.B	#90, W0
0x6EE6	0x785880  	MOV.B	W0, [W1++]
0x6EE8	0xB3C410  	MOV.B	#65, W0
0x6EEA	0x785880  	MOV.B	W0, [W1++]
0x6EEC	0xB3C530  	MOV.B	#83, W0
0x6EEE	0x785880  	MOV.B	W0, [W1++]
0x6EF0	0xB3C590  	MOV.B	#89, W0
0x6EF2	0x785880  	MOV.B	W0, [W1++]
0x6EF4	0xB3C4F0  	MOV.B	#79, W0
0x6EF6	0x785880  	MOV.B	W0, [W1++]
0x6EF8	0xB3C4E0  	MOV.B	#78, W0
0x6EFA	0x785880  	MOV.B	W0, [W1++]
0x6EFC	0xEF2000  	CLR	W0
0x6EFE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,342 :: 		SubTitle_SetVolt  := 'Çýkýþ Gerilm=';
0x6F00	0x213061  	MOV	#lo_addr(_SubTitle_SetVolt), W1
0x6F02	0xB3CC70  	MOV.B	#199, W0
0x6F04	0x785880  	MOV.B	W0, [W1++]
0x6F06	0xB3CFD0  	MOV.B	#253, W0
0x6F08	0x785880  	MOV.B	W0, [W1++]
0x6F0A	0xB3C6B0  	MOV.B	#107, W0
0x6F0C	0x785880  	MOV.B	W0, [W1++]
0x6F0E	0xB3CFD0  	MOV.B	#253, W0
0x6F10	0x785880  	MOV.B	W0, [W1++]
0x6F12	0xB3CFE0  	MOV.B	#254, W0
0x6F14	0x785880  	MOV.B	W0, [W1++]
0x6F16	0xB3C200  	MOV.B	#32, W0
0x6F18	0x785880  	MOV.B	W0, [W1++]
0x6F1A	0xB3C470  	MOV.B	#71, W0
0x6F1C	0x785880  	MOV.B	W0, [W1++]
0x6F1E	0xB3C650  	MOV.B	#101, W0
0x6F20	0x785880  	MOV.B	W0, [W1++]
0x6F22	0xB3C720  	MOV.B	#114, W0
0x6F24	0x785880  	MOV.B	W0, [W1++]
0x6F26	0xB3C690  	MOV.B	#105, W0
0x6F28	0x785880  	MOV.B	W0, [W1++]
0x6F2A	0xB3C6C0  	MOV.B	#108, W0
0x6F2C	0x785880  	MOV.B	W0, [W1++]
0x6F2E	0xB3C6D0  	MOV.B	#109, W0
0x6F30	0x785880  	MOV.B	W0, [W1++]
0x6F32	0xB3C3D0  	MOV.B	#61, W0
0x6F34	0x785880  	MOV.B	W0, [W1++]
0x6F36	0xEF2000  	CLR	W0
0x6F38	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,343 :: 		SubTitle_SetAmps  := 'Çýkýþ Akýmý =';
0x6F3A	0x212F81  	MOV	#lo_addr(_SubTitle_SetAmps), W1
0x6F3C	0xB3CC70  	MOV.B	#199, W0
0x6F3E	0x785880  	MOV.B	W0, [W1++]
0x6F40	0xB3CFD0  	MOV.B	#253, W0
0x6F42	0x785880  	MOV.B	W0, [W1++]
0x6F44	0xB3C6B0  	MOV.B	#107, W0
0x6F46	0x785880  	MOV.B	W0, [W1++]
0x6F48	0xB3CFD0  	MOV.B	#253, W0
0x6F4A	0x785880  	MOV.B	W0, [W1++]
0x6F4C	0xB3CFE0  	MOV.B	#254, W0
0x6F4E	0x785880  	MOV.B	W0, [W1++]
0x6F50	0xB3C200  	MOV.B	#32, W0
0x6F52	0x785880  	MOV.B	W0, [W1++]
0x6F54	0xB3C410  	MOV.B	#65, W0
0x6F56	0x785880  	MOV.B	W0, [W1++]
0x6F58	0xB3C6B0  	MOV.B	#107, W0
0x6F5A	0x785880  	MOV.B	W0, [W1++]
0x6F5C	0xB3CFD0  	MOV.B	#253, W0
0x6F5E	0x785880  	MOV.B	W0, [W1++]
0x6F60	0xB3C6D0  	MOV.B	#109, W0
0x6F62	0x785880  	MOV.B	W0, [W1++]
0x6F64	0xB3CFD0  	MOV.B	#253, W0
0x6F66	0x785880  	MOV.B	W0, [W1++]
0x6F68	0xB3C200  	MOV.B	#32, W0
0x6F6A	0x785880  	MOV.B	W0, [W1++]
0x6F6C	0xB3C3D0  	MOV.B	#61, W0
0x6F6E	0x785880  	MOV.B	W0, [W1++]
0x6F70	0xEF2000  	CLR	W0
0x6F72	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,344 :: 		SubTitle_BattAh   := 'Akü Kapasite=';
0x6F74	0x2155C1  	MOV	#lo_addr(_SubTitle_BattAh), W1
0x6F76	0xB3C410  	MOV.B	#65, W0
0x6F78	0x785880  	MOV.B	W0, [W1++]
0x6F7A	0xB3C6B0  	MOV.B	#107, W0
0x6F7C	0x785880  	MOV.B	W0, [W1++]
0x6F7E	0xB3CFC0  	MOV.B	#252, W0
0x6F80	0x785880  	MOV.B	W0, [W1++]
0x6F82	0xB3C200  	MOV.B	#32, W0
0x6F84	0x785880  	MOV.B	W0, [W1++]
0x6F86	0xB3C4B0  	MOV.B	#75, W0
0x6F88	0x785880  	MOV.B	W0, [W1++]
0x6F8A	0xB3C610  	MOV.B	#97, W0
0x6F8C	0x785880  	MOV.B	W0, [W1++]
0x6F8E	0xB3C700  	MOV.B	#112, W0
0x6F90	0x785880  	MOV.B	W0, [W1++]
0x6F92	0xB3C610  	MOV.B	#97, W0
0x6F94	0x785880  	MOV.B	W0, [W1++]
0x6F96	0xB3C730  	MOV.B	#115, W0
0x6F98	0x785880  	MOV.B	W0, [W1++]
0x6F9A	0xB3C690  	MOV.B	#105, W0
0x6F9C	0x785880  	MOV.B	W0, [W1++]
0x6F9E	0xB3C740  	MOV.B	#116, W0
0x6FA0	0x785880  	MOV.B	W0, [W1++]
0x6FA2	0xB3C650  	MOV.B	#101, W0
0x6FA4	0x785880  	MOV.B	W0, [W1++]
0x6FA6	0xB3C3D0  	MOV.B	#61, W0
0x6FA8	0x785880  	MOV.B	W0, [W1++]
0x6FAA	0xEF2000  	CLR	W0
0x6FAC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,345 :: 		SubTitle_BattAmps := 'Akým=';
0x6FAE	0x215781  	MOV	#lo_addr(_SubTitle_BattAmps), W1
0x6FB0	0xB3C410  	MOV.B	#65, W0
0x6FB2	0x785880  	MOV.B	W0, [W1++]
0x6FB4	0xB3C6B0  	MOV.B	#107, W0
0x6FB6	0x785880  	MOV.B	W0, [W1++]
0x6FB8	0xB3CFD0  	MOV.B	#253, W0
0x6FBA	0x785880  	MOV.B	W0, [W1++]
0x6FBC	0xB3C6D0  	MOV.B	#109, W0
0x6FBE	0x785880  	MOV.B	W0, [W1++]
0x6FC0	0xB3C3D0  	MOV.B	#61, W0
0x6FC2	0x785880  	MOV.B	W0, [W1++]
0x6FC4	0xEF2000  	CLR	W0
0x6FC6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,346 :: 		SubTitle_ChrgMode := 'Þarj Modu   =';
0x6FC8	0x2156A1  	MOV	#lo_addr(_SubTitle_ChrgMode), W1
0x6FCA	0xB3CDE0  	MOV.B	#222, W0
0x6FCC	0x785880  	MOV.B	W0, [W1++]
0x6FCE	0xB3C610  	MOV.B	#97, W0
0x6FD0	0x785880  	MOV.B	W0, [W1++]
0x6FD2	0xB3C720  	MOV.B	#114, W0
0x6FD4	0x785880  	MOV.B	W0, [W1++]
0x6FD6	0xB3C6A0  	MOV.B	#106, W0
0x6FD8	0x785880  	MOV.B	W0, [W1++]
0x6FDA	0xB3C200  	MOV.B	#32, W0
0x6FDC	0x785880  	MOV.B	W0, [W1++]
0x6FDE	0xB3C4D0  	MOV.B	#77, W0
0x6FE0	0x785880  	MOV.B	W0, [W1++]
0x6FE2	0xB3C6F0  	MOV.B	#111, W0
0x6FE4	0x785880  	MOV.B	W0, [W1++]
0x6FE6	0xB3C640  	MOV.B	#100, W0
0x6FE8	0x785880  	MOV.B	W0, [W1++]
0x6FEA	0xB3C750  	MOV.B	#117, W0
0x6FEC	0x785880  	MOV.B	W0, [W1++]
0x6FEE	0xB3C200  	MOV.B	#32, W0
0x6FF0	0x785880  	MOV.B	W0, [W1++]
0x6FF2	0xB3C200  	MOV.B	#32, W0
0x6FF4	0x785880  	MOV.B	W0, [W1++]
0x6FF6	0xB3C200  	MOV.B	#32, W0
0x6FF8	0x785880  	MOV.B	W0, [W1++]
0x6FFA	0xB3C3D0  	MOV.B	#61, W0
0x6FFC	0x785880  	MOV.B	W0, [W1++]
0x6FFE	0xEF2000  	CLR	W0
0x7000	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,347 :: 		SubTitle_BoostVolt:= 'Hýzlý Þarj V=';
0x7002	0x215AA1  	MOV	#lo_addr(_SubTitle_BoostVolt), W1
0x7004	0xB3C480  	MOV.B	#72, W0
0x7006	0x785880  	MOV.B	W0, [W1++]
0x7008	0xB3CFD0  	MOV.B	#253, W0
0x700A	0x785880  	MOV.B	W0, [W1++]
0x700C	0xB3C7A0  	MOV.B	#122, W0
0x700E	0x785880  	MOV.B	W0, [W1++]
0x7010	0xB3C6C0  	MOV.B	#108, W0
0x7012	0x785880  	MOV.B	W0, [W1++]
0x7014	0xB3CFD0  	MOV.B	#253, W0
0x7016	0x785880  	MOV.B	W0, [W1++]
0x7018	0xB3C200  	MOV.B	#32, W0
0x701A	0x785880  	MOV.B	W0, [W1++]
0x701C	0xB3CDE0  	MOV.B	#222, W0
0x701E	0x785880  	MOV.B	W0, [W1++]
0x7020	0xB3C610  	MOV.B	#97, W0
0x7022	0x785880  	MOV.B	W0, [W1++]
0x7024	0xB3C720  	MOV.B	#114, W0
0x7026	0x785880  	MOV.B	W0, [W1++]
0x7028	0xB3C6A0  	MOV.B	#106, W0
0x702A	0x785880  	MOV.B	W0, [W1++]
0x702C	0xB3C200  	MOV.B	#32, W0
0x702E	0x785880  	MOV.B	W0, [W1++]
0x7030	0xB3C560  	MOV.B	#86, W0
0x7032	0x785880  	MOV.B	W0, [W1++]
0x7034	0xB3C3D0  	MOV.B	#61, W0
0x7036	0x785880  	MOV.B	W0, [W1++]
0x7038	0xEF2000  	CLR	W0
0x703A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,348 :: 		SubTitle_FloatVolt:= 'Normal Þrj V=';
0x703C	0x216AE1  	MOV	#lo_addr(_SubTitle_FloatVolt), W1
0x703E	0xB3C4E0  	MOV.B	#78, W0
0x7040	0x785880  	MOV.B	W0, [W1++]
0x7042	0xB3C6F0  	MOV.B	#111, W0
0x7044	0x785880  	MOV.B	W0, [W1++]
0x7046	0xB3C720  	MOV.B	#114, W0
0x7048	0x785880  	MOV.B	W0, [W1++]
0x704A	0xB3C6D0  	MOV.B	#109, W0
0x704C	0x785880  	MOV.B	W0, [W1++]
0x704E	0xB3C610  	MOV.B	#97, W0
0x7050	0x785880  	MOV.B	W0, [W1++]
0x7052	0xB3C6C0  	MOV.B	#108, W0
0x7054	0x785880  	MOV.B	W0, [W1++]
0x7056	0xB3C200  	MOV.B	#32, W0
0x7058	0x785880  	MOV.B	W0, [W1++]
0x705A	0xB3CDE0  	MOV.B	#222, W0
0x705C	0x785880  	MOV.B	W0, [W1++]
0x705E	0xB3C720  	MOV.B	#114, W0
0x7060	0x785880  	MOV.B	W0, [W1++]
0x7062	0xB3C6A0  	MOV.B	#106, W0
0x7064	0x785880  	MOV.B	W0, [W1++]
0x7066	0xB3C200  	MOV.B	#32, W0
0x7068	0x785880  	MOV.B	W0, [W1++]
0x706A	0xB3C560  	MOV.B	#86, W0
0x706C	0x785880  	MOV.B	W0, [W1++]
0x706E	0xB3C3D0  	MOV.B	#61, W0
0x7070	0x785880  	MOV.B	W0, [W1++]
0x7072	0xEF2000  	CLR	W0
0x7074	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,349 :: 		SubTitle_BoostTime:= 'H.Þarj Süre =';
0x7076	0x216A01  	MOV	#lo_addr(_SubTitle_BoostTime), W1
0x7078	0xB3C480  	MOV.B	#72, W0
0x707A	0x785880  	MOV.B	W0, [W1++]
0x707C	0xB3C2E0  	MOV.B	#46, W0
0x707E	0x785880  	MOV.B	W0, [W1++]
0x7080	0xB3CDE0  	MOV.B	#222, W0
0x7082	0x785880  	MOV.B	W0, [W1++]
0x7084	0xB3C610  	MOV.B	#97, W0
0x7086	0x785880  	MOV.B	W0, [W1++]
0x7088	0xB3C720  	MOV.B	#114, W0
0x708A	0x785880  	MOV.B	W0, [W1++]
0x708C	0xB3C6A0  	MOV.B	#106, W0
0x708E	0x785880  	MOV.B	W0, [W1++]
0x7090	0xB3C200  	MOV.B	#32, W0
0x7092	0x785880  	MOV.B	W0, [W1++]
0x7094	0xB3C530  	MOV.B	#83, W0
0x7096	0x785880  	MOV.B	W0, [W1++]
0x7098	0xB3CFC0  	MOV.B	#252, W0
0x709A	0x785880  	MOV.B	W0, [W1++]
0x709C	0xB3C720  	MOV.B	#114, W0
0x709E	0x785880  	MOV.B	W0, [W1++]
0x70A0	0xB3C650  	MOV.B	#101, W0
0x70A2	0x785880  	MOV.B	W0, [W1++]
0x70A4	0xB3C200  	MOV.B	#32, W0
0x70A6	0x785880  	MOV.B	W0, [W1++]
0x70A8	0xB3C3D0  	MOV.B	#61, W0
0x70AA	0x785880  	MOV.B	W0, [W1++]
0x70AC	0xEF2000  	CLR	W0
0x70AE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,350 :: 		SubTitle_DeepVolt := 'Deþarj Gerlm=';
0x70B0	0x216BC1  	MOV	#lo_addr(_SubTitle_DeepVolt), W1
0x70B2	0xB3C440  	MOV.B	#68, W0
0x70B4	0x785880  	MOV.B	W0, [W1++]
0x70B6	0xB3C650  	MOV.B	#101, W0
0x70B8	0x785880  	MOV.B	W0, [W1++]
0x70BA	0xB3CFE0  	MOV.B	#254, W0
0x70BC	0x785880  	MOV.B	W0, [W1++]
0x70BE	0xB3C610  	MOV.B	#97, W0
0x70C0	0x785880  	MOV.B	W0, [W1++]
0x70C2	0xB3C720  	MOV.B	#114, W0
0x70C4	0x785880  	MOV.B	W0, [W1++]
0x70C6	0xB3C6A0  	MOV.B	#106, W0
0x70C8	0x785880  	MOV.B	W0, [W1++]
0x70CA	0xB3C200  	MOV.B	#32, W0
0x70CC	0x785880  	MOV.B	W0, [W1++]
0x70CE	0xB3C470  	MOV.B	#71, W0
0x70D0	0x785880  	MOV.B	W0, [W1++]
0x70D2	0xB3C650  	MOV.B	#101, W0
0x70D4	0x785880  	MOV.B	W0, [W1++]
0x70D6	0xB3C720  	MOV.B	#114, W0
0x70D8	0x785880  	MOV.B	W0, [W1++]
0x70DA	0xB3C6C0  	MOV.B	#108, W0
0x70DC	0x785880  	MOV.B	W0, [W1++]
0x70DE	0xB3C6D0  	MOV.B	#109, W0
0x70E0	0x785880  	MOV.B	W0, [W1++]
0x70E2	0xB3C3D0  	MOV.B	#61, W0
0x70E4	0x785880  	MOV.B	W0, [W1++]
0x70E6	0xEF2000  	CLR	W0
0x70E8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,351 :: 		SubTitle_BFMode   := 'Oto B/F Modu=';
0x70EA	0x216761  	MOV	#lo_addr(_SubTitle_BFMode), W1
0x70EC	0xB3C4F0  	MOV.B	#79, W0
0x70EE	0x785880  	MOV.B	W0, [W1++]
0x70F0	0xB3C740  	MOV.B	#116, W0
0x70F2	0x785880  	MOV.B	W0, [W1++]
0x70F4	0xB3C6F0  	MOV.B	#111, W0
0x70F6	0x785880  	MOV.B	W0, [W1++]
0x70F8	0xB3C200  	MOV.B	#32, W0
0x70FA	0x785880  	MOV.B	W0, [W1++]
0x70FC	0xB3C420  	MOV.B	#66, W0
0x70FE	0x785880  	MOV.B	W0, [W1++]
0x7100	0xB3C2F0  	MOV.B	#47, W0
0x7102	0x785880  	MOV.B	W0, [W1++]
0x7104	0xB3C460  	MOV.B	#70, W0
0x7106	0x785880  	MOV.B	W0, [W1++]
0x7108	0xB3C200  	MOV.B	#32, W0
0x710A	0x785880  	MOV.B	W0, [W1++]
0x710C	0xB3C4D0  	MOV.B	#77, W0
0x710E	0x785880  	MOV.B	W0, [W1++]
0x7110	0xB3C6F0  	MOV.B	#111, W0
0x7112	0x785880  	MOV.B	W0, [W1++]
0x7114	0xB3C640  	MOV.B	#100, W0
0x7116	0x785880  	MOV.B	W0, [W1++]
0x7118	0xB3C750  	MOV.B	#117, W0
0x711A	0x785880  	MOV.B	W0, [W1++]
0x711C	0xB3C3D0  	MOV.B	#61, W0
0x711E	0x785880  	MOV.B	W0, [W1++]
0x7120	0xEF2000  	CLR	W0
0x7122	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,352 :: 		SubTitle_Blimit   := 'Hýzlý Þarj L=';
0x7124	0x216921  	MOV	#lo_addr(_SubTitle_Blimit), W1
0x7126	0xB3C480  	MOV.B	#72, W0
0x7128	0x785880  	MOV.B	W0, [W1++]
0x712A	0xB3CFD0  	MOV.B	#253, W0
0x712C	0x785880  	MOV.B	W0, [W1++]
0x712E	0xB3C7A0  	MOV.B	#122, W0
0x7130	0x785880  	MOV.B	W0, [W1++]
0x7132	0xB3C6C0  	MOV.B	#108, W0
0x7134	0x785880  	MOV.B	W0, [W1++]
0x7136	0xB3CFD0  	MOV.B	#253, W0
0x7138	0x785880  	MOV.B	W0, [W1++]
0x713A	0xB3C200  	MOV.B	#32, W0
0x713C	0x785880  	MOV.B	W0, [W1++]
0x713E	0xB3CDE0  	MOV.B	#222, W0
0x7140	0x785880  	MOV.B	W0, [W1++]
0x7142	0xB3C610  	MOV.B	#97, W0
0x7144	0x785880  	MOV.B	W0, [W1++]
0x7146	0xB3C720  	MOV.B	#114, W0
0x7148	0x785880  	MOV.B	W0, [W1++]
0x714A	0xB3C6A0  	MOV.B	#106, W0
0x714C	0x785880  	MOV.B	W0, [W1++]
0x714E	0xB3C200  	MOV.B	#32, W0
0x7150	0x785880  	MOV.B	W0, [W1++]
0x7152	0xB3C4C0  	MOV.B	#76, W0
0x7154	0x785880  	MOV.B	W0, [W1++]
0x7156	0xB3C3D0  	MOV.B	#61, W0
0x7158	0x785880  	MOV.B	W0, [W1++]
0x715A	0xEF2000  	CLR	W0
0x715C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,353 :: 		SubTitle_Flimit   := 'NormalÞarj L=';
0x715E	0x216841  	MOV	#lo_addr(_SubTitle_Flimit), W1
0x7160	0xB3C4E0  	MOV.B	#78, W0
0x7162	0x785880  	MOV.B	W0, [W1++]
0x7164	0xB3C6F0  	MOV.B	#111, W0
0x7166	0x785880  	MOV.B	W0, [W1++]
0x7168	0xB3C720  	MOV.B	#114, W0
0x716A	0x785880  	MOV.B	W0, [W1++]
0x716C	0xB3C6D0  	MOV.B	#109, W0
0x716E	0x785880  	MOV.B	W0, [W1++]
0x7170	0xB3C610  	MOV.B	#97, W0
0x7172	0x785880  	MOV.B	W0, [W1++]
0x7174	0xB3C6C0  	MOV.B	#108, W0
0x7176	0x785880  	MOV.B	W0, [W1++]
0x7178	0xB3CDE0  	MOV.B	#222, W0
0x717A	0x785880  	MOV.B	W0, [W1++]
0x717C	0xB3C610  	MOV.B	#97, W0
0x717E	0x785880  	MOV.B	W0, [W1++]
0x7180	0xB3C720  	MOV.B	#114, W0
0x7182	0x785880  	MOV.B	W0, [W1++]
0x7184	0xB3C6A0  	MOV.B	#106, W0
0x7186	0x785880  	MOV.B	W0, [W1++]
0x7188	0xB3C200  	MOV.B	#32, W0
0x718A	0x785880  	MOV.B	W0, [W1++]
0x718C	0xB3C4C0  	MOV.B	#76, W0
0x718E	0x785880  	MOV.B	W0, [W1++]
0x7190	0xB3C3D0  	MOV.B	#61, W0
0x7192	0x785880  	MOV.B	W0, [W1++]
0x7194	0xEF2000  	CLR	W0
0x7196	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,354 :: 		Subtitle_Loop     := 'Bakým Döngü =';
0x7198	0x213D51  	MOV	#lo_addr(_Subtitle_Loop), W1
0x719A	0xB3C420  	MOV.B	#66, W0
0x719C	0x785880  	MOV.B	W0, [W1++]
0x719E	0xB3C610  	MOV.B	#97, W0
0x71A0	0x785880  	MOV.B	W0, [W1++]
0x71A2	0xB3C6B0  	MOV.B	#107, W0
0x71A4	0x785880  	MOV.B	W0, [W1++]
0x71A6	0xB3CFD0  	MOV.B	#253, W0
0x71A8	0x785880  	MOV.B	W0, [W1++]
0x71AA	0xB3C6D0  	MOV.B	#109, W0
0x71AC	0x785880  	MOV.B	W0, [W1++]
0x71AE	0xB3C200  	MOV.B	#32, W0
0x71B0	0x785880  	MOV.B	W0, [W1++]
0x71B2	0xB3C440  	MOV.B	#68, W0
0x71B4	0x785880  	MOV.B	W0, [W1++]
0x71B6	0xB3CF60  	MOV.B	#246, W0
0x71B8	0x785880  	MOV.B	W0, [W1++]
0x71BA	0xB3C6E0  	MOV.B	#110, W0
0x71BC	0x785880  	MOV.B	W0, [W1++]
0x71BE	0xB3C670  	MOV.B	#103, W0
0x71C0	0x785880  	MOV.B	W0, [W1++]
0x71C2	0xB3CFC0  	MOV.B	#252, W0
0x71C4	0x785880  	MOV.B	W0, [W1++]
0x71C6	0xB3C200  	MOV.B	#32, W0
0x71C8	0x785880  	MOV.B	W0, [W1++]
0x71CA	0xB3C3D0  	MOV.B	#61, W0
0x71CC	0x785880  	MOV.B	W0, [W1++]
0x71CE	0xEF2000  	CLR	W0
0x71D0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,355 :: 		Subtitle_MaintOut := 'Çýkma Gerilm=';
0x71D2	0x214001  	MOV	#lo_addr(_Subtitle_MaintOut), W1
0x71D4	0xB3CC70  	MOV.B	#199, W0
0x71D6	0x785880  	MOV.B	W0, [W1++]
0x71D8	0xB3CFD0  	MOV.B	#253, W0
0x71DA	0x785880  	MOV.B	W0, [W1++]
0x71DC	0xB3C6B0  	MOV.B	#107, W0
0x71DE	0x785880  	MOV.B	W0, [W1++]
0x71E0	0xB3C6D0  	MOV.B	#109, W0
0x71E2	0x785880  	MOV.B	W0, [W1++]
0x71E4	0xB3C610  	MOV.B	#97, W0
0x71E6	0x785880  	MOV.B	W0, [W1++]
0x71E8	0xB3C200  	MOV.B	#32, W0
0x71EA	0x785880  	MOV.B	W0, [W1++]
0x71EC	0xB3C470  	MOV.B	#71, W0
0x71EE	0x785880  	MOV.B	W0, [W1++]
0x71F0	0xB3C650  	MOV.B	#101, W0
0x71F2	0x785880  	MOV.B	W0, [W1++]
0x71F4	0xB3C720  	MOV.B	#114, W0
0x71F6	0x785880  	MOV.B	W0, [W1++]
0x71F8	0xB3C690  	MOV.B	#105, W0
0x71FA	0x785880  	MOV.B	W0, [W1++]
0x71FC	0xB3C6C0  	MOV.B	#108, W0
0x71FE	0x785880  	MOV.B	W0, [W1++]
0x7200	0xB3C6D0  	MOV.B	#109, W0
0x7202	0x785880  	MOV.B	W0, [W1++]
0x7204	0xB3C3D0  	MOV.B	#61, W0
0x7206	0x785880  	MOV.B	W0, [W1++]
0x7208	0xEF2000  	CLR	W0
0x720A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,356 :: 		Subtitle_OutTime  := 'Çýkma Süresi=';
0x720C	0x214311  	MOV	#lo_addr(_Subtitle_OutTime), W1
0x720E	0xB3CC70  	MOV.B	#199, W0
0x7210	0x785880  	MOV.B	W0, [W1++]
0x7212	0xB3CFD0  	MOV.B	#253, W0
0x7214	0x785880  	MOV.B	W0, [W1++]
0x7216	0xB3C6B0  	MOV.B	#107, W0
0x7218	0x785880  	MOV.B	W0, [W1++]
0x721A	0xB3C6D0  	MOV.B	#109, W0
0x721C	0x785880  	MOV.B	W0, [W1++]
0x721E	0xB3C610  	MOV.B	#97, W0
0x7220	0x785880  	MOV.B	W0, [W1++]
0x7222	0xB3C200  	MOV.B	#32, W0
0x7224	0x785880  	MOV.B	W0, [W1++]
0x7226	0xB3C530  	MOV.B	#83, W0
0x7228	0x785880  	MOV.B	W0, [W1++]
0x722A	0xB3CFC0  	MOV.B	#252, W0
0x722C	0x785880  	MOV.B	W0, [W1++]
0x722E	0xB3C720  	MOV.B	#114, W0
0x7230	0x785880  	MOV.B	W0, [W1++]
0x7232	0xB3C650  	MOV.B	#101, W0
0x7234	0x785880  	MOV.B	W0, [W1++]
0x7236	0xB3C730  	MOV.B	#115, W0
0x7238	0x785880  	MOV.B	W0, [W1++]
0x723A	0xB3C690  	MOV.B	#105, W0
0x723C	0x785880  	MOV.B	W0, [W1++]
0x723E	0xB3C3D0  	MOV.B	#61, W0
0x7240	0x785880  	MOV.B	W0, [W1++]
0x7242	0xEF2000  	CLR	W0
0x7244	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,357 :: 		Subtitle_Curvescan:= 'Egri Tarama =';
0x7246	0x210941  	MOV	#lo_addr(_Subtitle_Curvescan), W1
0x7248	0xB3C450  	MOV.B	#69, W0
0x724A	0x785880  	MOV.B	W0, [W1++]
0x724C	0xB3C670  	MOV.B	#103, W0
0x724E	0x785880  	MOV.B	W0, [W1++]
0x7250	0xB3C720  	MOV.B	#114, W0
0x7252	0x785880  	MOV.B	W0, [W1++]
0x7254	0xB3C690  	MOV.B	#105, W0
0x7256	0x785880  	MOV.B	W0, [W1++]
0x7258	0xB3C200  	MOV.B	#32, W0
0x725A	0x785880  	MOV.B	W0, [W1++]
0x725C	0xB3C540  	MOV.B	#84, W0
0x725E	0x785880  	MOV.B	W0, [W1++]
0x7260	0xB3C610  	MOV.B	#97, W0
0x7262	0x785880  	MOV.B	W0, [W1++]
0x7264	0xB3C720  	MOV.B	#114, W0
0x7266	0x785880  	MOV.B	W0, [W1++]
0x7268	0xB3C610  	MOV.B	#97, W0
0x726A	0x785880  	MOV.B	W0, [W1++]
0x726C	0xB3C6D0  	MOV.B	#109, W0
0x726E	0x785880  	MOV.B	W0, [W1++]
0x7270	0xB3C610  	MOV.B	#97, W0
0x7272	0x785880  	MOV.B	W0, [W1++]
0x7274	0xB3C200  	MOV.B	#32, W0
0x7276	0x785880  	MOV.B	W0, [W1++]
0x7278	0xB3C3D0  	MOV.B	#61, W0
0x727A	0x785880  	MOV.B	W0, [W1++]
0x727C	0xEF2000  	CLR	W0
0x727E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,358 :: 		Subtitle_MaintTime:= 'Bakým Saati =';
0x7280	0x214231  	MOV	#lo_addr(_Subtitle_MaintTime), W1
0x7282	0xB3C420  	MOV.B	#66, W0
0x7284	0x785880  	MOV.B	W0, [W1++]
0x7286	0xB3C610  	MOV.B	#97, W0
0x7288	0x785880  	MOV.B	W0, [W1++]
0x728A	0xB3C6B0  	MOV.B	#107, W0
0x728C	0x785880  	MOV.B	W0, [W1++]
0x728E	0xB3CFD0  	MOV.B	#253, W0
0x7290	0x785880  	MOV.B	W0, [W1++]
0x7292	0xB3C6D0  	MOV.B	#109, W0
0x7294	0x785880  	MOV.B	W0, [W1++]
0x7296	0xB3C200  	MOV.B	#32, W0
0x7298	0x785880  	MOV.B	W0, [W1++]
0x729A	0xB3C530  	MOV.B	#83, W0
0x729C	0x785880  	MOV.B	W0, [W1++]
0x729E	0xB3C610  	MOV.B	#97, W0
0x72A0	0x785880  	MOV.B	W0, [W1++]
0x72A2	0xB3C610  	MOV.B	#97, W0
0x72A4	0x785880  	MOV.B	W0, [W1++]
0x72A6	0xB3C740  	MOV.B	#116, W0
0x72A8	0x785880  	MOV.B	W0, [W1++]
0x72AA	0xB3C690  	MOV.B	#105, W0
0x72AC	0x785880  	MOV.B	W0, [W1++]
0x72AE	0xB3C200  	MOV.B	#32, W0
0x72B0	0x785880  	MOV.B	W0, [W1++]
0x72B2	0xB3C3D0  	MOV.B	#61, W0
0x72B4	0x785880  	MOV.B	W0, [W1++]
0x72B6	0xEF2000  	CLR	W0
0x72B8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,359 :: 		Subtitle_Status   := 'Durum       =';
0x72BA	0x2143F1  	MOV	#lo_addr(_Subtitle_Status), W1
0x72BC	0xB3C440  	MOV.B	#68, W0
0x72BE	0x785880  	MOV.B	W0, [W1++]
0x72C0	0xB3C750  	MOV.B	#117, W0
0x72C2	0x785880  	MOV.B	W0, [W1++]
0x72C4	0xB3C720  	MOV.B	#114, W0
0x72C6	0x785880  	MOV.B	W0, [W1++]
0x72C8	0xB3C750  	MOV.B	#117, W0
0x72CA	0x785880  	MOV.B	W0, [W1++]
0x72CC	0xB3C6D0  	MOV.B	#109, W0
0x72CE	0x785880  	MOV.B	W0, [W1++]
0x72D0	0xB3C200  	MOV.B	#32, W0
0x72D2	0x785880  	MOV.B	W0, [W1++]
0x72D4	0xB3C200  	MOV.B	#32, W0
0x72D6	0x785880  	MOV.B	W0, [W1++]
0x72D8	0xB3C200  	MOV.B	#32, W0
0x72DA	0x785880  	MOV.B	W0, [W1++]
0x72DC	0xB3C200  	MOV.B	#32, W0
0x72DE	0x785880  	MOV.B	W0, [W1++]
0x72E0	0xB3C200  	MOV.B	#32, W0
0x72E2	0x785880  	MOV.B	W0, [W1++]
0x72E4	0xB3C200  	MOV.B	#32, W0
0x72E6	0x785880  	MOV.B	W0, [W1++]
0x72E8	0xB3C200  	MOV.B	#32, W0
0x72EA	0x785880  	MOV.B	W0, [W1++]
0x72EC	0xB3C3D0  	MOV.B	#61, W0
0x72EE	0x785880  	MOV.B	W0, [W1++]
0x72F0	0xEF2000  	CLR	W0
0x72F2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,360 :: 		App_year          := '/YIL  ';
0x72F4	0x2144D1  	MOV	#lo_addr(_App_Year), W1
0x72F6	0xB3C2F0  	MOV.B	#47, W0
0x72F8	0x785880  	MOV.B	W0, [W1++]
0x72FA	0xB3C590  	MOV.B	#89, W0
0x72FC	0x785880  	MOV.B	W0, [W1++]
0x72FE	0xB3C490  	MOV.B	#73, W0
0x7300	0x785880  	MOV.B	W0, [W1++]
0x7302	0xB3C4C0  	MOV.B	#76, W0
0x7304	0x785880  	MOV.B	W0, [W1++]
0x7306	0xB3C200  	MOV.B	#32, W0
0x7308	0x785880  	MOV.B	W0, [W1++]
0x730A	0xB3C200  	MOV.B	#32, W0
0x730C	0x785880  	MOV.B	W0, [W1++]
0x730E	0xEF2000  	CLR	W0
0x7310	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,361 :: 		App_hour          := 'Saat';
0x7312	0x2140F1  	MOV	#lo_addr(_App_Hour), W1
0x7314	0xB3C530  	MOV.B	#83, W0
0x7316	0x785880  	MOV.B	W0, [W1++]
0x7318	0xB3C610  	MOV.B	#97, W0
0x731A	0x785880  	MOV.B	W0, [W1++]
0x731C	0xB3C610  	MOV.B	#97, W0
0x731E	0x785880  	MOV.B	W0, [W1++]
0x7320	0xB3C740  	MOV.B	#116, W0
0x7322	0x785880  	MOV.B	W0, [W1++]
0x7324	0xEF2000  	CLR	W0
0x7326	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,362 :: 		SubTitle_PswChng  := 'Þifre Deðiþtirme=';
0x7328	0x217541  	MOV	#lo_addr(_SubTitle_PswChng), W1
0x732A	0xB3CDE0  	MOV.B	#222, W0
0x732C	0x785880  	MOV.B	W0, [W1++]
0x732E	0xB3C690  	MOV.B	#105, W0
0x7330	0x785880  	MOV.B	W0, [W1++]
0x7332	0xB3C660  	MOV.B	#102, W0
0x7334	0x785880  	MOV.B	W0, [W1++]
0x7336	0xB3C720  	MOV.B	#114, W0
0x7338	0x785880  	MOV.B	W0, [W1++]
0x733A	0xB3C650  	MOV.B	#101, W0
0x733C	0x785880  	MOV.B	W0, [W1++]
0x733E	0xB3C200  	MOV.B	#32, W0
0x7340	0x785880  	MOV.B	W0, [W1++]
0x7342	0xB3C440  	MOV.B	#68, W0
0x7344	0x785880  	MOV.B	W0, [W1++]
0x7346	0xB3C650  	MOV.B	#101, W0
0x7348	0x785880  	MOV.B	W0, [W1++]
0x734A	0xB3CF00  	MOV.B	#240, W0
0x734C	0x785880  	MOV.B	W0, [W1++]
0x734E	0xB3C690  	MOV.B	#105, W0
0x7350	0x785880  	MOV.B	W0, [W1++]
0x7352	0xB3CFE0  	MOV.B	#254, W0
0x7354	0x785880  	MOV.B	W0, [W1++]
0x7356	0xB3C740  	MOV.B	#116, W0
0x7358	0x785880  	MOV.B	W0, [W1++]
0x735A	0xB3C690  	MOV.B	#105, W0
0x735C	0x785880  	MOV.B	W0, [W1++]
0x735E	0xB3C720  	MOV.B	#114, W0
0x7360	0x785880  	MOV.B	W0, [W1++]
0x7362	0xB3C6D0  	MOV.B	#109, W0
0x7364	0x785880  	MOV.B	W0, [W1++]
0x7366	0xB3C650  	MOV.B	#101, W0
0x7368	0x785880  	MOV.B	W0, [W1++]
0x736A	0xB3C3D0  	MOV.B	#61, W0
0x736C	0x785880  	MOV.B	W0, [W1++]
0x736E	0xEF2000  	CLR	W0
0x7370	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,363 :: 		SubTitle_PswAcset := 'AC Ayarlarý     =';
0x7372	0x217421  	MOV	#lo_addr(_SubTitle_PswAcset), W1
0x7374	0xB3C410  	MOV.B	#65, W0
0x7376	0x785880  	MOV.B	W0, [W1++]
0x7378	0xB3C430  	MOV.B	#67, W0
0x737A	0x785880  	MOV.B	W0, [W1++]
0x737C	0xB3C200  	MOV.B	#32, W0
0x737E	0x785880  	MOV.B	W0, [W1++]
0x7380	0xB3C410  	MOV.B	#65, W0
0x7382	0x785880  	MOV.B	W0, [W1++]
0x7384	0xB3C790  	MOV.B	#121, W0
0x7386	0x785880  	MOV.B	W0, [W1++]
0x7388	0xB3C610  	MOV.B	#97, W0
0x738A	0x785880  	MOV.B	W0, [W1++]
0x738C	0xB3C720  	MOV.B	#114, W0
0x738E	0x785880  	MOV.B	W0, [W1++]
0x7390	0xB3C6C0  	MOV.B	#108, W0
0x7392	0x785880  	MOV.B	W0, [W1++]
0x7394	0xB3C610  	MOV.B	#97, W0
0x7396	0x785880  	MOV.B	W0, [W1++]
0x7398	0xB3C720  	MOV.B	#114, W0
0x739A	0x785880  	MOV.B	W0, [W1++]
0x739C	0xB3CFD0  	MOV.B	#253, W0
0x739E	0x785880  	MOV.B	W0, [W1++]
0x73A0	0xB3C200  	MOV.B	#32, W0
0x73A2	0x785880  	MOV.B	W0, [W1++]
0x73A4	0xB3C200  	MOV.B	#32, W0
0x73A6	0x785880  	MOV.B	W0, [W1++]
0x73A8	0xB3C200  	MOV.B	#32, W0
0x73AA	0x785880  	MOV.B	W0, [W1++]
0x73AC	0xB3C200  	MOV.B	#32, W0
0x73AE	0x785880  	MOV.B	W0, [W1++]
0x73B0	0xB3C200  	MOV.B	#32, W0
0x73B2	0x785880  	MOV.B	W0, [W1++]
0x73B4	0xB3C3D0  	MOV.B	#61, W0
0x73B6	0x785880  	MOV.B	W0, [W1++]
0x73B8	0xEF2000  	CLR	W0
0x73BA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,364 :: 		SubTitle_PswDcset := 'DC Ayarlarý     =';
0x73BC	0x217661  	MOV	#lo_addr(_SubTitle_PswDcset), W1
0x73BE	0xB3C440  	MOV.B	#68, W0
0x73C0	0x785880  	MOV.B	W0, [W1++]
0x73C2	0xB3C430  	MOV.B	#67, W0
0x73C4	0x785880  	MOV.B	W0, [W1++]
0x73C6	0xB3C200  	MOV.B	#32, W0
0x73C8	0x785880  	MOV.B	W0, [W1++]
0x73CA	0xB3C410  	MOV.B	#65, W0
0x73CC	0x785880  	MOV.B	W0, [W1++]
0x73CE	0xB3C790  	MOV.B	#121, W0
0x73D0	0x785880  	MOV.B	W0, [W1++]
0x73D2	0xB3C610  	MOV.B	#97, W0
0x73D4	0x785880  	MOV.B	W0, [W1++]
0x73D6	0xB3C720  	MOV.B	#114, W0
0x73D8	0x785880  	MOV.B	W0, [W1++]
0x73DA	0xB3C6C0  	MOV.B	#108, W0
0x73DC	0x785880  	MOV.B	W0, [W1++]
0x73DE	0xB3C610  	MOV.B	#97, W0
0x73E0	0x785880  	MOV.B	W0, [W1++]
0x73E2	0xB3C720  	MOV.B	#114, W0
0x73E4	0x785880  	MOV.B	W0, [W1++]
0x73E6	0xB3CFD0  	MOV.B	#253, W0
0x73E8	0x785880  	MOV.B	W0, [W1++]
0x73EA	0xB3C200  	MOV.B	#32, W0
0x73EC	0x785880  	MOV.B	W0, [W1++]
0x73EE	0xB3C200  	MOV.B	#32, W0
0x73F0	0x785880  	MOV.B	W0, [W1++]
0x73F2	0xB3C200  	MOV.B	#32, W0
0x73F4	0x785880  	MOV.B	W0, [W1++]
0x73F6	0xB3C200  	MOV.B	#32, W0
0x73F8	0x785880  	MOV.B	W0, [W1++]
0x73FA	0xB3C200  	MOV.B	#32, W0
0x73FC	0x785880  	MOV.B	W0, [W1++]
0x73FE	0xB3C3D0  	MOV.B	#61, W0
0x7400	0x785880  	MOV.B	W0, [W1++]
0x7402	0xEF2000  	CLR	W0
0x7404	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,365 :: 		SubTitle_Pswbatset:= 'Akü Ayarlar     =';
0x7406	0x2178A1  	MOV	#lo_addr(_SubTitle_Pswbatset), W1
0x7408	0xB3C410  	MOV.B	#65, W0
0x740A	0x785880  	MOV.B	W0, [W1++]
0x740C	0xB3C6B0  	MOV.B	#107, W0
0x740E	0x785880  	MOV.B	W0, [W1++]
0x7410	0xB3CFC0  	MOV.B	#252, W0
0x7412	0x785880  	MOV.B	W0, [W1++]
0x7414	0xB3C200  	MOV.B	#32, W0
0x7416	0x785880  	MOV.B	W0, [W1++]
0x7418	0xB3C410  	MOV.B	#65, W0
0x741A	0x785880  	MOV.B	W0, [W1++]
0x741C	0xB3C790  	MOV.B	#121, W0
0x741E	0x785880  	MOV.B	W0, [W1++]
0x7420	0xB3C610  	MOV.B	#97, W0
0x7422	0x785880  	MOV.B	W0, [W1++]
0x7424	0xB3C720  	MOV.B	#114, W0
0x7426	0x785880  	MOV.B	W0, [W1++]
0x7428	0xB3C6C0  	MOV.B	#108, W0
0x742A	0x785880  	MOV.B	W0, [W1++]
0x742C	0xB3C610  	MOV.B	#97, W0
0x742E	0x785880  	MOV.B	W0, [W1++]
0x7430	0xB3C720  	MOV.B	#114, W0
0x7432	0x785880  	MOV.B	W0, [W1++]
0x7434	0xB3C200  	MOV.B	#32, W0
0x7436	0x785880  	MOV.B	W0, [W1++]
0x7438	0xB3C200  	MOV.B	#32, W0
0x743A	0x785880  	MOV.B	W0, [W1++]
0x743C	0xB3C200  	MOV.B	#32, W0
0x743E	0x785880  	MOV.B	W0, [W1++]
0x7440	0xB3C200  	MOV.B	#32, W0
0x7442	0x785880  	MOV.B	W0, [W1++]
0x7444	0xB3C200  	MOV.B	#32, W0
0x7446	0x785880  	MOV.B	W0, [W1++]
0x7448	0xB3C3D0  	MOV.B	#61, W0
0x744A	0x785880  	MOV.B	W0, [W1++]
0x744C	0xEF2000  	CLR	W0
0x744E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,366 :: 		SubTitle_Pswopmod := 'Çalýþma Modu    =';
0x7450	0x217781  	MOV	#lo_addr(_SubTitle_Pswopmod), W1
0x7452	0xB3CC70  	MOV.B	#199, W0
0x7454	0x785880  	MOV.B	W0, [W1++]
0x7456	0xB3C610  	MOV.B	#97, W0
0x7458	0x785880  	MOV.B	W0, [W1++]
0x745A	0xB3C6C0  	MOV.B	#108, W0
0x745C	0x785880  	MOV.B	W0, [W1++]
0x745E	0xB3CFD0  	MOV.B	#253, W0
0x7460	0x785880  	MOV.B	W0, [W1++]
0x7462	0xB3CFE0  	MOV.B	#254, W0
0x7464	0x785880  	MOV.B	W0, [W1++]
0x7466	0xB3C6D0  	MOV.B	#109, W0
0x7468	0x785880  	MOV.B	W0, [W1++]
0x746A	0xB3C610  	MOV.B	#97, W0
0x746C	0x785880  	MOV.B	W0, [W1++]
0x746E	0xB3C200  	MOV.B	#32, W0
0x7470	0x785880  	MOV.B	W0, [W1++]
0x7472	0xB3C4D0  	MOV.B	#77, W0
0x7474	0x785880  	MOV.B	W0, [W1++]
0x7476	0xB3C6F0  	MOV.B	#111, W0
0x7478	0x785880  	MOV.B	W0, [W1++]
0x747A	0xB3C640  	MOV.B	#100, W0
0x747C	0x785880  	MOV.B	W0, [W1++]
0x747E	0xB3C750  	MOV.B	#117, W0
0x7480	0x785880  	MOV.B	W0, [W1++]
0x7482	0xB3C200  	MOV.B	#32, W0
0x7484	0x785880  	MOV.B	W0, [W1++]
0x7486	0xB3C200  	MOV.B	#32, W0
0x7488	0x785880  	MOV.B	W0, [W1++]
0x748A	0xB3C200  	MOV.B	#32, W0
0x748C	0x785880  	MOV.B	W0, [W1++]
0x748E	0xB3C200  	MOV.B	#32, W0
0x7490	0x785880  	MOV.B	W0, [W1++]
0x7492	0xB3C3D0  	MOV.B	#61, W0
0x7494	0x785880  	MOV.B	W0, [W1++]
0x7496	0xEF2000  	CLR	W0
0x7498	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,367 :: 		SubTitle_Pswleak  := 'Kaçak Direnci   =';
0x749A	0x216F71  	MOV	#lo_addr(_SubTitle_Pswleak), W1
0x749C	0xB3C4B0  	MOV.B	#75, W0
0x749E	0x785880  	MOV.B	W0, [W1++]
0x74A0	0xB3C610  	MOV.B	#97, W0
0x74A2	0x785880  	MOV.B	W0, [W1++]
0x74A4	0xB3CE70  	MOV.B	#231, W0
0x74A6	0x785880  	MOV.B	W0, [W1++]
0x74A8	0xB3C610  	MOV.B	#97, W0
0x74AA	0x785880  	MOV.B	W0, [W1++]
0x74AC	0xB3C6B0  	MOV.B	#107, W0
0x74AE	0x785880  	MOV.B	W0, [W1++]
0x74B0	0xB3C200  	MOV.B	#32, W0
0x74B2	0x785880  	MOV.B	W0, [W1++]
0x74B4	0xB3C440  	MOV.B	#68, W0
0x74B6	0x785880  	MOV.B	W0, [W1++]
0x74B8	0xB3C690  	MOV.B	#105, W0
0x74BA	0x785880  	MOV.B	W0, [W1++]
0x74BC	0xB3C720  	MOV.B	#114, W0
0x74BE	0x785880  	MOV.B	W0, [W1++]
0x74C0	0xB3C650  	MOV.B	#101, W0
0x74C2	0x785880  	MOV.B	W0, [W1++]
0x74C4	0xB3C6E0  	MOV.B	#110, W0
0x74C6	0x785880  	MOV.B	W0, [W1++]
0x74C8	0xB3C630  	MOV.B	#99, W0
0x74CA	0x785880  	MOV.B	W0, [W1++]
0x74CC	0xB3C690  	MOV.B	#105, W0
0x74CE	0x785880  	MOV.B	W0, [W1++]
0x74D0	0xB3C200  	MOV.B	#32, W0
0x74D2	0x785880  	MOV.B	W0, [W1++]
0x74D4	0xB3C200  	MOV.B	#32, W0
0x74D6	0x785880  	MOV.B	W0, [W1++]
0x74D8	0xB3C200  	MOV.B	#32, W0
0x74DA	0x785880  	MOV.B	W0, [W1++]
0x74DC	0xB3C3D0  	MOV.B	#61, W0
0x74DE	0x785880  	MOV.B	W0, [W1++]
0x74E0	0xEF2000  	CLR	W0
0x74E2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,368 :: 		SubTitle_Pswtemp  := 'Sýcaklýk Ayarlrý=';
0x74E4	0x216E51  	MOV	#lo_addr(_SubTitle_Pswtemp), W1
0x74E6	0xB3C530  	MOV.B	#83, W0
0x74E8	0x785880  	MOV.B	W0, [W1++]
0x74EA	0xB3CFD0  	MOV.B	#253, W0
0x74EC	0x785880  	MOV.B	W0, [W1++]
0x74EE	0xB3C630  	MOV.B	#99, W0
0x74F0	0x785880  	MOV.B	W0, [W1++]
0x74F2	0xB3C610  	MOV.B	#97, W0
0x74F4	0x785880  	MOV.B	W0, [W1++]
0x74F6	0xB3C6B0  	MOV.B	#107, W0
0x74F8	0x785880  	MOV.B	W0, [W1++]
0x74FA	0xB3C6C0  	MOV.B	#108, W0
0x74FC	0x785880  	MOV.B	W0, [W1++]
0x74FE	0xB3CFD0  	MOV.B	#253, W0
0x7500	0x785880  	MOV.B	W0, [W1++]
0x7502	0xB3C6B0  	MOV.B	#107, W0
0x7504	0x785880  	MOV.B	W0, [W1++]
0x7506	0xB3C200  	MOV.B	#32, W0
0x7508	0x785880  	MOV.B	W0, [W1++]
0x750A	0xB3C410  	MOV.B	#65, W0
0x750C	0x785880  	MOV.B	W0, [W1++]
0x750E	0xB3C790  	MOV.B	#121, W0
0x7510	0x785880  	MOV.B	W0, [W1++]
0x7512	0xB3C610  	MOV.B	#97, W0
0x7514	0x785880  	MOV.B	W0, [W1++]
0x7516	0xB3C720  	MOV.B	#114, W0
0x7518	0x785880  	MOV.B	W0, [W1++]
0x751A	0xB3C6C0  	MOV.B	#108, W0
0x751C	0x785880  	MOV.B	W0, [W1++]
0x751E	0xB3C720  	MOV.B	#114, W0
0x7520	0x785880  	MOV.B	W0, [W1++]
0x7522	0xB3CFD0  	MOV.B	#253, W0
0x7524	0x785880  	MOV.B	W0, [W1++]
0x7526	0xB3C3D0  	MOV.B	#61, W0
0x7528	0x785880  	MOV.B	W0, [W1++]
0x752A	0xEF2000  	CLR	W0
0x752C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,369 :: 		SubTitle_Pswclock := 'Saat-Tarih Ayarý=';
0x752E	0x217301  	MOV	#lo_addr(_SubTitle_Pswclock), W1
0x7530	0xB3C530  	MOV.B	#83, W0
0x7532	0x785880  	MOV.B	W0, [W1++]
0x7534	0xB3C610  	MOV.B	#97, W0
0x7536	0x785880  	MOV.B	W0, [W1++]
0x7538	0xB3C610  	MOV.B	#97, W0
0x753A	0x785880  	MOV.B	W0, [W1++]
0x753C	0xB3C740  	MOV.B	#116, W0
0x753E	0x785880  	MOV.B	W0, [W1++]
0x7540	0xB3C2D0  	MOV.B	#45, W0
0x7542	0x785880  	MOV.B	W0, [W1++]
0x7544	0xB3C540  	MOV.B	#84, W0
0x7546	0x785880  	MOV.B	W0, [W1++]
0x7548	0xB3C610  	MOV.B	#97, W0
0x754A	0x785880  	MOV.B	W0, [W1++]
0x754C	0xB3C720  	MOV.B	#114, W0
0x754E	0x785880  	MOV.B	W0, [W1++]
0x7550	0xB3C690  	MOV.B	#105, W0
0x7552	0x785880  	MOV.B	W0, [W1++]
0x7554	0xB3C680  	MOV.B	#104, W0
0x7556	0x785880  	MOV.B	W0, [W1++]
0x7558	0xB3C200  	MOV.B	#32, W0
0x755A	0x785880  	MOV.B	W0, [W1++]
0x755C	0xB3C410  	MOV.B	#65, W0
0x755E	0x785880  	MOV.B	W0, [W1++]
0x7560	0xB3C790  	MOV.B	#121, W0
0x7562	0x785880  	MOV.B	W0, [W1++]
0x7564	0xB3C610  	MOV.B	#97, W0
0x7566	0x785880  	MOV.B	W0, [W1++]
0x7568	0xB3C720  	MOV.B	#114, W0
0x756A	0x785880  	MOV.B	W0, [W1++]
0x756C	0xB3CFD0  	MOV.B	#253, W0
0x756E	0x785880  	MOV.B	W0, [W1++]
0x7570	0xB3C3D0  	MOV.B	#61, W0
0x7572	0x785880  	MOV.B	W0, [W1++]
0x7574	0xEF2000  	CLR	W0
0x7576	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,370 :: 		SubTitle_Pswmodbus:= 'Modbus Ayarlarý =';
0x7578	0x2171E1  	MOV	#lo_addr(_SubTitle_Pswmodbus), W1
0x757A	0xB3C4D0  	MOV.B	#77, W0
0x757C	0x785880  	MOV.B	W0, [W1++]
0x757E	0xB3C6F0  	MOV.B	#111, W0
0x7580	0x785880  	MOV.B	W0, [W1++]
0x7582	0xB3C640  	MOV.B	#100, W0
0x7584	0x785880  	MOV.B	W0, [W1++]
0x7586	0xB3C620  	MOV.B	#98, W0
0x7588	0x785880  	MOV.B	W0, [W1++]
0x758A	0xB3C750  	MOV.B	#117, W0
0x758C	0x785880  	MOV.B	W0, [W1++]
0x758E	0xB3C730  	MOV.B	#115, W0
0x7590	0x785880  	MOV.B	W0, [W1++]
0x7592	0xB3C200  	MOV.B	#32, W0
0x7594	0x785880  	MOV.B	W0, [W1++]
0x7596	0xB3C410  	MOV.B	#65, W0
0x7598	0x785880  	MOV.B	W0, [W1++]
0x759A	0xB3C790  	MOV.B	#121, W0
0x759C	0x785880  	MOV.B	W0, [W1++]
0x759E	0xB3C610  	MOV.B	#97, W0
0x75A0	0x785880  	MOV.B	W0, [W1++]
0x75A2	0xB3C720  	MOV.B	#114, W0
0x75A4	0x785880  	MOV.B	W0, [W1++]
0x75A6	0xB3C6C0  	MOV.B	#108, W0
0x75A8	0x785880  	MOV.B	W0, [W1++]
0x75AA	0xB3C610  	MOV.B	#97, W0
0x75AC	0x785880  	MOV.B	W0, [W1++]
0x75AE	0xB3C720  	MOV.B	#114, W0
0x75B0	0x785880  	MOV.B	W0, [W1++]
0x75B2	0xB3CFD0  	MOV.B	#253, W0
0x75B4	0x785880  	MOV.B	W0, [W1++]
0x75B6	0xB3C200  	MOV.B	#32, W0
0x75B8	0x785880  	MOV.B	W0, [W1++]
0x75BA	0xB3C3D0  	MOV.B	#61, W0
0x75BC	0x785880  	MOV.B	W0, [W1++]
0x75BE	0xEF2000  	CLR	W0
0x75C0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,371 :: 		Subtitle_Lang     := 'Dil         =';
0x75C2	0x216501  	MOV	#lo_addr(_Subtitle_Lang), W1
0x75C4	0xB3C440  	MOV.B	#68, W0
0x75C6	0x785880  	MOV.B	W0, [W1++]
0x75C8	0xB3C690  	MOV.B	#105, W0
0x75CA	0x785880  	MOV.B	W0, [W1++]
0x75CC	0xB3C6C0  	MOV.B	#108, W0
0x75CE	0x785880  	MOV.B	W0, [W1++]
0x75D0	0xB3C200  	MOV.B	#32, W0
0x75D2	0x785880  	MOV.B	W0, [W1++]
0x75D4	0xB3C200  	MOV.B	#32, W0
0x75D6	0x785880  	MOV.B	W0, [W1++]
0x75D8	0xB3C200  	MOV.B	#32, W0
0x75DA	0x785880  	MOV.B	W0, [W1++]
0x75DC	0xB3C200  	MOV.B	#32, W0
0x75DE	0x785880  	MOV.B	W0, [W1++]
0x75E0	0xB3C200  	MOV.B	#32, W0
0x75E2	0x785880  	MOV.B	W0, [W1++]
0x75E4	0xB3C200  	MOV.B	#32, W0
0x75E6	0x785880  	MOV.B	W0, [W1++]
0x75E8	0xB3C200  	MOV.B	#32, W0
0x75EA	0x785880  	MOV.B	W0, [W1++]
0x75EC	0xB3C200  	MOV.B	#32, W0
0x75EE	0x785880  	MOV.B	W0, [W1++]
0x75F0	0xB3C200  	MOV.B	#32, W0
0x75F2	0x785880  	MOV.B	W0, [W1++]
0x75F4	0xB3C3D0  	MOV.B	#61, W0
0x75F6	0x785880  	MOV.B	W0, [W1++]
0x75F8	0xEF2000  	CLR	W0
0x75FA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,372 :: 		SubTitle_Cancel   := 'Ýptal ';
0x75FC	0x215D11  	MOV	#lo_addr(_SubTitle_Cancel), W1
0x75FE	0xB3CDD0  	MOV.B	#221, W0
0x7600	0x785880  	MOV.B	W0, [W1++]
0x7602	0xB3C700  	MOV.B	#112, W0
0x7604	0x785880  	MOV.B	W0, [W1++]
0x7606	0xB3C740  	MOV.B	#116, W0
0x7608	0x785880  	MOV.B	W0, [W1++]
0x760A	0xB3C610  	MOV.B	#97, W0
0x760C	0x785880  	MOV.B	W0, [W1++]
0x760E	0xB3C6C0  	MOV.B	#108, W0
0x7610	0x785880  	MOV.B	W0, [W1++]
0x7612	0xB3C200  	MOV.B	#32, W0
0x7614	0x785880  	MOV.B	W0, [W1++]
0x7616	0xEF2000  	CLR	W0
0x7618	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,373 :: 		SubTitle_Ok       := 'Tamam';
0x761A	0x215B91  	MOV	#lo_addr(_SubTitle_Ok), W1
0x761C	0xB3C540  	MOV.B	#84, W0
0x761E	0x785880  	MOV.B	W0, [W1++]
0x7620	0xB3C610  	MOV.B	#97, W0
0x7622	0x785880  	MOV.B	W0, [W1++]
0x7624	0xB3C6D0  	MOV.B	#109, W0
0x7626	0x785880  	MOV.B	W0, [W1++]
0x7628	0xB3C610  	MOV.B	#97, W0
0x762A	0x785880  	MOV.B	W0, [W1++]
0x762C	0xB3C6D0  	MOV.B	#109, W0
0x762E	0x785880  	MOV.B	W0, [W1++]
0x7630	0xEF2000  	CLR	W0
0x7632	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,374 :: 		SubTitle_PassOk   := '  Þifre Kabul Edildi ';
0x7634	0x216221  	MOV	#lo_addr(_SubTitle_PassOk), W1
0x7636	0xB3C200  	MOV.B	#32, W0
0x7638	0x785880  	MOV.B	W0, [W1++]
0x763A	0xB3C200  	MOV.B	#32, W0
0x763C	0x785880  	MOV.B	W0, [W1++]
0x763E	0xB3CDE0  	MOV.B	#222, W0
0x7640	0x785880  	MOV.B	W0, [W1++]
0x7642	0xB3C690  	MOV.B	#105, W0
0x7644	0x785880  	MOV.B	W0, [W1++]
0x7646	0xB3C660  	MOV.B	#102, W0
0x7648	0x785880  	MOV.B	W0, [W1++]
0x764A	0xB3C720  	MOV.B	#114, W0
0x764C	0x785880  	MOV.B	W0, [W1++]
0x764E	0xB3C650  	MOV.B	#101, W0
0x7650	0x785880  	MOV.B	W0, [W1++]
0x7652	0xB3C200  	MOV.B	#32, W0
0x7654	0x785880  	MOV.B	W0, [W1++]
0x7656	0xB3C4B0  	MOV.B	#75, W0
0x7658	0x785880  	MOV.B	W0, [W1++]
0x765A	0xB3C610  	MOV.B	#97, W0
0x765C	0x785880  	MOV.B	W0, [W1++]
0x765E	0xB3C620  	MOV.B	#98, W0
0x7660	0x785880  	MOV.B	W0, [W1++]
0x7662	0xB3C750  	MOV.B	#117, W0
0x7664	0x785880  	MOV.B	W0, [W1++]
0x7666	0xB3C6C0  	MOV.B	#108, W0
0x7668	0x785880  	MOV.B	W0, [W1++]
0x766A	0xB3C200  	MOV.B	#32, W0
0x766C	0x785880  	MOV.B	W0, [W1++]
0x766E	0xB3C450  	MOV.B	#69, W0
0x7670	0x785880  	MOV.B	W0, [W1++]
0x7672	0xB3C640  	MOV.B	#100, W0
0x7674	0x785880  	MOV.B	W0, [W1++]
0x7676	0xB3C690  	MOV.B	#105, W0
0x7678	0x785880  	MOV.B	W0, [W1++]
0x767A	0xB3C6C0  	MOV.B	#108, W0
0x767C	0x785880  	MOV.B	W0, [W1++]
0x767E	0xB3C640  	MOV.B	#100, W0
0x7680	0x785880  	MOV.B	W0, [W1++]
0x7682	0xB3C690  	MOV.B	#105, W0
0x7684	0x785880  	MOV.B	W0, [W1++]
0x7686	0xB3C200  	MOV.B	#32, W0
0x7688	0x785880  	MOV.B	W0, [W1++]
0x768A	0xEF2000  	CLR	W0
0x768C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,375 :: 		SubTitle_PassFlt  := 'Hatalý Þifre Girildi!';
0x768E	0x2163A1  	MOV	#lo_addr(_SubTitle_PassFlt), W1
0x7690	0xB3C480  	MOV.B	#72, W0
0x7692	0x785880  	MOV.B	W0, [W1++]
0x7694	0xB3C610  	MOV.B	#97, W0
0x7696	0x785880  	MOV.B	W0, [W1++]
0x7698	0xB3C740  	MOV.B	#116, W0
0x769A	0x785880  	MOV.B	W0, [W1++]
0x769C	0xB3C610  	MOV.B	#97, W0
0x769E	0x785880  	MOV.B	W0, [W1++]
0x76A0	0xB3C6C0  	MOV.B	#108, W0
0x76A2	0x785880  	MOV.B	W0, [W1++]
0x76A4	0xB3CFD0  	MOV.B	#253, W0
0x76A6	0x785880  	MOV.B	W0, [W1++]
0x76A8	0xB3C200  	MOV.B	#32, W0
0x76AA	0x785880  	MOV.B	W0, [W1++]
0x76AC	0xB3CDE0  	MOV.B	#222, W0
0x76AE	0x785880  	MOV.B	W0, [W1++]
0x76B0	0xB3C690  	MOV.B	#105, W0
0x76B2	0x785880  	MOV.B	W0, [W1++]
0x76B4	0xB3C660  	MOV.B	#102, W0
0x76B6	0x785880  	MOV.B	W0, [W1++]
0x76B8	0xB3C720  	MOV.B	#114, W0
0x76BA	0x785880  	MOV.B	W0, [W1++]
0x76BC	0xB3C650  	MOV.B	#101, W0
0x76BE	0x785880  	MOV.B	W0, [W1++]
0x76C0	0xB3C200  	MOV.B	#32, W0
0x76C2	0x785880  	MOV.B	W0, [W1++]
0x76C4	0xB3C470  	MOV.B	#71, W0
0x76C6	0x785880  	MOV.B	W0, [W1++]
0x76C8	0xB3C690  	MOV.B	#105, W0
0x76CA	0x785880  	MOV.B	W0, [W1++]
0x76CC	0xB3C720  	MOV.B	#114, W0
0x76CE	0x785880  	MOV.B	W0, [W1++]
0x76D0	0xB3C690  	MOV.B	#105, W0
0x76D2	0x785880  	MOV.B	W0, [W1++]
0x76D4	0xB3C6C0  	MOV.B	#108, W0
0x76D6	0x785880  	MOV.B	W0, [W1++]
0x76D8	0xB3C640  	MOV.B	#100, W0
0x76DA	0x785880  	MOV.B	W0, [W1++]
0x76DC	0xB3C690  	MOV.B	#105, W0
0x76DE	0x785880  	MOV.B	W0, [W1++]
0x76E0	0xB3C210  	MOV.B	#33, W0
0x76E2	0x785880  	MOV.B	W0, [W1++]
0x76E4	0xEF2000  	CLR	W0
0x76E6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,376 :: 		SubTitle_LogRead  := 'Olaylar Okunuyor';
0x76E8	0x210831  	MOV	#lo_addr(_SubTitle_LogRead), W1
0x76EA	0xB3C4F0  	MOV.B	#79, W0
0x76EC	0x785880  	MOV.B	W0, [W1++]
0x76EE	0xB3C6C0  	MOV.B	#108, W0
0x76F0	0x785880  	MOV.B	W0, [W1++]
0x76F2	0xB3C610  	MOV.B	#97, W0
0x76F4	0x785880  	MOV.B	W0, [W1++]
0x76F6	0xB3C790  	MOV.B	#121, W0
0x76F8	0x785880  	MOV.B	W0, [W1++]
0x76FA	0xB3C6C0  	MOV.B	#108, W0
0x76FC	0x785880  	MOV.B	W0, [W1++]
0x76FE	0xB3C610  	MOV.B	#97, W0
0x7700	0x785880  	MOV.B	W0, [W1++]
0x7702	0xB3C720  	MOV.B	#114, W0
0x7704	0x785880  	MOV.B	W0, [W1++]
0x7706	0xB3C200  	MOV.B	#32, W0
0x7708	0x785880  	MOV.B	W0, [W1++]
0x770A	0xB3C4F0  	MOV.B	#79, W0
0x770C	0x785880  	MOV.B	W0, [W1++]
0x770E	0xB3C6B0  	MOV.B	#107, W0
0x7710	0x785880  	MOV.B	W0, [W1++]
0x7712	0xB3C750  	MOV.B	#117, W0
0x7714	0x785880  	MOV.B	W0, [W1++]
0x7716	0xB3C6E0  	MOV.B	#110, W0
0x7718	0x785880  	MOV.B	W0, [W1++]
0x771A	0xB3C750  	MOV.B	#117, W0
0x771C	0x785880  	MOV.B	W0, [W1++]
0x771E	0xB3C790  	MOV.B	#121, W0
0x7720	0x785880  	MOV.B	W0, [W1++]
0x7722	0xB3C6F0  	MOV.B	#111, W0
0x7724	0x785880  	MOV.B	W0, [W1++]
0x7726	0xB3C720  	MOV.B	#114, W0
0x7728	0x785880  	MOV.B	W0, [W1++]
0x772A	0xEF2000  	CLR	W0
0x772C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,377 :: 		SubText_RectifierIdle := '   YEDEK REDRESÖR    ';
0x772E	0x20F3A1  	MOV	#lo_addr(_SubText_RectifierIdle), W1
0x7730	0xB3C200  	MOV.B	#32, W0
0x7732	0x785880  	MOV.B	W0, [W1++]
0x7734	0xB3C200  	MOV.B	#32, W0
0x7736	0x785880  	MOV.B	W0, [W1++]
0x7738	0xB3C200  	MOV.B	#32, W0
0x773A	0x785880  	MOV.B	W0, [W1++]
0x773C	0xB3C590  	MOV.B	#89, W0
0x773E	0x785880  	MOV.B	W0, [W1++]
0x7740	0xB3C450  	MOV.B	#69, W0
0x7742	0x785880  	MOV.B	W0, [W1++]
0x7744	0xB3C440  	MOV.B	#68, W0
0x7746	0x785880  	MOV.B	W0, [W1++]
0x7748	0xB3C450  	MOV.B	#69, W0
0x774A	0x785880  	MOV.B	W0, [W1++]
0x774C	0xB3C4B0  	MOV.B	#75, W0
0x774E	0x785880  	MOV.B	W0, [W1++]
0x7750	0xB3C200  	MOV.B	#32, W0
0x7752	0x785880  	MOV.B	W0, [W1++]
0x7754	0xB3C520  	MOV.B	#82, W0
0x7756	0x785880  	MOV.B	W0, [W1++]
0x7758	0xB3C450  	MOV.B	#69, W0
0x775A	0x785880  	MOV.B	W0, [W1++]
0x775C	0xB3C440  	MOV.B	#68, W0
0x775E	0x785880  	MOV.B	W0, [W1++]
0x7760	0xB3C520  	MOV.B	#82, W0
0x7762	0x785880  	MOV.B	W0, [W1++]
0x7764	0xB3C450  	MOV.B	#69, W0
0x7766	0x785880  	MOV.B	W0, [W1++]
0x7768	0xB3C530  	MOV.B	#83, W0
0x776A	0x785880  	MOV.B	W0, [W1++]
0x776C	0xB3CD60  	MOV.B	#214, W0
0x776E	0x785880  	MOV.B	W0, [W1++]
0x7770	0xB3C520  	MOV.B	#82, W0
0x7772	0x785880  	MOV.B	W0, [W1++]
0x7774	0xB3C200  	MOV.B	#32, W0
0x7776	0x785880  	MOV.B	W0, [W1++]
0x7778	0xB3C200  	MOV.B	#32, W0
0x777A	0x785880  	MOV.B	W0, [W1++]
0x777C	0xB3C200  	MOV.B	#32, W0
0x777E	0x785880  	MOV.B	W0, [W1++]
0x7780	0xB3C200  	MOV.B	#32, W0
0x7782	0x785880  	MOV.B	W0, [W1++]
0x7784	0xEF2000  	CLR	W0
0x7786	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,378 :: 		SubText_SystemNormaly := '    SÝSTEM NORMAL    ';
0x7788	0x20CC61  	MOV	#lo_addr(_SubText_SystemNormaly), W1
0x778A	0xB3C200  	MOV.B	#32, W0
0x778C	0x785880  	MOV.B	W0, [W1++]
0x778E	0xB3C200  	MOV.B	#32, W0
0x7790	0x785880  	MOV.B	W0, [W1++]
0x7792	0xB3C200  	MOV.B	#32, W0
0x7794	0x785880  	MOV.B	W0, [W1++]
0x7796	0xB3C200  	MOV.B	#32, W0
0x7798	0x785880  	MOV.B	W0, [W1++]
0x779A	0xB3C530  	MOV.B	#83, W0
0x779C	0x785880  	MOV.B	W0, [W1++]
0x779E	0xB3CDD0  	MOV.B	#221, W0
0x77A0	0x785880  	MOV.B	W0, [W1++]
0x77A2	0xB3C530  	MOV.B	#83, W0
0x77A4	0x785880  	MOV.B	W0, [W1++]
0x77A6	0xB3C540  	MOV.B	#84, W0
0x77A8	0x785880  	MOV.B	W0, [W1++]
0x77AA	0xB3C450  	MOV.B	#69, W0
0x77AC	0x785880  	MOV.B	W0, [W1++]
0x77AE	0xB3C4D0  	MOV.B	#77, W0
0x77B0	0x785880  	MOV.B	W0, [W1++]
0x77B2	0xB3C200  	MOV.B	#32, W0
0x77B4	0x785880  	MOV.B	W0, [W1++]
0x77B6	0xB3C4E0  	MOV.B	#78, W0
0x77B8	0x785880  	MOV.B	W0, [W1++]
0x77BA	0xB3C4F0  	MOV.B	#79, W0
0x77BC	0x785880  	MOV.B	W0, [W1++]
0x77BE	0xB3C520  	MOV.B	#82, W0
0x77C0	0x785880  	MOV.B	W0, [W1++]
0x77C2	0xB3C4D0  	MOV.B	#77, W0
0x77C4	0x785880  	MOV.B	W0, [W1++]
0x77C6	0xB3C410  	MOV.B	#65, W0
0x77C8	0x785880  	MOV.B	W0, [W1++]
0x77CA	0xB3C4C0  	MOV.B	#76, W0
0x77CC	0x785880  	MOV.B	W0, [W1++]
0x77CE	0xB3C200  	MOV.B	#32, W0
0x77D0	0x785880  	MOV.B	W0, [W1++]
0x77D2	0xB3C200  	MOV.B	#32, W0
0x77D4	0x785880  	MOV.B	W0, [W1++]
0x77D6	0xB3C200  	MOV.B	#32, W0
0x77D8	0x785880  	MOV.B	W0, [W1++]
0x77DA	0xB3C200  	MOV.B	#32, W0
0x77DC	0x785880  	MOV.B	W0, [W1++]
0x77DE	0xEF2000  	CLR	W0
0x77E0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,380 :: 		Title_Bkm_StartText     := '  AKÜ BAKIMI BAÞLADI ';
0x77E2	0x20CB01  	MOV	#lo_addr(_Title_Bkm_StartText), W1
0x77E4	0xB3C200  	MOV.B	#32, W0
0x77E6	0x785880  	MOV.B	W0, [W1++]
0x77E8	0xB3C200  	MOV.B	#32, W0
0x77EA	0x785880  	MOV.B	W0, [W1++]
0x77EC	0xB3C410  	MOV.B	#65, W0
0x77EE	0x785880  	MOV.B	W0, [W1++]
0x77F0	0xB3C4B0  	MOV.B	#75, W0
0x77F2	0x785880  	MOV.B	W0, [W1++]
0x77F4	0xB3CDC0  	MOV.B	#220, W0
0x77F6	0x785880  	MOV.B	W0, [W1++]
0x77F8	0xB3C200  	MOV.B	#32, W0
0x77FA	0x785880  	MOV.B	W0, [W1++]
0x77FC	0xB3C420  	MOV.B	#66, W0
0x77FE	0x785880  	MOV.B	W0, [W1++]
0x7800	0xB3C410  	MOV.B	#65, W0
0x7802	0x785880  	MOV.B	W0, [W1++]
0x7804	0xB3C4B0  	MOV.B	#75, W0
0x7806	0x785880  	MOV.B	W0, [W1++]
0x7808	0xB3C490  	MOV.B	#73, W0
0x780A	0x785880  	MOV.B	W0, [W1++]
0x780C	0xB3C4D0  	MOV.B	#77, W0
0x780E	0x785880  	MOV.B	W0, [W1++]
0x7810	0xB3C490  	MOV.B	#73, W0
0x7812	0x785880  	MOV.B	W0, [W1++]
0x7814	0xB3C200  	MOV.B	#32, W0
0x7816	0x785880  	MOV.B	W0, [W1++]
0x7818	0xB3C420  	MOV.B	#66, W0
0x781A	0x785880  	MOV.B	W0, [W1++]
0x781C	0xB3C410  	MOV.B	#65, W0
0x781E	0x785880  	MOV.B	W0, [W1++]
0x7820	0xB3CDE0  	MOV.B	#222, W0
0x7822	0x785880  	MOV.B	W0, [W1++]
0x7824	0xB3C4C0  	MOV.B	#76, W0
0x7826	0x785880  	MOV.B	W0, [W1++]
0x7828	0xB3C410  	MOV.B	#65, W0
0x782A	0x785880  	MOV.B	W0, [W1++]
0x782C	0xB3C440  	MOV.B	#68, W0
0x782E	0x785880  	MOV.B	W0, [W1++]
0x7830	0xB3C490  	MOV.B	#73, W0
0x7832	0x785880  	MOV.B	W0, [W1++]
0x7834	0xB3C200  	MOV.B	#32, W0
0x7836	0x785880  	MOV.B	W0, [W1++]
0x7838	0xEF2000  	CLR	W0
0x783A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,381 :: 		Title_Bkm_WaitText      := 'AKÜ BAKIM HAZIRLANYOR';
0x783C	0x20CDC1  	MOV	#lo_addr(_Title_Bkm_WaitText), W1
0x783E	0xB3C410  	MOV.B	#65, W0
0x7840	0x785880  	MOV.B	W0, [W1++]
0x7842	0xB3C4B0  	MOV.B	#75, W0
0x7844	0x785880  	MOV.B	W0, [W1++]
0x7846	0xB3CDC0  	MOV.B	#220, W0
0x7848	0x785880  	MOV.B	W0, [W1++]
0x784A	0xB3C200  	MOV.B	#32, W0
0x784C	0x785880  	MOV.B	W0, [W1++]
0x784E	0xB3C420  	MOV.B	#66, W0
0x7850	0x785880  	MOV.B	W0, [W1++]
0x7852	0xB3C410  	MOV.B	#65, W0
0x7854	0x785880  	MOV.B	W0, [W1++]
0x7856	0xB3C4B0  	MOV.B	#75, W0
0x7858	0x785880  	MOV.B	W0, [W1++]
0x785A	0xB3C490  	MOV.B	#73, W0
0x785C	0x785880  	MOV.B	W0, [W1++]
0x785E	0xB3C4D0  	MOV.B	#77, W0
0x7860	0x785880  	MOV.B	W0, [W1++]
0x7862	0xB3C200  	MOV.B	#32, W0
0x7864	0x785880  	MOV.B	W0, [W1++]
0x7866	0xB3C480  	MOV.B	#72, W0
0x7868	0x785880  	MOV.B	W0, [W1++]
0x786A	0xB3C410  	MOV.B	#65, W0
0x786C	0x785880  	MOV.B	W0, [W1++]
0x786E	0xB3C5A0  	MOV.B	#90, W0
0x7870	0x785880  	MOV.B	W0, [W1++]
0x7872	0xB3C490  	MOV.B	#73, W0
0x7874	0x785880  	MOV.B	W0, [W1++]
0x7876	0xB3C520  	MOV.B	#82, W0
0x7878	0x785880  	MOV.B	W0, [W1++]
0x787A	0xB3C4C0  	MOV.B	#76, W0
0x787C	0x785880  	MOV.B	W0, [W1++]
0x787E	0xB3C410  	MOV.B	#65, W0
0x7880	0x785880  	MOV.B	W0, [W1++]
0x7882	0xB3C4E0  	MOV.B	#78, W0
0x7884	0x785880  	MOV.B	W0, [W1++]
0x7886	0xB3C590  	MOV.B	#89, W0
0x7888	0x785880  	MOV.B	W0, [W1++]
0x788A	0xB3C4F0  	MOV.B	#79, W0
0x788C	0x785880  	MOV.B	W0, [W1++]
0x788E	0xB3C520  	MOV.B	#82, W0
0x7890	0x785880  	MOV.B	W0, [W1++]
0x7892	0xEF2000  	CLR	W0
0x7894	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,382 :: 		Title_Bat_EgriGoodTxt   := '  AKÜ KAPASÝTESÝ ÝYÝ ';
0x7896	0x20D081  	MOV	#lo_addr(_Title_Bat_EgriGoodTxt), W1
0x7898	0xB3C200  	MOV.B	#32, W0
0x789A	0x785880  	MOV.B	W0, [W1++]
0x789C	0xB3C200  	MOV.B	#32, W0
0x789E	0x785880  	MOV.B	W0, [W1++]
0x78A0	0xB3C410  	MOV.B	#65, W0
0x78A2	0x785880  	MOV.B	W0, [W1++]
0x78A4	0xB3C4B0  	MOV.B	#75, W0
0x78A6	0x785880  	MOV.B	W0, [W1++]
0x78A8	0xB3CDC0  	MOV.B	#220, W0
0x78AA	0x785880  	MOV.B	W0, [W1++]
0x78AC	0xB3C200  	MOV.B	#32, W0
0x78AE	0x785880  	MOV.B	W0, [W1++]
0x78B0	0xB3C4B0  	MOV.B	#75, W0
0x78B2	0x785880  	MOV.B	W0, [W1++]
0x78B4	0xB3C410  	MOV.B	#65, W0
0x78B6	0x785880  	MOV.B	W0, [W1++]
0x78B8	0xB3C500  	MOV.B	#80, W0
0x78BA	0x785880  	MOV.B	W0, [W1++]
0x78BC	0xB3C410  	MOV.B	#65, W0
0x78BE	0x785880  	MOV.B	W0, [W1++]
0x78C0	0xB3C530  	MOV.B	#83, W0
0x78C2	0x785880  	MOV.B	W0, [W1++]
0x78C4	0xB3CDD0  	MOV.B	#221, W0
0x78C6	0x785880  	MOV.B	W0, [W1++]
0x78C8	0xB3C540  	MOV.B	#84, W0
0x78CA	0x785880  	MOV.B	W0, [W1++]
0x78CC	0xB3C450  	MOV.B	#69, W0
0x78CE	0x785880  	MOV.B	W0, [W1++]
0x78D0	0xB3C530  	MOV.B	#83, W0
0x78D2	0x785880  	MOV.B	W0, [W1++]
0x78D4	0xB3CDD0  	MOV.B	#221, W0
0x78D6	0x785880  	MOV.B	W0, [W1++]
0x78D8	0xB3C200  	MOV.B	#32, W0
0x78DA	0x785880  	MOV.B	W0, [W1++]
0x78DC	0xB3CDD0  	MOV.B	#221, W0
0x78DE	0x785880  	MOV.B	W0, [W1++]
0x78E0	0xB3C590  	MOV.B	#89, W0
0x78E2	0x785880  	MOV.B	W0, [W1++]
0x78E4	0xB3CDD0  	MOV.B	#221, W0
0x78E6	0x785880  	MOV.B	W0, [W1++]
0x78E8	0xB3C200  	MOV.B	#32, W0
0x78EA	0x785880  	MOV.B	W0, [W1++]
0x78EC	0xEF2000  	CLR	W0
0x78EE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,383 :: 		Title_Bat_EgriBadTxt    := ' AKÜ KAPASÝTESÝ DÜÞÜK';
0x78F0	0x20CF21  	MOV	#lo_addr(_Title_Bat_EgriBadTxt), W1
0x78F2	0xB3C200  	MOV.B	#32, W0
0x78F4	0x785880  	MOV.B	W0, [W1++]
0x78F6	0xB3C410  	MOV.B	#65, W0
0x78F8	0x785880  	MOV.B	W0, [W1++]
0x78FA	0xB3C4B0  	MOV.B	#75, W0
0x78FC	0x785880  	MOV.B	W0, [W1++]
0x78FE	0xB3CDC0  	MOV.B	#220, W0
0x7900	0x785880  	MOV.B	W0, [W1++]
0x7902	0xB3C200  	MOV.B	#32, W0
0x7904	0x785880  	MOV.B	W0, [W1++]
0x7906	0xB3C4B0  	MOV.B	#75, W0
0x7908	0x785880  	MOV.B	W0, [W1++]
0x790A	0xB3C410  	MOV.B	#65, W0
0x790C	0x785880  	MOV.B	W0, [W1++]
0x790E	0xB3C500  	MOV.B	#80, W0
0x7910	0x785880  	MOV.B	W0, [W1++]
0x7912	0xB3C410  	MOV.B	#65, W0
0x7914	0x785880  	MOV.B	W0, [W1++]
0x7916	0xB3C530  	MOV.B	#83, W0
0x7918	0x785880  	MOV.B	W0, [W1++]
0x791A	0xB3CDD0  	MOV.B	#221, W0
0x791C	0x785880  	MOV.B	W0, [W1++]
0x791E	0xB3C540  	MOV.B	#84, W0
0x7920	0x785880  	MOV.B	W0, [W1++]
0x7922	0xB3C450  	MOV.B	#69, W0
0x7924	0x785880  	MOV.B	W0, [W1++]
0x7926	0xB3C530  	MOV.B	#83, W0
0x7928	0x785880  	MOV.B	W0, [W1++]
0x792A	0xB3CDD0  	MOV.B	#221, W0
0x792C	0x785880  	MOV.B	W0, [W1++]
0x792E	0xB3C200  	MOV.B	#32, W0
0x7930	0x785880  	MOV.B	W0, [W1++]
0x7932	0xB3C440  	MOV.B	#68, W0
0x7934	0x785880  	MOV.B	W0, [W1++]
0x7936	0xB3CDC0  	MOV.B	#220, W0
0x7938	0x785880  	MOV.B	W0, [W1++]
0x793A	0xB3CDE0  	MOV.B	#222, W0
0x793C	0x785880  	MOV.B	W0, [W1++]
0x793E	0xB3CDC0  	MOV.B	#220, W0
0x7940	0x785880  	MOV.B	W0, [W1++]
0x7942	0xB3C4B0  	MOV.B	#75, W0
0x7944	0x785880  	MOV.B	W0, [W1++]
0x7946	0xEF2000  	CLR	W0
0x7948	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,384 :: 		Title_BatCurveFailTxt   := '  EÐRÝ TARAMA HATA   ';
0x794A	0x20A981  	MOV	#lo_addr(_Title_BatCurveFailTxt), W1
0x794C	0xB3C200  	MOV.B	#32, W0
0x794E	0x785880  	MOV.B	W0, [W1++]
0x7950	0xB3C200  	MOV.B	#32, W0
0x7952	0x785880  	MOV.B	W0, [W1++]
0x7954	0xB3C450  	MOV.B	#69, W0
0x7956	0x785880  	MOV.B	W0, [W1++]
0x7958	0xB3CD00  	MOV.B	#208, W0
0x795A	0x785880  	MOV.B	W0, [W1++]
0x795C	0xB3C520  	MOV.B	#82, W0
0x795E	0x785880  	MOV.B	W0, [W1++]
0x7960	0xB3CDD0  	MOV.B	#221, W0
0x7962	0x785880  	MOV.B	W0, [W1++]
0x7964	0xB3C200  	MOV.B	#32, W0
0x7966	0x785880  	MOV.B	W0, [W1++]
0x7968	0xB3C540  	MOV.B	#84, W0
0x796A	0x785880  	MOV.B	W0, [W1++]
0x796C	0xB3C410  	MOV.B	#65, W0
0x796E	0x785880  	MOV.B	W0, [W1++]
0x7970	0xB3C520  	MOV.B	#82, W0
0x7972	0x785880  	MOV.B	W0, [W1++]
0x7974	0xB3C410  	MOV.B	#65, W0
0x7976	0x785880  	MOV.B	W0, [W1++]
0x7978	0xB3C4D0  	MOV.B	#77, W0
0x797A	0x785880  	MOV.B	W0, [W1++]
0x797C	0xB3C410  	MOV.B	#65, W0
0x797E	0x785880  	MOV.B	W0, [W1++]
0x7980	0xB3C200  	MOV.B	#32, W0
0x7982	0x785880  	MOV.B	W0, [W1++]
0x7984	0xB3C480  	MOV.B	#72, W0
0x7986	0x785880  	MOV.B	W0, [W1++]
0x7988	0xB3C410  	MOV.B	#65, W0
0x798A	0x785880  	MOV.B	W0, [W1++]
0x798C	0xB3C540  	MOV.B	#84, W0
0x798E	0x785880  	MOV.B	W0, [W1++]
0x7990	0xB3C410  	MOV.B	#65, W0
0x7992	0x785880  	MOV.B	W0, [W1++]
0x7994	0xB3C200  	MOV.B	#32, W0
0x7996	0x785880  	MOV.B	W0, [W1++]
0x7998	0xB3C200  	MOV.B	#32, W0
0x799A	0x785880  	MOV.B	W0, [W1++]
0x799C	0xB3C200  	MOV.B	#32, W0
0x799E	0x785880  	MOV.B	W0, [W1++]
0x79A0	0xEF2000  	CLR	W0
0x79A2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,386 :: 		HeaterActiveText        := 'KABiN ISITICISI AKTiF';
0x79A4	0x20A821  	MOV	#lo_addr(_HeaterActiveText), W1
0x79A6	0xB3C4B0  	MOV.B	#75, W0
0x79A8	0x785880  	MOV.B	W0, [W1++]
0x79AA	0xB3C410  	MOV.B	#65, W0
0x79AC	0x785880  	MOV.B	W0, [W1++]
0x79AE	0xB3C420  	MOV.B	#66, W0
0x79B0	0x785880  	MOV.B	W0, [W1++]
0x79B2	0xB3C690  	MOV.B	#105, W0
0x79B4	0x785880  	MOV.B	W0, [W1++]
0x79B6	0xB3C4E0  	MOV.B	#78, W0
0x79B8	0x785880  	MOV.B	W0, [W1++]
0x79BA	0xB3C200  	MOV.B	#32, W0
0x79BC	0x785880  	MOV.B	W0, [W1++]
0x79BE	0xB3C490  	MOV.B	#73, W0
0x79C0	0x785880  	MOV.B	W0, [W1++]
0x79C2	0xB3C530  	MOV.B	#83, W0
0x79C4	0x785880  	MOV.B	W0, [W1++]
0x79C6	0xB3C490  	MOV.B	#73, W0
0x79C8	0x785880  	MOV.B	W0, [W1++]
0x79CA	0xB3C540  	MOV.B	#84, W0
0x79CC	0x785880  	MOV.B	W0, [W1++]
0x79CE	0xB3C490  	MOV.B	#73, W0
0x79D0	0x785880  	MOV.B	W0, [W1++]
0x79D2	0xB3C430  	MOV.B	#67, W0
0x79D4	0x785880  	MOV.B	W0, [W1++]
0x79D6	0xB3C490  	MOV.B	#73, W0
0x79D8	0x785880  	MOV.B	W0, [W1++]
0x79DA	0xB3C530  	MOV.B	#83, W0
0x79DC	0x785880  	MOV.B	W0, [W1++]
0x79DE	0xB3C490  	MOV.B	#73, W0
0x79E0	0x785880  	MOV.B	W0, [W1++]
0x79E2	0xB3C200  	MOV.B	#32, W0
0x79E4	0x785880  	MOV.B	W0, [W1++]
0x79E6	0xB3C410  	MOV.B	#65, W0
0x79E8	0x785880  	MOV.B	W0, [W1++]
0x79EA	0xB3C4B0  	MOV.B	#75, W0
0x79EC	0x785880  	MOV.B	W0, [W1++]
0x79EE	0xB3C540  	MOV.B	#84, W0
0x79F0	0x785880  	MOV.B	W0, [W1++]
0x79F2	0xB3C690  	MOV.B	#105, W0
0x79F4	0x785880  	MOV.B	W0, [W1++]
0x79F6	0xB3C460  	MOV.B	#70, W0
0x79F8	0x785880  	MOV.B	W0, [W1++]
0x79FA	0xEF2000  	CLR	W0
0x79FC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,388 :: 		end;
L_end_Turkish_Lang:
0x79FE	0x060000  	RETURN
; end of _Turkish_Lang
_English_Lang:
;Language.mpas,136 :: 		begin
;Language.mpas,142 :: 		BoostChargeText  := 'Boost ';
0x7A00	0x212761  	MOV	#lo_addr(_BoostChargeText), W1
0x7A02	0xB3C420  	MOV.B	#66, W0
0x7A04	0x785880  	MOV.B	W0, [W1++]
0x7A06	0xB3C6F0  	MOV.B	#111, W0
0x7A08	0x785880  	MOV.B	W0, [W1++]
0x7A0A	0xB3C6F0  	MOV.B	#111, W0
0x7A0C	0x785880  	MOV.B	W0, [W1++]
0x7A0E	0xB3C730  	MOV.B	#115, W0
0x7A10	0x785880  	MOV.B	W0, [W1++]
0x7A12	0xB3C740  	MOV.B	#116, W0
0x7A14	0x785880  	MOV.B	W0, [W1++]
0x7A16	0xB3C200  	MOV.B	#32, W0
0x7A18	0x785880  	MOV.B	W0, [W1++]
0x7A1A	0xEF2000  	CLR	W0
0x7A1C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,143 :: 		FloatChargeText  := 'Float ';
0x7A1E	0x212841  	MOV	#lo_addr(_FloatChargeText), W1
0x7A20	0xB3C460  	MOV.B	#70, W0
0x7A22	0x785880  	MOV.B	W0, [W1++]
0x7A24	0xB3C6C0  	MOV.B	#108, W0
0x7A26	0x785880  	MOV.B	W0, [W1++]
0x7A28	0xB3C6F0  	MOV.B	#111, W0
0x7A2A	0x785880  	MOV.B	W0, [W1++]
0x7A2C	0xB3C610  	MOV.B	#97, W0
0x7A2E	0x785880  	MOV.B	W0, [W1++]
0x7A30	0xB3C740  	MOV.B	#116, W0
0x7A32	0x785880  	MOV.B	W0, [W1++]
0x7A34	0xB3C200  	MOV.B	#32, W0
0x7A36	0x785880  	MOV.B	W0, [W1++]
0x7A38	0xEF2000  	CLR	W0
0x7A3A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,144 :: 		TCompChargeText  := 'T.Comp';
0x7A3C	0x2127D1  	MOV	#lo_addr(_TCompChargeText), W1
0x7A3E	0xB3C540  	MOV.B	#84, W0
0x7A40	0x785880  	MOV.B	W0, [W1++]
0x7A42	0xB3C2E0  	MOV.B	#46, W0
0x7A44	0x785880  	MOV.B	W0, [W1++]
0x7A46	0xB3C430  	MOV.B	#67, W0
0x7A48	0x785880  	MOV.B	W0, [W1++]
0x7A4A	0xB3C6F0  	MOV.B	#111, W0
0x7A4C	0x785880  	MOV.B	W0, [W1++]
0x7A4E	0xB3C6D0  	MOV.B	#109, W0
0x7A50	0x785880  	MOV.B	W0, [W1++]
0x7A52	0xB3C700  	MOV.B	#112, W0
0x7A54	0x785880  	MOV.B	W0, [W1++]
0x7A56	0xEF2000  	CLR	W0
0x7A58	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,145 :: 		ManualChargeText := 'Manual';
0x7A5A	0x212291  	MOV	#lo_addr(_ManualChargeText), W1
0x7A5C	0xB3C4D0  	MOV.B	#77, W0
0x7A5E	0x785880  	MOV.B	W0, [W1++]
0x7A60	0xB3C610  	MOV.B	#97, W0
0x7A62	0x785880  	MOV.B	W0, [W1++]
0x7A64	0xB3C6E0  	MOV.B	#110, W0
0x7A66	0x785880  	MOV.B	W0, [W1++]
0x7A68	0xB3C750  	MOV.B	#117, W0
0x7A6A	0x785880  	MOV.B	W0, [W1++]
0x7A6C	0xB3C610  	MOV.B	#97, W0
0x7A6E	0x785880  	MOV.B	W0, [W1++]
0x7A70	0xB3C6C0  	MOV.B	#108, W0
0x7A72	0x785880  	MOV.B	W0, [W1++]
0x7A74	0xEF2000  	CLR	W0
0x7A76	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,147 :: 		EnableText       := 'Enable ';
0x7A78	0x2125B1  	MOV	#lo_addr(_EnableText), W1
0x7A7A	0xB3C450  	MOV.B	#69, W0
0x7A7C	0x785880  	MOV.B	W0, [W1++]
0x7A7E	0xB3C6E0  	MOV.B	#110, W0
0x7A80	0x785880  	MOV.B	W0, [W1++]
0x7A82	0xB3C610  	MOV.B	#97, W0
0x7A84	0x785880  	MOV.B	W0, [W1++]
0x7A86	0xB3C620  	MOV.B	#98, W0
0x7A88	0x785880  	MOV.B	W0, [W1++]
0x7A8A	0xB3C6C0  	MOV.B	#108, W0
0x7A8C	0x785880  	MOV.B	W0, [W1++]
0x7A8E	0xB3C650  	MOV.B	#101, W0
0x7A90	0x785880  	MOV.B	W0, [W1++]
0x7A92	0xB3C200  	MOV.B	#32, W0
0x7A94	0x785880  	MOV.B	W0, [W1++]
0x7A96	0xEF2000  	CLR	W0
0x7A98	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,148 :: 		DisableText      := 'Disable';
0x7A9A	0x214151  	MOV	#lo_addr(_DisableText), W1
0x7A9C	0xB3C440  	MOV.B	#68, W0
0x7A9E	0x785880  	MOV.B	W0, [W1++]
0x7AA0	0xB3C690  	MOV.B	#105, W0
0x7AA2	0x785880  	MOV.B	W0, [W1++]
0x7AA4	0xB3C730  	MOV.B	#115, W0
0x7AA6	0x785880  	MOV.B	W0, [W1++]
0x7AA8	0xB3C610  	MOV.B	#97, W0
0x7AAA	0x785880  	MOV.B	W0, [W1++]
0x7AAC	0xB3C620  	MOV.B	#98, W0
0x7AAE	0x785880  	MOV.B	W0, [W1++]
0x7AB0	0xB3C6C0  	MOV.B	#108, W0
0x7AB2	0x785880  	MOV.B	W0, [W1++]
0x7AB4	0xB3C650  	MOV.B	#101, W0
0x7AB6	0x785880  	MOV.B	W0, [W1++]
0x7AB8	0xEF2000  	CLR	W0
0x7ABA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,149 :: 		MinuteText       := 'mn';
0x7ABC	0x216731  	MOV	#lo_addr(_MinuteText), W1
0x7ABE	0xB3C6D0  	MOV.B	#109, W0
0x7AC0	0x785880  	MOV.B	W0, [W1++]
0x7AC2	0xB3C6E0  	MOV.B	#110, W0
0x7AC4	0x785880  	MOV.B	W0, [W1++]
0x7AC6	0xEF2000  	CLR	W0
0x7AC8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,150 :: 		Flt_AcHigh       := '       AC HIGH       ';
0x7ACA	0x2086A1  	MOV	#lo_addr(_Flt_AcHigh), W1
0x7ACC	0xB3C200  	MOV.B	#32, W0
0x7ACE	0x785880  	MOV.B	W0, [W1++]
0x7AD0	0xB3C200  	MOV.B	#32, W0
0x7AD2	0x785880  	MOV.B	W0, [W1++]
0x7AD4	0xB3C200  	MOV.B	#32, W0
0x7AD6	0x785880  	MOV.B	W0, [W1++]
0x7AD8	0xB3C200  	MOV.B	#32, W0
0x7ADA	0x785880  	MOV.B	W0, [W1++]
0x7ADC	0xB3C200  	MOV.B	#32, W0
0x7ADE	0x785880  	MOV.B	W0, [W1++]
0x7AE0	0xB3C200  	MOV.B	#32, W0
0x7AE2	0x785880  	MOV.B	W0, [W1++]
0x7AE4	0xB3C200  	MOV.B	#32, W0
0x7AE6	0x785880  	MOV.B	W0, [W1++]
0x7AE8	0xB3C410  	MOV.B	#65, W0
0x7AEA	0x785880  	MOV.B	W0, [W1++]
0x7AEC	0xB3C430  	MOV.B	#67, W0
0x7AEE	0x785880  	MOV.B	W0, [W1++]
0x7AF0	0xB3C200  	MOV.B	#32, W0
0x7AF2	0x785880  	MOV.B	W0, [W1++]
0x7AF4	0xB3C480  	MOV.B	#72, W0
0x7AF6	0x785880  	MOV.B	W0, [W1++]
0x7AF8	0xB3C490  	MOV.B	#73, W0
0x7AFA	0x785880  	MOV.B	W0, [W1++]
0x7AFC	0xB3C470  	MOV.B	#71, W0
0x7AFE	0x785880  	MOV.B	W0, [W1++]
0x7B00	0xB3C480  	MOV.B	#72, W0
0x7B02	0x785880  	MOV.B	W0, [W1++]
0x7B04	0xB3C200  	MOV.B	#32, W0
0x7B06	0x785880  	MOV.B	W0, [W1++]
0x7B08	0xB3C200  	MOV.B	#32, W0
0x7B0A	0x785880  	MOV.B	W0, [W1++]
0x7B0C	0xB3C200  	MOV.B	#32, W0
0x7B0E	0x785880  	MOV.B	W0, [W1++]
0x7B10	0xB3C200  	MOV.B	#32, W0
0x7B12	0x785880  	MOV.B	W0, [W1++]
0x7B14	0xB3C200  	MOV.B	#32, W0
0x7B16	0x785880  	MOV.B	W0, [W1++]
0x7B18	0xB3C200  	MOV.B	#32, W0
0x7B1A	0x785880  	MOV.B	W0, [W1++]
0x7B1C	0xB3C200  	MOV.B	#32, W0
0x7B1E	0x785880  	MOV.B	W0, [W1++]
0x7B20	0xEF2000  	CLR	W0
0x7B22	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,151 :: 		Flt_AcLow        := '       AC LOW        ';
0x7B24	0x208541  	MOV	#lo_addr(_Flt_AcLow), W1
0x7B26	0xB3C200  	MOV.B	#32, W0
0x7B28	0x785880  	MOV.B	W0, [W1++]
0x7B2A	0xB3C200  	MOV.B	#32, W0
0x7B2C	0x785880  	MOV.B	W0, [W1++]
0x7B2E	0xB3C200  	MOV.B	#32, W0
0x7B30	0x785880  	MOV.B	W0, [W1++]
0x7B32	0xB3C200  	MOV.B	#32, W0
0x7B34	0x785880  	MOV.B	W0, [W1++]
0x7B36	0xB3C200  	MOV.B	#32, W0
0x7B38	0x785880  	MOV.B	W0, [W1++]
0x7B3A	0xB3C200  	MOV.B	#32, W0
0x7B3C	0x785880  	MOV.B	W0, [W1++]
0x7B3E	0xB3C200  	MOV.B	#32, W0
0x7B40	0x785880  	MOV.B	W0, [W1++]
0x7B42	0xB3C410  	MOV.B	#65, W0
0x7B44	0x785880  	MOV.B	W0, [W1++]
0x7B46	0xB3C430  	MOV.B	#67, W0
0x7B48	0x785880  	MOV.B	W0, [W1++]
0x7B4A	0xB3C200  	MOV.B	#32, W0
0x7B4C	0x785880  	MOV.B	W0, [W1++]
0x7B4E	0xB3C4C0  	MOV.B	#76, W0
0x7B50	0x785880  	MOV.B	W0, [W1++]
0x7B52	0xB3C4F0  	MOV.B	#79, W0
0x7B54	0x785880  	MOV.B	W0, [W1++]
0x7B56	0xB3C570  	MOV.B	#87, W0
0x7B58	0x785880  	MOV.B	W0, [W1++]
0x7B5A	0xB3C200  	MOV.B	#32, W0
0x7B5C	0x785880  	MOV.B	W0, [W1++]
0x7B5E	0xB3C200  	MOV.B	#32, W0
0x7B60	0x785880  	MOV.B	W0, [W1++]
0x7B62	0xB3C200  	MOV.B	#32, W0
0x7B64	0x785880  	MOV.B	W0, [W1++]
0x7B66	0xB3C200  	MOV.B	#32, W0
0x7B68	0x785880  	MOV.B	W0, [W1++]
0x7B6A	0xB3C200  	MOV.B	#32, W0
0x7B6C	0x785880  	MOV.B	W0, [W1++]
0x7B6E	0xB3C200  	MOV.B	#32, W0
0x7B70	0x785880  	MOV.B	W0, [W1++]
0x7B72	0xB3C200  	MOV.B	#32, W0
0x7B74	0x785880  	MOV.B	W0, [W1++]
0x7B76	0xB3C200  	MOV.B	#32, W0
0x7B78	0x785880  	MOV.B	W0, [W1++]
0x7B7A	0xEF2000  	CLR	W0
0x7B7C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,152 :: 		Flt_AcDiff       := 'AC VOLTAGE DIFFERENCE';
0x7B7E	0x208801  	MOV	#lo_addr(_Flt_AcDiff), W1
0x7B80	0xB3C410  	MOV.B	#65, W0
0x7B82	0x785880  	MOV.B	W0, [W1++]
0x7B84	0xB3C430  	MOV.B	#67, W0
0x7B86	0x785880  	MOV.B	W0, [W1++]
0x7B88	0xB3C200  	MOV.B	#32, W0
0x7B8A	0x785880  	MOV.B	W0, [W1++]
0x7B8C	0xB3C560  	MOV.B	#86, W0
0x7B8E	0x785880  	MOV.B	W0, [W1++]
0x7B90	0xB3C4F0  	MOV.B	#79, W0
0x7B92	0x785880  	MOV.B	W0, [W1++]
0x7B94	0xB3C4C0  	MOV.B	#76, W0
0x7B96	0x785880  	MOV.B	W0, [W1++]
0x7B98	0xB3C540  	MOV.B	#84, W0
0x7B9A	0x785880  	MOV.B	W0, [W1++]
0x7B9C	0xB3C410  	MOV.B	#65, W0
0x7B9E	0x785880  	MOV.B	W0, [W1++]
0x7BA0	0xB3C470  	MOV.B	#71, W0
0x7BA2	0x785880  	MOV.B	W0, [W1++]
0x7BA4	0xB3C450  	MOV.B	#69, W0
0x7BA6	0x785880  	MOV.B	W0, [W1++]
0x7BA8	0xB3C200  	MOV.B	#32, W0
0x7BAA	0x785880  	MOV.B	W0, [W1++]
0x7BAC	0xB3C440  	MOV.B	#68, W0
0x7BAE	0x785880  	MOV.B	W0, [W1++]
0x7BB0	0xB3C490  	MOV.B	#73, W0
0x7BB2	0x785880  	MOV.B	W0, [W1++]
0x7BB4	0xB3C460  	MOV.B	#70, W0
0x7BB6	0x785880  	MOV.B	W0, [W1++]
0x7BB8	0xB3C460  	MOV.B	#70, W0
0x7BBA	0x785880  	MOV.B	W0, [W1++]
0x7BBC	0xB3C450  	MOV.B	#69, W0
0x7BBE	0x785880  	MOV.B	W0, [W1++]
0x7BC0	0xB3C520  	MOV.B	#82, W0
0x7BC2	0x785880  	MOV.B	W0, [W1++]
0x7BC4	0xB3C450  	MOV.B	#69, W0
0x7BC6	0x785880  	MOV.B	W0, [W1++]
0x7BC8	0xB3C4E0  	MOV.B	#78, W0
0x7BCA	0x785880  	MOV.B	W0, [W1++]
0x7BCC	0xB3C430  	MOV.B	#67, W0
0x7BCE	0x785880  	MOV.B	W0, [W1++]
0x7BD0	0xB3C450  	MOV.B	#69, W0
0x7BD2	0x785880  	MOV.B	W0, [W1++]
0x7BD4	0xEF2000  	CLR	W0
0x7BD6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,153 :: 		Flt_DcHigh       := '       DC HIGH       ';
0x7BD8	0x208AC1  	MOV	#lo_addr(_Flt_DcHigh), W1
0x7BDA	0xB3C200  	MOV.B	#32, W0
0x7BDC	0x785880  	MOV.B	W0, [W1++]
0x7BDE	0xB3C200  	MOV.B	#32, W0
0x7BE0	0x785880  	MOV.B	W0, [W1++]
0x7BE2	0xB3C200  	MOV.B	#32, W0
0x7BE4	0x785880  	MOV.B	W0, [W1++]
0x7BE6	0xB3C200  	MOV.B	#32, W0
0x7BE8	0x785880  	MOV.B	W0, [W1++]
0x7BEA	0xB3C200  	MOV.B	#32, W0
0x7BEC	0x785880  	MOV.B	W0, [W1++]
0x7BEE	0xB3C200  	MOV.B	#32, W0
0x7BF0	0x785880  	MOV.B	W0, [W1++]
0x7BF2	0xB3C200  	MOV.B	#32, W0
0x7BF4	0x785880  	MOV.B	W0, [W1++]
0x7BF6	0xB3C440  	MOV.B	#68, W0
0x7BF8	0x785880  	MOV.B	W0, [W1++]
0x7BFA	0xB3C430  	MOV.B	#67, W0
0x7BFC	0x785880  	MOV.B	W0, [W1++]
0x7BFE	0xB3C200  	MOV.B	#32, W0
0x7C00	0x785880  	MOV.B	W0, [W1++]
0x7C02	0xB3C480  	MOV.B	#72, W0
0x7C04	0x785880  	MOV.B	W0, [W1++]
0x7C06	0xB3C490  	MOV.B	#73, W0
0x7C08	0x785880  	MOV.B	W0, [W1++]
0x7C0A	0xB3C470  	MOV.B	#71, W0
0x7C0C	0x785880  	MOV.B	W0, [W1++]
0x7C0E	0xB3C480  	MOV.B	#72, W0
0x7C10	0x785880  	MOV.B	W0, [W1++]
0x7C12	0xB3C200  	MOV.B	#32, W0
0x7C14	0x785880  	MOV.B	W0, [W1++]
0x7C16	0xB3C200  	MOV.B	#32, W0
0x7C18	0x785880  	MOV.B	W0, [W1++]
0x7C1A	0xB3C200  	MOV.B	#32, W0
0x7C1C	0x785880  	MOV.B	W0, [W1++]
0x7C1E	0xB3C200  	MOV.B	#32, W0
0x7C20	0x785880  	MOV.B	W0, [W1++]
0x7C22	0xB3C200  	MOV.B	#32, W0
0x7C24	0x785880  	MOV.B	W0, [W1++]
0x7C26	0xB3C200  	MOV.B	#32, W0
0x7C28	0x785880  	MOV.B	W0, [W1++]
0x7C2A	0xB3C200  	MOV.B	#32, W0
0x7C2C	0x785880  	MOV.B	W0, [W1++]
0x7C2E	0xEF2000  	CLR	W0
0x7C30	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,154 :: 		Flt_DcLow        := '       DC LOW        ';
0x7C32	0x208961  	MOV	#lo_addr(_Flt_DcLow), W1
0x7C34	0xB3C200  	MOV.B	#32, W0
0x7C36	0x785880  	MOV.B	W0, [W1++]
0x7C38	0xB3C200  	MOV.B	#32, W0
0x7C3A	0x785880  	MOV.B	W0, [W1++]
0x7C3C	0xB3C200  	MOV.B	#32, W0
0x7C3E	0x785880  	MOV.B	W0, [W1++]
0x7C40	0xB3C200  	MOV.B	#32, W0
0x7C42	0x785880  	MOV.B	W0, [W1++]
0x7C44	0xB3C200  	MOV.B	#32, W0
0x7C46	0x785880  	MOV.B	W0, [W1++]
0x7C48	0xB3C200  	MOV.B	#32, W0
0x7C4A	0x785880  	MOV.B	W0, [W1++]
0x7C4C	0xB3C200  	MOV.B	#32, W0
0x7C4E	0x785880  	MOV.B	W0, [W1++]
0x7C50	0xB3C440  	MOV.B	#68, W0
0x7C52	0x785880  	MOV.B	W0, [W1++]
0x7C54	0xB3C430  	MOV.B	#67, W0
0x7C56	0x785880  	MOV.B	W0, [W1++]
0x7C58	0xB3C200  	MOV.B	#32, W0
0x7C5A	0x785880  	MOV.B	W0, [W1++]
0x7C5C	0xB3C4C0  	MOV.B	#76, W0
0x7C5E	0x785880  	MOV.B	W0, [W1++]
0x7C60	0xB3C4F0  	MOV.B	#79, W0
0x7C62	0x785880  	MOV.B	W0, [W1++]
0x7C64	0xB3C570  	MOV.B	#87, W0
0x7C66	0x785880  	MOV.B	W0, [W1++]
0x7C68	0xB3C200  	MOV.B	#32, W0
0x7C6A	0x785880  	MOV.B	W0, [W1++]
0x7C6C	0xB3C200  	MOV.B	#32, W0
0x7C6E	0x785880  	MOV.B	W0, [W1++]
0x7C70	0xB3C200  	MOV.B	#32, W0
0x7C72	0x785880  	MOV.B	W0, [W1++]
0x7C74	0xB3C200  	MOV.B	#32, W0
0x7C76	0x785880  	MOV.B	W0, [W1++]
0x7C78	0xB3C200  	MOV.B	#32, W0
0x7C7A	0x785880  	MOV.B	W0, [W1++]
0x7C7C	0xB3C200  	MOV.B	#32, W0
0x7C7E	0x785880  	MOV.B	W0, [W1++]
0x7C80	0xB3C200  	MOV.B	#32, W0
0x7C82	0x785880  	MOV.B	W0, [W1++]
0x7C84	0xB3C200  	MOV.B	#32, W0
0x7C86	0x785880  	MOV.B	W0, [W1++]
0x7C88	0xEF2000  	CLR	W0
0x7C8A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,155 :: 		Flt_Pleakage     := '     (+) LEAKAGE     ';
0x7C8C	0x20FD41  	MOV	#lo_addr(_Flt_Pleakage), W1
0x7C8E	0xB3C200  	MOV.B	#32, W0
0x7C90	0x785880  	MOV.B	W0, [W1++]
0x7C92	0xB3C200  	MOV.B	#32, W0
0x7C94	0x785880  	MOV.B	W0, [W1++]
0x7C96	0xB3C200  	MOV.B	#32, W0
0x7C98	0x785880  	MOV.B	W0, [W1++]
0x7C9A	0xB3C200  	MOV.B	#32, W0
0x7C9C	0x785880  	MOV.B	W0, [W1++]
0x7C9E	0xB3C200  	MOV.B	#32, W0
0x7CA0	0x785880  	MOV.B	W0, [W1++]
0x7CA2	0xB3C280  	MOV.B	#40, W0
0x7CA4	0x785880  	MOV.B	W0, [W1++]
0x7CA6	0xB3C2B0  	MOV.B	#43, W0
0x7CA8	0x785880  	MOV.B	W0, [W1++]
0x7CAA	0xB3C290  	MOV.B	#41, W0
0x7CAC	0x785880  	MOV.B	W0, [W1++]
0x7CAE	0xB3C200  	MOV.B	#32, W0
0x7CB0	0x785880  	MOV.B	W0, [W1++]
0x7CB2	0xB3C4C0  	MOV.B	#76, W0
0x7CB4	0x785880  	MOV.B	W0, [W1++]
0x7CB6	0xB3C450  	MOV.B	#69, W0
0x7CB8	0x785880  	MOV.B	W0, [W1++]
0x7CBA	0xB3C410  	MOV.B	#65, W0
0x7CBC	0x785880  	MOV.B	W0, [W1++]
0x7CBE	0xB3C4B0  	MOV.B	#75, W0
0x7CC0	0x785880  	MOV.B	W0, [W1++]
0x7CC2	0xB3C410  	MOV.B	#65, W0
0x7CC4	0x785880  	MOV.B	W0, [W1++]
0x7CC6	0xB3C470  	MOV.B	#71, W0
0x7CC8	0x785880  	MOV.B	W0, [W1++]
0x7CCA	0xB3C450  	MOV.B	#69, W0
0x7CCC	0x785880  	MOV.B	W0, [W1++]
0x7CCE	0xB3C200  	MOV.B	#32, W0
0x7CD0	0x785880  	MOV.B	W0, [W1++]
0x7CD2	0xB3C200  	MOV.B	#32, W0
0x7CD4	0x785880  	MOV.B	W0, [W1++]
0x7CD6	0xB3C200  	MOV.B	#32, W0
0x7CD8	0x785880  	MOV.B	W0, [W1++]
0x7CDA	0xB3C200  	MOV.B	#32, W0
0x7CDC	0x785880  	MOV.B	W0, [W1++]
0x7CDE	0xB3C200  	MOV.B	#32, W0
0x7CE0	0x785880  	MOV.B	W0, [W1++]
0x7CE2	0xEF2000  	CLR	W0
0x7CE4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,156 :: 		Flt_Nleakage     := '     (-) LEAKAGE     ';
0x7CE6	0x20FBE1  	MOV	#lo_addr(_Flt_Nleakage), W1
0x7CE8	0xB3C200  	MOV.B	#32, W0
0x7CEA	0x785880  	MOV.B	W0, [W1++]
0x7CEC	0xB3C200  	MOV.B	#32, W0
0x7CEE	0x785880  	MOV.B	W0, [W1++]
0x7CF0	0xB3C200  	MOV.B	#32, W0
0x7CF2	0x785880  	MOV.B	W0, [W1++]
0x7CF4	0xB3C200  	MOV.B	#32, W0
0x7CF6	0x785880  	MOV.B	W0, [W1++]
0x7CF8	0xB3C200  	MOV.B	#32, W0
0x7CFA	0x785880  	MOV.B	W0, [W1++]
0x7CFC	0xB3C280  	MOV.B	#40, W0
0x7CFE	0x785880  	MOV.B	W0, [W1++]
0x7D00	0xB3C2D0  	MOV.B	#45, W0
0x7D02	0x785880  	MOV.B	W0, [W1++]
0x7D04	0xB3C290  	MOV.B	#41, W0
0x7D06	0x785880  	MOV.B	W0, [W1++]
0x7D08	0xB3C200  	MOV.B	#32, W0
0x7D0A	0x785880  	MOV.B	W0, [W1++]
0x7D0C	0xB3C4C0  	MOV.B	#76, W0
0x7D0E	0x785880  	MOV.B	W0, [W1++]
0x7D10	0xB3C450  	MOV.B	#69, W0
0x7D12	0x785880  	MOV.B	W0, [W1++]
0x7D14	0xB3C410  	MOV.B	#65, W0
0x7D16	0x785880  	MOV.B	W0, [W1++]
0x7D18	0xB3C4B0  	MOV.B	#75, W0
0x7D1A	0x785880  	MOV.B	W0, [W1++]
0x7D1C	0xB3C410  	MOV.B	#65, W0
0x7D1E	0x785880  	MOV.B	W0, [W1++]
0x7D20	0xB3C470  	MOV.B	#71, W0
0x7D22	0x785880  	MOV.B	W0, [W1++]
0x7D24	0xB3C450  	MOV.B	#69, W0
0x7D26	0x785880  	MOV.B	W0, [W1++]
0x7D28	0xB3C200  	MOV.B	#32, W0
0x7D2A	0x785880  	MOV.B	W0, [W1++]
0x7D2C	0xB3C200  	MOV.B	#32, W0
0x7D2E	0x785880  	MOV.B	W0, [W1++]
0x7D30	0xB3C200  	MOV.B	#32, W0
0x7D32	0x785880  	MOV.B	W0, [W1++]
0x7D34	0xB3C200  	MOV.B	#32, W0
0x7D36	0x785880  	MOV.B	W0, [W1++]
0x7D38	0xB3C200  	MOV.B	#32, W0
0x7D3A	0x785880  	MOV.B	W0, [W1++]
0x7D3C	0xEF2000  	CLR	W0
0x7D3E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,157 :: 		Flt_BattLimit    := ' BATTERY AMPS. LIMIT ';
0x7D40	0x20FEA1  	MOV	#lo_addr(_Flt_BattLimit), W1
0x7D42	0xB3C200  	MOV.B	#32, W0
0x7D44	0x785880  	MOV.B	W0, [W1++]
0x7D46	0xB3C420  	MOV.B	#66, W0
0x7D48	0x785880  	MOV.B	W0, [W1++]
0x7D4A	0xB3C410  	MOV.B	#65, W0
0x7D4C	0x785880  	MOV.B	W0, [W1++]
0x7D4E	0xB3C540  	MOV.B	#84, W0
0x7D50	0x785880  	MOV.B	W0, [W1++]
0x7D52	0xB3C540  	MOV.B	#84, W0
0x7D54	0x785880  	MOV.B	W0, [W1++]
0x7D56	0xB3C450  	MOV.B	#69, W0
0x7D58	0x785880  	MOV.B	W0, [W1++]
0x7D5A	0xB3C520  	MOV.B	#82, W0
0x7D5C	0x785880  	MOV.B	W0, [W1++]
0x7D5E	0xB3C590  	MOV.B	#89, W0
0x7D60	0x785880  	MOV.B	W0, [W1++]
0x7D62	0xB3C200  	MOV.B	#32, W0
0x7D64	0x785880  	MOV.B	W0, [W1++]
0x7D66	0xB3C410  	MOV.B	#65, W0
0x7D68	0x785880  	MOV.B	W0, [W1++]
0x7D6A	0xB3C4D0  	MOV.B	#77, W0
0x7D6C	0x785880  	MOV.B	W0, [W1++]
0x7D6E	0xB3C500  	MOV.B	#80, W0
0x7D70	0x785880  	MOV.B	W0, [W1++]
0x7D72	0xB3C530  	MOV.B	#83, W0
0x7D74	0x785880  	MOV.B	W0, [W1++]
0x7D76	0xB3C2E0  	MOV.B	#46, W0
0x7D78	0x785880  	MOV.B	W0, [W1++]
0x7D7A	0xB3C200  	MOV.B	#32, W0
0x7D7C	0x785880  	MOV.B	W0, [W1++]
0x7D7E	0xB3C4C0  	MOV.B	#76, W0
0x7D80	0x785880  	MOV.B	W0, [W1++]
0x7D82	0xB3C490  	MOV.B	#73, W0
0x7D84	0x785880  	MOV.B	W0, [W1++]
0x7D86	0xB3C4D0  	MOV.B	#77, W0
0x7D88	0x785880  	MOV.B	W0, [W1++]
0x7D8A	0xB3C490  	MOV.B	#73, W0
0x7D8C	0x785880  	MOV.B	W0, [W1++]
0x7D8E	0xB3C540  	MOV.B	#84, W0
0x7D90	0x785880  	MOV.B	W0, [W1++]
0x7D92	0xB3C200  	MOV.B	#32, W0
0x7D94	0x785880  	MOV.B	W0, [W1++]
0x7D96	0xEF2000  	CLR	W0
0x7D98	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,158 :: 		Flt_ChrgLimit    := ' CHARGER AMPS. LIMIT ';
0x7D9A	0x210161  	MOV	#lo_addr(_Flt_ChrgLimit), W1
0x7D9C	0xB3C200  	MOV.B	#32, W0
0x7D9E	0x785880  	MOV.B	W0, [W1++]
0x7DA0	0xB3C430  	MOV.B	#67, W0
0x7DA2	0x785880  	MOV.B	W0, [W1++]
0x7DA4	0xB3C480  	MOV.B	#72, W0
0x7DA6	0x785880  	MOV.B	W0, [W1++]
0x7DA8	0xB3C410  	MOV.B	#65, W0
0x7DAA	0x785880  	MOV.B	W0, [W1++]
0x7DAC	0xB3C520  	MOV.B	#82, W0
0x7DAE	0x785880  	MOV.B	W0, [W1++]
0x7DB0	0xB3C470  	MOV.B	#71, W0
0x7DB2	0x785880  	MOV.B	W0, [W1++]
0x7DB4	0xB3C450  	MOV.B	#69, W0
0x7DB6	0x785880  	MOV.B	W0, [W1++]
0x7DB8	0xB3C520  	MOV.B	#82, W0
0x7DBA	0x785880  	MOV.B	W0, [W1++]
0x7DBC	0xB3C200  	MOV.B	#32, W0
0x7DBE	0x785880  	MOV.B	W0, [W1++]
0x7DC0	0xB3C410  	MOV.B	#65, W0
0x7DC2	0x785880  	MOV.B	W0, [W1++]
0x7DC4	0xB3C4D0  	MOV.B	#77, W0
0x7DC6	0x785880  	MOV.B	W0, [W1++]
0x7DC8	0xB3C500  	MOV.B	#80, W0
0x7DCA	0x785880  	MOV.B	W0, [W1++]
0x7DCC	0xB3C530  	MOV.B	#83, W0
0x7DCE	0x785880  	MOV.B	W0, [W1++]
0x7DD0	0xB3C2E0  	MOV.B	#46, W0
0x7DD2	0x785880  	MOV.B	W0, [W1++]
0x7DD4	0xB3C200  	MOV.B	#32, W0
0x7DD6	0x785880  	MOV.B	W0, [W1++]
0x7DD8	0xB3C4C0  	MOV.B	#76, W0
0x7DDA	0x785880  	MOV.B	W0, [W1++]
0x7DDC	0xB3C490  	MOV.B	#73, W0
0x7DDE	0x785880  	MOV.B	W0, [W1++]
0x7DE0	0xB3C4D0  	MOV.B	#77, W0
0x7DE2	0x785880  	MOV.B	W0, [W1++]
0x7DE4	0xB3C490  	MOV.B	#73, W0
0x7DE6	0x785880  	MOV.B	W0, [W1++]
0x7DE8	0xB3C540  	MOV.B	#84, W0
0x7DEA	0x785880  	MOV.B	W0, [W1++]
0x7DEC	0xB3C200  	MOV.B	#32, W0
0x7DEE	0x785880  	MOV.B	W0, [W1++]
0x7DF0	0xEF2000  	CLR	W0
0x7DF2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,159 :: 		Flt_FanFault     := '      FAN FAULT      ';
0x7DF4	0x210001  	MOV	#lo_addr(_Flt_FanFault), W1
0x7DF6	0xB3C200  	MOV.B	#32, W0
0x7DF8	0x785880  	MOV.B	W0, [W1++]
0x7DFA	0xB3C200  	MOV.B	#32, W0
0x7DFC	0x785880  	MOV.B	W0, [W1++]
0x7DFE	0xB3C200  	MOV.B	#32, W0
0x7E00	0x785880  	MOV.B	W0, [W1++]
0x7E02	0xB3C200  	MOV.B	#32, W0
0x7E04	0x785880  	MOV.B	W0, [W1++]
0x7E06	0xB3C200  	MOV.B	#32, W0
0x7E08	0x785880  	MOV.B	W0, [W1++]
0x7E0A	0xB3C200  	MOV.B	#32, W0
0x7E0C	0x785880  	MOV.B	W0, [W1++]
0x7E0E	0xB3C460  	MOV.B	#70, W0
0x7E10	0x785880  	MOV.B	W0, [W1++]
0x7E12	0xB3C410  	MOV.B	#65, W0
0x7E14	0x785880  	MOV.B	W0, [W1++]
0x7E16	0xB3C4E0  	MOV.B	#78, W0
0x7E18	0x785880  	MOV.B	W0, [W1++]
0x7E1A	0xB3C200  	MOV.B	#32, W0
0x7E1C	0x785880  	MOV.B	W0, [W1++]
0x7E1E	0xB3C460  	MOV.B	#70, W0
0x7E20	0x785880  	MOV.B	W0, [W1++]
0x7E22	0xB3C410  	MOV.B	#65, W0
0x7E24	0x785880  	MOV.B	W0, [W1++]
0x7E26	0xB3C550  	MOV.B	#85, W0
0x7E28	0x785880  	MOV.B	W0, [W1++]
0x7E2A	0xB3C4C0  	MOV.B	#76, W0
0x7E2C	0x785880  	MOV.B	W0, [W1++]
0x7E2E	0xB3C540  	MOV.B	#84, W0
0x7E30	0x785880  	MOV.B	W0, [W1++]
0x7E32	0xB3C200  	MOV.B	#32, W0
0x7E34	0x785880  	MOV.B	W0, [W1++]
0x7E36	0xB3C200  	MOV.B	#32, W0
0x7E38	0x785880  	MOV.B	W0, [W1++]
0x7E3A	0xB3C200  	MOV.B	#32, W0
0x7E3C	0x785880  	MOV.B	W0, [W1++]
0x7E3E	0xB3C200  	MOV.B	#32, W0
0x7E40	0x785880  	MOV.B	W0, [W1++]
0x7E42	0xB3C200  	MOV.B	#32, W0
0x7E44	0x785880  	MOV.B	W0, [W1++]
0x7E46	0xB3C200  	MOV.B	#32, W0
0x7E48	0x785880  	MOV.B	W0, [W1++]
0x7E4A	0xEF2000  	CLR	W0
0x7E4C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,160 :: 		Flt_RedHighTemp  := ' THERMAL PROTECTION  ';
0x7E4E	0x20F661  	MOV	#lo_addr(_Flt_RedHighTemp), W1
0x7E50	0xB3C200  	MOV.B	#32, W0
0x7E52	0x785880  	MOV.B	W0, [W1++]
0x7E54	0xB3C540  	MOV.B	#84, W0
0x7E56	0x785880  	MOV.B	W0, [W1++]
0x7E58	0xB3C480  	MOV.B	#72, W0
0x7E5A	0x785880  	MOV.B	W0, [W1++]
0x7E5C	0xB3C450  	MOV.B	#69, W0
0x7E5E	0x785880  	MOV.B	W0, [W1++]
0x7E60	0xB3C520  	MOV.B	#82, W0
0x7E62	0x785880  	MOV.B	W0, [W1++]
0x7E64	0xB3C4D0  	MOV.B	#77, W0
0x7E66	0x785880  	MOV.B	W0, [W1++]
0x7E68	0xB3C410  	MOV.B	#65, W0
0x7E6A	0x785880  	MOV.B	W0, [W1++]
0x7E6C	0xB3C4C0  	MOV.B	#76, W0
0x7E6E	0x785880  	MOV.B	W0, [W1++]
0x7E70	0xB3C200  	MOV.B	#32, W0
0x7E72	0x785880  	MOV.B	W0, [W1++]
0x7E74	0xB3C500  	MOV.B	#80, W0
0x7E76	0x785880  	MOV.B	W0, [W1++]
0x7E78	0xB3C520  	MOV.B	#82, W0
0x7E7A	0x785880  	MOV.B	W0, [W1++]
0x7E7C	0xB3C4F0  	MOV.B	#79, W0
0x7E7E	0x785880  	MOV.B	W0, [W1++]
0x7E80	0xB3C540  	MOV.B	#84, W0
0x7E82	0x785880  	MOV.B	W0, [W1++]
0x7E84	0xB3C450  	MOV.B	#69, W0
0x7E86	0x785880  	MOV.B	W0, [W1++]
0x7E88	0xB3C430  	MOV.B	#67, W0
0x7E8A	0x785880  	MOV.B	W0, [W1++]
0x7E8C	0xB3C540  	MOV.B	#84, W0
0x7E8E	0x785880  	MOV.B	W0, [W1++]
0x7E90	0xB3C490  	MOV.B	#73, W0
0x7E92	0x785880  	MOV.B	W0, [W1++]
0x7E94	0xB3C4F0  	MOV.B	#79, W0
0x7E96	0x785880  	MOV.B	W0, [W1++]
0x7E98	0xB3C4E0  	MOV.B	#78, W0
0x7E9A	0x785880  	MOV.B	W0, [W1++]
0x7E9C	0xB3C200  	MOV.B	#32, W0
0x7E9E	0x785880  	MOV.B	W0, [W1++]
0x7EA0	0xB3C200  	MOV.B	#32, W0
0x7EA2	0x785880  	MOV.B	W0, [W1++]
0x7EA4	0xEF2000  	CLR	W0
0x7EA6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,161 :: 		Flt_HighTemp     := '  HIGH TEMPERATURE   ';
0x7EA8	0x20F501  	MOV	#lo_addr(_Flt_HighTemp), W1
0x7EAA	0xB3C200  	MOV.B	#32, W0
0x7EAC	0x785880  	MOV.B	W0, [W1++]
0x7EAE	0xB3C200  	MOV.B	#32, W0
0x7EB0	0x785880  	MOV.B	W0, [W1++]
0x7EB2	0xB3C480  	MOV.B	#72, W0
0x7EB4	0x785880  	MOV.B	W0, [W1++]
0x7EB6	0xB3C490  	MOV.B	#73, W0
0x7EB8	0x785880  	MOV.B	W0, [W1++]
0x7EBA	0xB3C470  	MOV.B	#71, W0
0x7EBC	0x785880  	MOV.B	W0, [W1++]
0x7EBE	0xB3C480  	MOV.B	#72, W0
0x7EC0	0x785880  	MOV.B	W0, [W1++]
0x7EC2	0xB3C200  	MOV.B	#32, W0
0x7EC4	0x785880  	MOV.B	W0, [W1++]
0x7EC6	0xB3C540  	MOV.B	#84, W0
0x7EC8	0x785880  	MOV.B	W0, [W1++]
0x7ECA	0xB3C450  	MOV.B	#69, W0
0x7ECC	0x785880  	MOV.B	W0, [W1++]
0x7ECE	0xB3C4D0  	MOV.B	#77, W0
0x7ED0	0x785880  	MOV.B	W0, [W1++]
0x7ED2	0xB3C500  	MOV.B	#80, W0
0x7ED4	0x785880  	MOV.B	W0, [W1++]
0x7ED6	0xB3C450  	MOV.B	#69, W0
0x7ED8	0x785880  	MOV.B	W0, [W1++]
0x7EDA	0xB3C520  	MOV.B	#82, W0
0x7EDC	0x785880  	MOV.B	W0, [W1++]
0x7EDE	0xB3C410  	MOV.B	#65, W0
0x7EE0	0x785880  	MOV.B	W0, [W1++]
0x7EE2	0xB3C540  	MOV.B	#84, W0
0x7EE4	0x785880  	MOV.B	W0, [W1++]
0x7EE6	0xB3C550  	MOV.B	#85, W0
0x7EE8	0x785880  	MOV.B	W0, [W1++]
0x7EEA	0xB3C520  	MOV.B	#82, W0
0x7EEC	0x785880  	MOV.B	W0, [W1++]
0x7EEE	0xB3C450  	MOV.B	#69, W0
0x7EF0	0x785880  	MOV.B	W0, [W1++]
0x7EF2	0xB3C200  	MOV.B	#32, W0
0x7EF4	0x785880  	MOV.B	W0, [W1++]
0x7EF6	0xB3C200  	MOV.B	#32, W0
0x7EF8	0x785880  	MOV.B	W0, [W1++]
0x7EFA	0xB3C200  	MOV.B	#32, W0
0x7EFC	0x785880  	MOV.B	W0, [W1++]
0x7EFE	0xEF2000  	CLR	W0
0x7F00	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,162 :: 		Flt_AcMCB        := '     AC MCB OFF      ';
0x7F02	0x20F7C1  	MOV	#lo_addr(_Flt_AcMCB), W1
0x7F04	0xB3C200  	MOV.B	#32, W0
0x7F06	0x785880  	MOV.B	W0, [W1++]
0x7F08	0xB3C200  	MOV.B	#32, W0
0x7F0A	0x785880  	MOV.B	W0, [W1++]
0x7F0C	0xB3C200  	MOV.B	#32, W0
0x7F0E	0x785880  	MOV.B	W0, [W1++]
0x7F10	0xB3C200  	MOV.B	#32, W0
0x7F12	0x785880  	MOV.B	W0, [W1++]
0x7F14	0xB3C200  	MOV.B	#32, W0
0x7F16	0x785880  	MOV.B	W0, [W1++]
0x7F18	0xB3C410  	MOV.B	#65, W0
0x7F1A	0x785880  	MOV.B	W0, [W1++]
0x7F1C	0xB3C430  	MOV.B	#67, W0
0x7F1E	0x785880  	MOV.B	W0, [W1++]
0x7F20	0xB3C200  	MOV.B	#32, W0
0x7F22	0x785880  	MOV.B	W0, [W1++]
0x7F24	0xB3C4D0  	MOV.B	#77, W0
0x7F26	0x785880  	MOV.B	W0, [W1++]
0x7F28	0xB3C430  	MOV.B	#67, W0
0x7F2A	0x785880  	MOV.B	W0, [W1++]
0x7F2C	0xB3C420  	MOV.B	#66, W0
0x7F2E	0x785880  	MOV.B	W0, [W1++]
0x7F30	0xB3C200  	MOV.B	#32, W0
0x7F32	0x785880  	MOV.B	W0, [W1++]
0x7F34	0xB3C4F0  	MOV.B	#79, W0
0x7F36	0x785880  	MOV.B	W0, [W1++]
0x7F38	0xB3C460  	MOV.B	#70, W0
0x7F3A	0x785880  	MOV.B	W0, [W1++]
0x7F3C	0xB3C460  	MOV.B	#70, W0
0x7F3E	0x785880  	MOV.B	W0, [W1++]
0x7F40	0xB3C200  	MOV.B	#32, W0
0x7F42	0x785880  	MOV.B	W0, [W1++]
0x7F44	0xB3C200  	MOV.B	#32, W0
0x7F46	0x785880  	MOV.B	W0, [W1++]
0x7F48	0xB3C200  	MOV.B	#32, W0
0x7F4A	0x785880  	MOV.B	W0, [W1++]
0x7F4C	0xB3C200  	MOV.B	#32, W0
0x7F4E	0x785880  	MOV.B	W0, [W1++]
0x7F50	0xB3C200  	MOV.B	#32, W0
0x7F52	0x785880  	MOV.B	W0, [W1++]
0x7F54	0xB3C200  	MOV.B	#32, W0
0x7F56	0x785880  	MOV.B	W0, [W1++]
0x7F58	0xEF2000  	CLR	W0
0x7F5A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,163 :: 		Flt_DcMCB        := '     DC MCB OFF      ';
0x7F5C	0x20FA81  	MOV	#lo_addr(_Flt_DcMCB), W1
0x7F5E	0xB3C200  	MOV.B	#32, W0
0x7F60	0x785880  	MOV.B	W0, [W1++]
0x7F62	0xB3C200  	MOV.B	#32, W0
0x7F64	0x785880  	MOV.B	W0, [W1++]
0x7F66	0xB3C200  	MOV.B	#32, W0
0x7F68	0x785880  	MOV.B	W0, [W1++]
0x7F6A	0xB3C200  	MOV.B	#32, W0
0x7F6C	0x785880  	MOV.B	W0, [W1++]
0x7F6E	0xB3C200  	MOV.B	#32, W0
0x7F70	0x785880  	MOV.B	W0, [W1++]
0x7F72	0xB3C440  	MOV.B	#68, W0
0x7F74	0x785880  	MOV.B	W0, [W1++]
0x7F76	0xB3C430  	MOV.B	#67, W0
0x7F78	0x785880  	MOV.B	W0, [W1++]
0x7F7A	0xB3C200  	MOV.B	#32, W0
0x7F7C	0x785880  	MOV.B	W0, [W1++]
0x7F7E	0xB3C4D0  	MOV.B	#77, W0
0x7F80	0x785880  	MOV.B	W0, [W1++]
0x7F82	0xB3C430  	MOV.B	#67, W0
0x7F84	0x785880  	MOV.B	W0, [W1++]
0x7F86	0xB3C420  	MOV.B	#66, W0
0x7F88	0x785880  	MOV.B	W0, [W1++]
0x7F8A	0xB3C200  	MOV.B	#32, W0
0x7F8C	0x785880  	MOV.B	W0, [W1++]
0x7F8E	0xB3C4F0  	MOV.B	#79, W0
0x7F90	0x785880  	MOV.B	W0, [W1++]
0x7F92	0xB3C460  	MOV.B	#70, W0
0x7F94	0x785880  	MOV.B	W0, [W1++]
0x7F96	0xB3C460  	MOV.B	#70, W0
0x7F98	0x785880  	MOV.B	W0, [W1++]
0x7F9A	0xB3C200  	MOV.B	#32, W0
0x7F9C	0x785880  	MOV.B	W0, [W1++]
0x7F9E	0xB3C200  	MOV.B	#32, W0
0x7FA0	0x785880  	MOV.B	W0, [W1++]
0x7FA2	0xB3C200  	MOV.B	#32, W0
0x7FA4	0x785880  	MOV.B	W0, [W1++]
0x7FA6	0xB3C200  	MOV.B	#32, W0
0x7FA8	0x785880  	MOV.B	W0, [W1++]
0x7FAA	0xB3C200  	MOV.B	#32, W0
0x7FAC	0x785880  	MOV.B	W0, [W1++]
0x7FAE	0xB3C200  	MOV.B	#32, W0
0x7FB0	0x785880  	MOV.B	W0, [W1++]
0x7FB2	0xEF2000  	CLR	W0
0x7FB4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,164 :: 		Flt_BattMCB      := '   BATTERY MCB OFF   ';
0x7FB6	0x20F921  	MOV	#lo_addr(_Flt_BattMCB), W1
0x7FB8	0xB3C200  	MOV.B	#32, W0
0x7FBA	0x785880  	MOV.B	W0, [W1++]
0x7FBC	0xB3C200  	MOV.B	#32, W0
0x7FBE	0x785880  	MOV.B	W0, [W1++]
0x7FC0	0xB3C200  	MOV.B	#32, W0
0x7FC2	0x785880  	MOV.B	W0, [W1++]
0x7FC4	0xB3C420  	MOV.B	#66, W0
0x7FC6	0x785880  	MOV.B	W0, [W1++]
0x7FC8	0xB3C410  	MOV.B	#65, W0
0x7FCA	0x785880  	MOV.B	W0, [W1++]
0x7FCC	0xB3C540  	MOV.B	#84, W0
0x7FCE	0x785880  	MOV.B	W0, [W1++]
0x7FD0	0xB3C540  	MOV.B	#84, W0
0x7FD2	0x785880  	MOV.B	W0, [W1++]
0x7FD4	0xB3C450  	MOV.B	#69, W0
0x7FD6	0x785880  	MOV.B	W0, [W1++]
0x7FD8	0xB3C520  	MOV.B	#82, W0
0x7FDA	0x785880  	MOV.B	W0, [W1++]
0x7FDC	0xB3C590  	MOV.B	#89, W0
0x7FDE	0x785880  	MOV.B	W0, [W1++]
0x7FE0	0xB3C200  	MOV.B	#32, W0
0x7FE2	0x785880  	MOV.B	W0, [W1++]
0x7FE4	0xB3C4D0  	MOV.B	#77, W0
0x7FE6	0x785880  	MOV.B	W0, [W1++]
0x7FE8	0xB3C430  	MOV.B	#67, W0
0x7FEA	0x785880  	MOV.B	W0, [W1++]
0x7FEC	0xB3C420  	MOV.B	#66, W0
0x7FEE	0x785880  	MOV.B	W0, [W1++]
0x7FF0	0xB3C200  	MOV.B	#32, W0
0x7FF2	0x785880  	MOV.B	W0, [W1++]
0x7FF4	0xB3C4F0  	MOV.B	#79, W0
0x7FF6	0x785880  	MOV.B	W0, [W1++]
0x7FF8	0xB3C460  	MOV.B	#70, W0
0x7FFA	0x785880  	MOV.B	W0, [W1++]
0x7FFC	0xB3C460  	MOV.B	#70, W0
0x7FFE	0x785880  	MOV.B	W0, [W1++]
0x8000	0xB3C200  	MOV.B	#32, W0
0x8002	0x785880  	MOV.B	W0, [W1++]
0x8004	0xB3C200  	MOV.B	#32, W0
0x8006	0x785880  	MOV.B	W0, [W1++]
0x8008	0xB3C200  	MOV.B	#32, W0
0x800A	0x785880  	MOV.B	W0, [W1++]
0x800C	0xEF2000  	CLR	W0
0x800E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,165 :: 		Flt_BattReverse  := ' BATT. CONNECT REVERS';
0x8010	0x2102C1  	MOV	#lo_addr(_Flt_BattReverse), W1
0x8012	0xB3C200  	MOV.B	#32, W0
0x8014	0x785880  	MOV.B	W0, [W1++]
0x8016	0xB3C420  	MOV.B	#66, W0
0x8018	0x785880  	MOV.B	W0, [W1++]
0x801A	0xB3C410  	MOV.B	#65, W0
0x801C	0x785880  	MOV.B	W0, [W1++]
0x801E	0xB3C540  	MOV.B	#84, W0
0x8020	0x785880  	MOV.B	W0, [W1++]
0x8022	0xB3C540  	MOV.B	#84, W0
0x8024	0x785880  	MOV.B	W0, [W1++]
0x8026	0xB3C2E0  	MOV.B	#46, W0
0x8028	0x785880  	MOV.B	W0, [W1++]
0x802A	0xB3C200  	MOV.B	#32, W0
0x802C	0x785880  	MOV.B	W0, [W1++]
0x802E	0xB3C430  	MOV.B	#67, W0
0x8030	0x785880  	MOV.B	W0, [W1++]
0x8032	0xB3C4F0  	MOV.B	#79, W0
0x8034	0x785880  	MOV.B	W0, [W1++]
0x8036	0xB3C4E0  	MOV.B	#78, W0
0x8038	0x785880  	MOV.B	W0, [W1++]
0x803A	0xB3C4E0  	MOV.B	#78, W0
0x803C	0x785880  	MOV.B	W0, [W1++]
0x803E	0xB3C450  	MOV.B	#69, W0
0x8040	0x785880  	MOV.B	W0, [W1++]
0x8042	0xB3C430  	MOV.B	#67, W0
0x8044	0x785880  	MOV.B	W0, [W1++]
0x8046	0xB3C540  	MOV.B	#84, W0
0x8048	0x785880  	MOV.B	W0, [W1++]
0x804A	0xB3C200  	MOV.B	#32, W0
0x804C	0x785880  	MOV.B	W0, [W1++]
0x804E	0xB3C520  	MOV.B	#82, W0
0x8050	0x785880  	MOV.B	W0, [W1++]
0x8052	0xB3C450  	MOV.B	#69, W0
0x8054	0x785880  	MOV.B	W0, [W1++]
0x8056	0xB3C560  	MOV.B	#86, W0
0x8058	0x785880  	MOV.B	W0, [W1++]
0x805A	0xB3C450  	MOV.B	#69, W0
0x805C	0x785880  	MOV.B	W0, [W1++]
0x805E	0xB3C520  	MOV.B	#82, W0
0x8060	0x785880  	MOV.B	W0, [W1++]
0x8062	0xB3C530  	MOV.B	#83, W0
0x8064	0x785880  	MOV.B	W0, [W1++]
0x8066	0xEF2000  	CLR	W0
0x8068	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,166 :: 		Flt_RedFault     := ' CHARGR GENERAL FAULT';
0x806A	0x210B81  	MOV	#lo_addr(_Flt_RedFault), W1
0x806C	0xB3C200  	MOV.B	#32, W0
0x806E	0x785880  	MOV.B	W0, [W1++]
0x8070	0xB3C430  	MOV.B	#67, W0
0x8072	0x785880  	MOV.B	W0, [W1++]
0x8074	0xB3C480  	MOV.B	#72, W0
0x8076	0x785880  	MOV.B	W0, [W1++]
0x8078	0xB3C410  	MOV.B	#65, W0
0x807A	0x785880  	MOV.B	W0, [W1++]
0x807C	0xB3C520  	MOV.B	#82, W0
0x807E	0x785880  	MOV.B	W0, [W1++]
0x8080	0xB3C470  	MOV.B	#71, W0
0x8082	0x785880  	MOV.B	W0, [W1++]
0x8084	0xB3C520  	MOV.B	#82, W0
0x8086	0x785880  	MOV.B	W0, [W1++]
0x8088	0xB3C200  	MOV.B	#32, W0
0x808A	0x785880  	MOV.B	W0, [W1++]
0x808C	0xB3C470  	MOV.B	#71, W0
0x808E	0x785880  	MOV.B	W0, [W1++]
0x8090	0xB3C450  	MOV.B	#69, W0
0x8092	0x785880  	MOV.B	W0, [W1++]
0x8094	0xB3C4E0  	MOV.B	#78, W0
0x8096	0x785880  	MOV.B	W0, [W1++]
0x8098	0xB3C450  	MOV.B	#69, W0
0x809A	0x785880  	MOV.B	W0, [W1++]
0x809C	0xB3C520  	MOV.B	#82, W0
0x809E	0x785880  	MOV.B	W0, [W1++]
0x80A0	0xB3C410  	MOV.B	#65, W0
0x80A2	0x785880  	MOV.B	W0, [W1++]
0x80A4	0xB3C4C0  	MOV.B	#76, W0
0x80A6	0x785880  	MOV.B	W0, [W1++]
0x80A8	0xB3C200  	MOV.B	#32, W0
0x80AA	0x785880  	MOV.B	W0, [W1++]
0x80AC	0xB3C460  	MOV.B	#70, W0
0x80AE	0x785880  	MOV.B	W0, [W1++]
0x80B0	0xB3C410  	MOV.B	#65, W0
0x80B2	0x785880  	MOV.B	W0, [W1++]
0x80B4	0xB3C550  	MOV.B	#85, W0
0x80B6	0x785880  	MOV.B	W0, [W1++]
0x80B8	0xB3C4C0  	MOV.B	#76, W0
0x80BA	0x785880  	MOV.B	W0, [W1++]
0x80BC	0xB3C540  	MOV.B	#84, W0
0x80BE	0x785880  	MOV.B	W0, [W1++]
0x80C0	0xEF2000  	CLR	W0
0x80C2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,167 :: 		Flt_ThryComm     := ' 0xGTT1A COMM. FAULT ';
0x80C4	0x210A21  	MOV	#lo_addr(_Flt_ThryComm), W1
0x80C6	0xB3C200  	MOV.B	#32, W0
0x80C8	0x785880  	MOV.B	W0, [W1++]
0x80CA	0xB3C300  	MOV.B	#48, W0
0x80CC	0x785880  	MOV.B	W0, [W1++]
0x80CE	0xB3C780  	MOV.B	#120, W0
0x80D0	0x785880  	MOV.B	W0, [W1++]
0x80D2	0xB3C470  	MOV.B	#71, W0
0x80D4	0x785880  	MOV.B	W0, [W1++]
0x80D6	0xB3C540  	MOV.B	#84, W0
0x80D8	0x785880  	MOV.B	W0, [W1++]
0x80DA	0xB3C540  	MOV.B	#84, W0
0x80DC	0x785880  	MOV.B	W0, [W1++]
0x80DE	0xB3C310  	MOV.B	#49, W0
0x80E0	0x785880  	MOV.B	W0, [W1++]
0x80E2	0xB3C410  	MOV.B	#65, W0
0x80E4	0x785880  	MOV.B	W0, [W1++]
0x80E6	0xB3C200  	MOV.B	#32, W0
0x80E8	0x785880  	MOV.B	W0, [W1++]
0x80EA	0xB3C430  	MOV.B	#67, W0
0x80EC	0x785880  	MOV.B	W0, [W1++]
0x80EE	0xB3C4F0  	MOV.B	#79, W0
0x80F0	0x785880  	MOV.B	W0, [W1++]
0x80F2	0xB3C4D0  	MOV.B	#77, W0
0x80F4	0x785880  	MOV.B	W0, [W1++]
0x80F6	0xB3C4D0  	MOV.B	#77, W0
0x80F8	0x785880  	MOV.B	W0, [W1++]
0x80FA	0xB3C2E0  	MOV.B	#46, W0
0x80FC	0x785880  	MOV.B	W0, [W1++]
0x80FE	0xB3C200  	MOV.B	#32, W0
0x8100	0x785880  	MOV.B	W0, [W1++]
0x8102	0xB3C460  	MOV.B	#70, W0
0x8104	0x785880  	MOV.B	W0, [W1++]
0x8106	0xB3C410  	MOV.B	#65, W0
0x8108	0x785880  	MOV.B	W0, [W1++]
0x810A	0xB3C550  	MOV.B	#85, W0
0x810C	0x785880  	MOV.B	W0, [W1++]
0x810E	0xB3C4C0  	MOV.B	#76, W0
0x8110	0x785880  	MOV.B	W0, [W1++]
0x8112	0xB3C540  	MOV.B	#84, W0
0x8114	0x785880  	MOV.B	W0, [W1++]
0x8116	0xB3C200  	MOV.B	#32, W0
0x8118	0x785880  	MOV.B	W0, [W1++]
0x811A	0xEF2000  	CLR	W0
0x811C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,168 :: 		Flt_AcMult       := ' 0xACMF2 COMM. FAULT ';
0x811E	0x210CE1  	MOV	#lo_addr(_Flt_AcMult), W1
0x8120	0xB3C200  	MOV.B	#32, W0
0x8122	0x785880  	MOV.B	W0, [W1++]
0x8124	0xB3C300  	MOV.B	#48, W0
0x8126	0x785880  	MOV.B	W0, [W1++]
0x8128	0xB3C780  	MOV.B	#120, W0
0x812A	0x785880  	MOV.B	W0, [W1++]
0x812C	0xB3C410  	MOV.B	#65, W0
0x812E	0x785880  	MOV.B	W0, [W1++]
0x8130	0xB3C430  	MOV.B	#67, W0
0x8132	0x785880  	MOV.B	W0, [W1++]
0x8134	0xB3C4D0  	MOV.B	#77, W0
0x8136	0x785880  	MOV.B	W0, [W1++]
0x8138	0xB3C460  	MOV.B	#70, W0
0x813A	0x785880  	MOV.B	W0, [W1++]
0x813C	0xB3C320  	MOV.B	#50, W0
0x813E	0x785880  	MOV.B	W0, [W1++]
0x8140	0xB3C200  	MOV.B	#32, W0
0x8142	0x785880  	MOV.B	W0, [W1++]
0x8144	0xB3C430  	MOV.B	#67, W0
0x8146	0x785880  	MOV.B	W0, [W1++]
0x8148	0xB3C4F0  	MOV.B	#79, W0
0x814A	0x785880  	MOV.B	W0, [W1++]
0x814C	0xB3C4D0  	MOV.B	#77, W0
0x814E	0x785880  	MOV.B	W0, [W1++]
0x8150	0xB3C4D0  	MOV.B	#77, W0
0x8152	0x785880  	MOV.B	W0, [W1++]
0x8154	0xB3C2E0  	MOV.B	#46, W0
0x8156	0x785880  	MOV.B	W0, [W1++]
0x8158	0xB3C200  	MOV.B	#32, W0
0x815A	0x785880  	MOV.B	W0, [W1++]
0x815C	0xB3C460  	MOV.B	#70, W0
0x815E	0x785880  	MOV.B	W0, [W1++]
0x8160	0xB3C410  	MOV.B	#65, W0
0x8162	0x785880  	MOV.B	W0, [W1++]
0x8164	0xB3C550  	MOV.B	#85, W0
0x8166	0x785880  	MOV.B	W0, [W1++]
0x8168	0xB3C4C0  	MOV.B	#76, W0
0x816A	0x785880  	MOV.B	W0, [W1++]
0x816C	0xB3C540  	MOV.B	#84, W0
0x816E	0x785880  	MOV.B	W0, [W1++]
0x8170	0xB3C200  	MOV.B	#32, W0
0x8172	0x785880  	MOV.B	W0, [W1++]
0x8174	0xEF2000  	CLR	W0
0x8176	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,169 :: 		Flt_Rly          := ' 0xFLTM3 COMM. FAULT ';
0x8178	0x210FA1  	MOV	#lo_addr(_Flt_Rly), W1
0x817A	0xB3C200  	MOV.B	#32, W0
0x817C	0x785880  	MOV.B	W0, [W1++]
0x817E	0xB3C300  	MOV.B	#48, W0
0x8180	0x785880  	MOV.B	W0, [W1++]
0x8182	0xB3C780  	MOV.B	#120, W0
0x8184	0x785880  	MOV.B	W0, [W1++]
0x8186	0xB3C460  	MOV.B	#70, W0
0x8188	0x785880  	MOV.B	W0, [W1++]
0x818A	0xB3C4C0  	MOV.B	#76, W0
0x818C	0x785880  	MOV.B	W0, [W1++]
0x818E	0xB3C540  	MOV.B	#84, W0
0x8190	0x785880  	MOV.B	W0, [W1++]
0x8192	0xB3C4D0  	MOV.B	#77, W0
0x8194	0x785880  	MOV.B	W0, [W1++]
0x8196	0xB3C330  	MOV.B	#51, W0
0x8198	0x785880  	MOV.B	W0, [W1++]
0x819A	0xB3C200  	MOV.B	#32, W0
0x819C	0x785880  	MOV.B	W0, [W1++]
0x819E	0xB3C430  	MOV.B	#67, W0
0x81A0	0x785880  	MOV.B	W0, [W1++]
0x81A2	0xB3C4F0  	MOV.B	#79, W0
0x81A4	0x785880  	MOV.B	W0, [W1++]
0x81A6	0xB3C4D0  	MOV.B	#77, W0
0x81A8	0x785880  	MOV.B	W0, [W1++]
0x81AA	0xB3C4D0  	MOV.B	#77, W0
0x81AC	0x785880  	MOV.B	W0, [W1++]
0x81AE	0xB3C2E0  	MOV.B	#46, W0
0x81B0	0x785880  	MOV.B	W0, [W1++]
0x81B2	0xB3C200  	MOV.B	#32, W0
0x81B4	0x785880  	MOV.B	W0, [W1++]
0x81B6	0xB3C460  	MOV.B	#70, W0
0x81B8	0x785880  	MOV.B	W0, [W1++]
0x81BA	0xB3C410  	MOV.B	#65, W0
0x81BC	0x785880  	MOV.B	W0, [W1++]
0x81BE	0xB3C550  	MOV.B	#85, W0
0x81C0	0x785880  	MOV.B	W0, [W1++]
0x81C2	0xB3C4C0  	MOV.B	#76, W0
0x81C4	0x785880  	MOV.B	W0, [W1++]
0x81C6	0xB3C540  	MOV.B	#84, W0
0x81C8	0x785880  	MOV.B	W0, [W1++]
0x81CA	0xB3C200  	MOV.B	#32, W0
0x81CC	0x785880  	MOV.B	W0, [W1++]
0x81CE	0xEF2000  	CLR	W0
0x81D0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,170 :: 		Flt_Volt         := ' 0xDISM4 COMM. FAULT ';
0x81D2	0x210E41  	MOV	#lo_addr(_Flt_Volt), W1
0x81D4	0xB3C200  	MOV.B	#32, W0
0x81D6	0x785880  	MOV.B	W0, [W1++]
0x81D8	0xB3C300  	MOV.B	#48, W0
0x81DA	0x785880  	MOV.B	W0, [W1++]
0x81DC	0xB3C780  	MOV.B	#120, W0
0x81DE	0x785880  	MOV.B	W0, [W1++]
0x81E0	0xB3C440  	MOV.B	#68, W0
0x81E2	0x785880  	MOV.B	W0, [W1++]
0x81E4	0xB3C490  	MOV.B	#73, W0
0x81E6	0x785880  	MOV.B	W0, [W1++]
0x81E8	0xB3C530  	MOV.B	#83, W0
0x81EA	0x785880  	MOV.B	W0, [W1++]
0x81EC	0xB3C4D0  	MOV.B	#77, W0
0x81EE	0x785880  	MOV.B	W0, [W1++]
0x81F0	0xB3C340  	MOV.B	#52, W0
0x81F2	0x785880  	MOV.B	W0, [W1++]
0x81F4	0xB3C200  	MOV.B	#32, W0
0x81F6	0x785880  	MOV.B	W0, [W1++]
0x81F8	0xB3C430  	MOV.B	#67, W0
0x81FA	0x785880  	MOV.B	W0, [W1++]
0x81FC	0xB3C4F0  	MOV.B	#79, W0
0x81FE	0x785880  	MOV.B	W0, [W1++]
0x8200	0xB3C4D0  	MOV.B	#77, W0
0x8202	0x785880  	MOV.B	W0, [W1++]
0x8204	0xB3C4D0  	MOV.B	#77, W0
0x8206	0x785880  	MOV.B	W0, [W1++]
0x8208	0xB3C2E0  	MOV.B	#46, W0
0x820A	0x785880  	MOV.B	W0, [W1++]
0x820C	0xB3C200  	MOV.B	#32, W0
0x820E	0x785880  	MOV.B	W0, [W1++]
0x8210	0xB3C460  	MOV.B	#70, W0
0x8212	0x785880  	MOV.B	W0, [W1++]
0x8214	0xB3C410  	MOV.B	#65, W0
0x8216	0x785880  	MOV.B	W0, [W1++]
0x8218	0xB3C550  	MOV.B	#85, W0
0x821A	0x785880  	MOV.B	W0, [W1++]
0x821C	0xB3C4C0  	MOV.B	#76, W0
0x821E	0x785880  	MOV.B	W0, [W1++]
0x8220	0xB3C540  	MOV.B	#84, W0
0x8222	0x785880  	MOV.B	W0, [W1++]
0x8224	0xB3C200  	MOV.B	#32, W0
0x8226	0x785880  	MOV.B	W0, [W1++]
0x8228	0xEF2000  	CLR	W0
0x822A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,171 :: 		Flt_DDschrg      := 'BATT. DEEP DISCHARGE ';
0x822C	0x210581  	MOV	#lo_addr(_Flt_DDschrg), W1
0x822E	0xB3C420  	MOV.B	#66, W0
0x8230	0x785880  	MOV.B	W0, [W1++]
0x8232	0xB3C410  	MOV.B	#65, W0
0x8234	0x785880  	MOV.B	W0, [W1++]
0x8236	0xB3C540  	MOV.B	#84, W0
0x8238	0x785880  	MOV.B	W0, [W1++]
0x823A	0xB3C540  	MOV.B	#84, W0
0x823C	0x785880  	MOV.B	W0, [W1++]
0x823E	0xB3C2E0  	MOV.B	#46, W0
0x8240	0x785880  	MOV.B	W0, [W1++]
0x8242	0xB3C200  	MOV.B	#32, W0
0x8244	0x785880  	MOV.B	W0, [W1++]
0x8246	0xB3C440  	MOV.B	#68, W0
0x8248	0x785880  	MOV.B	W0, [W1++]
0x824A	0xB3C450  	MOV.B	#69, W0
0x824C	0x785880  	MOV.B	W0, [W1++]
0x824E	0xB3C450  	MOV.B	#69, W0
0x8250	0x785880  	MOV.B	W0, [W1++]
0x8252	0xB3C500  	MOV.B	#80, W0
0x8254	0x785880  	MOV.B	W0, [W1++]
0x8256	0xB3C200  	MOV.B	#32, W0
0x8258	0x785880  	MOV.B	W0, [W1++]
0x825A	0xB3C440  	MOV.B	#68, W0
0x825C	0x785880  	MOV.B	W0, [W1++]
0x825E	0xB3C490  	MOV.B	#73, W0
0x8260	0x785880  	MOV.B	W0, [W1++]
0x8262	0xB3C530  	MOV.B	#83, W0
0x8264	0x785880  	MOV.B	W0, [W1++]
0x8266	0xB3C430  	MOV.B	#67, W0
0x8268	0x785880  	MOV.B	W0, [W1++]
0x826A	0xB3C480  	MOV.B	#72, W0
0x826C	0x785880  	MOV.B	W0, [W1++]
0x826E	0xB3C410  	MOV.B	#65, W0
0x8270	0x785880  	MOV.B	W0, [W1++]
0x8272	0xB3C520  	MOV.B	#82, W0
0x8274	0x785880  	MOV.B	W0, [W1++]
0x8276	0xB3C470  	MOV.B	#71, W0
0x8278	0x785880  	MOV.B	W0, [W1++]
0x827A	0xB3C450  	MOV.B	#69, W0
0x827C	0x785880  	MOV.B	W0, [W1++]
0x827E	0xB3C200  	MOV.B	#32, W0
0x8280	0x785880  	MOV.B	W0, [W1++]
0x8282	0xEF2000  	CLR	W0
0x8284	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,172 :: 		SingleText       := 'Single ';
0x8286	0x215321  	MOV	#lo_addr(_SingleText), W1
0x8288	0xB3C530  	MOV.B	#83, W0
0x828A	0x785880  	MOV.B	W0, [W1++]
0x828C	0xB3C690  	MOV.B	#105, W0
0x828E	0x785880  	MOV.B	W0, [W1++]
0x8290	0xB3C6E0  	MOV.B	#110, W0
0x8292	0x785880  	MOV.B	W0, [W1++]
0x8294	0xB3C670  	MOV.B	#103, W0
0x8296	0x785880  	MOV.B	W0, [W1++]
0x8298	0xB3C6C0  	MOV.B	#108, W0
0x829A	0x785880  	MOV.B	W0, [W1++]
0x829C	0xB3C650  	MOV.B	#101, W0
0x829E	0x785880  	MOV.B	W0, [W1++]
0x82A0	0xB3C200  	MOV.B	#32, W0
0x82A2	0x785880  	MOV.B	W0, [W1++]
0x82A4	0xEF2000  	CLR	W0
0x82A6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,173 :: 		ParalelText      := 'Paralel';
0x82A8	0x2153F1  	MOV	#lo_addr(_ParalelText), W1
0x82AA	0xB3C500  	MOV.B	#80, W0
0x82AC	0x785880  	MOV.B	W0, [W1++]
0x82AE	0xB3C610  	MOV.B	#97, W0
0x82B0	0x785880  	MOV.B	W0, [W1++]
0x82B2	0xB3C720  	MOV.B	#114, W0
0x82B4	0x785880  	MOV.B	W0, [W1++]
0x82B6	0xB3C610  	MOV.B	#97, W0
0x82B8	0x785880  	MOV.B	W0, [W1++]
0x82BA	0xB3C6C0  	MOV.B	#108, W0
0x82BC	0x785880  	MOV.B	W0, [W1++]
0x82BE	0xB3C650  	MOV.B	#101, W0
0x82C0	0x785880  	MOV.B	W0, [W1++]
0x82C2	0xB3C6C0  	MOV.B	#108, W0
0x82C4	0x785880  	MOV.B	W0, [W1++]
0x82C6	0xEF2000  	CLR	W0
0x82C8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,174 :: 		BackupText       := 'Backup ';
0x82CA	0x2152A1  	MOV	#lo_addr(_BackupText), W1
0x82CC	0xB3C420  	MOV.B	#66, W0
0x82CE	0x785880  	MOV.B	W0, [W1++]
0x82D0	0xB3C610  	MOV.B	#97, W0
0x82D2	0x785880  	MOV.B	W0, [W1++]
0x82D4	0xB3C630  	MOV.B	#99, W0
0x82D6	0x785880  	MOV.B	W0, [W1++]
0x82D8	0xB3C6B0  	MOV.B	#107, W0
0x82DA	0x785880  	MOV.B	W0, [W1++]
0x82DC	0xB3C750  	MOV.B	#117, W0
0x82DE	0x785880  	MOV.B	W0, [W1++]
0x82E0	0xB3C700  	MOV.B	#112, W0
0x82E2	0x785880  	MOV.B	W0, [W1++]
0x82E4	0xB3C200  	MOV.B	#32, W0
0x82E6	0x785880  	MOV.B	W0, [W1++]
0x82E8	0xEF2000  	CLR	W0
0x82EA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,175 :: 		PassNewText      := 'Enter New Pasword';
0x82EC	0x215BF1  	MOV	#lo_addr(_PassNewText), W1
0x82EE	0xB3C450  	MOV.B	#69, W0
0x82F0	0x785880  	MOV.B	W0, [W1++]
0x82F2	0xB3C6E0  	MOV.B	#110, W0
0x82F4	0x785880  	MOV.B	W0, [W1++]
0x82F6	0xB3C740  	MOV.B	#116, W0
0x82F8	0x785880  	MOV.B	W0, [W1++]
0x82FA	0xB3C650  	MOV.B	#101, W0
0x82FC	0x785880  	MOV.B	W0, [W1++]
0x82FE	0xB3C720  	MOV.B	#114, W0
0x8300	0x785880  	MOV.B	W0, [W1++]
0x8302	0xB3C200  	MOV.B	#32, W0
0x8304	0x785880  	MOV.B	W0, [W1++]
0x8306	0xB3C4E0  	MOV.B	#78, W0
0x8308	0x785880  	MOV.B	W0, [W1++]
0x830A	0xB3C650  	MOV.B	#101, W0
0x830C	0x785880  	MOV.B	W0, [W1++]
0x830E	0xB3C770  	MOV.B	#119, W0
0x8310	0x785880  	MOV.B	W0, [W1++]
0x8312	0xB3C200  	MOV.B	#32, W0
0x8314	0x785880  	MOV.B	W0, [W1++]
0x8316	0xB3C500  	MOV.B	#80, W0
0x8318	0x785880  	MOV.B	W0, [W1++]
0x831A	0xB3C610  	MOV.B	#97, W0
0x831C	0x785880  	MOV.B	W0, [W1++]
0x831E	0xB3C730  	MOV.B	#115, W0
0x8320	0x785880  	MOV.B	W0, [W1++]
0x8322	0xB3C770  	MOV.B	#119, W0
0x8324	0x785880  	MOV.B	W0, [W1++]
0x8326	0xB3C6F0  	MOV.B	#111, W0
0x8328	0x785880  	MOV.B	W0, [W1++]
0x832A	0xB3C720  	MOV.B	#114, W0
0x832C	0x785880  	MOV.B	W0, [W1++]
0x832E	0xB3C640  	MOV.B	#100, W0
0x8330	0x785880  	MOV.B	W0, [W1++]
0x8332	0xEF2000  	CLR	W0
0x8334	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,176 :: 		PassInputText    := '  Enter Password ';
0x8336	0x215FA1  	MOV	#lo_addr(_PassInputText), W1
0x8338	0xB3C200  	MOV.B	#32, W0
0x833A	0x785880  	MOV.B	W0, [W1++]
0x833C	0xB3C200  	MOV.B	#32, W0
0x833E	0x785880  	MOV.B	W0, [W1++]
0x8340	0xB3C450  	MOV.B	#69, W0
0x8342	0x785880  	MOV.B	W0, [W1++]
0x8344	0xB3C6E0  	MOV.B	#110, W0
0x8346	0x785880  	MOV.B	W0, [W1++]
0x8348	0xB3C740  	MOV.B	#116, W0
0x834A	0x785880  	MOV.B	W0, [W1++]
0x834C	0xB3C650  	MOV.B	#101, W0
0x834E	0x785880  	MOV.B	W0, [W1++]
0x8350	0xB3C720  	MOV.B	#114, W0
0x8352	0x785880  	MOV.B	W0, [W1++]
0x8354	0xB3C200  	MOV.B	#32, W0
0x8356	0x785880  	MOV.B	W0, [W1++]
0x8358	0xB3C500  	MOV.B	#80, W0
0x835A	0x785880  	MOV.B	W0, [W1++]
0x835C	0xB3C610  	MOV.B	#97, W0
0x835E	0x785880  	MOV.B	W0, [W1++]
0x8360	0xB3C730  	MOV.B	#115, W0
0x8362	0x785880  	MOV.B	W0, [W1++]
0x8364	0xB3C730  	MOV.B	#115, W0
0x8366	0x785880  	MOV.B	W0, [W1++]
0x8368	0xB3C770  	MOV.B	#119, W0
0x836A	0x785880  	MOV.B	W0, [W1++]
0x836C	0xB3C6F0  	MOV.B	#111, W0
0x836E	0x785880  	MOV.B	W0, [W1++]
0x8370	0xB3C720  	MOV.B	#114, W0
0x8372	0x785880  	MOV.B	W0, [W1++]
0x8374	0xB3C640  	MOV.B	#100, W0
0x8376	0x785880  	MOV.B	W0, [W1++]
0x8378	0xB3C200  	MOV.B	#32, W0
0x837A	0x785880  	MOV.B	W0, [W1++]
0x837C	0xEF2000  	CLR	W0
0x837E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,177 :: 		Flt_RedHata      := '    CHARGER FAULT    ';
0x8380	0x210421  	MOV	#lo_addr(_Flt_RedHata), W1
0x8382	0xB3C200  	MOV.B	#32, W0
0x8384	0x785880  	MOV.B	W0, [W1++]
0x8386	0xB3C200  	MOV.B	#32, W0
0x8388	0x785880  	MOV.B	W0, [W1++]
0x838A	0xB3C200  	MOV.B	#32, W0
0x838C	0x785880  	MOV.B	W0, [W1++]
0x838E	0xB3C200  	MOV.B	#32, W0
0x8390	0x785880  	MOV.B	W0, [W1++]
0x8392	0xB3C430  	MOV.B	#67, W0
0x8394	0x785880  	MOV.B	W0, [W1++]
0x8396	0xB3C480  	MOV.B	#72, W0
0x8398	0x785880  	MOV.B	W0, [W1++]
0x839A	0xB3C410  	MOV.B	#65, W0
0x839C	0x785880  	MOV.B	W0, [W1++]
0x839E	0xB3C520  	MOV.B	#82, W0
0x83A0	0x785880  	MOV.B	W0, [W1++]
0x83A2	0xB3C470  	MOV.B	#71, W0
0x83A4	0x785880  	MOV.B	W0, [W1++]
0x83A6	0xB3C450  	MOV.B	#69, W0
0x83A8	0x785880  	MOV.B	W0, [W1++]
0x83AA	0xB3C520  	MOV.B	#82, W0
0x83AC	0x785880  	MOV.B	W0, [W1++]
0x83AE	0xB3C200  	MOV.B	#32, W0
0x83B0	0x785880  	MOV.B	W0, [W1++]
0x83B2	0xB3C460  	MOV.B	#70, W0
0x83B4	0x785880  	MOV.B	W0, [W1++]
0x83B6	0xB3C410  	MOV.B	#65, W0
0x83B8	0x785880  	MOV.B	W0, [W1++]
0x83BA	0xB3C550  	MOV.B	#85, W0
0x83BC	0x785880  	MOV.B	W0, [W1++]
0x83BE	0xB3C4C0  	MOV.B	#76, W0
0x83C0	0x785880  	MOV.B	W0, [W1++]
0x83C2	0xB3C540  	MOV.B	#84, W0
0x83C4	0x785880  	MOV.B	W0, [W1++]
0x83C6	0xB3C200  	MOV.B	#32, W0
0x83C8	0x785880  	MOV.B	W0, [W1++]
0x83CA	0xB3C200  	MOV.B	#32, W0
0x83CC	0x785880  	MOV.B	W0, [W1++]
0x83CE	0xB3C200  	MOV.B	#32, W0
0x83D0	0x785880  	MOV.B	W0, [W1++]
0x83D2	0xB3C200  	MOV.B	#32, W0
0x83D4	0x785880  	MOV.B	W0, [W1++]
0x83D6	0xEF2000  	CLR	W0
0x83D8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,179 :: 		Title_DroppMenu   := '   OPERATING MODE   ';
0x83DA	0x213891  	MOV	#lo_addr(_Title_DroppMenu), W1
0x83DC	0xB3C200  	MOV.B	#32, W0
0x83DE	0x785880  	MOV.B	W0, [W1++]
0x83E0	0xB3C200  	MOV.B	#32, W0
0x83E2	0x785880  	MOV.B	W0, [W1++]
0x83E4	0xB3C200  	MOV.B	#32, W0
0x83E6	0x785880  	MOV.B	W0, [W1++]
0x83E8	0xB3C4F0  	MOV.B	#79, W0
0x83EA	0x785880  	MOV.B	W0, [W1++]
0x83EC	0xB3C500  	MOV.B	#80, W0
0x83EE	0x785880  	MOV.B	W0, [W1++]
0x83F0	0xB3C450  	MOV.B	#69, W0
0x83F2	0x785880  	MOV.B	W0, [W1++]
0x83F4	0xB3C520  	MOV.B	#82, W0
0x83F6	0x785880  	MOV.B	W0, [W1++]
0x83F8	0xB3C410  	MOV.B	#65, W0
0x83FA	0x785880  	MOV.B	W0, [W1++]
0x83FC	0xB3C540  	MOV.B	#84, W0
0x83FE	0x785880  	MOV.B	W0, [W1++]
0x8400	0xB3C490  	MOV.B	#73, W0
0x8402	0x785880  	MOV.B	W0, [W1++]
0x8404	0xB3C4E0  	MOV.B	#78, W0
0x8406	0x785880  	MOV.B	W0, [W1++]
0x8408	0xB3C470  	MOV.B	#71, W0
0x840A	0x785880  	MOV.B	W0, [W1++]
0x840C	0xB3C200  	MOV.B	#32, W0
0x840E	0x785880  	MOV.B	W0, [W1++]
0x8410	0xB3C4D0  	MOV.B	#77, W0
0x8412	0x785880  	MOV.B	W0, [W1++]
0x8414	0xB3C4F0  	MOV.B	#79, W0
0x8416	0x785880  	MOV.B	W0, [W1++]
0x8418	0xB3C440  	MOV.B	#68, W0
0x841A	0x785880  	MOV.B	W0, [W1++]
0x841C	0xB3C450  	MOV.B	#69, W0
0x841E	0x785880  	MOV.B	W0, [W1++]
0x8420	0xB3C200  	MOV.B	#32, W0
0x8422	0x785880  	MOV.B	W0, [W1++]
0x8424	0xB3C200  	MOV.B	#32, W0
0x8426	0x785880  	MOV.B	W0, [W1++]
0x8428	0xB3C200  	MOV.B	#32, W0
0x842A	0x785880  	MOV.B	W0, [W1++]
0x842C	0xEF2000  	CLR	W0
0x842E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,180 :: 		Title_AcMenu      := '  AC INPUT SETTINGS ';
0x8430	0x213731  	MOV	#lo_addr(_Title_AcMenu), W1
0x8432	0xB3C200  	MOV.B	#32, W0
0x8434	0x785880  	MOV.B	W0, [W1++]
0x8436	0xB3C200  	MOV.B	#32, W0
0x8438	0x785880  	MOV.B	W0, [W1++]
0x843A	0xB3C410  	MOV.B	#65, W0
0x843C	0x785880  	MOV.B	W0, [W1++]
0x843E	0xB3C430  	MOV.B	#67, W0
0x8440	0x785880  	MOV.B	W0, [W1++]
0x8442	0xB3C200  	MOV.B	#32, W0
0x8444	0x785880  	MOV.B	W0, [W1++]
0x8446	0xB3C490  	MOV.B	#73, W0
0x8448	0x785880  	MOV.B	W0, [W1++]
0x844A	0xB3C4E0  	MOV.B	#78, W0
0x844C	0x785880  	MOV.B	W0, [W1++]
0x844E	0xB3C500  	MOV.B	#80, W0
0x8450	0x785880  	MOV.B	W0, [W1++]
0x8452	0xB3C550  	MOV.B	#85, W0
0x8454	0x785880  	MOV.B	W0, [W1++]
0x8456	0xB3C540  	MOV.B	#84, W0
0x8458	0x785880  	MOV.B	W0, [W1++]
0x845A	0xB3C200  	MOV.B	#32, W0
0x845C	0x785880  	MOV.B	W0, [W1++]
0x845E	0xB3C530  	MOV.B	#83, W0
0x8460	0x785880  	MOV.B	W0, [W1++]
0x8462	0xB3C450  	MOV.B	#69, W0
0x8464	0x785880  	MOV.B	W0, [W1++]
0x8466	0xB3C540  	MOV.B	#84, W0
0x8468	0x785880  	MOV.B	W0, [W1++]
0x846A	0xB3C540  	MOV.B	#84, W0
0x846C	0x785880  	MOV.B	W0, [W1++]
0x846E	0xB3C490  	MOV.B	#73, W0
0x8470	0x785880  	MOV.B	W0, [W1++]
0x8472	0xB3C4E0  	MOV.B	#78, W0
0x8474	0x785880  	MOV.B	W0, [W1++]
0x8476	0xB3C470  	MOV.B	#71, W0
0x8478	0x785880  	MOV.B	W0, [W1++]
0x847A	0xB3C530  	MOV.B	#83, W0
0x847C	0x785880  	MOV.B	W0, [W1++]
0x847E	0xB3C200  	MOV.B	#32, W0
0x8480	0x785880  	MOV.B	W0, [W1++]
0x8482	0xEF2000  	CLR	W0
0x8484	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,181 :: 		Title_DcMenu      := '  DC OUTPUT SETTINGS';
0x8486	0x212A61  	MOV	#lo_addr(_Title_DcMenu), W1
0x8488	0xB3C200  	MOV.B	#32, W0
0x848A	0x785880  	MOV.B	W0, [W1++]
0x848C	0xB3C200  	MOV.B	#32, W0
0x848E	0x785880  	MOV.B	W0, [W1++]
0x8490	0xB3C440  	MOV.B	#68, W0
0x8492	0x785880  	MOV.B	W0, [W1++]
0x8494	0xB3C430  	MOV.B	#67, W0
0x8496	0x785880  	MOV.B	W0, [W1++]
0x8498	0xB3C200  	MOV.B	#32, W0
0x849A	0x785880  	MOV.B	W0, [W1++]
0x849C	0xB3C4F0  	MOV.B	#79, W0
0x849E	0x785880  	MOV.B	W0, [W1++]
0x84A0	0xB3C550  	MOV.B	#85, W0
0x84A2	0x785880  	MOV.B	W0, [W1++]
0x84A4	0xB3C540  	MOV.B	#84, W0
0x84A6	0x785880  	MOV.B	W0, [W1++]
0x84A8	0xB3C500  	MOV.B	#80, W0
0x84AA	0x785880  	MOV.B	W0, [W1++]
0x84AC	0xB3C550  	MOV.B	#85, W0
0x84AE	0x785880  	MOV.B	W0, [W1++]
0x84B0	0xB3C540  	MOV.B	#84, W0
0x84B2	0x785880  	MOV.B	W0, [W1++]
0x84B4	0xB3C200  	MOV.B	#32, W0
0x84B6	0x785880  	MOV.B	W0, [W1++]
0x84B8	0xB3C530  	MOV.B	#83, W0
0x84BA	0x785880  	MOV.B	W0, [W1++]
0x84BC	0xB3C450  	MOV.B	#69, W0
0x84BE	0x785880  	MOV.B	W0, [W1++]
0x84C0	0xB3C540  	MOV.B	#84, W0
0x84C2	0x785880  	MOV.B	W0, [W1++]
0x84C4	0xB3C540  	MOV.B	#84, W0
0x84C6	0x785880  	MOV.B	W0, [W1++]
0x84C8	0xB3C490  	MOV.B	#73, W0
0x84CA	0x785880  	MOV.B	W0, [W1++]
0x84CC	0xB3C4E0  	MOV.B	#78, W0
0x84CE	0x785880  	MOV.B	W0, [W1++]
0x84D0	0xB3C470  	MOV.B	#71, W0
0x84D2	0x785880  	MOV.B	W0, [W1++]
0x84D4	0xB3C530  	MOV.B	#83, W0
0x84D6	0x785880  	MOV.B	W0, [W1++]
0x84D8	0xEF2000  	CLR	W0
0x84DA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,182 :: 		Title_BattMenu    := '  BATTERY SETTINGS  ';
0x84DC	0x213B31  	MOV	#lo_addr(_Title_BattMenu), W1
0x84DE	0xB3C200  	MOV.B	#32, W0
0x84E0	0x785880  	MOV.B	W0, [W1++]
0x84E2	0xB3C200  	MOV.B	#32, W0
0x84E4	0x785880  	MOV.B	W0, [W1++]
0x84E6	0xB3C420  	MOV.B	#66, W0
0x84E8	0x785880  	MOV.B	W0, [W1++]
0x84EA	0xB3C410  	MOV.B	#65, W0
0x84EC	0x785880  	MOV.B	W0, [W1++]
0x84EE	0xB3C540  	MOV.B	#84, W0
0x84F0	0x785880  	MOV.B	W0, [W1++]
0x84F2	0xB3C540  	MOV.B	#84, W0
0x84F4	0x785880  	MOV.B	W0, [W1++]
0x84F6	0xB3C450  	MOV.B	#69, W0
0x84F8	0x785880  	MOV.B	W0, [W1++]
0x84FA	0xB3C520  	MOV.B	#82, W0
0x84FC	0x785880  	MOV.B	W0, [W1++]
0x84FE	0xB3C590  	MOV.B	#89, W0
0x8500	0x785880  	MOV.B	W0, [W1++]
0x8502	0xB3C200  	MOV.B	#32, W0
0x8504	0x785880  	MOV.B	W0, [W1++]
0x8506	0xB3C530  	MOV.B	#83, W0
0x8508	0x785880  	MOV.B	W0, [W1++]
0x850A	0xB3C450  	MOV.B	#69, W0
0x850C	0x785880  	MOV.B	W0, [W1++]
0x850E	0xB3C540  	MOV.B	#84, W0
0x8510	0x785880  	MOV.B	W0, [W1++]
0x8512	0xB3C540  	MOV.B	#84, W0
0x8514	0x785880  	MOV.B	W0, [W1++]
0x8516	0xB3C490  	MOV.B	#73, W0
0x8518	0x785880  	MOV.B	W0, [W1++]
0x851A	0xB3C4E0  	MOV.B	#78, W0
0x851C	0x785880  	MOV.B	W0, [W1++]
0x851E	0xB3C470  	MOV.B	#71, W0
0x8520	0x785880  	MOV.B	W0, [W1++]
0x8522	0xB3C530  	MOV.B	#83, W0
0x8524	0x785880  	MOV.B	W0, [W1++]
0x8526	0xB3C200  	MOV.B	#32, W0
0x8528	0x785880  	MOV.B	W0, [W1++]
0x852A	0xB3C200  	MOV.B	#32, W0
0x852C	0x785880  	MOV.B	W0, [W1++]
0x852E	0xEF2000  	CLR	W0
0x8530	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,183 :: 		Title_BattMenu1   := 'BATTERY SETTING-1-2>';
0x8532	0x215471  	MOV	#lo_addr(_Title_BattMenu1), W1
0x8534	0xB3C420  	MOV.B	#66, W0
0x8536	0x785880  	MOV.B	W0, [W1++]
0x8538	0xB3C410  	MOV.B	#65, W0
0x853A	0x785880  	MOV.B	W0, [W1++]
0x853C	0xB3C540  	MOV.B	#84, W0
0x853E	0x785880  	MOV.B	W0, [W1++]
0x8540	0xB3C540  	MOV.B	#84, W0
0x8542	0x785880  	MOV.B	W0, [W1++]
0x8544	0xB3C450  	MOV.B	#69, W0
0x8546	0x785880  	MOV.B	W0, [W1++]
0x8548	0xB3C520  	MOV.B	#82, W0
0x854A	0x785880  	MOV.B	W0, [W1++]
0x854C	0xB3C590  	MOV.B	#89, W0
0x854E	0x785880  	MOV.B	W0, [W1++]
0x8550	0xB3C200  	MOV.B	#32, W0
0x8552	0x785880  	MOV.B	W0, [W1++]
0x8554	0xB3C530  	MOV.B	#83, W0
0x8556	0x785880  	MOV.B	W0, [W1++]
0x8558	0xB3C450  	MOV.B	#69, W0
0x855A	0x785880  	MOV.B	W0, [W1++]
0x855C	0xB3C540  	MOV.B	#84, W0
0x855E	0x785880  	MOV.B	W0, [W1++]
0x8560	0xB3C540  	MOV.B	#84, W0
0x8562	0x785880  	MOV.B	W0, [W1++]
0x8564	0xB3C490  	MOV.B	#73, W0
0x8566	0x785880  	MOV.B	W0, [W1++]
0x8568	0xB3C4E0  	MOV.B	#78, W0
0x856A	0x785880  	MOV.B	W0, [W1++]
0x856C	0xB3C470  	MOV.B	#71, W0
0x856E	0x785880  	MOV.B	W0, [W1++]
0x8570	0xB3C2D0  	MOV.B	#45, W0
0x8572	0x785880  	MOV.B	W0, [W1++]
0x8574	0xB3C310  	MOV.B	#49, W0
0x8576	0x785880  	MOV.B	W0, [W1++]
0x8578	0xB3C2D0  	MOV.B	#45, W0
0x857A	0x785880  	MOV.B	W0, [W1++]
0x857C	0xB3C320  	MOV.B	#50, W0
0x857E	0x785880  	MOV.B	W0, [W1++]
0x8580	0xB3C3E0  	MOV.B	#62, W0
0x8582	0x785880  	MOV.B	W0, [W1++]
0x8584	0xEF2000  	CLR	W0
0x8586	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,184 :: 		Title_BattMenu2   := 'BATTERY SETTING-2-2<';
0x8588	0x2165E1  	MOV	#lo_addr(_Title_BattMenu2), W1
0x858A	0xB3C420  	MOV.B	#66, W0
0x858C	0x785880  	MOV.B	W0, [W1++]
0x858E	0xB3C410  	MOV.B	#65, W0
0x8590	0x785880  	MOV.B	W0, [W1++]
0x8592	0xB3C540  	MOV.B	#84, W0
0x8594	0x785880  	MOV.B	W0, [W1++]
0x8596	0xB3C540  	MOV.B	#84, W0
0x8598	0x785880  	MOV.B	W0, [W1++]
0x859A	0xB3C450  	MOV.B	#69, W0
0x859C	0x785880  	MOV.B	W0, [W1++]
0x859E	0xB3C520  	MOV.B	#82, W0
0x85A0	0x785880  	MOV.B	W0, [W1++]
0x85A2	0xB3C590  	MOV.B	#89, W0
0x85A4	0x785880  	MOV.B	W0, [W1++]
0x85A6	0xB3C200  	MOV.B	#32, W0
0x85A8	0x785880  	MOV.B	W0, [W1++]
0x85AA	0xB3C530  	MOV.B	#83, W0
0x85AC	0x785880  	MOV.B	W0, [W1++]
0x85AE	0xB3C450  	MOV.B	#69, W0
0x85B0	0x785880  	MOV.B	W0, [W1++]
0x85B2	0xB3C540  	MOV.B	#84, W0
0x85B4	0x785880  	MOV.B	W0, [W1++]
0x85B6	0xB3C540  	MOV.B	#84, W0
0x85B8	0x785880  	MOV.B	W0, [W1++]
0x85BA	0xB3C490  	MOV.B	#73, W0
0x85BC	0x785880  	MOV.B	W0, [W1++]
0x85BE	0xB3C4E0  	MOV.B	#78, W0
0x85C0	0x785880  	MOV.B	W0, [W1++]
0x85C2	0xB3C470  	MOV.B	#71, W0
0x85C4	0x785880  	MOV.B	W0, [W1++]
0x85C6	0xB3C2D0  	MOV.B	#45, W0
0x85C8	0x785880  	MOV.B	W0, [W1++]
0x85CA	0xB3C320  	MOV.B	#50, W0
0x85CC	0x785880  	MOV.B	W0, [W1++]
0x85CE	0xB3C2D0  	MOV.B	#45, W0
0x85D0	0x785880  	MOV.B	W0, [W1++]
0x85D2	0xB3C320  	MOV.B	#50, W0
0x85D4	0x785880  	MOV.B	W0, [W1++]
0x85D6	0xB3C3C0  	MOV.B	#60, W0
0x85D8	0x785880  	MOV.B	W0, [W1++]
0x85DA	0xEF2000  	CLR	W0
0x85DC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,185 :: 		Title_BattServMenu:= ' BATTERY MAINTENANCE';
0x85DE	0x213E31  	MOV	#lo_addr(_Title_BattServMenu), W1
0x85E0	0xB3C200  	MOV.B	#32, W0
0x85E2	0x785880  	MOV.B	W0, [W1++]
0x85E4	0xB3C420  	MOV.B	#66, W0
0x85E6	0x785880  	MOV.B	W0, [W1++]
0x85E8	0xB3C410  	MOV.B	#65, W0
0x85EA	0x785880  	MOV.B	W0, [W1++]
0x85EC	0xB3C540  	MOV.B	#84, W0
0x85EE	0x785880  	MOV.B	W0, [W1++]
0x85F0	0xB3C540  	MOV.B	#84, W0
0x85F2	0x785880  	MOV.B	W0, [W1++]
0x85F4	0xB3C450  	MOV.B	#69, W0
0x85F6	0x785880  	MOV.B	W0, [W1++]
0x85F8	0xB3C520  	MOV.B	#82, W0
0x85FA	0x785880  	MOV.B	W0, [W1++]
0x85FC	0xB3C590  	MOV.B	#89, W0
0x85FE	0x785880  	MOV.B	W0, [W1++]
0x8600	0xB3C200  	MOV.B	#32, W0
0x8602	0x785880  	MOV.B	W0, [W1++]
0x8604	0xB3C4D0  	MOV.B	#77, W0
0x8606	0x785880  	MOV.B	W0, [W1++]
0x8608	0xB3C410  	MOV.B	#65, W0
0x860A	0x785880  	MOV.B	W0, [W1++]
0x860C	0xB3C490  	MOV.B	#73, W0
0x860E	0x785880  	MOV.B	W0, [W1++]
0x8610	0xB3C4E0  	MOV.B	#78, W0
0x8612	0x785880  	MOV.B	W0, [W1++]
0x8614	0xB3C540  	MOV.B	#84, W0
0x8616	0x785880  	MOV.B	W0, [W1++]
0x8618	0xB3C450  	MOV.B	#69, W0
0x861A	0x785880  	MOV.B	W0, [W1++]
0x861C	0xB3C4E0  	MOV.B	#78, W0
0x861E	0x785880  	MOV.B	W0, [W1++]
0x8620	0xB3C410  	MOV.B	#65, W0
0x8622	0x785880  	MOV.B	W0, [W1++]
0x8624	0xB3C4E0  	MOV.B	#78, W0
0x8626	0x785880  	MOV.B	W0, [W1++]
0x8628	0xB3C430  	MOV.B	#67, W0
0x862A	0x785880  	MOV.B	W0, [W1++]
0x862C	0xB3C450  	MOV.B	#69, W0
0x862E	0x785880  	MOV.B	W0, [W1++]
0x8630	0xEF2000  	CLR	W0
0x8632	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,186 :: 		Title_ClockMenu   := ' CLOCK-DATE SETTINGS';
0x8634	0x211E41  	MOV	#lo_addr(_Title_ClockMenu), W1
0x8636	0xB3C200  	MOV.B	#32, W0
0x8638	0x785880  	MOV.B	W0, [W1++]
0x863A	0xB3C430  	MOV.B	#67, W0
0x863C	0x785880  	MOV.B	W0, [W1++]
0x863E	0xB3C4C0  	MOV.B	#76, W0
0x8640	0x785880  	MOV.B	W0, [W1++]
0x8642	0xB3C4F0  	MOV.B	#79, W0
0x8644	0x785880  	MOV.B	W0, [W1++]
0x8646	0xB3C430  	MOV.B	#67, W0
0x8648	0x785880  	MOV.B	W0, [W1++]
0x864A	0xB3C4B0  	MOV.B	#75, W0
0x864C	0x785880  	MOV.B	W0, [W1++]
0x864E	0xB3C2D0  	MOV.B	#45, W0
0x8650	0x785880  	MOV.B	W0, [W1++]
0x8652	0xB3C440  	MOV.B	#68, W0
0x8654	0x785880  	MOV.B	W0, [W1++]
0x8656	0xB3C410  	MOV.B	#65, W0
0x8658	0x785880  	MOV.B	W0, [W1++]
0x865A	0xB3C540  	MOV.B	#84, W0
0x865C	0x785880  	MOV.B	W0, [W1++]
0x865E	0xB3C450  	MOV.B	#69, W0
0x8660	0x785880  	MOV.B	W0, [W1++]
0x8662	0xB3C200  	MOV.B	#32, W0
0x8664	0x785880  	MOV.B	W0, [W1++]
0x8666	0xB3C530  	MOV.B	#83, W0
0x8668	0x785880  	MOV.B	W0, [W1++]
0x866A	0xB3C450  	MOV.B	#69, W0
0x866C	0x785880  	MOV.B	W0, [W1++]
0x866E	0xB3C540  	MOV.B	#84, W0
0x8670	0x785880  	MOV.B	W0, [W1++]
0x8672	0xB3C540  	MOV.B	#84, W0
0x8674	0x785880  	MOV.B	W0, [W1++]
0x8676	0xB3C490  	MOV.B	#73, W0
0x8678	0x785880  	MOV.B	W0, [W1++]
0x867A	0xB3C4E0  	MOV.B	#78, W0
0x867C	0x785880  	MOV.B	W0, [W1++]
0x867E	0xB3C470  	MOV.B	#71, W0
0x8680	0x785880  	MOV.B	W0, [W1++]
0x8682	0xB3C530  	MOV.B	#83, W0
0x8684	0x785880  	MOV.B	W0, [W1++]
0x8686	0xEF2000  	CLR	W0
0x8688	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,187 :: 		Title_LangMenu    := '  LANGUAGE SETTINGS ';
0x868A	0x213491  	MOV	#lo_addr(_Title_LangMenu), W1
0x868C	0xB3C200  	MOV.B	#32, W0
0x868E	0x785880  	MOV.B	W0, [W1++]
0x8690	0xB3C200  	MOV.B	#32, W0
0x8692	0x785880  	MOV.B	W0, [W1++]
0x8694	0xB3C4C0  	MOV.B	#76, W0
0x8696	0x785880  	MOV.B	W0, [W1++]
0x8698	0xB3C410  	MOV.B	#65, W0
0x869A	0x785880  	MOV.B	W0, [W1++]
0x869C	0xB3C4E0  	MOV.B	#78, W0
0x869E	0x785880  	MOV.B	W0, [W1++]
0x86A0	0xB3C470  	MOV.B	#71, W0
0x86A2	0x785880  	MOV.B	W0, [W1++]
0x86A4	0xB3C550  	MOV.B	#85, W0
0x86A6	0x785880  	MOV.B	W0, [W1++]
0x86A8	0xB3C410  	MOV.B	#65, W0
0x86AA	0x785880  	MOV.B	W0, [W1++]
0x86AC	0xB3C470  	MOV.B	#71, W0
0x86AE	0x785880  	MOV.B	W0, [W1++]
0x86B0	0xB3C450  	MOV.B	#69, W0
0x86B2	0x785880  	MOV.B	W0, [W1++]
0x86B4	0xB3C200  	MOV.B	#32, W0
0x86B6	0x785880  	MOV.B	W0, [W1++]
0x86B8	0xB3C530  	MOV.B	#83, W0
0x86BA	0x785880  	MOV.B	W0, [W1++]
0x86BC	0xB3C450  	MOV.B	#69, W0
0x86BE	0x785880  	MOV.B	W0, [W1++]
0x86C0	0xB3C540  	MOV.B	#84, W0
0x86C2	0x785880  	MOV.B	W0, [W1++]
0x86C4	0xB3C540  	MOV.B	#84, W0
0x86C6	0x785880  	MOV.B	W0, [W1++]
0x86C8	0xB3C490  	MOV.B	#73, W0
0x86CA	0x785880  	MOV.B	W0, [W1++]
0x86CC	0xB3C4E0  	MOV.B	#78, W0
0x86CE	0x785880  	MOV.B	W0, [W1++]
0x86D0	0xB3C470  	MOV.B	#71, W0
0x86D2	0x785880  	MOV.B	W0, [W1++]
0x86D4	0xB3C530  	MOV.B	#83, W0
0x86D6	0x785880  	MOV.B	W0, [W1++]
0x86D8	0xB3C200  	MOV.B	#32, W0
0x86DA	0x785880  	MOV.B	W0, [W1++]
0x86DC	0xEF2000  	CLR	W0
0x86DE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,188 :: 		Title_LogMenu     := '    EVENT HISTORY   ';
0x86E0	0x2106E1  	MOV	#lo_addr(_Title_LogMenu), W1
0x86E2	0xB3C200  	MOV.B	#32, W0
0x86E4	0x785880  	MOV.B	W0, [W1++]
0x86E6	0xB3C200  	MOV.B	#32, W0
0x86E8	0x785880  	MOV.B	W0, [W1++]
0x86EA	0xB3C200  	MOV.B	#32, W0
0x86EC	0x785880  	MOV.B	W0, [W1++]
0x86EE	0xB3C200  	MOV.B	#32, W0
0x86F0	0x785880  	MOV.B	W0, [W1++]
0x86F2	0xB3C450  	MOV.B	#69, W0
0x86F4	0x785880  	MOV.B	W0, [W1++]
0x86F6	0xB3C560  	MOV.B	#86, W0
0x86F8	0x785880  	MOV.B	W0, [W1++]
0x86FA	0xB3C450  	MOV.B	#69, W0
0x86FC	0x785880  	MOV.B	W0, [W1++]
0x86FE	0xB3C4E0  	MOV.B	#78, W0
0x8700	0x785880  	MOV.B	W0, [W1++]
0x8702	0xB3C540  	MOV.B	#84, W0
0x8704	0x785880  	MOV.B	W0, [W1++]
0x8706	0xB3C200  	MOV.B	#32, W0
0x8708	0x785880  	MOV.B	W0, [W1++]
0x870A	0xB3C480  	MOV.B	#72, W0
0x870C	0x785880  	MOV.B	W0, [W1++]
0x870E	0xB3C490  	MOV.B	#73, W0
0x8710	0x785880  	MOV.B	W0, [W1++]
0x8712	0xB3C530  	MOV.B	#83, W0
0x8714	0x785880  	MOV.B	W0, [W1++]
0x8716	0xB3C540  	MOV.B	#84, W0
0x8718	0x785880  	MOV.B	W0, [W1++]
0x871A	0xB3C4F0  	MOV.B	#79, W0
0x871C	0x785880  	MOV.B	W0, [W1++]
0x871E	0xB3C520  	MOV.B	#82, W0
0x8720	0x785880  	MOV.B	W0, [W1++]
0x8722	0xB3C590  	MOV.B	#89, W0
0x8724	0x785880  	MOV.B	W0, [W1++]
0x8726	0xB3C200  	MOV.B	#32, W0
0x8728	0x785880  	MOV.B	W0, [W1++]
0x872A	0xB3C200  	MOV.B	#32, W0
0x872C	0x785880  	MOV.B	W0, [W1++]
0x872E	0xB3C200  	MOV.B	#32, W0
0x8730	0x785880  	MOV.B	W0, [W1++]
0x8732	0xEF2000  	CLR	W0
0x8734	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,189 :: 		Title_LeakMenu    := '   LEAKAGE SETTINGS ';
0x8736	0x212371  	MOV	#lo_addr(_Title_LeakMenu), W1
0x8738	0xB3C200  	MOV.B	#32, W0
0x873A	0x785880  	MOV.B	W0, [W1++]
0x873C	0xB3C200  	MOV.B	#32, W0
0x873E	0x785880  	MOV.B	W0, [W1++]
0x8740	0xB3C200  	MOV.B	#32, W0
0x8742	0x785880  	MOV.B	W0, [W1++]
0x8744	0xB3C4C0  	MOV.B	#76, W0
0x8746	0x785880  	MOV.B	W0, [W1++]
0x8748	0xB3C450  	MOV.B	#69, W0
0x874A	0x785880  	MOV.B	W0, [W1++]
0x874C	0xB3C410  	MOV.B	#65, W0
0x874E	0x785880  	MOV.B	W0, [W1++]
0x8750	0xB3C4B0  	MOV.B	#75, W0
0x8752	0x785880  	MOV.B	W0, [W1++]
0x8754	0xB3C410  	MOV.B	#65, W0
0x8756	0x785880  	MOV.B	W0, [W1++]
0x8758	0xB3C470  	MOV.B	#71, W0
0x875A	0x785880  	MOV.B	W0, [W1++]
0x875C	0xB3C450  	MOV.B	#69, W0
0x875E	0x785880  	MOV.B	W0, [W1++]
0x8760	0xB3C200  	MOV.B	#32, W0
0x8762	0x785880  	MOV.B	W0, [W1++]
0x8764	0xB3C530  	MOV.B	#83, W0
0x8766	0x785880  	MOV.B	W0, [W1++]
0x8768	0xB3C450  	MOV.B	#69, W0
0x876A	0x785880  	MOV.B	W0, [W1++]
0x876C	0xB3C540  	MOV.B	#84, W0
0x876E	0x785880  	MOV.B	W0, [W1++]
0x8770	0xB3C540  	MOV.B	#84, W0
0x8772	0x785880  	MOV.B	W0, [W1++]
0x8774	0xB3C490  	MOV.B	#73, W0
0x8776	0x785880  	MOV.B	W0, [W1++]
0x8778	0xB3C4E0  	MOV.B	#78, W0
0x877A	0x785880  	MOV.B	W0, [W1++]
0x877C	0xB3C470  	MOV.B	#71, W0
0x877E	0x785880  	MOV.B	W0, [W1++]
0x8780	0xB3C530  	MOV.B	#83, W0
0x8782	0x785880  	MOV.B	W0, [W1++]
0x8784	0xB3C200  	MOV.B	#32, W0
0x8786	0x785880  	MOV.B	W0, [W1++]
0x8788	0xEF2000  	CLR	W0
0x878A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,190 :: 		Title_ModbusMenu  := '   MODBUS SETTINGS  ';
0x878C	0x2139E1  	MOV	#lo_addr(_Title_ModbusMenu), W1
0x878E	0xB3C200  	MOV.B	#32, W0
0x8790	0x785880  	MOV.B	W0, [W1++]
0x8792	0xB3C200  	MOV.B	#32, W0
0x8794	0x785880  	MOV.B	W0, [W1++]
0x8796	0xB3C200  	MOV.B	#32, W0
0x8798	0x785880  	MOV.B	W0, [W1++]
0x879A	0xB3C4D0  	MOV.B	#77, W0
0x879C	0x785880  	MOV.B	W0, [W1++]
0x879E	0xB3C4F0  	MOV.B	#79, W0
0x87A0	0x785880  	MOV.B	W0, [W1++]
0x87A2	0xB3C440  	MOV.B	#68, W0
0x87A4	0x785880  	MOV.B	W0, [W1++]
0x87A6	0xB3C420  	MOV.B	#66, W0
0x87A8	0x785880  	MOV.B	W0, [W1++]
0x87AA	0xB3C550  	MOV.B	#85, W0
0x87AC	0x785880  	MOV.B	W0, [W1++]
0x87AE	0xB3C530  	MOV.B	#83, W0
0x87B0	0x785880  	MOV.B	W0, [W1++]
0x87B2	0xB3C200  	MOV.B	#32, W0
0x87B4	0x785880  	MOV.B	W0, [W1++]
0x87B6	0xB3C530  	MOV.B	#83, W0
0x87B8	0x785880  	MOV.B	W0, [W1++]
0x87BA	0xB3C450  	MOV.B	#69, W0
0x87BC	0x785880  	MOV.B	W0, [W1++]
0x87BE	0xB3C540  	MOV.B	#84, W0
0x87C0	0x785880  	MOV.B	W0, [W1++]
0x87C2	0xB3C540  	MOV.B	#84, W0
0x87C4	0x785880  	MOV.B	W0, [W1++]
0x87C6	0xB3C490  	MOV.B	#73, W0
0x87C8	0x785880  	MOV.B	W0, [W1++]
0x87CA	0xB3C4E0  	MOV.B	#78, W0
0x87CC	0x785880  	MOV.B	W0, [W1++]
0x87CE	0xB3C470  	MOV.B	#71, W0
0x87D0	0x785880  	MOV.B	W0, [W1++]
0x87D2	0xB3C530  	MOV.B	#83, W0
0x87D4	0x785880  	MOV.B	W0, [W1++]
0x87D6	0xB3C200  	MOV.B	#32, W0
0x87D8	0x785880  	MOV.B	W0, [W1++]
0x87DA	0xB3C200  	MOV.B	#32, W0
0x87DC	0x785880  	MOV.B	W0, [W1++]
0x87DE	0xEF2000  	CLR	W0
0x87E0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,191 :: 		Title_TempMenu    := 'TEMPERATURE SETTINGS';
0x87E2	0x211B21  	MOV	#lo_addr(_Title_TempMenu), W1
0x87E4	0xB3C540  	MOV.B	#84, W0
0x87E6	0x785880  	MOV.B	W0, [W1++]
0x87E8	0xB3C450  	MOV.B	#69, W0
0x87EA	0x785880  	MOV.B	W0, [W1++]
0x87EC	0xB3C4D0  	MOV.B	#77, W0
0x87EE	0x785880  	MOV.B	W0, [W1++]
0x87F0	0xB3C500  	MOV.B	#80, W0
0x87F2	0x785880  	MOV.B	W0, [W1++]
0x87F4	0xB3C450  	MOV.B	#69, W0
0x87F6	0x785880  	MOV.B	W0, [W1++]
0x87F8	0xB3C520  	MOV.B	#82, W0
0x87FA	0x785880  	MOV.B	W0, [W1++]
0x87FC	0xB3C410  	MOV.B	#65, W0
0x87FE	0x785880  	MOV.B	W0, [W1++]
0x8800	0xB3C540  	MOV.B	#84, W0
0x8802	0x785880  	MOV.B	W0, [W1++]
0x8804	0xB3C550  	MOV.B	#85, W0
0x8806	0x785880  	MOV.B	W0, [W1++]
0x8808	0xB3C520  	MOV.B	#82, W0
0x880A	0x785880  	MOV.B	W0, [W1++]
0x880C	0xB3C450  	MOV.B	#69, W0
0x880E	0x785880  	MOV.B	W0, [W1++]
0x8810	0xB3C200  	MOV.B	#32, W0
0x8812	0x785880  	MOV.B	W0, [W1++]
0x8814	0xB3C530  	MOV.B	#83, W0
0x8816	0x785880  	MOV.B	W0, [W1++]
0x8818	0xB3C450  	MOV.B	#69, W0
0x881A	0x785880  	MOV.B	W0, [W1++]
0x881C	0xB3C540  	MOV.B	#84, W0
0x881E	0x785880  	MOV.B	W0, [W1++]
0x8820	0xB3C540  	MOV.B	#84, W0
0x8822	0x785880  	MOV.B	W0, [W1++]
0x8824	0xB3C490  	MOV.B	#73, W0
0x8826	0x785880  	MOV.B	W0, [W1++]
0x8828	0xB3C4E0  	MOV.B	#78, W0
0x882A	0x785880  	MOV.B	W0, [W1++]
0x882C	0xB3C470  	MOV.B	#71, W0
0x882E	0x785880  	MOV.B	W0, [W1++]
0x8830	0xB3C530  	MOV.B	#83, W0
0x8832	0x785880  	MOV.B	W0, [W1++]
0x8834	0xEF2000  	CLR	W0
0x8836	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,192 :: 		Title_AuthMenu    := ' AUTHORITY SETTINGS ';
0x8838	0x2135E1  	MOV	#lo_addr(_Title_AuthMenu), W1
0x883A	0xB3C200  	MOV.B	#32, W0
0x883C	0x785880  	MOV.B	W0, [W1++]
0x883E	0xB3C410  	MOV.B	#65, W0
0x8840	0x785880  	MOV.B	W0, [W1++]
0x8842	0xB3C550  	MOV.B	#85, W0
0x8844	0x785880  	MOV.B	W0, [W1++]
0x8846	0xB3C540  	MOV.B	#84, W0
0x8848	0x785880  	MOV.B	W0, [W1++]
0x884A	0xB3C480  	MOV.B	#72, W0
0x884C	0x785880  	MOV.B	W0, [W1++]
0x884E	0xB3C4F0  	MOV.B	#79, W0
0x8850	0x785880  	MOV.B	W0, [W1++]
0x8852	0xB3C520  	MOV.B	#82, W0
0x8854	0x785880  	MOV.B	W0, [W1++]
0x8856	0xB3C490  	MOV.B	#73, W0
0x8858	0x785880  	MOV.B	W0, [W1++]
0x885A	0xB3C540  	MOV.B	#84, W0
0x885C	0x785880  	MOV.B	W0, [W1++]
0x885E	0xB3C590  	MOV.B	#89, W0
0x8860	0x785880  	MOV.B	W0, [W1++]
0x8862	0xB3C200  	MOV.B	#32, W0
0x8864	0x785880  	MOV.B	W0, [W1++]
0x8866	0xB3C530  	MOV.B	#83, W0
0x8868	0x785880  	MOV.B	W0, [W1++]
0x886A	0xB3C450  	MOV.B	#69, W0
0x886C	0x785880  	MOV.B	W0, [W1++]
0x886E	0xB3C540  	MOV.B	#84, W0
0x8870	0x785880  	MOV.B	W0, [W1++]
0x8872	0xB3C540  	MOV.B	#84, W0
0x8874	0x785880  	MOV.B	W0, [W1++]
0x8876	0xB3C490  	MOV.B	#73, W0
0x8878	0x785880  	MOV.B	W0, [W1++]
0x887A	0xB3C4E0  	MOV.B	#78, W0
0x887C	0x785880  	MOV.B	W0, [W1++]
0x887E	0xB3C470  	MOV.B	#71, W0
0x8880	0x785880  	MOV.B	W0, [W1++]
0x8882	0xB3C530  	MOV.B	#83, W0
0x8884	0x785880  	MOV.B	W0, [W1++]
0x8886	0xB3C200  	MOV.B	#32, W0
0x8888	0x785880  	MOV.B	W0, [W1++]
0x888A	0xEF2000  	CLR	W0
0x888C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,193 :: 		Title_AuthMenu1   := 'AUTHRTY SETTING-1-2>';
0x888E	0x216D01  	MOV	#lo_addr(_Title_AuthMenu1), W1
0x8890	0xB3C410  	MOV.B	#65, W0
0x8892	0x785880  	MOV.B	W0, [W1++]
0x8894	0xB3C550  	MOV.B	#85, W0
0x8896	0x785880  	MOV.B	W0, [W1++]
0x8898	0xB3C540  	MOV.B	#84, W0
0x889A	0x785880  	MOV.B	W0, [W1++]
0x889C	0xB3C480  	MOV.B	#72, W0
0x889E	0x785880  	MOV.B	W0, [W1++]
0x88A0	0xB3C520  	MOV.B	#82, W0
0x88A2	0x785880  	MOV.B	W0, [W1++]
0x88A4	0xB3C540  	MOV.B	#84, W0
0x88A6	0x785880  	MOV.B	W0, [W1++]
0x88A8	0xB3C590  	MOV.B	#89, W0
0x88AA	0x785880  	MOV.B	W0, [W1++]
0x88AC	0xB3C200  	MOV.B	#32, W0
0x88AE	0x785880  	MOV.B	W0, [W1++]
0x88B0	0xB3C530  	MOV.B	#83, W0
0x88B2	0x785880  	MOV.B	W0, [W1++]
0x88B4	0xB3C450  	MOV.B	#69, W0
0x88B6	0x785880  	MOV.B	W0, [W1++]
0x88B8	0xB3C540  	MOV.B	#84, W0
0x88BA	0x785880  	MOV.B	W0, [W1++]
0x88BC	0xB3C540  	MOV.B	#84, W0
0x88BE	0x785880  	MOV.B	W0, [W1++]
0x88C0	0xB3C490  	MOV.B	#73, W0
0x88C2	0x785880  	MOV.B	W0, [W1++]
0x88C4	0xB3C4E0  	MOV.B	#78, W0
0x88C6	0x785880  	MOV.B	W0, [W1++]
0x88C8	0xB3C470  	MOV.B	#71, W0
0x88CA	0x785880  	MOV.B	W0, [W1++]
0x88CC	0xB3C2D0  	MOV.B	#45, W0
0x88CE	0x785880  	MOV.B	W0, [W1++]
0x88D0	0xB3C310  	MOV.B	#49, W0
0x88D2	0x785880  	MOV.B	W0, [W1++]
0x88D4	0xB3C2D0  	MOV.B	#45, W0
0x88D6	0x785880  	MOV.B	W0, [W1++]
0x88D8	0xB3C320  	MOV.B	#50, W0
0x88DA	0x785880  	MOV.B	W0, [W1++]
0x88DC	0xB3C3E0  	MOV.B	#62, W0
0x88DE	0x785880  	MOV.B	W0, [W1++]
0x88E0	0xEF2000  	CLR	W0
0x88E2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,194 :: 		Title_AuthMenu2   := 'AUTHRTY SETTING-2-2<';
0x88E4	0x217091  	MOV	#lo_addr(_Title_AuthMenu2), W1
0x88E6	0xB3C410  	MOV.B	#65, W0
0x88E8	0x785880  	MOV.B	W0, [W1++]
0x88EA	0xB3C550  	MOV.B	#85, W0
0x88EC	0x785880  	MOV.B	W0, [W1++]
0x88EE	0xB3C540  	MOV.B	#84, W0
0x88F0	0x785880  	MOV.B	W0, [W1++]
0x88F2	0xB3C480  	MOV.B	#72, W0
0x88F4	0x785880  	MOV.B	W0, [W1++]
0x88F6	0xB3C520  	MOV.B	#82, W0
0x88F8	0x785880  	MOV.B	W0, [W1++]
0x88FA	0xB3C540  	MOV.B	#84, W0
0x88FC	0x785880  	MOV.B	W0, [W1++]
0x88FE	0xB3C590  	MOV.B	#89, W0
0x8900	0x785880  	MOV.B	W0, [W1++]
0x8902	0xB3C200  	MOV.B	#32, W0
0x8904	0x785880  	MOV.B	W0, [W1++]
0x8906	0xB3C530  	MOV.B	#83, W0
0x8908	0x785880  	MOV.B	W0, [W1++]
0x890A	0xB3C450  	MOV.B	#69, W0
0x890C	0x785880  	MOV.B	W0, [W1++]
0x890E	0xB3C540  	MOV.B	#84, W0
0x8910	0x785880  	MOV.B	W0, [W1++]
0x8912	0xB3C540  	MOV.B	#84, W0
0x8914	0x785880  	MOV.B	W0, [W1++]
0x8916	0xB3C490  	MOV.B	#73, W0
0x8918	0x785880  	MOV.B	W0, [W1++]
0x891A	0xB3C4E0  	MOV.B	#78, W0
0x891C	0x785880  	MOV.B	W0, [W1++]
0x891E	0xB3C470  	MOV.B	#71, W0
0x8920	0x785880  	MOV.B	W0, [W1++]
0x8922	0xB3C2D0  	MOV.B	#45, W0
0x8924	0x785880  	MOV.B	W0, [W1++]
0x8926	0xB3C320  	MOV.B	#50, W0
0x8928	0x785880  	MOV.B	W0, [W1++]
0x892A	0xB3C2D0  	MOV.B	#45, W0
0x892C	0x785880  	MOV.B	W0, [W1++]
0x892E	0xB3C320  	MOV.B	#50, W0
0x8930	0x785880  	MOV.B	W0, [W1++]
0x8932	0xB3C3C0  	MOV.B	#60, W0
0x8934	0x785880  	MOV.B	W0, [W1++]
0x8936	0xEF2000  	CLR	W0
0x8938	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,195 :: 		Title_Event       := '   EVENT HISTORY    ';
0x893A	0x213341  	MOV	#lo_addr(_Title_Event), W1
0x893C	0xB3C200  	MOV.B	#32, W0
0x893E	0x785880  	MOV.B	W0, [W1++]
0x8940	0xB3C200  	MOV.B	#32, W0
0x8942	0x785880  	MOV.B	W0, [W1++]
0x8944	0xB3C200  	MOV.B	#32, W0
0x8946	0x785880  	MOV.B	W0, [W1++]
0x8948	0xB3C450  	MOV.B	#69, W0
0x894A	0x785880  	MOV.B	W0, [W1++]
0x894C	0xB3C560  	MOV.B	#86, W0
0x894E	0x785880  	MOV.B	W0, [W1++]
0x8950	0xB3C450  	MOV.B	#69, W0
0x8952	0x785880  	MOV.B	W0, [W1++]
0x8954	0xB3C4E0  	MOV.B	#78, W0
0x8956	0x785880  	MOV.B	W0, [W1++]
0x8958	0xB3C540  	MOV.B	#84, W0
0x895A	0x785880  	MOV.B	W0, [W1++]
0x895C	0xB3C200  	MOV.B	#32, W0
0x895E	0x785880  	MOV.B	W0, [W1++]
0x8960	0xB3C480  	MOV.B	#72, W0
0x8962	0x785880  	MOV.B	W0, [W1++]
0x8964	0xB3C490  	MOV.B	#73, W0
0x8966	0x785880  	MOV.B	W0, [W1++]
0x8968	0xB3C530  	MOV.B	#83, W0
0x896A	0x785880  	MOV.B	W0, [W1++]
0x896C	0xB3C540  	MOV.B	#84, W0
0x896E	0x785880  	MOV.B	W0, [W1++]
0x8970	0xB3C4F0  	MOV.B	#79, W0
0x8972	0x785880  	MOV.B	W0, [W1++]
0x8974	0xB3C520  	MOV.B	#82, W0
0x8976	0x785880  	MOV.B	W0, [W1++]
0x8978	0xB3C590  	MOV.B	#89, W0
0x897A	0x785880  	MOV.B	W0, [W1++]
0x897C	0xB3C200  	MOV.B	#32, W0
0x897E	0x785880  	MOV.B	W0, [W1++]
0x8980	0xB3C200  	MOV.B	#32, W0
0x8982	0x785880  	MOV.B	W0, [W1++]
0x8984	0xB3C200  	MOV.B	#32, W0
0x8986	0x785880  	MOV.B	W0, [W1++]
0x8988	0xB3C200  	MOV.B	#32, W0
0x898A	0x785880  	MOV.B	W0, [W1++]
0x898C	0xEF2000  	CLR	W0
0x898E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,198 :: 		SubTitle_DropMod  := 'DROP. MODE  =';
0x8990	0x2150E1  	MOV	#lo_addr(_SubTitle_DropMod), W1
0x8992	0xB3C440  	MOV.B	#68, W0
0x8994	0x785880  	MOV.B	W0, [W1++]
0x8996	0xB3C520  	MOV.B	#82, W0
0x8998	0x785880  	MOV.B	W0, [W1++]
0x899A	0xB3C4F0  	MOV.B	#79, W0
0x899C	0x785880  	MOV.B	W0, [W1++]
0x899E	0xB3C500  	MOV.B	#80, W0
0x89A0	0x785880  	MOV.B	W0, [W1++]
0x89A2	0xB3C2E0  	MOV.B	#46, W0
0x89A4	0x785880  	MOV.B	W0, [W1++]
0x89A6	0xB3C200  	MOV.B	#32, W0
0x89A8	0x785880  	MOV.B	W0, [W1++]
0x89AA	0xB3C4D0  	MOV.B	#77, W0
0x89AC	0x785880  	MOV.B	W0, [W1++]
0x89AE	0xB3C4F0  	MOV.B	#79, W0
0x89B0	0x785880  	MOV.B	W0, [W1++]
0x89B2	0xB3C440  	MOV.B	#68, W0
0x89B4	0x785880  	MOV.B	W0, [W1++]
0x89B6	0xB3C450  	MOV.B	#69, W0
0x89B8	0x785880  	MOV.B	W0, [W1++]
0x89BA	0xB3C200  	MOV.B	#32, W0
0x89BC	0x785880  	MOV.B	W0, [W1++]
0x89BE	0xB3C200  	MOV.B	#32, W0
0x89C0	0x785880  	MOV.B	W0, [W1++]
0x89C2	0xB3C3D0  	MOV.B	#61, W0
0x89C4	0x785880  	MOV.B	W0, [W1++]
0x89C6	0xEF2000  	CLR	W0
0x89C8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,199 :: 		SubTitle_OpMod    := 'Operatn. Mod=';
0x89CA	0x215001  	MOV	#lo_addr(_SubTitle_OpMod), W1
0x89CC	0xB3C4F0  	MOV.B	#79, W0
0x89CE	0x785880  	MOV.B	W0, [W1++]
0x89D0	0xB3C700  	MOV.B	#112, W0
0x89D2	0x785880  	MOV.B	W0, [W1++]
0x89D4	0xB3C650  	MOV.B	#101, W0
0x89D6	0x785880  	MOV.B	W0, [W1++]
0x89D8	0xB3C720  	MOV.B	#114, W0
0x89DA	0x785880  	MOV.B	W0, [W1++]
0x89DC	0xB3C610  	MOV.B	#97, W0
0x89DE	0x785880  	MOV.B	W0, [W1++]
0x89E0	0xB3C740  	MOV.B	#116, W0
0x89E2	0x785880  	MOV.B	W0, [W1++]
0x89E4	0xB3C6E0  	MOV.B	#110, W0
0x89E6	0x785880  	MOV.B	W0, [W1++]
0x89E8	0xB3C2E0  	MOV.B	#46, W0
0x89EA	0x785880  	MOV.B	W0, [W1++]
0x89EC	0xB3C200  	MOV.B	#32, W0
0x89EE	0x785880  	MOV.B	W0, [W1++]
0x89F0	0xB3C4D0  	MOV.B	#77, W0
0x89F2	0x785880  	MOV.B	W0, [W1++]
0x89F4	0xB3C6F0  	MOV.B	#111, W0
0x89F6	0x785880  	MOV.B	W0, [W1++]
0x89F8	0xB3C640  	MOV.B	#100, W0
0x89FA	0x785880  	MOV.B	W0, [W1++]
0x89FC	0xB3C3D0  	MOV.B	#61, W0
0x89FE	0x785880  	MOV.B	W0, [W1++]
0x8A00	0xEF2000  	CLR	W0
0x8A02	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,200 :: 		SubTitle_MS       := 'Master/Slave=';
0x8A04	0x2151C1  	MOV	#lo_addr(_SubTitle_MS), W1
0x8A06	0xB3C4D0  	MOV.B	#77, W0
0x8A08	0x785880  	MOV.B	W0, [W1++]
0x8A0A	0xB3C610  	MOV.B	#97, W0
0x8A0C	0x785880  	MOV.B	W0, [W1++]
0x8A0E	0xB3C730  	MOV.B	#115, W0
0x8A10	0x785880  	MOV.B	W0, [W1++]
0x8A12	0xB3C740  	MOV.B	#116, W0
0x8A14	0x785880  	MOV.B	W0, [W1++]
0x8A16	0xB3C650  	MOV.B	#101, W0
0x8A18	0x785880  	MOV.B	W0, [W1++]
0x8A1A	0xB3C720  	MOV.B	#114, W0
0x8A1C	0x785880  	MOV.B	W0, [W1++]
0x8A1E	0xB3C2F0  	MOV.B	#47, W0
0x8A20	0x785880  	MOV.B	W0, [W1++]
0x8A22	0xB3C530  	MOV.B	#83, W0
0x8A24	0x785880  	MOV.B	W0, [W1++]
0x8A26	0xB3C6C0  	MOV.B	#108, W0
0x8A28	0x785880  	MOV.B	W0, [W1++]
0x8A2A	0xB3C610  	MOV.B	#97, W0
0x8A2C	0x785880  	MOV.B	W0, [W1++]
0x8A2E	0xB3C760  	MOV.B	#118, W0
0x8A30	0x785880  	MOV.B	W0, [W1++]
0x8A32	0xB3C650  	MOV.B	#101, W0
0x8A34	0x785880  	MOV.B	W0, [W1++]
0x8A36	0xB3C3D0  	MOV.B	#61, W0
0x8A38	0x785880  	MOV.B	W0, [W1++]
0x8A3A	0xEF2000  	CLR	W0
0x8A3C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,201 :: 		SubTitle_Back     := 'Back';
0x8A3E	0x214541  	MOV	#lo_addr(_SubTitle_Back), W1
0x8A40	0xB3C420  	MOV.B	#66, W0
0x8A42	0x785880  	MOV.B	W0, [W1++]
0x8A44	0xB3C610  	MOV.B	#97, W0
0x8A46	0x785880  	MOV.B	W0, [W1++]
0x8A48	0xB3C630  	MOV.B	#99, W0
0x8A4A	0x785880  	MOV.B	W0, [W1++]
0x8A4C	0xB3C6B0  	MOV.B	#107, W0
0x8A4E	0x785880  	MOV.B	W0, [W1++]
0x8A50	0xEF2000  	CLR	W0
0x8A52	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,202 :: 		SubTitle_MaxVolt  := 'Max. Voltage=';
0x8A54	0x213141  	MOV	#lo_addr(_SubTitle_MaxVolt), W1
0x8A56	0xB3C4D0  	MOV.B	#77, W0
0x8A58	0x785880  	MOV.B	W0, [W1++]
0x8A5A	0xB3C610  	MOV.B	#97, W0
0x8A5C	0x785880  	MOV.B	W0, [W1++]
0x8A5E	0xB3C780  	MOV.B	#120, W0
0x8A60	0x785880  	MOV.B	W0, [W1++]
0x8A62	0xB3C2E0  	MOV.B	#46, W0
0x8A64	0x785880  	MOV.B	W0, [W1++]
0x8A66	0xB3C200  	MOV.B	#32, W0
0x8A68	0x785880  	MOV.B	W0, [W1++]
0x8A6A	0xB3C560  	MOV.B	#86, W0
0x8A6C	0x785880  	MOV.B	W0, [W1++]
0x8A6E	0xB3C6F0  	MOV.B	#111, W0
0x8A70	0x785880  	MOV.B	W0, [W1++]
0x8A72	0xB3C6C0  	MOV.B	#108, W0
0x8A74	0x785880  	MOV.B	W0, [W1++]
0x8A76	0xB3C740  	MOV.B	#116, W0
0x8A78	0x785880  	MOV.B	W0, [W1++]
0x8A7A	0xB3C610  	MOV.B	#97, W0
0x8A7C	0x785880  	MOV.B	W0, [W1++]
0x8A7E	0xB3C670  	MOV.B	#103, W0
0x8A80	0x785880  	MOV.B	W0, [W1++]
0x8A82	0xB3C650  	MOV.B	#101, W0
0x8A84	0x785880  	MOV.B	W0, [W1++]
0x8A86	0xB3C3D0  	MOV.B	#61, W0
0x8A88	0x785880  	MOV.B	W0, [W1++]
0x8A8A	0xEF2000  	CLR	W0
0x8A8C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,203 :: 		SubTitle_MinVolt  := 'Min. Voltage=';
0x8A8E	0x213241  	MOV	#lo_addr(_SubTitle_MinVolt), W1
0x8A90	0xB3C4D0  	MOV.B	#77, W0
0x8A92	0x785880  	MOV.B	W0, [W1++]
0x8A94	0xB3C690  	MOV.B	#105, W0
0x8A96	0x785880  	MOV.B	W0, [W1++]
0x8A98	0xB3C6E0  	MOV.B	#110, W0
0x8A9A	0x785880  	MOV.B	W0, [W1++]
0x8A9C	0xB3C2E0  	MOV.B	#46, W0
0x8A9E	0x785880  	MOV.B	W0, [W1++]
0x8AA0	0xB3C200  	MOV.B	#32, W0
0x8AA2	0x785880  	MOV.B	W0, [W1++]
0x8AA4	0xB3C560  	MOV.B	#86, W0
0x8AA6	0x785880  	MOV.B	W0, [W1++]
0x8AA8	0xB3C6F0  	MOV.B	#111, W0
0x8AAA	0x785880  	MOV.B	W0, [W1++]
0x8AAC	0xB3C6C0  	MOV.B	#108, W0
0x8AAE	0x785880  	MOV.B	W0, [W1++]
0x8AB0	0xB3C740  	MOV.B	#116, W0
0x8AB2	0x785880  	MOV.B	W0, [W1++]
0x8AB4	0xB3C610  	MOV.B	#97, W0
0x8AB6	0x785880  	MOV.B	W0, [W1++]
0x8AB8	0xB3C670  	MOV.B	#103, W0
0x8ABA	0x785880  	MOV.B	W0, [W1++]
0x8ABC	0xB3C650  	MOV.B	#101, W0
0x8ABE	0x785880  	MOV.B	W0, [W1++]
0x8AC0	0xB3C3D0  	MOV.B	#61, W0
0x8AC2	0x785880  	MOV.B	W0, [W1++]
0x8AC4	0xEF2000  	CLR	W0
0x8AC6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,204 :: 		SubTitle_VoltDiff := 'Volt. Diff. =';
0x8AC8	0x212C91  	MOV	#lo_addr(_SubTitle_VoltDiff), W1
0x8ACA	0xB3C560  	MOV.B	#86, W0
0x8ACC	0x785880  	MOV.B	W0, [W1++]
0x8ACE	0xB3C6F0  	MOV.B	#111, W0
0x8AD0	0x785880  	MOV.B	W0, [W1++]
0x8AD2	0xB3C6C0  	MOV.B	#108, W0
0x8AD4	0x785880  	MOV.B	W0, [W1++]
0x8AD6	0xB3C740  	MOV.B	#116, W0
0x8AD8	0x785880  	MOV.B	W0, [W1++]
0x8ADA	0xB3C2E0  	MOV.B	#46, W0
0x8ADC	0x785880  	MOV.B	W0, [W1++]
0x8ADE	0xB3C200  	MOV.B	#32, W0
0x8AE0	0x785880  	MOV.B	W0, [W1++]
0x8AE2	0xB3C440  	MOV.B	#68, W0
0x8AE4	0x785880  	MOV.B	W0, [W1++]
0x8AE6	0xB3C690  	MOV.B	#105, W0
0x8AE8	0x785880  	MOV.B	W0, [W1++]
0x8AEA	0xB3C660  	MOV.B	#102, W0
0x8AEC	0x785880  	MOV.B	W0, [W1++]
0x8AEE	0xB3C660  	MOV.B	#102, W0
0x8AF0	0x785880  	MOV.B	W0, [W1++]
0x8AF2	0xB3C2E0  	MOV.B	#46, W0
0x8AF4	0x785880  	MOV.B	W0, [W1++]
0x8AF6	0xB3C200  	MOV.B	#32, W0
0x8AF8	0x785880  	MOV.B	W0, [W1++]
0x8AFA	0xB3C3D0  	MOV.B	#61, W0
0x8AFC	0x785880  	MOV.B	W0, [W1++]
0x8AFE	0xEF2000  	CLR	W0
0x8B00	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,205 :: 		SubTitle_VoltProt := 'AC Protect  =';
0x8B02	0x212BB1  	MOV	#lo_addr(_SubTitle_VoltProt), W1
0x8B04	0xB3C410  	MOV.B	#65, W0
0x8B06	0x785880  	MOV.B	W0, [W1++]
0x8B08	0xB3C430  	MOV.B	#67, W0
0x8B0A	0x785880  	MOV.B	W0, [W1++]
0x8B0C	0xB3C200  	MOV.B	#32, W0
0x8B0E	0x785880  	MOV.B	W0, [W1++]
0x8B10	0xB3C500  	MOV.B	#80, W0
0x8B12	0x785880  	MOV.B	W0, [W1++]
0x8B14	0xB3C720  	MOV.B	#114, W0
0x8B16	0x785880  	MOV.B	W0, [W1++]
0x8B18	0xB3C6F0  	MOV.B	#111, W0
0x8B1A	0x785880  	MOV.B	W0, [W1++]
0x8B1C	0xB3C740  	MOV.B	#116, W0
0x8B1E	0x785880  	MOV.B	W0, [W1++]
0x8B20	0xB3C650  	MOV.B	#101, W0
0x8B22	0x785880  	MOV.B	W0, [W1++]
0x8B24	0xB3C630  	MOV.B	#99, W0
0x8B26	0x785880  	MOV.B	W0, [W1++]
0x8B28	0xB3C740  	MOV.B	#116, W0
0x8B2A	0x785880  	MOV.B	W0, [W1++]
0x8B2C	0xB3C200  	MOV.B	#32, W0
0x8B2E	0x785880  	MOV.B	W0, [W1++]
0x8B30	0xB3C200  	MOV.B	#32, W0
0x8B32	0x785880  	MOV.B	W0, [W1++]
0x8B34	0xB3C3D0  	MOV.B	#61, W0
0x8B36	0x785880  	MOV.B	W0, [W1++]
0x8B38	0xEF2000  	CLR	W0
0x8B3A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,206 :: 		SubTitle_Pleak    := '(+) Leakage =';
0x8B3C	0x212671  	MOV	#lo_addr(_SubTitle_Pleak), W1
0x8B3E	0xB3C280  	MOV.B	#40, W0
0x8B40	0x785880  	MOV.B	W0, [W1++]
0x8B42	0xB3C2B0  	MOV.B	#43, W0
0x8B44	0x785880  	MOV.B	W0, [W1++]
0x8B46	0xB3C290  	MOV.B	#41, W0
0x8B48	0x785880  	MOV.B	W0, [W1++]
0x8B4A	0xB3C200  	MOV.B	#32, W0
0x8B4C	0x785880  	MOV.B	W0, [W1++]
0x8B4E	0xB3C4C0  	MOV.B	#76, W0
0x8B50	0x785880  	MOV.B	W0, [W1++]
0x8B52	0xB3C650  	MOV.B	#101, W0
0x8B54	0x785880  	MOV.B	W0, [W1++]
0x8B56	0xB3C610  	MOV.B	#97, W0
0x8B58	0x785880  	MOV.B	W0, [W1++]
0x8B5A	0xB3C6B0  	MOV.B	#107, W0
0x8B5C	0x785880  	MOV.B	W0, [W1++]
0x8B5E	0xB3C610  	MOV.B	#97, W0
0x8B60	0x785880  	MOV.B	W0, [W1++]
0x8B62	0xB3C670  	MOV.B	#103, W0
0x8B64	0x785880  	MOV.B	W0, [W1++]
0x8B66	0xB3C650  	MOV.B	#101, W0
0x8B68	0x785880  	MOV.B	W0, [W1++]
0x8B6A	0xB3C200  	MOV.B	#32, W0
0x8B6C	0x785880  	MOV.B	W0, [W1++]
0x8B6E	0xB3C3D0  	MOV.B	#61, W0
0x8B70	0x785880  	MOV.B	W0, [W1++]
0x8B72	0xEF2000  	CLR	W0
0x8B74	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,207 :: 		SubTitle_Nleak    := '(-) Leakage =';
0x8B76	0x2128C1  	MOV	#lo_addr(_SubTitle_Nleak), W1
0x8B78	0xB3C280  	MOV.B	#40, W0
0x8B7A	0x785880  	MOV.B	W0, [W1++]
0x8B7C	0xB3C2D0  	MOV.B	#45, W0
0x8B7E	0x785880  	MOV.B	W0, [W1++]
0x8B80	0xB3C290  	MOV.B	#41, W0
0x8B82	0x785880  	MOV.B	W0, [W1++]
0x8B84	0xB3C200  	MOV.B	#32, W0
0x8B86	0x785880  	MOV.B	W0, [W1++]
0x8B88	0xB3C4C0  	MOV.B	#76, W0
0x8B8A	0x785880  	MOV.B	W0, [W1++]
0x8B8C	0xB3C650  	MOV.B	#101, W0
0x8B8E	0x785880  	MOV.B	W0, [W1++]
0x8B90	0xB3C610  	MOV.B	#97, W0
0x8B92	0x785880  	MOV.B	W0, [W1++]
0x8B94	0xB3C6B0  	MOV.B	#107, W0
0x8B96	0x785880  	MOV.B	W0, [W1++]
0x8B98	0xB3C610  	MOV.B	#97, W0
0x8B9A	0x785880  	MOV.B	W0, [W1++]
0x8B9C	0xB3C670  	MOV.B	#103, W0
0x8B9E	0x785880  	MOV.B	W0, [W1++]
0x8BA0	0xB3C650  	MOV.B	#101, W0
0x8BA2	0x785880  	MOV.B	W0, [W1++]
0x8BA4	0xB3C200  	MOV.B	#32, W0
0x8BA6	0x785880  	MOV.B	W0, [W1++]
0x8BA8	0xB3C3D0  	MOV.B	#61, W0
0x8BAA	0x785880  	MOV.B	W0, [W1++]
0x8BAC	0xEF2000  	CLR	W0
0x8BAE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,208 :: 		SubTitle_Id       := 'Modbus ID   =';
0x8BB0	0x215E61  	MOV	#lo_addr(_SubTitle_Id), W1
0x8BB2	0xB3C4D0  	MOV.B	#77, W0
0x8BB4	0x785880  	MOV.B	W0, [W1++]
0x8BB6	0xB3C6F0  	MOV.B	#111, W0
0x8BB8	0x785880  	MOV.B	W0, [W1++]
0x8BBA	0xB3C640  	MOV.B	#100, W0
0x8BBC	0x785880  	MOV.B	W0, [W1++]
0x8BBE	0xB3C620  	MOV.B	#98, W0
0x8BC0	0x785880  	MOV.B	W0, [W1++]
0x8BC2	0xB3C750  	MOV.B	#117, W0
0x8BC4	0x785880  	MOV.B	W0, [W1++]
0x8BC6	0xB3C730  	MOV.B	#115, W0
0x8BC8	0x785880  	MOV.B	W0, [W1++]
0x8BCA	0xB3C200  	MOV.B	#32, W0
0x8BCC	0x785880  	MOV.B	W0, [W1++]
0x8BCE	0xB3C490  	MOV.B	#73, W0
0x8BD0	0x785880  	MOV.B	W0, [W1++]
0x8BD2	0xB3C440  	MOV.B	#68, W0
0x8BD4	0x785880  	MOV.B	W0, [W1++]
0x8BD6	0xB3C200  	MOV.B	#32, W0
0x8BD8	0x785880  	MOV.B	W0, [W1++]
0x8BDA	0xB3C200  	MOV.B	#32, W0
0x8BDC	0x785880  	MOV.B	W0, [W1++]
0x8BDE	0xB3C200  	MOV.B	#32, W0
0x8BE0	0x785880  	MOV.B	W0, [W1++]
0x8BE2	0xB3C3D0  	MOV.B	#61, W0
0x8BE4	0x785880  	MOV.B	W0, [W1++]
0x8BE6	0xEF2000  	CLR	W0
0x8BE8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,209 :: 		SubTitle_BaudRate := 'Baud Rate   =';
0x8BEA	0x215D81  	MOV	#lo_addr(_SubTitle_BaudRate), W1
0x8BEC	0xB3C420  	MOV.B	#66, W0
0x8BEE	0x785880  	MOV.B	W0, [W1++]
0x8BF0	0xB3C610  	MOV.B	#97, W0
0x8BF2	0x785880  	MOV.B	W0, [W1++]
0x8BF4	0xB3C750  	MOV.B	#117, W0
0x8BF6	0x785880  	MOV.B	W0, [W1++]
0x8BF8	0xB3C640  	MOV.B	#100, W0
0x8BFA	0x785880  	MOV.B	W0, [W1++]
0x8BFC	0xB3C200  	MOV.B	#32, W0
0x8BFE	0x785880  	MOV.B	W0, [W1++]
0x8C00	0xB3C520  	MOV.B	#82, W0
0x8C02	0x785880  	MOV.B	W0, [W1++]
0x8C04	0xB3C610  	MOV.B	#97, W0
0x8C06	0x785880  	MOV.B	W0, [W1++]
0x8C08	0xB3C740  	MOV.B	#116, W0
0x8C0A	0x785880  	MOV.B	W0, [W1++]
0x8C0C	0xB3C650  	MOV.B	#101, W0
0x8C0E	0x785880  	MOV.B	W0, [W1++]
0x8C10	0xB3C200  	MOV.B	#32, W0
0x8C12	0x785880  	MOV.B	W0, [W1++]
0x8C14	0xB3C200  	MOV.B	#32, W0
0x8C16	0x785880  	MOV.B	W0, [W1++]
0x8C18	0xB3C200  	MOV.B	#32, W0
0x8C1A	0x785880  	MOV.B	W0, [W1++]
0x8C1C	0xB3C3D0  	MOV.B	#61, W0
0x8C1E	0x785880  	MOV.B	W0, [W1++]
0x8C20	0xEF2000  	CLR	W0
0x8C22	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,210 :: 		SubTitle_TempAlarm:= 'Alarm       =';
0x8C24	0x211D51  	MOV	#lo_addr(_SubTitle_TempAlarm), W1
0x8C26	0xB3C410  	MOV.B	#65, W0
0x8C28	0x785880  	MOV.B	W0, [W1++]
0x8C2A	0xB3C6C0  	MOV.B	#108, W0
0x8C2C	0x785880  	MOV.B	W0, [W1++]
0x8C2E	0xB3C610  	MOV.B	#97, W0
0x8C30	0x785880  	MOV.B	W0, [W1++]
0x8C32	0xB3C720  	MOV.B	#114, W0
0x8C34	0x785880  	MOV.B	W0, [W1++]
0x8C36	0xB3C6D0  	MOV.B	#109, W0
0x8C38	0x785880  	MOV.B	W0, [W1++]
0x8C3A	0xB3C200  	MOV.B	#32, W0
0x8C3C	0x785880  	MOV.B	W0, [W1++]
0x8C3E	0xB3C200  	MOV.B	#32, W0
0x8C40	0x785880  	MOV.B	W0, [W1++]
0x8C42	0xB3C200  	MOV.B	#32, W0
0x8C44	0x785880  	MOV.B	W0, [W1++]
0x8C46	0xB3C200  	MOV.B	#32, W0
0x8C48	0x785880  	MOV.B	W0, [W1++]
0x8C4A	0xB3C200  	MOV.B	#32, W0
0x8C4C	0x785880  	MOV.B	W0, [W1++]
0x8C4E	0xB3C200  	MOV.B	#32, W0
0x8C50	0x785880  	MOV.B	W0, [W1++]
0x8C52	0xB3C200  	MOV.B	#32, W0
0x8C54	0x785880  	MOV.B	W0, [W1++]
0x8C56	0xB3C3D0  	MOV.B	#61, W0
0x8C58	0x785880  	MOV.B	W0, [W1++]
0x8C5A	0xEF2000  	CLR	W0
0x8C5C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,211 :: 		SubTitle_FanOn    := 'Fan On      =';
0x8C5E	0x211C71  	MOV	#lo_addr(_SubTitle_FanOn), W1
0x8C60	0xB3C460  	MOV.B	#70, W0
0x8C62	0x785880  	MOV.B	W0, [W1++]
0x8C64	0xB3C610  	MOV.B	#97, W0
0x8C66	0x785880  	MOV.B	W0, [W1++]
0x8C68	0xB3C6E0  	MOV.B	#110, W0
0x8C6A	0x785880  	MOV.B	W0, [W1++]
0x8C6C	0xB3C200  	MOV.B	#32, W0
0x8C6E	0x785880  	MOV.B	W0, [W1++]
0x8C70	0xB3C4F0  	MOV.B	#79, W0
0x8C72	0x785880  	MOV.B	W0, [W1++]
0x8C74	0xB3C6E0  	MOV.B	#110, W0
0x8C76	0x785880  	MOV.B	W0, [W1++]
0x8C78	0xB3C200  	MOV.B	#32, W0
0x8C7A	0x785880  	MOV.B	W0, [W1++]
0x8C7C	0xB3C200  	MOV.B	#32, W0
0x8C7E	0x785880  	MOV.B	W0, [W1++]
0x8C80	0xB3C200  	MOV.B	#32, W0
0x8C82	0x785880  	MOV.B	W0, [W1++]
0x8C84	0xB3C200  	MOV.B	#32, W0
0x8C86	0x785880  	MOV.B	W0, [W1++]
0x8C88	0xB3C200  	MOV.B	#32, W0
0x8C8A	0x785880  	MOV.B	W0, [W1++]
0x8C8C	0xB3C200  	MOV.B	#32, W0
0x8C8E	0x785880  	MOV.B	W0, [W1++]
0x8C90	0xB3C3D0  	MOV.B	#61, W0
0x8C92	0x785880  	MOV.B	W0, [W1++]
0x8C94	0xEF2000  	CLR	W0
0x8C96	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,212 :: 		SubTitle_FanOff   := 'Fan Off     =';
0x8C98	0x212021  	MOV	#lo_addr(_SubTitle_FanOff), W1
0x8C9A	0xB3C460  	MOV.B	#70, W0
0x8C9C	0x785880  	MOV.B	W0, [W1++]
0x8C9E	0xB3C610  	MOV.B	#97, W0
0x8CA0	0x785880  	MOV.B	W0, [W1++]
0x8CA2	0xB3C6E0  	MOV.B	#110, W0
0x8CA4	0x785880  	MOV.B	W0, [W1++]
0x8CA6	0xB3C200  	MOV.B	#32, W0
0x8CA8	0x785880  	MOV.B	W0, [W1++]
0x8CAA	0xB3C4F0  	MOV.B	#79, W0
0x8CAC	0x785880  	MOV.B	W0, [W1++]
0x8CAE	0xB3C660  	MOV.B	#102, W0
0x8CB0	0x785880  	MOV.B	W0, [W1++]
0x8CB2	0xB3C660  	MOV.B	#102, W0
0x8CB4	0x785880  	MOV.B	W0, [W1++]
0x8CB6	0xB3C200  	MOV.B	#32, W0
0x8CB8	0x785880  	MOV.B	W0, [W1++]
0x8CBA	0xB3C200  	MOV.B	#32, W0
0x8CBC	0x785880  	MOV.B	W0, [W1++]
0x8CBE	0xB3C200  	MOV.B	#32, W0
0x8CC0	0x785880  	MOV.B	W0, [W1++]
0x8CC2	0xB3C200  	MOV.B	#32, W0
0x8CC4	0x785880  	MOV.B	W0, [W1++]
0x8CC6	0xB3C200  	MOV.B	#32, W0
0x8CC8	0x785880  	MOV.B	W0, [W1++]
0x8CCA	0xB3C3D0  	MOV.B	#61, W0
0x8CCC	0x785880  	MOV.B	W0, [W1++]
0x8CCE	0xEF2000  	CLR	W0
0x8CD0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,213 :: 		SubTitle_TempComp := ' TEMP. COMPANSATION  ';
0x8CD2	0x212111  	MOV	#lo_addr(_SubTitle_TempComp), W1
0x8CD4	0xB3C200  	MOV.B	#32, W0
0x8CD6	0x785880  	MOV.B	W0, [W1++]
0x8CD8	0xB3C540  	MOV.B	#84, W0
0x8CDA	0x785880  	MOV.B	W0, [W1++]
0x8CDC	0xB3C450  	MOV.B	#69, W0
0x8CDE	0x785880  	MOV.B	W0, [W1++]
0x8CE0	0xB3C4D0  	MOV.B	#77, W0
0x8CE2	0x785880  	MOV.B	W0, [W1++]
0x8CE4	0xB3C500  	MOV.B	#80, W0
0x8CE6	0x785880  	MOV.B	W0, [W1++]
0x8CE8	0xB3C2E0  	MOV.B	#46, W0
0x8CEA	0x785880  	MOV.B	W0, [W1++]
0x8CEC	0xB3C200  	MOV.B	#32, W0
0x8CEE	0x785880  	MOV.B	W0, [W1++]
0x8CF0	0xB3C430  	MOV.B	#67, W0
0x8CF2	0x785880  	MOV.B	W0, [W1++]
0x8CF4	0xB3C4F0  	MOV.B	#79, W0
0x8CF6	0x785880  	MOV.B	W0, [W1++]
0x8CF8	0xB3C4D0  	MOV.B	#77, W0
0x8CFA	0x785880  	MOV.B	W0, [W1++]
0x8CFC	0xB3C500  	MOV.B	#80, W0
0x8CFE	0x785880  	MOV.B	W0, [W1++]
0x8D00	0xB3C410  	MOV.B	#65, W0
0x8D02	0x785880  	MOV.B	W0, [W1++]
0x8D04	0xB3C4E0  	MOV.B	#78, W0
0x8D06	0x785880  	MOV.B	W0, [W1++]
0x8D08	0xB3C530  	MOV.B	#83, W0
0x8D0A	0x785880  	MOV.B	W0, [W1++]
0x8D0C	0xB3C410  	MOV.B	#65, W0
0x8D0E	0x785880  	MOV.B	W0, [W1++]
0x8D10	0xB3C540  	MOV.B	#84, W0
0x8D12	0x785880  	MOV.B	W0, [W1++]
0x8D14	0xB3C490  	MOV.B	#73, W0
0x8D16	0x785880  	MOV.B	W0, [W1++]
0x8D18	0xB3C4F0  	MOV.B	#79, W0
0x8D1A	0x785880  	MOV.B	W0, [W1++]
0x8D1C	0xB3C4E0  	MOV.B	#78, W0
0x8D1E	0x785880  	MOV.B	W0, [W1++]
0x8D20	0xB3C200  	MOV.B	#32, W0
0x8D22	0x785880  	MOV.B	W0, [W1++]
0x8D24	0xB3C200  	MOV.B	#32, W0
0x8D26	0x785880  	MOV.B	W0, [W1++]
0x8D28	0xEF2000  	CLR	W0
0x8D2A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,214 :: 		SubTitle_SetVolt  := 'Out Voltage =';
0x8D2C	0x213061  	MOV	#lo_addr(_SubTitle_SetVolt), W1
0x8D2E	0xB3C4F0  	MOV.B	#79, W0
0x8D30	0x785880  	MOV.B	W0, [W1++]
0x8D32	0xB3C750  	MOV.B	#117, W0
0x8D34	0x785880  	MOV.B	W0, [W1++]
0x8D36	0xB3C740  	MOV.B	#116, W0
0x8D38	0x785880  	MOV.B	W0, [W1++]
0x8D3A	0xB3C200  	MOV.B	#32, W0
0x8D3C	0x785880  	MOV.B	W0, [W1++]
0x8D3E	0xB3C560  	MOV.B	#86, W0
0x8D40	0x785880  	MOV.B	W0, [W1++]
0x8D42	0xB3C6F0  	MOV.B	#111, W0
0x8D44	0x785880  	MOV.B	W0, [W1++]
0x8D46	0xB3C6C0  	MOV.B	#108, W0
0x8D48	0x785880  	MOV.B	W0, [W1++]
0x8D4A	0xB3C740  	MOV.B	#116, W0
0x8D4C	0x785880  	MOV.B	W0, [W1++]
0x8D4E	0xB3C610  	MOV.B	#97, W0
0x8D50	0x785880  	MOV.B	W0, [W1++]
0x8D52	0xB3C670  	MOV.B	#103, W0
0x8D54	0x785880  	MOV.B	W0, [W1++]
0x8D56	0xB3C650  	MOV.B	#101, W0
0x8D58	0x785880  	MOV.B	W0, [W1++]
0x8D5A	0xB3C200  	MOV.B	#32, W0
0x8D5C	0x785880  	MOV.B	W0, [W1++]
0x8D5E	0xB3C3D0  	MOV.B	#61, W0
0x8D60	0x785880  	MOV.B	W0, [W1++]
0x8D62	0xEF2000  	CLR	W0
0x8D64	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,215 :: 		SubTitle_SetAmps  := 'Out Current =';
0x8D66	0x212F81  	MOV	#lo_addr(_SubTitle_SetAmps), W1
0x8D68	0xB3C4F0  	MOV.B	#79, W0
0x8D6A	0x785880  	MOV.B	W0, [W1++]
0x8D6C	0xB3C750  	MOV.B	#117, W0
0x8D6E	0x785880  	MOV.B	W0, [W1++]
0x8D70	0xB3C740  	MOV.B	#116, W0
0x8D72	0x785880  	MOV.B	W0, [W1++]
0x8D74	0xB3C200  	MOV.B	#32, W0
0x8D76	0x785880  	MOV.B	W0, [W1++]
0x8D78	0xB3C430  	MOV.B	#67, W0
0x8D7A	0x785880  	MOV.B	W0, [W1++]
0x8D7C	0xB3C750  	MOV.B	#117, W0
0x8D7E	0x785880  	MOV.B	W0, [W1++]
0x8D80	0xB3C720  	MOV.B	#114, W0
0x8D82	0x785880  	MOV.B	W0, [W1++]
0x8D84	0xB3C720  	MOV.B	#114, W0
0x8D86	0x785880  	MOV.B	W0, [W1++]
0x8D88	0xB3C650  	MOV.B	#101, W0
0x8D8A	0x785880  	MOV.B	W0, [W1++]
0x8D8C	0xB3C6E0  	MOV.B	#110, W0
0x8D8E	0x785880  	MOV.B	W0, [W1++]
0x8D90	0xB3C740  	MOV.B	#116, W0
0x8D92	0x785880  	MOV.B	W0, [W1++]
0x8D94	0xB3C200  	MOV.B	#32, W0
0x8D96	0x785880  	MOV.B	W0, [W1++]
0x8D98	0xB3C3D0  	MOV.B	#61, W0
0x8D9A	0x785880  	MOV.B	W0, [W1++]
0x8D9C	0xEF2000  	CLR	W0
0x8D9E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,216 :: 		SubTitle_BattAh   := 'Battery Ah  =';
0x8DA0	0x2155C1  	MOV	#lo_addr(_SubTitle_BattAh), W1
0x8DA2	0xB3C420  	MOV.B	#66, W0
0x8DA4	0x785880  	MOV.B	W0, [W1++]
0x8DA6	0xB3C610  	MOV.B	#97, W0
0x8DA8	0x785880  	MOV.B	W0, [W1++]
0x8DAA	0xB3C740  	MOV.B	#116, W0
0x8DAC	0x785880  	MOV.B	W0, [W1++]
0x8DAE	0xB3C740  	MOV.B	#116, W0
0x8DB0	0x785880  	MOV.B	W0, [W1++]
0x8DB2	0xB3C650  	MOV.B	#101, W0
0x8DB4	0x785880  	MOV.B	W0, [W1++]
0x8DB6	0xB3C720  	MOV.B	#114, W0
0x8DB8	0x785880  	MOV.B	W0, [W1++]
0x8DBA	0xB3C790  	MOV.B	#121, W0
0x8DBC	0x785880  	MOV.B	W0, [W1++]
0x8DBE	0xB3C200  	MOV.B	#32, W0
0x8DC0	0x785880  	MOV.B	W0, [W1++]
0x8DC2	0xB3C410  	MOV.B	#65, W0
0x8DC4	0x785880  	MOV.B	W0, [W1++]
0x8DC6	0xB3C680  	MOV.B	#104, W0
0x8DC8	0x785880  	MOV.B	W0, [W1++]
0x8DCA	0xB3C200  	MOV.B	#32, W0
0x8DCC	0x785880  	MOV.B	W0, [W1++]
0x8DCE	0xB3C200  	MOV.B	#32, W0
0x8DD0	0x785880  	MOV.B	W0, [W1++]
0x8DD2	0xB3C3D0  	MOV.B	#61, W0
0x8DD4	0x785880  	MOV.B	W0, [W1++]
0x8DD6	0xEF2000  	CLR	W0
0x8DD8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,217 :: 		SubTitle_BattAmps := 'Amps=';
0x8DDA	0x215781  	MOV	#lo_addr(_SubTitle_BattAmps), W1
0x8DDC	0xB3C410  	MOV.B	#65, W0
0x8DDE	0x785880  	MOV.B	W0, [W1++]
0x8DE0	0xB3C6D0  	MOV.B	#109, W0
0x8DE2	0x785880  	MOV.B	W0, [W1++]
0x8DE4	0xB3C700  	MOV.B	#112, W0
0x8DE6	0x785880  	MOV.B	W0, [W1++]
0x8DE8	0xB3C730  	MOV.B	#115, W0
0x8DEA	0x785880  	MOV.B	W0, [W1++]
0x8DEC	0xB3C3D0  	MOV.B	#61, W0
0x8DEE	0x785880  	MOV.B	W0, [W1++]
0x8DF0	0xEF2000  	CLR	W0
0x8DF2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,218 :: 		SubTitle_ChrgMode := 'Charge Mode =';
0x8DF4	0x2156A1  	MOV	#lo_addr(_SubTitle_ChrgMode), W1
0x8DF6	0xB3C430  	MOV.B	#67, W0
0x8DF8	0x785880  	MOV.B	W0, [W1++]
0x8DFA	0xB3C680  	MOV.B	#104, W0
0x8DFC	0x785880  	MOV.B	W0, [W1++]
0x8DFE	0xB3C610  	MOV.B	#97, W0
0x8E00	0x785880  	MOV.B	W0, [W1++]
0x8E02	0xB3C720  	MOV.B	#114, W0
0x8E04	0x785880  	MOV.B	W0, [W1++]
0x8E06	0xB3C670  	MOV.B	#103, W0
0x8E08	0x785880  	MOV.B	W0, [W1++]
0x8E0A	0xB3C650  	MOV.B	#101, W0
0x8E0C	0x785880  	MOV.B	W0, [W1++]
0x8E0E	0xB3C200  	MOV.B	#32, W0
0x8E10	0x785880  	MOV.B	W0, [W1++]
0x8E12	0xB3C4D0  	MOV.B	#77, W0
0x8E14	0x785880  	MOV.B	W0, [W1++]
0x8E16	0xB3C6F0  	MOV.B	#111, W0
0x8E18	0x785880  	MOV.B	W0, [W1++]
0x8E1A	0xB3C640  	MOV.B	#100, W0
0x8E1C	0x785880  	MOV.B	W0, [W1++]
0x8E1E	0xB3C650  	MOV.B	#101, W0
0x8E20	0x785880  	MOV.B	W0, [W1++]
0x8E22	0xB3C200  	MOV.B	#32, W0
0x8E24	0x785880  	MOV.B	W0, [W1++]
0x8E26	0xB3C3D0  	MOV.B	#61, W0
0x8E28	0x785880  	MOV.B	W0, [W1++]
0x8E2A	0xEF2000  	CLR	W0
0x8E2C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,219 :: 		SubTitle_BoostVolt:= 'B.ChargeVolt=';
0x8E2E	0x215AA1  	MOV	#lo_addr(_SubTitle_BoostVolt), W1
0x8E30	0xB3C420  	MOV.B	#66, W0
0x8E32	0x785880  	MOV.B	W0, [W1++]
0x8E34	0xB3C2E0  	MOV.B	#46, W0
0x8E36	0x785880  	MOV.B	W0, [W1++]
0x8E38	0xB3C430  	MOV.B	#67, W0
0x8E3A	0x785880  	MOV.B	W0, [W1++]
0x8E3C	0xB3C680  	MOV.B	#104, W0
0x8E3E	0x785880  	MOV.B	W0, [W1++]
0x8E40	0xB3C610  	MOV.B	#97, W0
0x8E42	0x785880  	MOV.B	W0, [W1++]
0x8E44	0xB3C720  	MOV.B	#114, W0
0x8E46	0x785880  	MOV.B	W0, [W1++]
0x8E48	0xB3C670  	MOV.B	#103, W0
0x8E4A	0x785880  	MOV.B	W0, [W1++]
0x8E4C	0xB3C650  	MOV.B	#101, W0
0x8E4E	0x785880  	MOV.B	W0, [W1++]
0x8E50	0xB3C560  	MOV.B	#86, W0
0x8E52	0x785880  	MOV.B	W0, [W1++]
0x8E54	0xB3C6F0  	MOV.B	#111, W0
0x8E56	0x785880  	MOV.B	W0, [W1++]
0x8E58	0xB3C6C0  	MOV.B	#108, W0
0x8E5A	0x785880  	MOV.B	W0, [W1++]
0x8E5C	0xB3C740  	MOV.B	#116, W0
0x8E5E	0x785880  	MOV.B	W0, [W1++]
0x8E60	0xB3C3D0  	MOV.B	#61, W0
0x8E62	0x785880  	MOV.B	W0, [W1++]
0x8E64	0xEF2000  	CLR	W0
0x8E66	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,220 :: 		SubTitle_FloatVolt:= 'F.ChargeVolt=';
0x8E68	0x216AE1  	MOV	#lo_addr(_SubTitle_FloatVolt), W1
0x8E6A	0xB3C460  	MOV.B	#70, W0
0x8E6C	0x785880  	MOV.B	W0, [W1++]
0x8E6E	0xB3C2E0  	MOV.B	#46, W0
0x8E70	0x785880  	MOV.B	W0, [W1++]
0x8E72	0xB3C430  	MOV.B	#67, W0
0x8E74	0x785880  	MOV.B	W0, [W1++]
0x8E76	0xB3C680  	MOV.B	#104, W0
0x8E78	0x785880  	MOV.B	W0, [W1++]
0x8E7A	0xB3C610  	MOV.B	#97, W0
0x8E7C	0x785880  	MOV.B	W0, [W1++]
0x8E7E	0xB3C720  	MOV.B	#114, W0
0x8E80	0x785880  	MOV.B	W0, [W1++]
0x8E82	0xB3C670  	MOV.B	#103, W0
0x8E84	0x785880  	MOV.B	W0, [W1++]
0x8E86	0xB3C650  	MOV.B	#101, W0
0x8E88	0x785880  	MOV.B	W0, [W1++]
0x8E8A	0xB3C560  	MOV.B	#86, W0
0x8E8C	0x785880  	MOV.B	W0, [W1++]
0x8E8E	0xB3C6F0  	MOV.B	#111, W0
0x8E90	0x785880  	MOV.B	W0, [W1++]
0x8E92	0xB3C6C0  	MOV.B	#108, W0
0x8E94	0x785880  	MOV.B	W0, [W1++]
0x8E96	0xB3C740  	MOV.B	#116, W0
0x8E98	0x785880  	MOV.B	W0, [W1++]
0x8E9A	0xB3C3D0  	MOV.B	#61, W0
0x8E9C	0x785880  	MOV.B	W0, [W1++]
0x8E9E	0xEF2000  	CLR	W0
0x8EA0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,221 :: 		SubTitle_BoostTime:= 'B.Chrg Time =';
0x8EA2	0x216A01  	MOV	#lo_addr(_SubTitle_BoostTime), W1
0x8EA4	0xB3C420  	MOV.B	#66, W0
0x8EA6	0x785880  	MOV.B	W0, [W1++]
0x8EA8	0xB3C2E0  	MOV.B	#46, W0
0x8EAA	0x785880  	MOV.B	W0, [W1++]
0x8EAC	0xB3C430  	MOV.B	#67, W0
0x8EAE	0x785880  	MOV.B	W0, [W1++]
0x8EB0	0xB3C680  	MOV.B	#104, W0
0x8EB2	0x785880  	MOV.B	W0, [W1++]
0x8EB4	0xB3C720  	MOV.B	#114, W0
0x8EB6	0x785880  	MOV.B	W0, [W1++]
0x8EB8	0xB3C670  	MOV.B	#103, W0
0x8EBA	0x785880  	MOV.B	W0, [W1++]
0x8EBC	0xB3C200  	MOV.B	#32, W0
0x8EBE	0x785880  	MOV.B	W0, [W1++]
0x8EC0	0xB3C540  	MOV.B	#84, W0
0x8EC2	0x785880  	MOV.B	W0, [W1++]
0x8EC4	0xB3C690  	MOV.B	#105, W0
0x8EC6	0x785880  	MOV.B	W0, [W1++]
0x8EC8	0xB3C6D0  	MOV.B	#109, W0
0x8ECA	0x785880  	MOV.B	W0, [W1++]
0x8ECC	0xB3C650  	MOV.B	#101, W0
0x8ECE	0x785880  	MOV.B	W0, [W1++]
0x8ED0	0xB3C200  	MOV.B	#32, W0
0x8ED2	0x785880  	MOV.B	W0, [W1++]
0x8ED4	0xB3C3D0  	MOV.B	#61, W0
0x8ED6	0x785880  	MOV.B	W0, [W1++]
0x8ED8	0xEF2000  	CLR	W0
0x8EDA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,222 :: 		SubTitle_DeepVolt := 'Discharge V.=';
0x8EDC	0x216BC1  	MOV	#lo_addr(_SubTitle_DeepVolt), W1
0x8EDE	0xB3C440  	MOV.B	#68, W0
0x8EE0	0x785880  	MOV.B	W0, [W1++]
0x8EE2	0xB3C690  	MOV.B	#105, W0
0x8EE4	0x785880  	MOV.B	W0, [W1++]
0x8EE6	0xB3C730  	MOV.B	#115, W0
0x8EE8	0x785880  	MOV.B	W0, [W1++]
0x8EEA	0xB3C630  	MOV.B	#99, W0
0x8EEC	0x785880  	MOV.B	W0, [W1++]
0x8EEE	0xB3C680  	MOV.B	#104, W0
0x8EF0	0x785880  	MOV.B	W0, [W1++]
0x8EF2	0xB3C610  	MOV.B	#97, W0
0x8EF4	0x785880  	MOV.B	W0, [W1++]
0x8EF6	0xB3C720  	MOV.B	#114, W0
0x8EF8	0x785880  	MOV.B	W0, [W1++]
0x8EFA	0xB3C670  	MOV.B	#103, W0
0x8EFC	0x785880  	MOV.B	W0, [W1++]
0x8EFE	0xB3C650  	MOV.B	#101, W0
0x8F00	0x785880  	MOV.B	W0, [W1++]
0x8F02	0xB3C200  	MOV.B	#32, W0
0x8F04	0x785880  	MOV.B	W0, [W1++]
0x8F06	0xB3C560  	MOV.B	#86, W0
0x8F08	0x785880  	MOV.B	W0, [W1++]
0x8F0A	0xB3C2E0  	MOV.B	#46, W0
0x8F0C	0x785880  	MOV.B	W0, [W1++]
0x8F0E	0xB3C3D0  	MOV.B	#61, W0
0x8F10	0x785880  	MOV.B	W0, [W1++]
0x8F12	0xEF2000  	CLR	W0
0x8F14	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,223 :: 		SubTitle_BFMode   := 'Auto BF Mode=';
0x8F16	0x216761  	MOV	#lo_addr(_SubTitle_BFMode), W1
0x8F18	0xB3C410  	MOV.B	#65, W0
0x8F1A	0x785880  	MOV.B	W0, [W1++]
0x8F1C	0xB3C750  	MOV.B	#117, W0
0x8F1E	0x785880  	MOV.B	W0, [W1++]
0x8F20	0xB3C740  	MOV.B	#116, W0
0x8F22	0x785880  	MOV.B	W0, [W1++]
0x8F24	0xB3C6F0  	MOV.B	#111, W0
0x8F26	0x785880  	MOV.B	W0, [W1++]
0x8F28	0xB3C200  	MOV.B	#32, W0
0x8F2A	0x785880  	MOV.B	W0, [W1++]
0x8F2C	0xB3C420  	MOV.B	#66, W0
0x8F2E	0x785880  	MOV.B	W0, [W1++]
0x8F30	0xB3C460  	MOV.B	#70, W0
0x8F32	0x785880  	MOV.B	W0, [W1++]
0x8F34	0xB3C200  	MOV.B	#32, W0
0x8F36	0x785880  	MOV.B	W0, [W1++]
0x8F38	0xB3C4D0  	MOV.B	#77, W0
0x8F3A	0x785880  	MOV.B	W0, [W1++]
0x8F3C	0xB3C6F0  	MOV.B	#111, W0
0x8F3E	0x785880  	MOV.B	W0, [W1++]
0x8F40	0xB3C640  	MOV.B	#100, W0
0x8F42	0x785880  	MOV.B	W0, [W1++]
0x8F44	0xB3C650  	MOV.B	#101, W0
0x8F46	0x785880  	MOV.B	W0, [W1++]
0x8F48	0xB3C3D0  	MOV.B	#61, W0
0x8F4A	0x785880  	MOV.B	W0, [W1++]
0x8F4C	0xEF2000  	CLR	W0
0x8F4E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,224 :: 		SubTitle_Blimit   := 'B.Chrg Limit=';
0x8F50	0x216921  	MOV	#lo_addr(_SubTitle_Blimit), W1
0x8F52	0xB3C420  	MOV.B	#66, W0
0x8F54	0x785880  	MOV.B	W0, [W1++]
0x8F56	0xB3C2E0  	MOV.B	#46, W0
0x8F58	0x785880  	MOV.B	W0, [W1++]
0x8F5A	0xB3C430  	MOV.B	#67, W0
0x8F5C	0x785880  	MOV.B	W0, [W1++]
0x8F5E	0xB3C680  	MOV.B	#104, W0
0x8F60	0x785880  	MOV.B	W0, [W1++]
0x8F62	0xB3C720  	MOV.B	#114, W0
0x8F64	0x785880  	MOV.B	W0, [W1++]
0x8F66	0xB3C670  	MOV.B	#103, W0
0x8F68	0x785880  	MOV.B	W0, [W1++]
0x8F6A	0xB3C200  	MOV.B	#32, W0
0x8F6C	0x785880  	MOV.B	W0, [W1++]
0x8F6E	0xB3C4C0  	MOV.B	#76, W0
0x8F70	0x785880  	MOV.B	W0, [W1++]
0x8F72	0xB3C690  	MOV.B	#105, W0
0x8F74	0x785880  	MOV.B	W0, [W1++]
0x8F76	0xB3C6D0  	MOV.B	#109, W0
0x8F78	0x785880  	MOV.B	W0, [W1++]
0x8F7A	0xB3C690  	MOV.B	#105, W0
0x8F7C	0x785880  	MOV.B	W0, [W1++]
0x8F7E	0xB3C740  	MOV.B	#116, W0
0x8F80	0x785880  	MOV.B	W0, [W1++]
0x8F82	0xB3C3D0  	MOV.B	#61, W0
0x8F84	0x785880  	MOV.B	W0, [W1++]
0x8F86	0xEF2000  	CLR	W0
0x8F88	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,225 :: 		SubTitle_Flimit   := 'F.Chrg Limit=';
0x8F8A	0x216841  	MOV	#lo_addr(_SubTitle_Flimit), W1
0x8F8C	0xB3C460  	MOV.B	#70, W0
0x8F8E	0x785880  	MOV.B	W0, [W1++]
0x8F90	0xB3C2E0  	MOV.B	#46, W0
0x8F92	0x785880  	MOV.B	W0, [W1++]
0x8F94	0xB3C430  	MOV.B	#67, W0
0x8F96	0x785880  	MOV.B	W0, [W1++]
0x8F98	0xB3C680  	MOV.B	#104, W0
0x8F9A	0x785880  	MOV.B	W0, [W1++]
0x8F9C	0xB3C720  	MOV.B	#114, W0
0x8F9E	0x785880  	MOV.B	W0, [W1++]
0x8FA0	0xB3C670  	MOV.B	#103, W0
0x8FA2	0x785880  	MOV.B	W0, [W1++]
0x8FA4	0xB3C200  	MOV.B	#32, W0
0x8FA6	0x785880  	MOV.B	W0, [W1++]
0x8FA8	0xB3C4C0  	MOV.B	#76, W0
0x8FAA	0x785880  	MOV.B	W0, [W1++]
0x8FAC	0xB3C690  	MOV.B	#105, W0
0x8FAE	0x785880  	MOV.B	W0, [W1++]
0x8FB0	0xB3C6D0  	MOV.B	#109, W0
0x8FB2	0x785880  	MOV.B	W0, [W1++]
0x8FB4	0xB3C690  	MOV.B	#105, W0
0x8FB6	0x785880  	MOV.B	W0, [W1++]
0x8FB8	0xB3C740  	MOV.B	#116, W0
0x8FBA	0x785880  	MOV.B	W0, [W1++]
0x8FBC	0xB3C3D0  	MOV.B	#61, W0
0x8FBE	0x785880  	MOV.B	W0, [W1++]
0x8FC0	0xEF2000  	CLR	W0
0x8FC2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,226 :: 		Subtitle_Loop     := 'Maint.Period=';
0x8FC4	0x213D51  	MOV	#lo_addr(_Subtitle_Loop), W1
0x8FC6	0xB3C4D0  	MOV.B	#77, W0
0x8FC8	0x785880  	MOV.B	W0, [W1++]
0x8FCA	0xB3C610  	MOV.B	#97, W0
0x8FCC	0x785880  	MOV.B	W0, [W1++]
0x8FCE	0xB3C690  	MOV.B	#105, W0
0x8FD0	0x785880  	MOV.B	W0, [W1++]
0x8FD2	0xB3C6E0  	MOV.B	#110, W0
0x8FD4	0x785880  	MOV.B	W0, [W1++]
0x8FD6	0xB3C740  	MOV.B	#116, W0
0x8FD8	0x785880  	MOV.B	W0, [W1++]
0x8FDA	0xB3C2E0  	MOV.B	#46, W0
0x8FDC	0x785880  	MOV.B	W0, [W1++]
0x8FDE	0xB3C500  	MOV.B	#80, W0
0x8FE0	0x785880  	MOV.B	W0, [W1++]
0x8FE2	0xB3C650  	MOV.B	#101, W0
0x8FE4	0x785880  	MOV.B	W0, [W1++]
0x8FE6	0xB3C720  	MOV.B	#114, W0
0x8FE8	0x785880  	MOV.B	W0, [W1++]
0x8FEA	0xB3C690  	MOV.B	#105, W0
0x8FEC	0x785880  	MOV.B	W0, [W1++]
0x8FEE	0xB3C6F0  	MOV.B	#111, W0
0x8FF0	0x785880  	MOV.B	W0, [W1++]
0x8FF2	0xB3C640  	MOV.B	#100, W0
0x8FF4	0x785880  	MOV.B	W0, [W1++]
0x8FF6	0xB3C3D0  	MOV.B	#61, W0
0x8FF8	0x785880  	MOV.B	W0, [W1++]
0x8FFA	0xEF2000  	CLR	W0
0x8FFC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,227 :: 		Subtitle_MaintOut := 'Quit Voltage=';
0x8FFE	0x214001  	MOV	#lo_addr(_Subtitle_MaintOut), W1
0x9000	0xB3C510  	MOV.B	#81, W0
0x9002	0x785880  	MOV.B	W0, [W1++]
0x9004	0xB3C750  	MOV.B	#117, W0
0x9006	0x785880  	MOV.B	W0, [W1++]
0x9008	0xB3C690  	MOV.B	#105, W0
0x900A	0x785880  	MOV.B	W0, [W1++]
0x900C	0xB3C740  	MOV.B	#116, W0
0x900E	0x785880  	MOV.B	W0, [W1++]
0x9010	0xB3C200  	MOV.B	#32, W0
0x9012	0x785880  	MOV.B	W0, [W1++]
0x9014	0xB3C560  	MOV.B	#86, W0
0x9016	0x785880  	MOV.B	W0, [W1++]
0x9018	0xB3C6F0  	MOV.B	#111, W0
0x901A	0x785880  	MOV.B	W0, [W1++]
0x901C	0xB3C6C0  	MOV.B	#108, W0
0x901E	0x785880  	MOV.B	W0, [W1++]
0x9020	0xB3C740  	MOV.B	#116, W0
0x9022	0x785880  	MOV.B	W0, [W1++]
0x9024	0xB3C610  	MOV.B	#97, W0
0x9026	0x785880  	MOV.B	W0, [W1++]
0x9028	0xB3C670  	MOV.B	#103, W0
0x902A	0x785880  	MOV.B	W0, [W1++]
0x902C	0xB3C650  	MOV.B	#101, W0
0x902E	0x785880  	MOV.B	W0, [W1++]
0x9030	0xB3C3D0  	MOV.B	#61, W0
0x9032	0x785880  	MOV.B	W0, [W1++]
0x9034	0xEF2000  	CLR	W0
0x9036	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,228 :: 		Subtitle_OutTime  := 'Quit Time   =';
0x9038	0x214311  	MOV	#lo_addr(_Subtitle_OutTime), W1
0x903A	0xB3C510  	MOV.B	#81, W0
0x903C	0x785880  	MOV.B	W0, [W1++]
0x903E	0xB3C750  	MOV.B	#117, W0
0x9040	0x785880  	MOV.B	W0, [W1++]
0x9042	0xB3C690  	MOV.B	#105, W0
0x9044	0x785880  	MOV.B	W0, [W1++]
0x9046	0xB3C740  	MOV.B	#116, W0
0x9048	0x785880  	MOV.B	W0, [W1++]
0x904A	0xB3C200  	MOV.B	#32, W0
0x904C	0x785880  	MOV.B	W0, [W1++]
0x904E	0xB3C540  	MOV.B	#84, W0
0x9050	0x785880  	MOV.B	W0, [W1++]
0x9052	0xB3C690  	MOV.B	#105, W0
0x9054	0x785880  	MOV.B	W0, [W1++]
0x9056	0xB3C6D0  	MOV.B	#109, W0
0x9058	0x785880  	MOV.B	W0, [W1++]
0x905A	0xB3C650  	MOV.B	#101, W0
0x905C	0x785880  	MOV.B	W0, [W1++]
0x905E	0xB3C200  	MOV.B	#32, W0
0x9060	0x785880  	MOV.B	W0, [W1++]
0x9062	0xB3C200  	MOV.B	#32, W0
0x9064	0x785880  	MOV.B	W0, [W1++]
0x9066	0xB3C200  	MOV.B	#32, W0
0x9068	0x785880  	MOV.B	W0, [W1++]
0x906A	0xB3C3D0  	MOV.B	#61, W0
0x906C	0x785880  	MOV.B	W0, [W1++]
0x906E	0xEF2000  	CLR	W0
0x9070	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,229 :: 		Subtitle_Curvescan:= 'Curved Scan =';
0x9072	0x210941  	MOV	#lo_addr(_Subtitle_Curvescan), W1
0x9074	0xB3C430  	MOV.B	#67, W0
0x9076	0x785880  	MOV.B	W0, [W1++]
0x9078	0xB3C750  	MOV.B	#117, W0
0x907A	0x785880  	MOV.B	W0, [W1++]
0x907C	0xB3C720  	MOV.B	#114, W0
0x907E	0x785880  	MOV.B	W0, [W1++]
0x9080	0xB3C760  	MOV.B	#118, W0
0x9082	0x785880  	MOV.B	W0, [W1++]
0x9084	0xB3C650  	MOV.B	#101, W0
0x9086	0x785880  	MOV.B	W0, [W1++]
0x9088	0xB3C640  	MOV.B	#100, W0
0x908A	0x785880  	MOV.B	W0, [W1++]
0x908C	0xB3C200  	MOV.B	#32, W0
0x908E	0x785880  	MOV.B	W0, [W1++]
0x9090	0xB3C530  	MOV.B	#83, W0
0x9092	0x785880  	MOV.B	W0, [W1++]
0x9094	0xB3C630  	MOV.B	#99, W0
0x9096	0x785880  	MOV.B	W0, [W1++]
0x9098	0xB3C610  	MOV.B	#97, W0
0x909A	0x785880  	MOV.B	W0, [W1++]
0x909C	0xB3C6E0  	MOV.B	#110, W0
0x909E	0x785880  	MOV.B	W0, [W1++]
0x90A0	0xB3C200  	MOV.B	#32, W0
0x90A2	0x785880  	MOV.B	W0, [W1++]
0x90A4	0xB3C3D0  	MOV.B	#61, W0
0x90A6	0x785880  	MOV.B	W0, [W1++]
0x90A8	0xEF2000  	CLR	W0
0x90AA	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,230 :: 		Subtitle_MaintTime:= 'Start Time  =';
0x90AC	0x214231  	MOV	#lo_addr(_Subtitle_MaintTime), W1
0x90AE	0xB3C530  	MOV.B	#83, W0
0x90B0	0x785880  	MOV.B	W0, [W1++]
0x90B2	0xB3C740  	MOV.B	#116, W0
0x90B4	0x785880  	MOV.B	W0, [W1++]
0x90B6	0xB3C610  	MOV.B	#97, W0
0x90B8	0x785880  	MOV.B	W0, [W1++]
0x90BA	0xB3C720  	MOV.B	#114, W0
0x90BC	0x785880  	MOV.B	W0, [W1++]
0x90BE	0xB3C740  	MOV.B	#116, W0
0x90C0	0x785880  	MOV.B	W0, [W1++]
0x90C2	0xB3C200  	MOV.B	#32, W0
0x90C4	0x785880  	MOV.B	W0, [W1++]
0x90C6	0xB3C540  	MOV.B	#84, W0
0x90C8	0x785880  	MOV.B	W0, [W1++]
0x90CA	0xB3C690  	MOV.B	#105, W0
0x90CC	0x785880  	MOV.B	W0, [W1++]
0x90CE	0xB3C6D0  	MOV.B	#109, W0
0x90D0	0x785880  	MOV.B	W0, [W1++]
0x90D2	0xB3C650  	MOV.B	#101, W0
0x90D4	0x785880  	MOV.B	W0, [W1++]
0x90D6	0xB3C200  	MOV.B	#32, W0
0x90D8	0x785880  	MOV.B	W0, [W1++]
0x90DA	0xB3C200  	MOV.B	#32, W0
0x90DC	0x785880  	MOV.B	W0, [W1++]
0x90DE	0xB3C3D0  	MOV.B	#61, W0
0x90E0	0x785880  	MOV.B	W0, [W1++]
0x90E2	0xEF2000  	CLR	W0
0x90E4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,231 :: 		Subtitle_Status   := 'Status      =';
0x90E6	0x2143F1  	MOV	#lo_addr(_Subtitle_Status), W1
0x90E8	0xB3C530  	MOV.B	#83, W0
0x90EA	0x785880  	MOV.B	W0, [W1++]
0x90EC	0xB3C740  	MOV.B	#116, W0
0x90EE	0x785880  	MOV.B	W0, [W1++]
0x90F0	0xB3C610  	MOV.B	#97, W0
0x90F2	0x785880  	MOV.B	W0, [W1++]
0x90F4	0xB3C740  	MOV.B	#116, W0
0x90F6	0x785880  	MOV.B	W0, [W1++]
0x90F8	0xB3C750  	MOV.B	#117, W0
0x90FA	0x785880  	MOV.B	W0, [W1++]
0x90FC	0xB3C730  	MOV.B	#115, W0
0x90FE	0x785880  	MOV.B	W0, [W1++]
0x9100	0xB3C200  	MOV.B	#32, W0
0x9102	0x785880  	MOV.B	W0, [W1++]
0x9104	0xB3C200  	MOV.B	#32, W0
0x9106	0x785880  	MOV.B	W0, [W1++]
0x9108	0xB3C200  	MOV.B	#32, W0
0x910A	0x785880  	MOV.B	W0, [W1++]
0x910C	0xB3C200  	MOV.B	#32, W0
0x910E	0x785880  	MOV.B	W0, [W1++]
0x9110	0xB3C200  	MOV.B	#32, W0
0x9112	0x785880  	MOV.B	W0, [W1++]
0x9114	0xB3C200  	MOV.B	#32, W0
0x9116	0x785880  	MOV.B	W0, [W1++]
0x9118	0xB3C3D0  	MOV.B	#61, W0
0x911A	0x785880  	MOV.B	W0, [W1++]
0x911C	0xEF2000  	CLR	W0
0x911E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,232 :: 		App_year          := '/Year ';
0x9120	0x2144D1  	MOV	#lo_addr(_App_Year), W1
0x9122	0xB3C2F0  	MOV.B	#47, W0
0x9124	0x785880  	MOV.B	W0, [W1++]
0x9126	0xB3C590  	MOV.B	#89, W0
0x9128	0x785880  	MOV.B	W0, [W1++]
0x912A	0xB3C650  	MOV.B	#101, W0
0x912C	0x785880  	MOV.B	W0, [W1++]
0x912E	0xB3C610  	MOV.B	#97, W0
0x9130	0x785880  	MOV.B	W0, [W1++]
0x9132	0xB3C720  	MOV.B	#114, W0
0x9134	0x785880  	MOV.B	W0, [W1++]
0x9136	0xB3C200  	MOV.B	#32, W0
0x9138	0x785880  	MOV.B	W0, [W1++]
0x913A	0xEF2000  	CLR	W0
0x913C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,233 :: 		App_hour          := 'Hour';
0x913E	0x2140F1  	MOV	#lo_addr(_App_Hour), W1
0x9140	0xB3C480  	MOV.B	#72, W0
0x9142	0x785880  	MOV.B	W0, [W1++]
0x9144	0xB3C6F0  	MOV.B	#111, W0
0x9146	0x785880  	MOV.B	W0, [W1++]
0x9148	0xB3C750  	MOV.B	#117, W0
0x914A	0x785880  	MOV.B	W0, [W1++]
0x914C	0xB3C720  	MOV.B	#114, W0
0x914E	0x785880  	MOV.B	W0, [W1++]
0x9150	0xEF2000  	CLR	W0
0x9152	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,234 :: 		SubTitle_PswChng  := 'Password Change =';
0x9154	0x217541  	MOV	#lo_addr(_SubTitle_PswChng), W1
0x9156	0xB3C500  	MOV.B	#80, W0
0x9158	0x785880  	MOV.B	W0, [W1++]
0x915A	0xB3C610  	MOV.B	#97, W0
0x915C	0x785880  	MOV.B	W0, [W1++]
0x915E	0xB3C730  	MOV.B	#115, W0
0x9160	0x785880  	MOV.B	W0, [W1++]
0x9162	0xB3C730  	MOV.B	#115, W0
0x9164	0x785880  	MOV.B	W0, [W1++]
0x9166	0xB3C770  	MOV.B	#119, W0
0x9168	0x785880  	MOV.B	W0, [W1++]
0x916A	0xB3C6F0  	MOV.B	#111, W0
0x916C	0x785880  	MOV.B	W0, [W1++]
0x916E	0xB3C720  	MOV.B	#114, W0
0x9170	0x785880  	MOV.B	W0, [W1++]
0x9172	0xB3C640  	MOV.B	#100, W0
0x9174	0x785880  	MOV.B	W0, [W1++]
0x9176	0xB3C200  	MOV.B	#32, W0
0x9178	0x785880  	MOV.B	W0, [W1++]
0x917A	0xB3C430  	MOV.B	#67, W0
0x917C	0x785880  	MOV.B	W0, [W1++]
0x917E	0xB3C680  	MOV.B	#104, W0
0x9180	0x785880  	MOV.B	W0, [W1++]
0x9182	0xB3C610  	MOV.B	#97, W0
0x9184	0x785880  	MOV.B	W0, [W1++]
0x9186	0xB3C6E0  	MOV.B	#110, W0
0x9188	0x785880  	MOV.B	W0, [W1++]
0x918A	0xB3C670  	MOV.B	#103, W0
0x918C	0x785880  	MOV.B	W0, [W1++]
0x918E	0xB3C650  	MOV.B	#101, W0
0x9190	0x785880  	MOV.B	W0, [W1++]
0x9192	0xB3C200  	MOV.B	#32, W0
0x9194	0x785880  	MOV.B	W0, [W1++]
0x9196	0xB3C3D0  	MOV.B	#61, W0
0x9198	0x785880  	MOV.B	W0, [W1++]
0x919A	0xEF2000  	CLR	W0
0x919C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,235 :: 		SubTitle_PswAcset := 'AC Set Menu     =';
0x919E	0x217421  	MOV	#lo_addr(_SubTitle_PswAcset), W1
0x91A0	0xB3C410  	MOV.B	#65, W0
0x91A2	0x785880  	MOV.B	W0, [W1++]
0x91A4	0xB3C430  	MOV.B	#67, W0
0x91A6	0x785880  	MOV.B	W0, [W1++]
0x91A8	0xB3C200  	MOV.B	#32, W0
0x91AA	0x785880  	MOV.B	W0, [W1++]
0x91AC	0xB3C530  	MOV.B	#83, W0
0x91AE	0x785880  	MOV.B	W0, [W1++]
0x91B0	0xB3C650  	MOV.B	#101, W0
0x91B2	0x785880  	MOV.B	W0, [W1++]
0x91B4	0xB3C740  	MOV.B	#116, W0
0x91B6	0x785880  	MOV.B	W0, [W1++]
0x91B8	0xB3C200  	MOV.B	#32, W0
0x91BA	0x785880  	MOV.B	W0, [W1++]
0x91BC	0xB3C4D0  	MOV.B	#77, W0
0x91BE	0x785880  	MOV.B	W0, [W1++]
0x91C0	0xB3C650  	MOV.B	#101, W0
0x91C2	0x785880  	MOV.B	W0, [W1++]
0x91C4	0xB3C6E0  	MOV.B	#110, W0
0x91C6	0x785880  	MOV.B	W0, [W1++]
0x91C8	0xB3C750  	MOV.B	#117, W0
0x91CA	0x785880  	MOV.B	W0, [W1++]
0x91CC	0xB3C200  	MOV.B	#32, W0
0x91CE	0x785880  	MOV.B	W0, [W1++]
0x91D0	0xB3C200  	MOV.B	#32, W0
0x91D2	0x785880  	MOV.B	W0, [W1++]
0x91D4	0xB3C200  	MOV.B	#32, W0
0x91D6	0x785880  	MOV.B	W0, [W1++]
0x91D8	0xB3C200  	MOV.B	#32, W0
0x91DA	0x785880  	MOV.B	W0, [W1++]
0x91DC	0xB3C200  	MOV.B	#32, W0
0x91DE	0x785880  	MOV.B	W0, [W1++]
0x91E0	0xB3C3D0  	MOV.B	#61, W0
0x91E2	0x785880  	MOV.B	W0, [W1++]
0x91E4	0xEF2000  	CLR	W0
0x91E6	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,236 :: 		SubTitle_PswDcset := 'DC Set Menu     =';
0x91E8	0x217661  	MOV	#lo_addr(_SubTitle_PswDcset), W1
0x91EA	0xB3C440  	MOV.B	#68, W0
0x91EC	0x785880  	MOV.B	W0, [W1++]
0x91EE	0xB3C430  	MOV.B	#67, W0
0x91F0	0x785880  	MOV.B	W0, [W1++]
0x91F2	0xB3C200  	MOV.B	#32, W0
0x91F4	0x785880  	MOV.B	W0, [W1++]
0x91F6	0xB3C530  	MOV.B	#83, W0
0x91F8	0x785880  	MOV.B	W0, [W1++]
0x91FA	0xB3C650  	MOV.B	#101, W0
0x91FC	0x785880  	MOV.B	W0, [W1++]
0x91FE	0xB3C740  	MOV.B	#116, W0
0x9200	0x785880  	MOV.B	W0, [W1++]
0x9202	0xB3C200  	MOV.B	#32, W0
0x9204	0x785880  	MOV.B	W0, [W1++]
0x9206	0xB3C4D0  	MOV.B	#77, W0
0x9208	0x785880  	MOV.B	W0, [W1++]
0x920A	0xB3C650  	MOV.B	#101, W0
0x920C	0x785880  	MOV.B	W0, [W1++]
0x920E	0xB3C6E0  	MOV.B	#110, W0
0x9210	0x785880  	MOV.B	W0, [W1++]
0x9212	0xB3C750  	MOV.B	#117, W0
0x9214	0x785880  	MOV.B	W0, [W1++]
0x9216	0xB3C200  	MOV.B	#32, W0
0x9218	0x785880  	MOV.B	W0, [W1++]
0x921A	0xB3C200  	MOV.B	#32, W0
0x921C	0x785880  	MOV.B	W0, [W1++]
0x921E	0xB3C200  	MOV.B	#32, W0
0x9220	0x785880  	MOV.B	W0, [W1++]
0x9222	0xB3C200  	MOV.B	#32, W0
0x9224	0x785880  	MOV.B	W0, [W1++]
0x9226	0xB3C200  	MOV.B	#32, W0
0x9228	0x785880  	MOV.B	W0, [W1++]
0x922A	0xB3C3D0  	MOV.B	#61, W0
0x922C	0x785880  	MOV.B	W0, [W1++]
0x922E	0xEF2000  	CLR	W0
0x9230	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,237 :: 		SubTitle_Pswbatset:= 'Battery Set Menu=';
0x9232	0x2178A1  	MOV	#lo_addr(_SubTitle_Pswbatset), W1
0x9234	0xB3C420  	MOV.B	#66, W0
0x9236	0x785880  	MOV.B	W0, [W1++]
0x9238	0xB3C610  	MOV.B	#97, W0
0x923A	0x785880  	MOV.B	W0, [W1++]
0x923C	0xB3C740  	MOV.B	#116, W0
0x923E	0x785880  	MOV.B	W0, [W1++]
0x9240	0xB3C740  	MOV.B	#116, W0
0x9242	0x785880  	MOV.B	W0, [W1++]
0x9244	0xB3C650  	MOV.B	#101, W0
0x9246	0x785880  	MOV.B	W0, [W1++]
0x9248	0xB3C720  	MOV.B	#114, W0
0x924A	0x785880  	MOV.B	W0, [W1++]
0x924C	0xB3C790  	MOV.B	#121, W0
0x924E	0x785880  	MOV.B	W0, [W1++]
0x9250	0xB3C200  	MOV.B	#32, W0
0x9252	0x785880  	MOV.B	W0, [W1++]
0x9254	0xB3C530  	MOV.B	#83, W0
0x9256	0x785880  	MOV.B	W0, [W1++]
0x9258	0xB3C650  	MOV.B	#101, W0
0x925A	0x785880  	MOV.B	W0, [W1++]
0x925C	0xB3C740  	MOV.B	#116, W0
0x925E	0x785880  	MOV.B	W0, [W1++]
0x9260	0xB3C200  	MOV.B	#32, W0
0x9262	0x785880  	MOV.B	W0, [W1++]
0x9264	0xB3C4D0  	MOV.B	#77, W0
0x9266	0x785880  	MOV.B	W0, [W1++]
0x9268	0xB3C650  	MOV.B	#101, W0
0x926A	0x785880  	MOV.B	W0, [W1++]
0x926C	0xB3C6E0  	MOV.B	#110, W0
0x926E	0x785880  	MOV.B	W0, [W1++]
0x9270	0xB3C750  	MOV.B	#117, W0
0x9272	0x785880  	MOV.B	W0, [W1++]
0x9274	0xB3C3D0  	MOV.B	#61, W0
0x9276	0x785880  	MOV.B	W0, [W1++]
0x9278	0xEF2000  	CLR	W0
0x927A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,238 :: 		SubTitle_Pswopmod := 'Operating Mode  =';
0x927C	0x217781  	MOV	#lo_addr(_SubTitle_Pswopmod), W1
0x927E	0xB3C4F0  	MOV.B	#79, W0
0x9280	0x785880  	MOV.B	W0, [W1++]
0x9282	0xB3C700  	MOV.B	#112, W0
0x9284	0x785880  	MOV.B	W0, [W1++]
0x9286	0xB3C650  	MOV.B	#101, W0
0x9288	0x785880  	MOV.B	W0, [W1++]
0x928A	0xB3C720  	MOV.B	#114, W0
0x928C	0x785880  	MOV.B	W0, [W1++]
0x928E	0xB3C610  	MOV.B	#97, W0
0x9290	0x785880  	MOV.B	W0, [W1++]
0x9292	0xB3C740  	MOV.B	#116, W0
0x9294	0x785880  	MOV.B	W0, [W1++]
0x9296	0xB3C690  	MOV.B	#105, W0
0x9298	0x785880  	MOV.B	W0, [W1++]
0x929A	0xB3C6E0  	MOV.B	#110, W0
0x929C	0x785880  	MOV.B	W0, [W1++]
0x929E	0xB3C670  	MOV.B	#103, W0
0x92A0	0x785880  	MOV.B	W0, [W1++]
0x92A2	0xB3C200  	MOV.B	#32, W0
0x92A4	0x785880  	MOV.B	W0, [W1++]
0x92A6	0xB3C4D0  	MOV.B	#77, W0
0x92A8	0x785880  	MOV.B	W0, [W1++]
0x92AA	0xB3C6F0  	MOV.B	#111, W0
0x92AC	0x785880  	MOV.B	W0, [W1++]
0x92AE	0xB3C640  	MOV.B	#100, W0
0x92B0	0x785880  	MOV.B	W0, [W1++]
0x92B2	0xB3C650  	MOV.B	#101, W0
0x92B4	0x785880  	MOV.B	W0, [W1++]
0x92B6	0xB3C200  	MOV.B	#32, W0
0x92B8	0x785880  	MOV.B	W0, [W1++]
0x92BA	0xB3C200  	MOV.B	#32, W0
0x92BC	0x785880  	MOV.B	W0, [W1++]
0x92BE	0xB3C3D0  	MOV.B	#61, W0
0x92C0	0x785880  	MOV.B	W0, [W1++]
0x92C2	0xEF2000  	CLR	W0
0x92C4	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,239 :: 		SubTitle_Pswleak  := 'Leakage Menu    =';
0x92C6	0x216F71  	MOV	#lo_addr(_SubTitle_Pswleak), W1
0x92C8	0xB3C4C0  	MOV.B	#76, W0
0x92CA	0x785880  	MOV.B	W0, [W1++]
0x92CC	0xB3C650  	MOV.B	#101, W0
0x92CE	0x785880  	MOV.B	W0, [W1++]
0x92D0	0xB3C610  	MOV.B	#97, W0
0x92D2	0x785880  	MOV.B	W0, [W1++]
0x92D4	0xB3C6B0  	MOV.B	#107, W0
0x92D6	0x785880  	MOV.B	W0, [W1++]
0x92D8	0xB3C610  	MOV.B	#97, W0
0x92DA	0x785880  	MOV.B	W0, [W1++]
0x92DC	0xB3C670  	MOV.B	#103, W0
0x92DE	0x785880  	MOV.B	W0, [W1++]
0x92E0	0xB3C650  	MOV.B	#101, W0
0x92E2	0x785880  	MOV.B	W0, [W1++]
0x92E4	0xB3C200  	MOV.B	#32, W0
0x92E6	0x785880  	MOV.B	W0, [W1++]
0x92E8	0xB3C4D0  	MOV.B	#77, W0
0x92EA	0x785880  	MOV.B	W0, [W1++]
0x92EC	0xB3C650  	MOV.B	#101, W0
0x92EE	0x785880  	MOV.B	W0, [W1++]
0x92F0	0xB3C6E0  	MOV.B	#110, W0
0x92F2	0x785880  	MOV.B	W0, [W1++]
0x92F4	0xB3C750  	MOV.B	#117, W0
0x92F6	0x785880  	MOV.B	W0, [W1++]
0x92F8	0xB3C200  	MOV.B	#32, W0
0x92FA	0x785880  	MOV.B	W0, [W1++]
0x92FC	0xB3C200  	MOV.B	#32, W0
0x92FE	0x785880  	MOV.B	W0, [W1++]
0x9300	0xB3C200  	MOV.B	#32, W0
0x9302	0x785880  	MOV.B	W0, [W1++]
0x9304	0xB3C200  	MOV.B	#32, W0
0x9306	0x785880  	MOV.B	W0, [W1++]
0x9308	0xB3C3D0  	MOV.B	#61, W0
0x930A	0x785880  	MOV.B	W0, [W1++]
0x930C	0xEF2000  	CLR	W0
0x930E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,240 :: 		SubTitle_Pswtemp  := 'Temperature Menu=';
0x9310	0x216E51  	MOV	#lo_addr(_SubTitle_Pswtemp), W1
0x9312	0xB3C540  	MOV.B	#84, W0
0x9314	0x785880  	MOV.B	W0, [W1++]
0x9316	0xB3C650  	MOV.B	#101, W0
0x9318	0x785880  	MOV.B	W0, [W1++]
0x931A	0xB3C6D0  	MOV.B	#109, W0
0x931C	0x785880  	MOV.B	W0, [W1++]
0x931E	0xB3C700  	MOV.B	#112, W0
0x9320	0x785880  	MOV.B	W0, [W1++]
0x9322	0xB3C650  	MOV.B	#101, W0
0x9324	0x785880  	MOV.B	W0, [W1++]
0x9326	0xB3C720  	MOV.B	#114, W0
0x9328	0x785880  	MOV.B	W0, [W1++]
0x932A	0xB3C610  	MOV.B	#97, W0
0x932C	0x785880  	MOV.B	W0, [W1++]
0x932E	0xB3C740  	MOV.B	#116, W0
0x9330	0x785880  	MOV.B	W0, [W1++]
0x9332	0xB3C750  	MOV.B	#117, W0
0x9334	0x785880  	MOV.B	W0, [W1++]
0x9336	0xB3C720  	MOV.B	#114, W0
0x9338	0x785880  	MOV.B	W0, [W1++]
0x933A	0xB3C650  	MOV.B	#101, W0
0x933C	0x785880  	MOV.B	W0, [W1++]
0x933E	0xB3C200  	MOV.B	#32, W0
0x9340	0x785880  	MOV.B	W0, [W1++]
0x9342	0xB3C4D0  	MOV.B	#77, W0
0x9344	0x785880  	MOV.B	W0, [W1++]
0x9346	0xB3C650  	MOV.B	#101, W0
0x9348	0x785880  	MOV.B	W0, [W1++]
0x934A	0xB3C6E0  	MOV.B	#110, W0
0x934C	0x785880  	MOV.B	W0, [W1++]
0x934E	0xB3C750  	MOV.B	#117, W0
0x9350	0x785880  	MOV.B	W0, [W1++]
0x9352	0xB3C3D0  	MOV.B	#61, W0
0x9354	0x785880  	MOV.B	W0, [W1++]
0x9356	0xEF2000  	CLR	W0
0x9358	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,241 :: 		SubTitle_Pswclock := 'Clock-Date Menu =';
0x935A	0x217301  	MOV	#lo_addr(_SubTitle_Pswclock), W1
0x935C	0xB3C430  	MOV.B	#67, W0
0x935E	0x785880  	MOV.B	W0, [W1++]
0x9360	0xB3C6C0  	MOV.B	#108, W0
0x9362	0x785880  	MOV.B	W0, [W1++]
0x9364	0xB3C6F0  	MOV.B	#111, W0
0x9366	0x785880  	MOV.B	W0, [W1++]
0x9368	0xB3C630  	MOV.B	#99, W0
0x936A	0x785880  	MOV.B	W0, [W1++]
0x936C	0xB3C6B0  	MOV.B	#107, W0
0x936E	0x785880  	MOV.B	W0, [W1++]
0x9370	0xB3C2D0  	MOV.B	#45, W0
0x9372	0x785880  	MOV.B	W0, [W1++]
0x9374	0xB3C440  	MOV.B	#68, W0
0x9376	0x785880  	MOV.B	W0, [W1++]
0x9378	0xB3C610  	MOV.B	#97, W0
0x937A	0x785880  	MOV.B	W0, [W1++]
0x937C	0xB3C740  	MOV.B	#116, W0
0x937E	0x785880  	MOV.B	W0, [W1++]
0x9380	0xB3C650  	MOV.B	#101, W0
0x9382	0x785880  	MOV.B	W0, [W1++]
0x9384	0xB3C200  	MOV.B	#32, W0
0x9386	0x785880  	MOV.B	W0, [W1++]
0x9388	0xB3C4D0  	MOV.B	#77, W0
0x938A	0x785880  	MOV.B	W0, [W1++]
0x938C	0xB3C650  	MOV.B	#101, W0
0x938E	0x785880  	MOV.B	W0, [W1++]
0x9390	0xB3C6E0  	MOV.B	#110, W0
0x9392	0x785880  	MOV.B	W0, [W1++]
0x9394	0xB3C750  	MOV.B	#117, W0
0x9396	0x785880  	MOV.B	W0, [W1++]
0x9398	0xB3C200  	MOV.B	#32, W0
0x939A	0x785880  	MOV.B	W0, [W1++]
0x939C	0xB3C3D0  	MOV.B	#61, W0
0x939E	0x785880  	MOV.B	W0, [W1++]
0x93A0	0xEF2000  	CLR	W0
0x93A2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,242 :: 		SubTitle_Pswmodbus:= 'Modbus Menu     =';
0x93A4	0x2171E1  	MOV	#lo_addr(_SubTitle_Pswmodbus), W1
0x93A6	0xB3C4D0  	MOV.B	#77, W0
0x93A8	0x785880  	MOV.B	W0, [W1++]
0x93AA	0xB3C6F0  	MOV.B	#111, W0
0x93AC	0x785880  	MOV.B	W0, [W1++]
0x93AE	0xB3C640  	MOV.B	#100, W0
0x93B0	0x785880  	MOV.B	W0, [W1++]
0x93B2	0xB3C620  	MOV.B	#98, W0
0x93B4	0x785880  	MOV.B	W0, [W1++]
0x93B6	0xB3C750  	MOV.B	#117, W0
0x93B8	0x785880  	MOV.B	W0, [W1++]
0x93BA	0xB3C730  	MOV.B	#115, W0
0x93BC	0x785880  	MOV.B	W0, [W1++]
0x93BE	0xB3C200  	MOV.B	#32, W0
0x93C0	0x785880  	MOV.B	W0, [W1++]
0x93C2	0xB3C4D0  	MOV.B	#77, W0
0x93C4	0x785880  	MOV.B	W0, [W1++]
0x93C6	0xB3C650  	MOV.B	#101, W0
0x93C8	0x785880  	MOV.B	W0, [W1++]
0x93CA	0xB3C6E0  	MOV.B	#110, W0
0x93CC	0x785880  	MOV.B	W0, [W1++]
0x93CE	0xB3C750  	MOV.B	#117, W0
0x93D0	0x785880  	MOV.B	W0, [W1++]
0x93D2	0xB3C200  	MOV.B	#32, W0
0x93D4	0x785880  	MOV.B	W0, [W1++]
0x93D6	0xB3C200  	MOV.B	#32, W0
0x93D8	0x785880  	MOV.B	W0, [W1++]
0x93DA	0xB3C200  	MOV.B	#32, W0
0x93DC	0x785880  	MOV.B	W0, [W1++]
0x93DE	0xB3C200  	MOV.B	#32, W0
0x93E0	0x785880  	MOV.B	W0, [W1++]
0x93E2	0xB3C200  	MOV.B	#32, W0
0x93E4	0x785880  	MOV.B	W0, [W1++]
0x93E6	0xB3C3D0  	MOV.B	#61, W0
0x93E8	0x785880  	MOV.B	W0, [W1++]
0x93EA	0xEF2000  	CLR	W0
0x93EC	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,243 :: 		Subtitle_Lang     := 'Language    =';
0x93EE	0x216501  	MOV	#lo_addr(_Subtitle_Lang), W1
0x93F0	0xB3C4C0  	MOV.B	#76, W0
0x93F2	0x785880  	MOV.B	W0, [W1++]
0x93F4	0xB3C610  	MOV.B	#97, W0
0x93F6	0x785880  	MOV.B	W0, [W1++]
0x93F8	0xB3C6E0  	MOV.B	#110, W0
0x93FA	0x785880  	MOV.B	W0, [W1++]
0x93FC	0xB3C670  	MOV.B	#103, W0
0x93FE	0x785880  	MOV.B	W0, [W1++]
0x9400	0xB3C750  	MOV.B	#117, W0
0x9402	0x785880  	MOV.B	W0, [W1++]
0x9404	0xB3C610  	MOV.B	#97, W0
0x9406	0x785880  	MOV.B	W0, [W1++]
0x9408	0xB3C670  	MOV.B	#103, W0
0x940A	0x785880  	MOV.B	W0, [W1++]
0x940C	0xB3C650  	MOV.B	#101, W0
0x940E	0x785880  	MOV.B	W0, [W1++]
0x9410	0xB3C200  	MOV.B	#32, W0
0x9412	0x785880  	MOV.B	W0, [W1++]
0x9414	0xB3C200  	MOV.B	#32, W0
0x9416	0x785880  	MOV.B	W0, [W1++]
0x9418	0xB3C200  	MOV.B	#32, W0
0x941A	0x785880  	MOV.B	W0, [W1++]
0x941C	0xB3C200  	MOV.B	#32, W0
0x941E	0x785880  	MOV.B	W0, [W1++]
0x9420	0xB3C3D0  	MOV.B	#61, W0
0x9422	0x785880  	MOV.B	W0, [W1++]
0x9424	0xEF2000  	CLR	W0
0x9426	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,244 :: 		SubTitle_Cancel   := 'Cancel';
0x9428	0x215D11  	MOV	#lo_addr(_SubTitle_Cancel), W1
0x942A	0xB3C430  	MOV.B	#67, W0
0x942C	0x785880  	MOV.B	W0, [W1++]
0x942E	0xB3C610  	MOV.B	#97, W0
0x9430	0x785880  	MOV.B	W0, [W1++]
0x9432	0xB3C6E0  	MOV.B	#110, W0
0x9434	0x785880  	MOV.B	W0, [W1++]
0x9436	0xB3C630  	MOV.B	#99, W0
0x9438	0x785880  	MOV.B	W0, [W1++]
0x943A	0xB3C650  	MOV.B	#101, W0
0x943C	0x785880  	MOV.B	W0, [W1++]
0x943E	0xB3C6C0  	MOV.B	#108, W0
0x9440	0x785880  	MOV.B	W0, [W1++]
0x9442	0xEF2000  	CLR	W0
0x9444	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,245 :: 		SubTitle_Ok       := '  OK ';
0x9446	0x215B91  	MOV	#lo_addr(_SubTitle_Ok), W1
0x9448	0xB3C200  	MOV.B	#32, W0
0x944A	0x785880  	MOV.B	W0, [W1++]
0x944C	0xB3C200  	MOV.B	#32, W0
0x944E	0x785880  	MOV.B	W0, [W1++]
0x9450	0xB3C4F0  	MOV.B	#79, W0
0x9452	0x785880  	MOV.B	W0, [W1++]
0x9454	0xB3C4B0  	MOV.B	#75, W0
0x9456	0x785880  	MOV.B	W0, [W1++]
0x9458	0xB3C200  	MOV.B	#32, W0
0x945A	0x785880  	MOV.B	W0, [W1++]
0x945C	0xEF2000  	CLR	W0
0x945E	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,246 :: 		SubTitle_PassOk   := '   Password Correct  ';
0x9460	0x216221  	MOV	#lo_addr(_SubTitle_PassOk), W1
0x9462	0xB3C200  	MOV.B	#32, W0
0x9464	0x785880  	MOV.B	W0, [W1++]
0x9466	0xB3C200  	MOV.B	#32, W0
0x9468	0x785880  	MOV.B	W0, [W1++]
0x946A	0xB3C200  	MOV.B	#32, W0
0x946C	0x785880  	MOV.B	W0, [W1++]
0x946E	0xB3C500  	MOV.B	#80, W0
0x9470	0x785880  	MOV.B	W0, [W1++]
0x9472	0xB3C610  	MOV.B	#97, W0
0x9474	0x785880  	MOV.B	W0, [W1++]
0x9476	0xB3C730  	MOV.B	#115, W0
0x9478	0x785880  	MOV.B	W0, [W1++]
0x947A	0xB3C730  	MOV.B	#115, W0
0x947C	0x785880  	MOV.B	W0, [W1++]
0x947E	0xB3C770  	MOV.B	#119, W0
0x9480	0x785880  	MOV.B	W0, [W1++]
0x9482	0xB3C6F0  	MOV.B	#111, W0
0x9484	0x785880  	MOV.B	W0, [W1++]
0x9486	0xB3C720  	MOV.B	#114, W0
0x9488	0x785880  	MOV.B	W0, [W1++]
0x948A	0xB3C640  	MOV.B	#100, W0
0x948C	0x785880  	MOV.B	W0, [W1++]
0x948E	0xB3C200  	MOV.B	#32, W0
0x9490	0x785880  	MOV.B	W0, [W1++]
0x9492	0xB3C430  	MOV.B	#67, W0
0x9494	0x785880  	MOV.B	W0, [W1++]
0x9496	0xB3C6F0  	MOV.B	#111, W0
0x9498	0x785880  	MOV.B	W0, [W1++]
0x949A	0xB3C720  	MOV.B	#114, W0
0x949C	0x785880  	MOV.B	W0, [W1++]
0x949E	0xB3C720  	MOV.B	#114, W0
0x94A0	0x785880  	MOV.B	W0, [W1++]
0x94A2	0xB3C650  	MOV.B	#101, W0
0x94A4	0x785880  	MOV.B	W0, [W1++]
0x94A6	0xB3C630  	MOV.B	#99, W0
0x94A8	0x785880  	MOV.B	W0, [W1++]
0x94AA	0xB3C740  	MOV.B	#116, W0
0x94AC	0x785880  	MOV.B	W0, [W1++]
0x94AE	0xB3C200  	MOV.B	#32, W0
0x94B0	0x785880  	MOV.B	W0, [W1++]
0x94B2	0xB3C200  	MOV.B	#32, W0
0x94B4	0x785880  	MOV.B	W0, [W1++]
0x94B6	0xEF2000  	CLR	W0
0x94B8	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,247 :: 		SubTitle_PassFlt  := '    Wrong Password!  ';
0x94BA	0x2163A1  	MOV	#lo_addr(_SubTitle_PassFlt), W1
0x94BC	0xB3C200  	MOV.B	#32, W0
0x94BE	0x785880  	MOV.B	W0, [W1++]
0x94C0	0xB3C200  	MOV.B	#32, W0
0x94C2	0x785880  	MOV.B	W0, [W1++]
0x94C4	0xB3C200  	MOV.B	#32, W0
0x94C6	0x785880  	MOV.B	W0, [W1++]
0x94C8	0xB3C200  	MOV.B	#32, W0
0x94CA	0x785880  	MOV.B	W0, [W1++]
0x94CC	0xB3C570  	MOV.B	#87, W0
0x94CE	0x785880  	MOV.B	W0, [W1++]
0x94D0	0xB3C720  	MOV.B	#114, W0
0x94D2	0x785880  	MOV.B	W0, [W1++]
0x94D4	0xB3C6F0  	MOV.B	#111, W0
0x94D6	0x785880  	MOV.B	W0, [W1++]
0x94D8	0xB3C6E0  	MOV.B	#110, W0
0x94DA	0x785880  	MOV.B	W0, [W1++]
0x94DC	0xB3C670  	MOV.B	#103, W0
0x94DE	0x785880  	MOV.B	W0, [W1++]
0x94E0	0xB3C200  	MOV.B	#32, W0
0x94E2	0x785880  	MOV.B	W0, [W1++]
0x94E4	0xB3C500  	MOV.B	#80, W0
0x94E6	0x785880  	MOV.B	W0, [W1++]
0x94E8	0xB3C610  	MOV.B	#97, W0
0x94EA	0x785880  	MOV.B	W0, [W1++]
0x94EC	0xB3C730  	MOV.B	#115, W0
0x94EE	0x785880  	MOV.B	W0, [W1++]
0x94F0	0xB3C730  	MOV.B	#115, W0
0x94F2	0x785880  	MOV.B	W0, [W1++]
0x94F4	0xB3C770  	MOV.B	#119, W0
0x94F6	0x785880  	MOV.B	W0, [W1++]
0x94F8	0xB3C6F0  	MOV.B	#111, W0
0x94FA	0x785880  	MOV.B	W0, [W1++]
0x94FC	0xB3C720  	MOV.B	#114, W0
0x94FE	0x785880  	MOV.B	W0, [W1++]
0x9500	0xB3C640  	MOV.B	#100, W0
0x9502	0x785880  	MOV.B	W0, [W1++]
0x9504	0xB3C210  	MOV.B	#33, W0
0x9506	0x785880  	MOV.B	W0, [W1++]
0x9508	0xB3C200  	MOV.B	#32, W0
0x950A	0x785880  	MOV.B	W0, [W1++]
0x950C	0xB3C200  	MOV.B	#32, W0
0x950E	0x785880  	MOV.B	W0, [W1++]
0x9510	0xEF2000  	CLR	W0
0x9512	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,248 :: 		SubTitle_LogRead  := 'Events Read     ';
0x9514	0x210831  	MOV	#lo_addr(_SubTitle_LogRead), W1
0x9516	0xB3C450  	MOV.B	#69, W0
0x9518	0x785880  	MOV.B	W0, [W1++]
0x951A	0xB3C760  	MOV.B	#118, W0
0x951C	0x785880  	MOV.B	W0, [W1++]
0x951E	0xB3C650  	MOV.B	#101, W0
0x9520	0x785880  	MOV.B	W0, [W1++]
0x9522	0xB3C6E0  	MOV.B	#110, W0
0x9524	0x785880  	MOV.B	W0, [W1++]
0x9526	0xB3C740  	MOV.B	#116, W0
0x9528	0x785880  	MOV.B	W0, [W1++]
0x952A	0xB3C730  	MOV.B	#115, W0
0x952C	0x785880  	MOV.B	W0, [W1++]
0x952E	0xB3C200  	MOV.B	#32, W0
0x9530	0x785880  	MOV.B	W0, [W1++]
0x9532	0xB3C520  	MOV.B	#82, W0
0x9534	0x785880  	MOV.B	W0, [W1++]
0x9536	0xB3C650  	MOV.B	#101, W0
0x9538	0x785880  	MOV.B	W0, [W1++]
0x953A	0xB3C610  	MOV.B	#97, W0
0x953C	0x785880  	MOV.B	W0, [W1++]
0x953E	0xB3C640  	MOV.B	#100, W0
0x9540	0x785880  	MOV.B	W0, [W1++]
0x9542	0xB3C200  	MOV.B	#32, W0
0x9544	0x785880  	MOV.B	W0, [W1++]
0x9546	0xB3C200  	MOV.B	#32, W0
0x9548	0x785880  	MOV.B	W0, [W1++]
0x954A	0xB3C200  	MOV.B	#32, W0
0x954C	0x785880  	MOV.B	W0, [W1++]
0x954E	0xB3C200  	MOV.B	#32, W0
0x9550	0x785880  	MOV.B	W0, [W1++]
0x9552	0xB3C200  	MOV.B	#32, W0
0x9554	0x785880  	MOV.B	W0, [W1++]
0x9556	0xEF2000  	CLR	W0
0x9558	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,249 :: 		SubText_RectifierIdle := '   BACKUP CHARGER    ';
0x955A	0x20F3A1  	MOV	#lo_addr(_SubText_RectifierIdle), W1
0x955C	0xB3C200  	MOV.B	#32, W0
0x955E	0x785880  	MOV.B	W0, [W1++]
0x9560	0xB3C200  	MOV.B	#32, W0
0x9562	0x785880  	MOV.B	W0, [W1++]
0x9564	0xB3C200  	MOV.B	#32, W0
0x9566	0x785880  	MOV.B	W0, [W1++]
0x9568	0xB3C420  	MOV.B	#66, W0
0x956A	0x785880  	MOV.B	W0, [W1++]
0x956C	0xB3C410  	MOV.B	#65, W0
0x956E	0x785880  	MOV.B	W0, [W1++]
0x9570	0xB3C430  	MOV.B	#67, W0
0x9572	0x785880  	MOV.B	W0, [W1++]
0x9574	0xB3C4B0  	MOV.B	#75, W0
0x9576	0x785880  	MOV.B	W0, [W1++]
0x9578	0xB3C550  	MOV.B	#85, W0
0x957A	0x785880  	MOV.B	W0, [W1++]
0x957C	0xB3C500  	MOV.B	#80, W0
0x957E	0x785880  	MOV.B	W0, [W1++]
0x9580	0xB3C200  	MOV.B	#32, W0
0x9582	0x785880  	MOV.B	W0, [W1++]
0x9584	0xB3C430  	MOV.B	#67, W0
0x9586	0x785880  	MOV.B	W0, [W1++]
0x9588	0xB3C480  	MOV.B	#72, W0
0x958A	0x785880  	MOV.B	W0, [W1++]
0x958C	0xB3C410  	MOV.B	#65, W0
0x958E	0x785880  	MOV.B	W0, [W1++]
0x9590	0xB3C520  	MOV.B	#82, W0
0x9592	0x785880  	MOV.B	W0, [W1++]
0x9594	0xB3C470  	MOV.B	#71, W0
0x9596	0x785880  	MOV.B	W0, [W1++]
0x9598	0xB3C450  	MOV.B	#69, W0
0x959A	0x785880  	MOV.B	W0, [W1++]
0x959C	0xB3C520  	MOV.B	#82, W0
0x959E	0x785880  	MOV.B	W0, [W1++]
0x95A0	0xB3C200  	MOV.B	#32, W0
0x95A2	0x785880  	MOV.B	W0, [W1++]
0x95A4	0xB3C200  	MOV.B	#32, W0
0x95A6	0x785880  	MOV.B	W0, [W1++]
0x95A8	0xB3C200  	MOV.B	#32, W0
0x95AA	0x785880  	MOV.B	W0, [W1++]
0x95AC	0xB3C200  	MOV.B	#32, W0
0x95AE	0x785880  	MOV.B	W0, [W1++]
0x95B0	0xEF2000  	CLR	W0
0x95B2	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,250 :: 		SubText_SystemNormaly := '    SYSTEM NORMAL    ';
0x95B4	0x20CC61  	MOV	#lo_addr(_SubText_SystemNormaly), W1
0x95B6	0xB3C200  	MOV.B	#32, W0
0x95B8	0x785880  	MOV.B	W0, [W1++]
0x95BA	0xB3C200  	MOV.B	#32, W0
0x95BC	0x785880  	MOV.B	W0, [W1++]
0x95BE	0xB3C200  	MOV.B	#32, W0
0x95C0	0x785880  	MOV.B	W0, [W1++]
0x95C2	0xB3C200  	MOV.B	#32, W0
0x95C4	0x785880  	MOV.B	W0, [W1++]
0x95C6	0xB3C530  	MOV.B	#83, W0
0x95C8	0x785880  	MOV.B	W0, [W1++]
0x95CA	0xB3C590  	MOV.B	#89, W0
0x95CC	0x785880  	MOV.B	W0, [W1++]
0x95CE	0xB3C530  	MOV.B	#83, W0
0x95D0	0x785880  	MOV.B	W0, [W1++]
0x95D2	0xB3C540  	MOV.B	#84, W0
0x95D4	0x785880  	MOV.B	W0, [W1++]
0x95D6	0xB3C450  	MOV.B	#69, W0
0x95D8	0x785880  	MOV.B	W0, [W1++]
0x95DA	0xB3C4D0  	MOV.B	#77, W0
0x95DC	0x785880  	MOV.B	W0, [W1++]
0x95DE	0xB3C200  	MOV.B	#32, W0
0x95E0	0x785880  	MOV.B	W0, [W1++]
0x95E2	0xB3C4E0  	MOV.B	#78, W0
0x95E4	0x785880  	MOV.B	W0, [W1++]
0x95E6	0xB3C4F0  	MOV.B	#79, W0
0x95E8	0x785880  	MOV.B	W0, [W1++]
0x95EA	0xB3C520  	MOV.B	#82, W0
0x95EC	0x785880  	MOV.B	W0, [W1++]
0x95EE	0xB3C4D0  	MOV.B	#77, W0
0x95F0	0x785880  	MOV.B	W0, [W1++]
0x95F2	0xB3C410  	MOV.B	#65, W0
0x95F4	0x785880  	MOV.B	W0, [W1++]
0x95F6	0xB3C4C0  	MOV.B	#76, W0
0x95F8	0x785880  	MOV.B	W0, [W1++]
0x95FA	0xB3C200  	MOV.B	#32, W0
0x95FC	0x785880  	MOV.B	W0, [W1++]
0x95FE	0xB3C200  	MOV.B	#32, W0
0x9600	0x785880  	MOV.B	W0, [W1++]
0x9602	0xB3C200  	MOV.B	#32, W0
0x9604	0x785880  	MOV.B	W0, [W1++]
0x9606	0xB3C200  	MOV.B	#32, W0
0x9608	0x785880  	MOV.B	W0, [W1++]
0x960A	0xEF2000  	CLR	W0
0x960C	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,252 :: 		Title_Bkm_StartText     := 'BAT. SERVICE STARTED ';
0x960E	0x20CB01  	MOV	#lo_addr(_Title_Bkm_StartText), W1
0x9610	0xB3C420  	MOV.B	#66, W0
0x9612	0x785880  	MOV.B	W0, [W1++]
0x9614	0xB3C410  	MOV.B	#65, W0
0x9616	0x785880  	MOV.B	W0, [W1++]
0x9618	0xB3C540  	MOV.B	#84, W0
0x961A	0x785880  	MOV.B	W0, [W1++]
0x961C	0xB3C2E0  	MOV.B	#46, W0
0x961E	0x785880  	MOV.B	W0, [W1++]
0x9620	0xB3C200  	MOV.B	#32, W0
0x9622	0x785880  	MOV.B	W0, [W1++]
0x9624	0xB3C530  	MOV.B	#83, W0
0x9626	0x785880  	MOV.B	W0, [W1++]
0x9628	0xB3C450  	MOV.B	#69, W0
0x962A	0x785880  	MOV.B	W0, [W1++]
0x962C	0xB3C520  	MOV.B	#82, W0
0x962E	0x785880  	MOV.B	W0, [W1++]
0x9630	0xB3C560  	MOV.B	#86, W0
0x9632	0x785880  	MOV.B	W0, [W1++]
0x9634	0xB3C490  	MOV.B	#73, W0
0x9636	0x785880  	MOV.B	W0, [W1++]
0x9638	0xB3C430  	MOV.B	#67, W0
0x963A	0x785880  	MOV.B	W0, [W1++]
0x963C	0xB3C450  	MOV.B	#69, W0
0x963E	0x785880  	MOV.B	W0, [W1++]
0x9640	0xB3C200  	MOV.B	#32, W0
0x9642	0x785880  	MOV.B	W0, [W1++]
0x9644	0xB3C530  	MOV.B	#83, W0
0x9646	0x785880  	MOV.B	W0, [W1++]
0x9648	0xB3C540  	MOV.B	#84, W0
0x964A	0x785880  	MOV.B	W0, [W1++]
0x964C	0xB3C410  	MOV.B	#65, W0
0x964E	0x785880  	MOV.B	W0, [W1++]
0x9650	0xB3C520  	MOV.B	#82, W0
0x9652	0x785880  	MOV.B	W0, [W1++]
0x9654	0xB3C540  	MOV.B	#84, W0
0x9656	0x785880  	MOV.B	W0, [W1++]
0x9658	0xB3C450  	MOV.B	#69, W0
0x965A	0x785880  	MOV.B	W0, [W1++]
0x965C	0xB3C440  	MOV.B	#68, W0
0x965E	0x785880  	MOV.B	W0, [W1++]
0x9660	0xB3C200  	MOV.B	#32, W0
0x9662	0x785880  	MOV.B	W0, [W1++]
0x9664	0xEF2000  	CLR	W0
0x9666	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,253 :: 		Title_Bkm_WaitText      := 'BAT.SERVICE PREPARING';
0x9668	0x20CDC1  	MOV	#lo_addr(_Title_Bkm_WaitText), W1
0x966A	0xB3C420  	MOV.B	#66, W0
0x966C	0x785880  	MOV.B	W0, [W1++]
0x966E	0xB3C410  	MOV.B	#65, W0
0x9670	0x785880  	MOV.B	W0, [W1++]
0x9672	0xB3C540  	MOV.B	#84, W0
0x9674	0x785880  	MOV.B	W0, [W1++]
0x9676	0xB3C2E0  	MOV.B	#46, W0
0x9678	0x785880  	MOV.B	W0, [W1++]
0x967A	0xB3C530  	MOV.B	#83, W0
0x967C	0x785880  	MOV.B	W0, [W1++]
0x967E	0xB3C450  	MOV.B	#69, W0
0x9680	0x785880  	MOV.B	W0, [W1++]
0x9682	0xB3C520  	MOV.B	#82, W0
0x9684	0x785880  	MOV.B	W0, [W1++]
0x9686	0xB3C560  	MOV.B	#86, W0
0x9688	0x785880  	MOV.B	W0, [W1++]
0x968A	0xB3C490  	MOV.B	#73, W0
0x968C	0x785880  	MOV.B	W0, [W1++]
0x968E	0xB3C430  	MOV.B	#67, W0
0x9690	0x785880  	MOV.B	W0, [W1++]
0x9692	0xB3C450  	MOV.B	#69, W0
0x9694	0x785880  	MOV.B	W0, [W1++]
0x9696	0xB3C200  	MOV.B	#32, W0
0x9698	0x785880  	MOV.B	W0, [W1++]
0x969A	0xB3C500  	MOV.B	#80, W0
0x969C	0x785880  	MOV.B	W0, [W1++]
0x969E	0xB3C520  	MOV.B	#82, W0
0x96A0	0x785880  	MOV.B	W0, [W1++]
0x96A2	0xB3C450  	MOV.B	#69, W0
0x96A4	0x785880  	MOV.B	W0, [W1++]
0x96A6	0xB3C500  	MOV.B	#80, W0
0x96A8	0x785880  	MOV.B	W0, [W1++]
0x96AA	0xB3C410  	MOV.B	#65, W0
0x96AC	0x785880  	MOV.B	W0, [W1++]
0x96AE	0xB3C520  	MOV.B	#82, W0
0x96B0	0x785880  	MOV.B	W0, [W1++]
0x96B2	0xB3C490  	MOV.B	#73, W0
0x96B4	0x785880  	MOV.B	W0, [W1++]
0x96B6	0xB3C4E0  	MOV.B	#78, W0
0x96B8	0x785880  	MOV.B	W0, [W1++]
0x96BA	0xB3C470  	MOV.B	#71, W0
0x96BC	0x785880  	MOV.B	W0, [W1++]
0x96BE	0xEF2000  	CLR	W0
0x96C0	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,254 :: 		Title_Bat_EgriGoodTxt   := 'BATT.CAPACITY is WELL';
0x96C2	0x20D081  	MOV	#lo_addr(_Title_Bat_EgriGoodTxt), W1
0x96C4	0xB3C420  	MOV.B	#66, W0
0x96C6	0x785880  	MOV.B	W0, [W1++]
0x96C8	0xB3C410  	MOV.B	#65, W0
0x96CA	0x785880  	MOV.B	W0, [W1++]
0x96CC	0xB3C540  	MOV.B	#84, W0
0x96CE	0x785880  	MOV.B	W0, [W1++]
0x96D0	0xB3C540  	MOV.B	#84, W0
0x96D2	0x785880  	MOV.B	W0, [W1++]
0x96D4	0xB3C2E0  	MOV.B	#46, W0
0x96D6	0x785880  	MOV.B	W0, [W1++]
0x96D8	0xB3C430  	MOV.B	#67, W0
0x96DA	0x785880  	MOV.B	W0, [W1++]
0x96DC	0xB3C410  	MOV.B	#65, W0
0x96DE	0x785880  	MOV.B	W0, [W1++]
0x96E0	0xB3C500  	MOV.B	#80, W0
0x96E2	0x785880  	MOV.B	W0, [W1++]
0x96E4	0xB3C410  	MOV.B	#65, W0
0x96E6	0x785880  	MOV.B	W0, [W1++]
0x96E8	0xB3C430  	MOV.B	#67, W0
0x96EA	0x785880  	MOV.B	W0, [W1++]
0x96EC	0xB3C490  	MOV.B	#73, W0
0x96EE	0x785880  	MOV.B	W0, [W1++]
0x96F0	0xB3C540  	MOV.B	#84, W0
0x96F2	0x785880  	MOV.B	W0, [W1++]
0x96F4	0xB3C590  	MOV.B	#89, W0
0x96F6	0x785880  	MOV.B	W0, [W1++]
0x96F8	0xB3C200  	MOV.B	#32, W0
0x96FA	0x785880  	MOV.B	W0, [W1++]
0x96FC	0xB3C690  	MOV.B	#105, W0
0x96FE	0x785880  	MOV.B	W0, [W1++]
0x9700	0xB3C730  	MOV.B	#115, W0
0x9702	0x785880  	MOV.B	W0, [W1++]
0x9704	0xB3C200  	MOV.B	#32, W0
0x9706	0x785880  	MOV.B	W0, [W1++]
0x9708	0xB3C570  	MOV.B	#87, W0
0x970A	0x785880  	MOV.B	W0, [W1++]
0x970C	0xB3C450  	MOV.B	#69, W0
0x970E	0x785880  	MOV.B	W0, [W1++]
0x9710	0xB3C4C0  	MOV.B	#76, W0
0x9712	0x785880  	MOV.B	W0, [W1++]
0x9714	0xB3C4C0  	MOV.B	#76, W0
0x9716	0x785880  	MOV.B	W0, [W1++]
0x9718	0xEF2000  	CLR	W0
0x971A	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,255 :: 		Title_Bat_EgriBadTxt    := 'BATT. CAPACITY is LOW';
0x971C	0x20CF21  	MOV	#lo_addr(_Title_Bat_EgriBadTxt), W1
0x971E	0xB3C420  	MOV.B	#66, W0
0x9720	0x785880  	MOV.B	W0, [W1++]
0x9722	0xB3C410  	MOV.B	#65, W0
0x9724	0x785880  	MOV.B	W0, [W1++]
0x9726	0xB3C540  	MOV.B	#84, W0
0x9728	0x785880  	MOV.B	W0, [W1++]
0x972A	0xB3C540  	MOV.B	#84, W0
0x972C	0x785880  	MOV.B	W0, [W1++]
0x972E	0xB3C2E0  	MOV.B	#46, W0
0x9730	0x785880  	MOV.B	W0, [W1++]
0x9732	0xB3C200  	MOV.B	#32, W0
0x9734	0x785880  	MOV.B	W0, [W1++]
0x9736	0xB3C430  	MOV.B	#67, W0
0x9738	0x785880  	MOV.B	W0, [W1++]
0x973A	0xB3C410  	MOV.B	#65, W0
0x973C	0x785880  	MOV.B	W0, [W1++]
0x973E	0xB3C500  	MOV.B	#80, W0
0x9740	0x785880  	MOV.B	W0, [W1++]
0x9742	0xB3C410  	MOV.B	#65, W0
0x9744	0x785880  	MOV.B	W0, [W1++]
0x9746	0xB3C430  	MOV.B	#67, W0
0x9748	0x785880  	MOV.B	W0, [W1++]
0x974A	0xB3C490  	MOV.B	#73, W0
0x974C	0x785880  	MOV.B	W0, [W1++]
0x974E	0xB3C540  	MOV.B	#84, W0
0x9750	0x785880  	MOV.B	W0, [W1++]
0x9752	0xB3C590  	MOV.B	#89, W0
0x9754	0x785880  	MOV.B	W0, [W1++]
0x9756	0xB3C200  	MOV.B	#32, W0
0x9758	0x785880  	MOV.B	W0, [W1++]
0x975A	0xB3C690  	MOV.B	#105, W0
0x975C	0x785880  	MOV.B	W0, [W1++]
0x975E	0xB3C730  	MOV.B	#115, W0
0x9760	0x785880  	MOV.B	W0, [W1++]
0x9762	0xB3C200  	MOV.B	#32, W0
0x9764	0x785880  	MOV.B	W0, [W1++]
0x9766	0xB3C4C0  	MOV.B	#76, W0
0x9768	0x785880  	MOV.B	W0, [W1++]
0x976A	0xB3C4F0  	MOV.B	#79, W0
0x976C	0x785880  	MOV.B	W0, [W1++]
0x976E	0xB3C570  	MOV.B	#87, W0
0x9770	0x785880  	MOV.B	W0, [W1++]
0x9772	0xEF2000  	CLR	W0
0x9774	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,256 :: 		Title_BatCurveFailTxt   := '  CURVE SCAN FAILED  ';
0x9776	0x20A981  	MOV	#lo_addr(_Title_BatCurveFailTxt), W1
0x9778	0xB3C200  	MOV.B	#32, W0
0x977A	0x785880  	MOV.B	W0, [W1++]
0x977C	0xB3C200  	MOV.B	#32, W0
0x977E	0x785880  	MOV.B	W0, [W1++]
0x9780	0xB3C430  	MOV.B	#67, W0
0x9782	0x785880  	MOV.B	W0, [W1++]
0x9784	0xB3C550  	MOV.B	#85, W0
0x9786	0x785880  	MOV.B	W0, [W1++]
0x9788	0xB3C520  	MOV.B	#82, W0
0x978A	0x785880  	MOV.B	W0, [W1++]
0x978C	0xB3C560  	MOV.B	#86, W0
0x978E	0x785880  	MOV.B	W0, [W1++]
0x9790	0xB3C450  	MOV.B	#69, W0
0x9792	0x785880  	MOV.B	W0, [W1++]
0x9794	0xB3C200  	MOV.B	#32, W0
0x9796	0x785880  	MOV.B	W0, [W1++]
0x9798	0xB3C530  	MOV.B	#83, W0
0x979A	0x785880  	MOV.B	W0, [W1++]
0x979C	0xB3C430  	MOV.B	#67, W0
0x979E	0x785880  	MOV.B	W0, [W1++]
0x97A0	0xB3C410  	MOV.B	#65, W0
0x97A2	0x785880  	MOV.B	W0, [W1++]
0x97A4	0xB3C4E0  	MOV.B	#78, W0
0x97A6	0x785880  	MOV.B	W0, [W1++]
0x97A8	0xB3C200  	MOV.B	#32, W0
0x97AA	0x785880  	MOV.B	W0, [W1++]
0x97AC	0xB3C460  	MOV.B	#70, W0
0x97AE	0x785880  	MOV.B	W0, [W1++]
0x97B0	0xB3C410  	MOV.B	#65, W0
0x97B2	0x785880  	MOV.B	W0, [W1++]
0x97B4	0xB3C490  	MOV.B	#73, W0
0x97B6	0x785880  	MOV.B	W0, [W1++]
0x97B8	0xB3C4C0  	MOV.B	#76, W0
0x97BA	0x785880  	MOV.B	W0, [W1++]
0x97BC	0xB3C450  	MOV.B	#69, W0
0x97BE	0x785880  	MOV.B	W0, [W1++]
0x97C0	0xB3C440  	MOV.B	#68, W0
0x97C2	0x785880  	MOV.B	W0, [W1++]
0x97C4	0xB3C200  	MOV.B	#32, W0
0x97C6	0x785880  	MOV.B	W0, [W1++]
0x97C8	0xB3C200  	MOV.B	#32, W0
0x97CA	0x785880  	MOV.B	W0, [W1++]
0x97CC	0xEF2000  	CLR	W0
0x97CE	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,258 :: 		HeaterActiveText        := '  CASE HEATER ACTIVE ';
0x97D0	0x20A821  	MOV	#lo_addr(_HeaterActiveText), W1
0x97D2	0xB3C200  	MOV.B	#32, W0
0x97D4	0x785880  	MOV.B	W0, [W1++]
0x97D6	0xB3C200  	MOV.B	#32, W0
0x97D8	0x785880  	MOV.B	W0, [W1++]
0x97DA	0xB3C430  	MOV.B	#67, W0
0x97DC	0x785880  	MOV.B	W0, [W1++]
0x97DE	0xB3C410  	MOV.B	#65, W0
0x97E0	0x785880  	MOV.B	W0, [W1++]
0x97E2	0xB3C530  	MOV.B	#83, W0
0x97E4	0x785880  	MOV.B	W0, [W1++]
0x97E6	0xB3C450  	MOV.B	#69, W0
0x97E8	0x785880  	MOV.B	W0, [W1++]
0x97EA	0xB3C200  	MOV.B	#32, W0
0x97EC	0x785880  	MOV.B	W0, [W1++]
0x97EE	0xB3C480  	MOV.B	#72, W0
0x97F0	0x785880  	MOV.B	W0, [W1++]
0x97F2	0xB3C450  	MOV.B	#69, W0
0x97F4	0x785880  	MOV.B	W0, [W1++]
0x97F6	0xB3C410  	MOV.B	#65, W0
0x97F8	0x785880  	MOV.B	W0, [W1++]
0x97FA	0xB3C540  	MOV.B	#84, W0
0x97FC	0x785880  	MOV.B	W0, [W1++]
0x97FE	0xB3C450  	MOV.B	#69, W0
0x9800	0x785880  	MOV.B	W0, [W1++]
0x9802	0xB3C520  	MOV.B	#82, W0
0x9804	0x785880  	MOV.B	W0, [W1++]
0x9806	0xB3C200  	MOV.B	#32, W0
0x9808	0x785880  	MOV.B	W0, [W1++]
0x980A	0xB3C410  	MOV.B	#65, W0
0x980C	0x785880  	MOV.B	W0, [W1++]
0x980E	0xB3C430  	MOV.B	#67, W0
0x9810	0x785880  	MOV.B	W0, [W1++]
0x9812	0xB3C540  	MOV.B	#84, W0
0x9814	0x785880  	MOV.B	W0, [W1++]
0x9816	0xB3C490  	MOV.B	#73, W0
0x9818	0x785880  	MOV.B	W0, [W1++]
0x981A	0xB3C560  	MOV.B	#86, W0
0x981C	0x785880  	MOV.B	W0, [W1++]
0x981E	0xB3C450  	MOV.B	#69, W0
0x9820	0x785880  	MOV.B	W0, [W1++]
0x9822	0xB3C200  	MOV.B	#32, W0
0x9824	0x785880  	MOV.B	W0, [W1++]
0x9826	0xEF2000  	CLR	W0
0x9828	0x785880  	MOV.B	W0, [W1++]
;Language.mpas,262 :: 		end;
L_end_English_Lang:
0x982A	0x060000  	RETURN
; end of _English_Lang
_Uart_Procedures:
;GRR3000LManagementPanel.mpas,5580 :: 		begin
;GRR3000LManagementPanel.mpas,5582 :: 		asm ClrWDT; end;
0xE8D0	0x781F8A  	PUSH	W10
0xE8D2	0x781F8B  	PUSH	W11
0xE8D4	0x781F8C  	PUSH	W12
0xE8D6	0x781F8D  	PUSH	W13
0xE8D8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5584 :: 		if (ModbusBaudRate = 1) then ModBus_Baud := 0 else
0xE8DA	0x2158E0  	MOV	#lo_addr(_ModbusBaudRate), W0
0xE8DC	0x784010  	MOV.B	[W0], W0
0xE8DE	0xE10461  	CP.B	W0, #1
0xE8E0	0x3A0003  	BRA NZ	L__Uart_Procedures2134
L__Uart_Procedures5359:
0xE8E2	0xEF2000  	CLR	W0
0xE8E4	0x88A9D0  	MOV	W0, _ModBus_Baud
0xE8E6	0x37001B  	BRA	L__Uart_Procedures2135
L__Uart_Procedures2134:
;GRR3000LManagementPanel.mpas,5585 :: 		if (ModbusBaudRate = 2) then ModBus_Baud := 9600 else
0xE8E8	0x2158E0  	MOV	#lo_addr(_ModbusBaudRate), W0
0xE8EA	0x784010  	MOV.B	[W0], W0
0xE8EC	0xE10462  	CP.B	W0, #2
0xE8EE	0x3A0003  	BRA NZ	L__Uart_Procedures2137
L__Uart_Procedures5360:
0xE8F0	0x225800  	MOV	#9600, W0
0xE8F2	0x88A9D0  	MOV	W0, _ModBus_Baud
0xE8F4	0x370014  	BRA	L__Uart_Procedures2138
L__Uart_Procedures2137:
;GRR3000LManagementPanel.mpas,5586 :: 		if (ModbusBaudRate = 3) then ModBus_Baud := 19200 else
0xE8F6	0x2158E0  	MOV	#lo_addr(_ModbusBaudRate), W0
0xE8F8	0x784010  	MOV.B	[W0], W0
0xE8FA	0xE10463  	CP.B	W0, #3
0xE8FC	0x3A0003  	BRA NZ	L__Uart_Procedures2140
L__Uart_Procedures5361:
0xE8FE	0x24B000  	MOV	#19200, W0
0xE900	0x88A9D0  	MOV	W0, _ModBus_Baud
0xE902	0x37000D  	BRA	L__Uart_Procedures2141
L__Uart_Procedures2140:
;GRR3000LManagementPanel.mpas,5587 :: 		if (ModbusBaudRate = 4) then ModBus_Baud := 38400 else
0xE904	0x2158E0  	MOV	#lo_addr(_ModbusBaudRate), W0
0xE906	0x784010  	MOV.B	[W0], W0
0xE908	0xE10464  	CP.B	W0, #4
0xE90A	0x3A0003  	BRA NZ	L__Uart_Procedures2143
L__Uart_Procedures5362:
0xE90C	0x296000  	MOV	#38400, W0
0xE90E	0x88A9D0  	MOV	W0, _ModBus_Baud
0xE910	0x370006  	BRA	L__Uart_Procedures2144
L__Uart_Procedures2143:
;GRR3000LManagementPanel.mpas,5588 :: 		if (ModbusBaudRate = 5) then ModBus_Baud := 57600;
0xE912	0x2158E0  	MOV	#lo_addr(_ModbusBaudRate), W0
0xE914	0x784010  	MOV.B	[W0], W0
0xE916	0xE10465  	CP.B	W0, #5
0xE918	0x3A0002  	BRA NZ	L__Uart_Procedures2146
L__Uart_Procedures5363:
0xE91A	0x2E1000  	MOV	#57600, W0
0xE91C	0x88A9D0  	MOV	W0, _ModBus_Baud
L__Uart_Procedures2146:
L__Uart_Procedures2144:
L__Uart_Procedures2141:
L__Uart_Procedures2138:
L__Uart_Procedures2135:
;GRR3000LManagementPanel.mpas,5592 :: 		if (ModBus_Baud = 0) then
0xE91E	0x80A9D0  	MOV	_ModBus_Baud, W0
0xE920	0xE10060  	CP	W0, #0
0xE922	0x3A0003  	BRA NZ	L__Uart_Procedures2149
L__Uart_Procedures5364:
;GRR3000LManagementPanel.mpas,5593 :: 		ModBus_TimeOut_Timer3_PR3 := const_ModBus_TimeOut_Timer3_PR3_9600*0 else
0xE924	0xEF2000  	CLR	W0
0xE926	0x88A9E0  	MOV	W0, _ModBus_TimeOut_Timer3_PR3
0xE928	0x37001B  	BRA	L__Uart_Procedures2150
L__Uart_Procedures2149:
;GRR3000LManagementPanel.mpas,5594 :: 		if (ModBus_Baud = 9600) then
0xE92A	0x80A9D1  	MOV	_ModBus_Baud, W1
0xE92C	0x225800  	MOV	#9600, W0
0xE92E	0xE10800  	CP	W1, W0
0xE930	0x3A0003  	BRA NZ	L__Uart_Procedures2152
L__Uart_Procedures5365:
;GRR3000LManagementPanel.mpas,5595 :: 		ModBus_TimeOut_Timer3_PR3 := const_ModBus_TimeOut_Timer3_PR3_9600*5 else
0xE932	0x23E350  	MOV	#15925, W0
0xE934	0x88A9E0  	MOV	W0, _ModBus_TimeOut_Timer3_PR3
0xE936	0x370014  	BRA	L__Uart_Procedures2153
L__Uart_Procedures2152:
;GRR3000LManagementPanel.mpas,5596 :: 		if (ModBus_Baud = 19200) then
0xE938	0x80A9D1  	MOV	_ModBus_Baud, W1
0xE93A	0x24B000  	MOV	#19200, W0
0xE93C	0xE10800  	CP	W1, W0
0xE93E	0x3A0003  	BRA NZ	L__Uart_Procedures2155
L__Uart_Procedures5366:
;GRR3000LManagementPanel.mpas,5597 :: 		ModBus_TimeOut_Timer3_PR3 := Const_ModBus_TimeOut_Timer3_PR3_19200*5 else
0xE940	0x21F720  	MOV	#8050, W0
0xE942	0x88A9E0  	MOV	W0, _ModBus_TimeOut_Timer3_PR3
0xE944	0x37000D  	BRA	L__Uart_Procedures2156
L__Uart_Procedures2155:
;GRR3000LManagementPanel.mpas,5598 :: 		if (ModBus_Baud = 38400) then
0xE946	0x80A9D1  	MOV	_ModBus_Baud, W1
0xE948	0x296000  	MOV	#38400, W0
0xE94A	0xE10800  	CP	W1, W0
0xE94C	0x3A0003  	BRA NZ	L__Uart_Procedures2158
L__Uart_Procedures5367:
;GRR3000LManagementPanel.mpas,5599 :: 		ModBus_TimeOut_Timer3_PR3 := Const_ModBus_TimeOut_Timer3_PR3_38400*5 else
0xE94E	0x20F6E0  	MOV	#3950, W0
0xE950	0x88A9E0  	MOV	W0, _ModBus_TimeOut_Timer3_PR3
0xE952	0x370006  	BRA	L__Uart_Procedures2159
L__Uart_Procedures2158:
;GRR3000LManagementPanel.mpas,5600 :: 		if (ModBus_Baud = 57600) then
0xE954	0x80A9D1  	MOV	_ModBus_Baud, W1
0xE956	0x2E1000  	MOV	#57600, W0
0xE958	0xE10800  	CP	W1, W0
0xE95A	0x3A0002  	BRA NZ	L__Uart_Procedures2161
L__Uart_Procedures5368:
;GRR3000LManagementPanel.mpas,5601 :: 		ModBus_TimeOut_Timer3_PR3 := Const_ModBus_TimeOut_Timer3_PR3_57600*5;
0xE95C	0x20ABE0  	MOV	#2750, W0
0xE95E	0x88A9E0  	MOV	W0, _ModBus_TimeOut_Timer3_PR3
L__Uart_Procedures2161:
L__Uart_Procedures2159:
L__Uart_Procedures2156:
L__Uart_Procedures2153:
L__Uart_Procedures2150:
;GRR3000LManagementPanel.mpas,5603 :: 		ModBus_TimeOut := 0;
0xE960	0x2153E1  	MOV	#lo_addr(_ModBus_TimeOut), W1
0xE962	0xEF2000  	CLR	W0
0xE964	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5605 :: 		UART1_Init(ModBus_Baud);
0xE966	0x80A9DA  	MOV	_ModBus_Baud, W10
0xE968	0xEB0580  	CLR	W11
0xE96A	0x07B8B4  	RCALL	_UART1_Init
;GRR3000LManagementPanel.mpas,5606 :: 		Pause_ms(10);
0xE96C	0x2000AA  	MOV	#10, W10
0xE96E	0x07FA93  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,5608 :: 		asm ClrWDT; end;
0xE970	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5610 :: 		UART2_Init(19200); // kartlar arasý haberleþme hýzý
0xE972	0x24B00A  	MOV	#19200, W10
0xE974	0x20000B  	MOV	#0, W11
0xE976	0x07B8EE  	RCALL	_UART2_Init
;GRR3000LManagementPanel.mpas,5611 :: 		Pause_ms(100);
0xE978	0x20064A  	MOV	#100, W10
0xE97A	0x07FA8D  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,5613 :: 		asm ClrWDT; end;
0xE97C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5615 :: 		Rs485master_Init;
0xE97E	0x07D84E  	RCALL	_Rs485master_Init
;GRR3000LManagementPanel.mpas,5616 :: 		Pause_ms(100);
0xE980	0x20064A  	MOV	#100, W10
0xE982	0x07FA89  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,5618 :: 		asm ClrWDT; end;
0xE984	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5620 :: 		U2BRG := U2BRG_Value;
0xE986	0x200600  	MOV	#96, W0
0xE988	0xB7A21E  	MOV	WREG, U2BRG
;GRR3000LManagementPanel.mpas,5623 :: 		UART_Set_Active(@UART1_Read, @UART1_Write, @UART1_Data_Ready, @UART1_Tx_Idle);
0xE98A	0x2072AD  	MOV	#lo_addr(_UART1_TX_Idle), W13
0xE98C	0x2577CC  	MOV	#lo_addr(_UART1_Data_Ready), W12
0xE98E	0x20564B  	MOV	#lo_addr(_UART1_Write), W11
0xE990	0x244BAA  	MOV	#lo_addr(_UART1_Read), W10
0xE992	0x07EF52  	RCALL	_UART_Set_Active
;GRR3000LManagementPanel.mpas,5625 :: 		asm ClrWDT; end;
0xE994	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5627 :: 		UART_Set_Active(@UART2_Read, @UART2_Write, @UART2_Data_Ready, @UART2_Tx_Idle);
0xE996	0x20644D  	MOV	#lo_addr(_UART2_TX_Idle), W13
0xE998	0x20620C  	MOV	#lo_addr(_UART2_Data_Ready), W12
0xE99A	0x2062EB  	MOV	#lo_addr(_UART2_Write), W11
0xE99C	0x206A8A  	MOV	#lo_addr(_UART2_Read), W10
0xE99E	0x07EF4C  	RCALL	_UART_Set_Active
;GRR3000LManagementPanel.mpas,5629 :: 		asm ClrWDT; end;
0xE9A0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5631 :: 		Start_Modbus_Init;
0xE9A2	0x07EF44  	RCALL	_Start_Modbus_Init
;GRR3000LManagementPanel.mpas,5633 :: 		asm ClrWDT; end;
0xE9A4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5635 :: 		end;
L_end_Uart_Procedures:
0xE9A6	0x7806CF  	POP	W13
0xE9A8	0x78064F  	POP	W12
0xE9AA	0x7805CF  	POP	W11
0xE9AC	0x78054F  	POP	W10
0xE9AE	0x060000  	RETURN
; end of _Uart_Procedures
_UART1_Init:
0x5AD4	0xFA0008  	LNK	#8
;__Lib_UART_12_p30.mpas,104 :: 		
;__Lib_UART_12_p30.mpas,107 :: 		
0x5AD6	0x205640  	MOV	#lo_addr(_UART1_Write), W0
0x5AD8	0x8853B0  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p30.mpas,108 :: 		
0x5ADA	0x244BA0  	MOV	#lo_addr(_UART1_Read), W0
0x5ADC	0x8853A0  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p30.mpas,109 :: 		
0x5ADE	0x2577C0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x5AE0	0x885390  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p30.mpas,110 :: 		
0x5AE2	0x2072A0  	MOV	#lo_addr(_UART1_TX_Idle), W0
0x5AE4	0x885380  	MOV	W0, _UART_TX_Idle_Ptr
;__Lib_UART_12_p30.mpas,112 :: 		
0x5AE6	0xEF220C  	CLR	U1MODE
;__Lib_UART_12_p30.mpas,113 :: 		
0x5AE8	0x284000  	MOV	#33792, W0
0x5AEA	0xB7A20E  	MOV	WREG, U1STA
;__Lib_UART_12_p30.mpas,115 :: 		
0x5AEC	0x07DC64  	RCALL	_Get_Fosc_kHz
;__Lib_UART_12_p30.mpas,117 :: 		
0x5AEE	0x203E82  	MOV	#1000, W2
0x5AF0	0x200003  	MOV	#0, W3
0x5AF2	0x07E052  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x5AF4	0xBE0300  	MOV.D	W0, W6
;__Lib_UART_12_p30.mpas,120 :: 		
0x5AF6	0x07E4B1  	RCALL	_Get_Fosc_Per_Cyc
0x5AF8	0xEB0080  	CLR	W1
0x5AFA	0xD10081  	LSR	W1, W1
0x5AFC	0xD38000  	RRC	W0, W0
0x5AFE	0x400264  	ADD	W0, #4, W4
0x5B00	0x4882E0  	ADDC	W1, #0, W5
0x5B02	0xBE010A  	MOV.D	W10, W2
L__UART1_Init133:
0x5B04	0xE90204  	DEC	W4, W4
0x5B06	0x350003  	BRA LT	L__UART1_Init134
0x5B08	0xD00102  	SL	W2, W2
0x5B0A	0xD28183  	RLC	W3, W3
0x5B0C	0x37FFFB  	BRA	L__UART1_Init133
L__UART1_Init134:
0x5B0E	0x980702  	MOV	W2, [W14+0]
0x5B10	0x980713  	MOV	W3, [W14+2]
;__Lib_UART_12_p30.mpas,122 :: 		
0x5B12	0xBE9F86  	PUSH.D	W6
0x5B14	0xBE0006  	MOV.D	W6, W0
0x5B16	0xEB8200  	SETM	W4
0x5B18	0x07D70B  	RCALL	__Modulus_32x32
0x5B1A	0xBE034F  	POP.D	W6
0x5B1C	0x980720  	MOV	W0, [W14+4]
0x5B1E	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p30.mpas,123 :: 		
0x5B20	0xBE0006  	MOV.D	W6, W0
0x5B22	0x90010E  	MOV	[W14+0], W2
0x5B24	0x90019E  	MOV	[W14+2], W3
0x5B26	0xEB8200  	SETM	W4
0x5B28	0x07DFEB  	RCALL	__Divide_32x32
; tmp end address is: 12 (W6)
; tmp start address is: 6 (W3)
0x5B2A	0x780180  	MOV	W0, W3
0x5B2C	0x780201  	MOV	W1, W4
;__Lib_UART_12_p30.mpas,125 :: 		
0x5B2E	0x470060  	ADD	W14, #0, W0
0x5B30	0xD18150  	ASR	[++W0], W2
0x5B32	0xD380C0  	RRC	[--W0], W1
0x5B34	0x470064  	ADD	W14, #4, W0
0x5B36	0xE10830  	CP	W1, [W0++]
0x5B38	0xE19020  	CPB	W2, [W0--]
0x5B3A	0x3D0003  	BRA GE	L__UART1_Init126
L__UART1_Init135:
;__Lib_UART_12_p30.mpas,126 :: 		
; tmp start address is: 2 (W1)
0x5B3C	0x4180E1  	ADD	W3, #1, W1
0x5B3E	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x5B40	0x370002  	BRA	L__UART1_Init2
L__UART1_Init126:
;__Lib_UART_12_p30.mpas,125 :: 		
0x5B42	0x780083  	MOV	W3, W1
0x5B44	0x780104  	MOV	W4, W2
;__Lib_UART_12_p30.mpas,126 :: 		
L__UART1_Init2:
;__Lib_UART_12_p30.mpas,129 :: 		
; tmp start address is: 2 (W1)
0x5B46	0x202140  	MOV	#lo_addr(U1BRG), W0
0x5B48	0x508861  	SUB	W1, #1, [W0]
; tmp end address is: 2 (W1)
;__Lib_UART_12_p30.mpas,131 :: 		
0x5B4A	0xA8E20D  	BSET	U1MODE, #15
;__Lib_UART_12_p30.mpas,132 :: 		
0x5B4C	0xA8420F  	BSET	U1STA, #10
;__Lib_UART_12_p30.mpas,134 :: 		
0x5B4E	0x07D6E8  	RCALL	_Delay_10ms
;__Lib_UART_12_p30.mpas,135 :: 		
L_end_UART1_Init:
0x5B50	0xFA8000  	ULNK
0x5B52	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_Per_Cyc:
;__Lib_Delays.mpas,90 :: 		begin
;__Lib_Delays.mpas,91 :: 		Result := __FOSC_PER_CYC;
; Result start address is: 2 (W1)
0x245A	0x200041  	MOV	#4, W1
;__Lib_Delays.mpas,92 :: 		end;
0x245C	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Get_Fosc_Per_Cyc:
0x245E	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_10ms:
;__Lib_Delays.mpas,669 :: 		begin
;__Lib_Delays.mpas,670 :: 		Delay_ms(10);
0x0920	0x200028  	MOV	#2, W8
0x0922	0x2869F7  	MOV	#34463, W7
L__Delay_10ms51:
0x0924	0xED200E  	DEC	W7
0x0926	0x3AFFFE  	BRA NZ	L__Delay_10ms51
0x0928	0xED2010  	DEC	W8
0x092A	0x3AFFFC  	BRA NZ	L__Delay_10ms51
0x092C	0x000000  	NOP
;__Lib_Delays.mpas,671 :: 		end;
L_end_Delay_10ms:
0x092E	0x060000  	RETURN
; end of _Delay_10ms
__Modulus_32x32:
0x0930	0xFA0000  	LNK	#0
;__Lib_Math.mpas,165 :: 		
;__Lib_Math.mpas,167 :: 		
0x0932	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.mpas,168 :: 		
0x0934	0x000000040984  	GOTO	the_end_Modulus_32x32
;__Lib_Math.mpas,170 :: 		
Modulus_32x32___testsus:
;__Lib_Math.mpas,171 :: 		
0x0938	0xE20008  	CP0	W4
;__Lib_Math.mpas,172 :: 		
0x093A	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.mpas,174 :: 		
0x093C	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.mpas,175 :: 		
0x093E	0x060000  	RETURN
;__Lib_Math.mpas,177 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.mpas,178 :: 		
0x0940	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.mpas,179 :: 		
0x0942	0xE20002  	CP0	W1
;__Lib_Math.mpas,180 :: 		
0x0944	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.mpas,181 :: 		
0x0946	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,182 :: 		
0x0948	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,183 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.mpas,184 :: 		
0x094A	0xE20006  	CP0	W3
;__Lib_Math.mpas,185 :: 		
0x094C	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.mpas,186 :: 		
0x094E	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.mpas,187 :: 		
0x0950	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.mpas,188 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.mpas,189 :: 		
0x0952	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.mpas,190 :: 		
0x0954	0xE0004F  	CP0	[--W15]
;__Lib_Math.mpas,191 :: 		
0x0956	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.mpas,192 :: 		
0x0958	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.mpas,193 :: 		
0x095A	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.mpas,194 :: 		
Modulus_32x32_exitr:
;__Lib_Math.mpas,195 :: 		
0x095C	0x060000  	RETURN
;__Lib_Math.mpas,196 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.mpas,197 :: 		
0x095E	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.mpas,198 :: 		
0x0960	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.mpas,199 :: 		
0x0962	0x060000  	RETURN
;__Lib_Math.mpas,200 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.mpas,201 :: 		
0x0964	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.mpas,202 :: 		
0x0966	0x200206  	MOV	#32, W6
;__Lib_Math.mpas,203 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.mpas,204 :: 		
0x0968	0xD00000  	SL	W0, W0
;__Lib_Math.mpas,205 :: 		
0x096A	0xD28081  	RLC	W1, W1
;__Lib_Math.mpas,206 :: 		
0x096C	0xD28204  	RLC	W4, W4
;__Lib_Math.mpas,207 :: 		
0x096E	0xD28285  	RLC	W5, W5
;__Lib_Math.mpas,208 :: 		
0x0970	0xA80000  	BSET	W0, #0
;__Lib_Math.mpas,209 :: 		
0x0972	0x520202  	SUB	W4, W2, W4
;__Lib_Math.mpas,210 :: 		
0x0974	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.mpas,211 :: 		
0x0976	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.mpas,212 :: 		
0x0978	0x420202  	ADD	W4, W2, W4
;__Lib_Math.mpas,213 :: 		
0x097A	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.mpas,214 :: 		
0x097C	0xA10000  	BCLR	W0, #0
;__Lib_Math.mpas,215 :: 		
Modulus_32x32_iterate:
;__Lib_Math.mpas,216 :: 		
0x097E	0xE90306  	DEC	W6, W6
;__Lib_Math.mpas,217 :: 		
0x0980	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.mpas,218 :: 		
0x0982	0x060000  	RETURN
;__Lib_Math.mpas,220 :: 		
the_end_Modulus_32x32:
;__Lib_Math.mpas,223 :: 		
L_end__Modulus_32x32:
0x0984	0xFA8000  	ULNK
0x0986	0x060000  	RETURN
; end of __Modulus_32x32
_UART2_Init:
0x5B54	0xFA0008  	LNK	#8
;__Lib_UART_12_p30.mpas,258 :: 		
;__Lib_UART_12_p30.mpas,261 :: 		
0x5B56	0x2062E0  	MOV	#lo_addr(_UART2_Write), W0
0x5B58	0x8853B0  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_12_p30.mpas,262 :: 		
0x5B5A	0x206A80  	MOV	#lo_addr(_UART2_Read), W0
0x5B5C	0x8853A0  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_12_p30.mpas,263 :: 		
0x5B5E	0x206200  	MOV	#lo_addr(_UART2_Data_Ready), W0
0x5B60	0x885390  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_12_p30.mpas,264 :: 		
0x5B62	0x206440  	MOV	#lo_addr(_UART2_TX_Idle), W0
0x5B64	0x885380  	MOV	W0, _UART_TX_Idle_Ptr
;__Lib_UART_12_p30.mpas,266 :: 		
0x5B66	0xEF2216  	CLR	U2MODE
;__Lib_UART_12_p30.mpas,267 :: 		
0x5B68	0x284000  	MOV	#33792, W0
0x5B6A	0xB7A218  	MOV	WREG, U2STA
;__Lib_UART_12_p30.mpas,269 :: 		
0x5B6C	0x07DC24  	RCALL	_Get_Fosc_kHz
;__Lib_UART_12_p30.mpas,271 :: 		
0x5B6E	0x203E82  	MOV	#1000, W2
0x5B70	0x200003  	MOV	#0, W3
0x5B72	0x07E012  	RCALL	__Multiply_32x32
; tmp start address is: 12 (W6)
0x5B74	0xBE0300  	MOV.D	W0, W6
;__Lib_UART_12_p30.mpas,274 :: 		
0x5B76	0x07E471  	RCALL	_Get_Fosc_Per_Cyc
0x5B78	0xEB0080  	CLR	W1
0x5B7A	0xD10081  	LSR	W1, W1
0x5B7C	0xD38000  	RRC	W0, W0
0x5B7E	0x400264  	ADD	W0, #4, W4
0x5B80	0x4882E0  	ADDC	W1, #0, W5
0x5B82	0xBE010A  	MOV.D	W10, W2
L__UART2_Init155:
0x5B84	0xE90204  	DEC	W4, W4
0x5B86	0x350003  	BRA LT	L__UART2_Init156
0x5B88	0xD00102  	SL	W2, W2
0x5B8A	0xD28183  	RLC	W3, W3
0x5B8C	0x37FFFB  	BRA	L__UART2_Init155
L__UART2_Init156:
0x5B8E	0x980702  	MOV	W2, [W14+0]
0x5B90	0x980713  	MOV	W3, [W14+2]
;__Lib_UART_12_p30.mpas,276 :: 		
0x5B92	0xBE9F86  	PUSH.D	W6
0x5B94	0xBE0006  	MOV.D	W6, W0
0x5B96	0xEB8200  	SETM	W4
0x5B98	0x07D6CB  	RCALL	__Modulus_32x32
0x5B9A	0xBE034F  	POP.D	W6
0x5B9C	0x980720  	MOV	W0, [W14+4]
0x5B9E	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_12_p30.mpas,277 :: 		
0x5BA0	0xBE0006  	MOV.D	W6, W0
0x5BA2	0x90010E  	MOV	[W14+0], W2
0x5BA4	0x90019E  	MOV	[W14+2], W3
0x5BA6	0xEB8200  	SETM	W4
0x5BA8	0x07DFAB  	RCALL	__Divide_32x32
; tmp end address is: 12 (W6)
; tmp start address is: 6 (W3)
0x5BAA	0x780180  	MOV	W0, W3
0x5BAC	0x780201  	MOV	W1, W4
;__Lib_UART_12_p30.mpas,279 :: 		
0x5BAE	0x470060  	ADD	W14, #0, W0
0x5BB0	0xD18150  	ASR	[++W0], W2
0x5BB2	0xD380C0  	RRC	[--W0], W1
0x5BB4	0x470064  	ADD	W14, #4, W0
0x5BB6	0xE10830  	CP	W1, [W0++]
0x5BB8	0xE19020  	CPB	W2, [W0--]
0x5BBA	0x3D0003  	BRA GE	L__UART2_Init129
L__UART2_Init157:
;__Lib_UART_12_p30.mpas,280 :: 		
; tmp start address is: 2 (W1)
0x5BBC	0x4180E1  	ADD	W3, #1, W1
0x5BBE	0x4A0160  	ADDC	W4, #0, W2
; tmp end address is: 6 (W3)
; tmp end address is: 2 (W1)
0x5BC0	0x370002  	BRA	L__UART2_Init48
L__UART2_Init129:
;__Lib_UART_12_p30.mpas,279 :: 		
0x5BC2	0x780083  	MOV	W3, W1
0x5BC4	0x780104  	MOV	W4, W2
;__Lib_UART_12_p30.mpas,280 :: 		
L__UART2_Init48:
;__Lib_UART_12_p30.mpas,283 :: 		
; tmp start address is: 2 (W1)
0x5BC6	0x2021E0  	MOV	#lo_addr(U2BRG), W0
0x5BC8	0x508861  	SUB	W1, #1, [W0]
; tmp end address is: 2 (W1)
;__Lib_UART_12_p30.mpas,285 :: 		
0x5BCA	0xA8E217  	BSET	U2MODE, #15
;__Lib_UART_12_p30.mpas,286 :: 		
0x5BCC	0xA84219  	BSET	U2STA, #10
;__Lib_UART_12_p30.mpas,288 :: 		
0x5BCE	0x07D6A8  	RCALL	_Delay_10ms
;__Lib_UART_12_p30.mpas,289 :: 		
L_end_UART2_Init:
0x5BD0	0xFA8000  	ULNK
0x5BD2	0x060000  	RETURN
; end of _UART2_Init
_Rs485master_Init:
0x9A1C	0xFA0000  	LNK	#0
;__Lib_RS485.mpas,44 :: 		
;__Lib_RS485.mpas,45 :: 		
0x9A1E	0xA9E2D3  	BCLR	rs485_rxtx_pin_Direction, BitPos(rs485_rxtx_pin_Direction+0)
;__Lib_RS485.mpas,46 :: 		
0x9A20	0xA9E2D5  	BCLR	rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0)
;__Lib_RS485.mpas,48 :: 		
0x9A22	0x200010  	MOV	#1, W0
0x9A24	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,49 :: 		
L_end_Rs485master_Init:
0x9A26	0xFA8000  	ULNK
0x9A28	0x060000  	RETURN
; end of _Rs485master_Init
_UART_Set_Active:
0xC838	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,412 :: 		
;__Lib_UART_12_p30.mpas,413 :: 		
0xC83A	0x8853AA  	MOV	W10, _UART_Rd_Ptr
;__Lib_UART_12_p30.mpas,414 :: 		
0xC83C	0x8853BB  	MOV	W11, _UART_Wr_Ptr
;__Lib_UART_12_p30.mpas,415 :: 		
0xC83E	0x88539C  	MOV	W12, _UART_Rdy_Ptr
;__Lib_UART_12_p30.mpas,416 :: 		
0xC840	0x88538D  	MOV	W13, _UART_TX_Idle_Ptr
;__Lib_UART_12_p30.mpas,417 :: 		
L_end_UART_Set_Active:
0xC842	0xFA8000  	ULNK
0xC844	0x060000  	RETURN
; end of _UART_Set_Active
_Start_Modbus_Init:
;Modbus.mpas,256 :: 		begin
;Modbus.mpas,258 :: 		asm ClrWDT; end;
0xC82C	0xFE6000  	CLRWDT
;Modbus.mpas,260 :: 		Modbus_Reset_Rx_Data;
0xC82E	0x079FC6  	RCALL	_Modbus_Reset_Rx_Data
;Modbus.mpas,262 :: 		asm ClrWDT; end;
0xC830	0xFE6000  	CLRWDT
;Modbus.mpas,264 :: 		Modbus_Reset_Tx_Data;
0xC832	0x079FAF  	RCALL	_Modbus_Reset_Tx_Data
;Modbus.mpas,266 :: 		asm ClrWDT; end;
0xC834	0xFE6000  	CLRWDT
;Modbus.mpas,269 :: 		end;
L_end_Start_Modbus_Init:
0xC836	0x060000  	RETURN
; end of _Start_Modbus_Init
_Modbus_Reset_Rx_Data:
;Modbus.mpas,233 :: 		begin
;Modbus.mpas,235 :: 		asm ClrWDT; end;
0x07BC	0xFE6000  	CLRWDT
;Modbus.mpas,238 :: 		for Temp_Byte_1 := 1 to const_Modbus_RxBufSize do
0x07BE	0x2119E1  	MOV	#lo_addr(_temp_byte_1), W1
0x07C0	0xB3C010  	MOV.B	#1, W0
0x07C2	0x784880  	MOV.B	W0, [W1]
L__Modbus_Reset_Rx_Data2:
;Modbus.mpas,239 :: 		Modbus_Rx_Data[Temp_Byte_1] := 0;
0x07C4	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x07C6	0xFB8010  	ZE	[W0], W0
0x07C8	0x5000E1  	SUB	W0, #1, W1
0x07CA	0x211A00  	MOV	#lo_addr(_Modbus_Rx_data), W0
0x07CC	0x400081  	ADD	W0, W1, W1
0x07CE	0xEF2000  	CLR	W0
0x07D0	0x784880  	MOV.B	W0, [W1]
0x07D2	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x07D4	0x784010  	MOV.B	[W0], W0
0x07D6	0xE10470  	CP.B	W0, #16
0x07D8	0x320004  	BRA Z	L__Modbus_Reset_Rx_Data5
L__Modbus_Reset_Rx_Data84:
0x07DA	0xB3C011  	MOV.B	#1, W1
0x07DC	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x07DE	0x40C810  	ADD.B	W1, [W0], [W0]
0x07E0	0x37FFF1  	BRA	L__Modbus_Reset_Rx_Data2
L__Modbus_Reset_Rx_Data5:
;Modbus.mpas,241 :: 		Modbus_Rx_data_Index := 0; // init Modbus_Rx_data_index back to first position in array
0x07E2	0x2119F1  	MOV	#lo_addr(_Modbus_Rx_data_index), W1
0x07E4	0xEF2000  	CLR	W0
0x07E6	0x784880  	MOV.B	W0, [W1]
;Modbus.mpas,243 :: 		end;
L_end_Modbus_Reset_Rx_Data:
0x07E8	0x060000  	RETURN
; end of _Modbus_Reset_Rx_Data
_Modbus_Reset_Tx_Data:
;Modbus.mpas,246 :: 		begin
;Modbus.mpas,248 :: 		asm ClrWDT; end;
0x0792	0xFE6000  	CLRWDT
;Modbus.mpas,250 :: 		for Temp_Byte_1:= 1 to const_Modbus_TxBufSize do
0x0794	0x2119E1  	MOV	#lo_addr(_temp_byte_1), W1
0x0796	0xB3C010  	MOV.B	#1, W0
0x0798	0x784880  	MOV.B	W0, [W1]
L__Modbus_Reset_Tx_Data8:
;Modbus.mpas,251 :: 		Modbus_Tx_data[temp_byte_1] := 0;
0x079A	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x079C	0xFB8010  	ZE	[W0], W0
0x079E	0x5000E1  	SUB	W0, #1, W1
0x07A0	0x2111A0  	MOV	#lo_addr(_Modbus_Tx_data), W0
0x07A2	0x400081  	ADD	W0, W1, W1
0x07A4	0xEF2000  	CLR	W0
0x07A6	0x784880  	MOV.B	W0, [W1]
0x07A8	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x07AA	0x784090  	MOV.B	[W0], W1
0x07AC	0xB3C800  	MOV.B	#128, W0
0x07AE	0xE10C00  	CP.B	W1, W0
0x07B0	0x320004  	BRA Z	L__Modbus_Reset_Tx_Data11
L__Modbus_Reset_Tx_Data86:
0x07B2	0xB3C011  	MOV.B	#1, W1
0x07B4	0x2119E0  	MOV	#lo_addr(_temp_byte_1), W0
0x07B6	0x40C810  	ADD.B	W1, [W0], [W0]
0x07B8	0x37FFF0  	BRA	L__Modbus_Reset_Tx_Data8
L__Modbus_Reset_Tx_Data11:
;Modbus.mpas,253 :: 		end;
L_end_Modbus_Reset_Tx_Data:
0x07BA	0x060000  	RETURN
; end of _Modbus_Reset_Tx_Data
_Glcd_Image:
0xE840	0xFA0006  	LNK	#6
;__Lib_Glcd.mpas,790 :: 		
0xE842	0x781F8C  	PUSH	W12
0xE844	0x98071A  	MOV	W10, [W14+2]
0xE846	0x98072B  	MOV	W11, [W14+4]
;__Lib_Glcd.mpas,791 :: 		
; pg start address is: 12 (W6)
0xE848	0xEF200C  	CLR	W6
; pg end address is: 12 (W6)
;__Lib_Glcd.mpas,794 :: 		
L__Glcd_Image242:
; pg start address is: 12 (W6)
0xE84A	0xE13067  	CP	W6, #7
0xE84C	0x3E003E  	BRA GTU	L__Glcd_Image243
L__Glcd_Image749:
;__Lib_Glcd.mpas,796 :: 		
0xE84E	0xBE9F8A  	PUSH.D	W10
0xE850	0xEF2014  	CLR	W10
0xE852	0x078E93  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,797 :: 		
0xE854	0x784506  	MOV.B	W6, W10
0xE856	0x079A7A  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,798 :: 		
0xE858	0xEF2014  	CLR	W10
0xE85A	0x078E9D  	RCALL	_Glcd_Set_X
0xE85C	0xBE054F  	POP.D	W10
;__Lib_Glcd.mpas,799 :: 		
0xE85E	0xEF2000  	CLR	W0
0xE860	0x980700  	MOV	W0, [W14+0]
; pg end address is: 12 (W6)
L__Glcd_Image247:
;__Lib_Glcd.mpas,801 :: 		
; pg start address is: 12 (W6)
0xE862	0x90001E  	MOV	[W14+2], W0
0xE864	0x9000AE  	MOV	[W14+4], W1
0xE866	0x8801A1  	MOV	W1, PSVPAG
;__Lib_Glcd.mpas,802 :: 		
0xE868	0xBE9F8A  	PUSH.D	W10
0xE86A	0x784510  	MOV.B	[W0], W10
0xE86C	0x079A67  	RCALL	_Glcd_Write_Data
;__Lib_Glcd.mpas,803 :: 		
0xE86E	0x470062  	ADD	W14, #2, W0
0xE870	0x20001B  	MOV	#1, W11
0xE872	0x20000C  	MOV	#0, W12
0xE874	0x780500  	MOV	W0, W10
0xE876	0x078DA6  	RCALL	___AddToFarPointer
0xE878	0xBE054F  	POP.D	W10
;__Lib_Glcd.mpas,804 :: 		
0xE87A	0x2003F1  	MOV	#63, W1
0xE87C	0x470060  	ADD	W14, #0, W0
0xE87E	0xE10810  	CP	W1, [W0]
0xE880	0x320004  	BRA Z	L__Glcd_Image250
L__Glcd_Image750:
0xE882	0x90008E  	MOV	[W14+0], W1
0xE884	0x470060  	ADD	W14, #0, W0
0xE886	0x408861  	ADD	W1, #1, [W0]
0xE888	0x37FFEC  	BRA	L__Glcd_Image247
L__Glcd_Image250:
;__Lib_Glcd.mpas,806 :: 		
0xE88A	0xBE9F8A  	PUSH.D	W10
0xE88C	0xB3C40A  	MOV.B	#64, W10
0xE88E	0x078E75  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,807 :: 		
0xE890	0x784506  	MOV.B	W6, W10
0xE892	0x079A5C  	RCALL	_Glcd_Set_Page
;__Lib_Glcd.mpas,808 :: 		
0xE894	0xB3C40A  	MOV.B	#64, W10
0xE896	0x078E7F  	RCALL	_Glcd_Set_X
0xE898	0xBE054F  	POP.D	W10
;__Lib_Glcd.mpas,809 :: 		
0xE89A	0x200400  	MOV	#64, W0
0xE89C	0x980700  	MOV	W0, [W14+0]
; pg end address is: 12 (W6)
L__Glcd_Image252:
;__Lib_Glcd.mpas,811 :: 		
; pg start address is: 12 (W6)
0xE89E	0x90001E  	MOV	[W14+2], W0
0xE8A0	0x9000AE  	MOV	[W14+4], W1
0xE8A2	0x8801A1  	MOV	W1, PSVPAG
;__Lib_Glcd.mpas,812 :: 		
0xE8A4	0xBE9F8A  	PUSH.D	W10
0xE8A6	0x784510  	MOV.B	[W0], W10
0xE8A8	0x079A49  	RCALL	_Glcd_Write_Data
;__Lib_Glcd.mpas,813 :: 		
0xE8AA	0x470062  	ADD	W14, #2, W0
0xE8AC	0x20001B  	MOV	#1, W11
0xE8AE	0x20000C  	MOV	#0, W12
0xE8B0	0x780500  	MOV	W0, W10
0xE8B2	0x078D88  	RCALL	___AddToFarPointer
0xE8B4	0xBE054F  	POP.D	W10
;__Lib_Glcd.mpas,814 :: 		
0xE8B6	0x2007F1  	MOV	#127, W1
0xE8B8	0x470060  	ADD	W14, #0, W0
0xE8BA	0xE10810  	CP	W1, [W0]
0xE8BC	0x320004  	BRA Z	L__Glcd_Image255
L__Glcd_Image751:
0xE8BE	0x90008E  	MOV	[W14+0], W1
0xE8C0	0x470060  	ADD	W14, #0, W0
0xE8C2	0x408861  	ADD	W1, #1, [W0]
0xE8C4	0x37FFEC  	BRA	L__Glcd_Image252
L__Glcd_Image255:
;__Lib_Glcd.mpas,816 :: 		
0xE8C6	0xEC200C  	INC	W6
;__Lib_Glcd.mpas,817 :: 		
; pg end address is: 12 (W6)
0xE8C8	0x37FFC0  	BRA	L__Glcd_Image242
L__Glcd_Image243:
;__Lib_Glcd.mpas,818 :: 		
L_end_Glcd_Image:
0xE8CA	0x78064F  	POP	W12
0xE8CC	0xFA8000  	ULNK
0xE8CE	0x060000  	RETURN
; end of _Glcd_Image
_Glcd_PartialImage:
0xEE1C	0xFA001A  	LNK	#26
;__Lib_Glcd.mpas,1004 :: 		
0xEE1E	0x97B84E  	MOV	[W14-8], W0
0xEE20	0x9FBF40  	MOV	W0, [W14-8]
0xEE22	0x97B83E  	MOV	[W14-10], W0
0xEE24	0x9FBF30  	MOV	W0, [W14-10]
0xEE26	0x97B81E  	MOV	[W14-14], W0
0xEE28	0x97B8AE  	MOV	[W14-12], W1
0xEE2A	0x9FBF10  	MOV	W0, [W14-14]
0xEE2C	0x9FBF21  	MOV	W1, [W14-12]
;__Lib_Glcd.mpas,1007 :: 		
0xEE2E	0xEF2000  	CLR	W0
0xEE30	0x980720  	MOV	W0, [W14+4]
;__Lib_Glcd.mpas,1008 :: 		
0xEE32	0xEF2000  	CLR	W0
0xEE34	0x980750  	MOV	W0, [W14+10]
;__Lib_Glcd.mpas,1010 :: 		
0xEE36	0x45000C  	ADD	W10, W12, W0
0xEE38	0x5000E1  	SUB	W0, #1, W1
0xEE3A	0x2007F0  	MOV	#127, W0
0xEE3C	0xE10800  	CP	W1, W0
0xEE3E	0x360003  	BRA LEU	L__Glcd_PartialImage328
L__Glcd_PartialImage778:
0xEE40	0x200800  	MOV	#128, W0
0xEE42	0x50000A  	SUB	W0, W10, W0
0xEE44	0x780600  	MOV	W0, W12
L__Glcd_PartialImage328:
;__Lib_Glcd.mpas,1011 :: 		
0xEE46	0x45800D  	ADD	W11, W13, W0
0xEE48	0x5000E1  	SUB	W0, #1, W1
0xEE4A	0x2003F0  	MOV	#63, W0
0xEE4C	0xE10800  	CP	W1, W0
0xEE4E	0x360003  	BRA LEU	L__Glcd_PartialImage331
L__Glcd_PartialImage779:
0xEE50	0x200400  	MOV	#64, W0
0xEE52	0x50000B  	SUB	W0, W11, W0
0xEE54	0x780680  	MOV	W0, W13
L__Glcd_PartialImage331:
;__Lib_Glcd.mpas,1013 :: 		
0xEE56	0xDE5843  	LSR	W11, #3, W0
; start_page start address is: 14 (W7)
0xEE58	0x784380  	MOV.B	W0, W7
;__Lib_Glcd.mpas,1014 :: 		
0xEE5A	0x45808D  	ADD	W11, W13, W1
0xEE5C	0x508061  	SUB	W1, #1, W0
0xEE5E	0xDE0043  	LSR	W0, #3, W0
; end_page start address is: 16 (W8)
0xEE60	0x784400  	MOV.B	W0, W8
;__Lib_Glcd.mpas,1016 :: 		
0xEE62	0x658067  	AND	W11, #7, W0
; top_pomeraj start address is: 18 (W9)
0xEE64	0x784480  	MOV.B	W0, W9
;__Lib_Glcd.mpas,1017 :: 		
0xEE66	0x608067  	AND	W1, #7, W0
0xEE68	0x984710  	MOV.B	W0, [W14+1]
;__Lib_Glcd.mpas,1019 :: 		
0xEE6A	0x57006A  	SUB	W14, #10, W0
0xEE6C	0xE16810  	CP	W13, [W0]
0xEE6E	0x310002  	BRA GEU	L__Glcd_PartialImage334
L__Glcd_PartialImage780:
0xEE70	0x984728  	MOV.B	W8, [W14+2]
0xEE72	0x370005  	BRA	L__Glcd_PartialImage335
;__Lib_Glcd.mpas,1020 :: 		
L__Glcd_PartialImage334:
0xEE74	0x57006A  	SUB	W14, #10, W0
0xEE76	0x458010  	ADD	W11, [W0], W0
0xEE78	0xED2000  	DEC	W0
0xEE7A	0xDE0043  	LSR	W0, #3, W0
0xEE7C	0x984720  	MOV.B	W0, [W14+2]
L__Glcd_PartialImage335:
;__Lib_Glcd.mpas,1022 :: 		
0xEE7E	0x97B83E  	MOV	[W14-10], W0
0xEE80	0x600067  	AND	W0, #7, W0
0xEE82	0xE10060  	CP	W0, #0
0xEE84	0x3A0006  	BRA NZ	L__Glcd_PartialImage337
L__Glcd_PartialImage781:
;__Lib_Glcd.mpas,1023 :: 		
0xEE86	0x97B83E  	MOV	[W14-10], W0
0xEE88	0xDE01C3  	LSR	W0, #3, W3
0xEE8A	0x570168  	SUB	W14, #8, W2
0xEE8C	0xB81812  	MUL.UU	W3, [W2], W0
0xEE8E	0x980770  	MOV	W0, [W14+14]
0xEE90	0x370006  	BRA	L__Glcd_PartialImage338
;__Lib_Glcd.mpas,1024 :: 		
L__Glcd_PartialImage337:
;__Lib_Glcd.mpas,1025 :: 		
0xEE92	0x97B83E  	MOV	[W14-10], W0
0xEE94	0xDE0043  	LSR	W0, #3, W0
0xEE96	0x4001E1  	ADD	W0, #1, W3
0xEE98	0x570168  	SUB	W14, #8, W2
0xEE9A	0xB81812  	MUL.UU	W3, [W2], W0
0xEE9C	0x980770  	MOV	W0, [W14+14]
L__Glcd_PartialImage338:
;__Lib_Glcd.mpas,1028 :: 		
0xEE9E	0xFB8007  	ZE	W7, W0
0xEEA0	0x980730  	MOV	W0, [W14+6]
; top_pomeraj end address is: 18 (W9)
; end_page end address is: 16 (W8)
; start_page end address is: 14 (W7)
L__Glcd_PartialImage339:
; top_pomeraj start address is: 18 (W9)
; end_page start address is: 16 (W8)
; start_page start address is: 14 (W7)
0xEEA2	0xFB8088  	ZE	W8, W1
0xEEA4	0x470066  	ADD	W14, #6, W0
0xEEA6	0xE10810  	CP	W1, [W0]
0xEEA8	0x3900F1  	BRA LTU	L__Glcd_PartialImage343
L__Glcd_PartialImage782:
;__Lib_Glcd.mpas,1030 :: 		
0xEEAA	0xEF2000  	CLR	W0
0xEEAC	0x980760  	MOV	W0, [W14+12]
;__Lib_Glcd.mpas,1031 :: 		
0xEEAE	0xEF2000  	CLR	W0
0xEEB0	0x980740  	MOV	W0, [W14+8]
; top_pomeraj end address is: 18 (W9)
; end_page end address is: 16 (W8)
; start_page end address is: 14 (W7)
0xEEB2	0x784289  	MOV.B	W9, W5
0xEEB4	0x784208  	MOV.B	W8, W4
0xEEB6	0x784307  	MOV.B	W7, W6
L__Glcd_PartialImage344:
; start_page start address is: 12 (W6)
; end_page start address is: 8 (W4)
; top_pomeraj start address is: 10 (W5)
0xEEB8	0x5600E1  	SUB	W12, #1, W1
0xEEBA	0x980F41  	MOV	W1, [W14+24]
0xEEBC	0x470068  	ADD	W14, #8, W0
0xEEBE	0xE10810  	CP	W1, [W0]
0xEEC0	0x3900CF  	BRA LTU	L__Glcd_PartialImage348
L__Glcd_PartialImage783:
;__Lib_Glcd.mpas,1033 :: 		
0xEEC2	0x470068  	ADD	W14, #8, W0
0xEEC4	0x450010  	ADD	W10, [W0], W0
0xEEC6	0x781F8A  	PUSH	W10
0xEEC8	0x784500  	MOV.B	W0, W10
0xEECA	0x078B57  	RCALL	_Glcd_Set_Side
;__Lib_Glcd.mpas,1034 :: 		
0xEECC	0x90456E  	MOV.B	[W14+6], W10
0xEECE	0x07973E  	RCALL	_Glcd_Set_Page
0xEED0	0x78054F  	POP	W10
;__Lib_Glcd.mpas,1036 :: 		
0xEED2	0x9000CE  	MOV	[W14+8], W1
0xEED4	0x570068  	SUB	W14, #8, W0
0xEED6	0xE10810  	CP	W1, [W0]
0xEED8	0xEF2004  	CLR	W2
0xEEDA	0x310001  	BRA GEU	L__Glcd_PartialImage784
0xEEDC	0xEEA004  	COM	W2
L__Glcd_PartialImage784:
0xEEDE	0x470062  	ADD	W14, #2, W0
0xEEE0	0xFB8090  	ZE	[W0], W1
0xEEE2	0x470066  	ADD	W14, #6, W0
0xEEE4	0xE10810  	CP	W1, [W0]
0xEEE6	0xEF2000  	CLR	W0
0xEEE8	0x390001  	BRA LTU	L__Glcd_PartialImage785
0xEEEA	0xEEA000  	COM	W0
L__Glcd_PartialImage785:
0xEEEC	0x610000  	AND	W2, W0, W0
0xEEEE	0x320043  	BRA Z	L__Glcd_PartialImage350
L__Glcd_PartialImage786:
;__Lib_Glcd.mpas,1038 :: 		
0xEEF0	0xFB8086  	ZE	W6, W1
0xEEF2	0x470066  	ADD	W14, #6, W0
0xEEF4	0xE10810  	CP	W1, [W0]
0xEEF6	0x3A0003  	BRA NZ	L__Glcd_PartialImage353
L__Glcd_PartialImage787:
;__Lib_Glcd.mpas,1039 :: 		
0xEEF8	0xEF2000  	CLR	W0
0xEEFA	0x985700  	MOV.B	W0, [W14+16]
0xEEFC	0x37001A  	BRA	L__Glcd_PartialImage354
;__Lib_Glcd.mpas,1040 :: 		
L__Glcd_PartialImage353:
;__Lib_Glcd.mpas,1042 :: 		
0xEEFE	0x97B81E  	MOV	[W14-14], W0
0xEF00	0x97B8AE  	MOV	[W14-12], W1
0xEF02	0x980F10  	MOV	W0, [W14+18]
0xEF04	0x980F21  	MOV	W1, [W14+20]
;__Lib_Glcd.mpas,1043 :: 		
0xEF06	0x90016E  	MOV	[W14+12], W2
0xEF08	0xEB0180  	CLR	W3
0xEF0A	0x90005E  	MOV	[W14+10], W0
0xEF0C	0xEB0080  	CLR	W1
0xEF0E	0x410100  	ADD	W2, W0, W2
0xEF10	0x498181  	ADDC	W3, W1, W3
0xEF12	0x470072  	ADD	W14, #18, W0
0xEF14	0xBE9F84  	PUSH.D	W4
0xEF16	0x781F8C  	PUSH	W12
0xEF18	0xBE9F8A  	PUSH.D	W10
0xEF1A	0x780582  	MOV	W2, W11
0xEF1C	0x780603  	MOV	W3, W12
0xEF1E	0x780500  	MOV	W0, W10
0xEF20	0x078A51  	RCALL	___AddToFarPointer
0xEF22	0xBE054F  	POP.D	W10
0xEF24	0x78064F  	POP	W12
0xEF26	0xBE024F  	POP.D	W4
;__Lib_Glcd.mpas,1044 :: 		
0xEF28	0x90081E  	MOV	[W14+18], W0
0xEF2A	0x9008AE  	MOV	[W14+20], W1
0xEF2C	0x8801A1  	MOV	W1, PSVPAG
0xEF2E	0x784010  	MOV.B	[W0], W0
0xEF30	0x985700  	MOV.B	W0, [W14+16]
;__Lib_Glcd.mpas,1045 :: 		
L__Glcd_PartialImage354:
;__Lib_Glcd.mpas,1047 :: 		
0xEF32	0x9000AE  	MOV	[W14+4], W1
0xEF34	0x47006E  	ADD	W14, #14, W0
0xEF36	0xE10810  	CP	W1, [W0]
0xEF38	0x390003  	BRA LTU	L__Glcd_PartialImage356
L__Glcd_PartialImage788:
;__Lib_Glcd.mpas,1048 :: 		
0xEF3A	0xEF2000  	CLR	W0
0xEF3C	0x985710  	MOV.B	W0, [W14+17]
0xEF3E	0x37001A  	BRA	L__Glcd_PartialImage357
;__Lib_Glcd.mpas,1049 :: 		
L__Glcd_PartialImage356:
;__Lib_Glcd.mpas,1051 :: 		
0xEF40	0x97B81E  	MOV	[W14-14], W0
0xEF42	0x97B8AE  	MOV	[W14-12], W1
0xEF44	0x980F10  	MOV	W0, [W14+18]
0xEF46	0x980F21  	MOV	W1, [W14+20]
;__Lib_Glcd.mpas,1052 :: 		
0xEF48	0x90016E  	MOV	[W14+12], W2
0xEF4A	0xEB0180  	CLR	W3
0xEF4C	0x90002E  	MOV	[W14+4], W0
0xEF4E	0xEB0080  	CLR	W1
0xEF50	0x410100  	ADD	W2, W0, W2
0xEF52	0x498181  	ADDC	W3, W1, W3
0xEF54	0x470072  	ADD	W14, #18, W0
0xEF56	0xBE9F84  	PUSH.D	W4
0xEF58	0x781F8C  	PUSH	W12
0xEF5A	0xBE9F8A  	PUSH.D	W10
0xEF5C	0x780582  	MOV	W2, W11
0xEF5E	0x780603  	MOV	W3, W12
0xEF60	0x780500  	MOV	W0, W10
0xEF62	0x078A30  	RCALL	___AddToFarPointer
0xEF64	0xBE054F  	POP.D	W10
0xEF66	0x78064F  	POP	W12
0xEF68	0xBE024F  	POP.D	W4
;__Lib_Glcd.mpas,1053 :: 		
0xEF6A	0x90081E  	MOV	[W14+18], W0
0xEF6C	0x9008AE  	MOV	[W14+20], W1
0xEF6E	0x8801A1  	MOV	W1, PSVPAG
0xEF70	0x784010  	MOV.B	[W0], W0
0xEF72	0x985710  	MOV.B	W0, [W14+17]
;__Lib_Glcd.mpas,1054 :: 		
L__Glcd_PartialImage357:
;__Lib_Glcd.mpas,1055 :: 		
0xEF74	0x370004  	BRA	L__Glcd_PartialImage351
;__Lib_Glcd.mpas,1056 :: 		
L__Glcd_PartialImage350:
;__Lib_Glcd.mpas,1058 :: 		
0xEF76	0xEF2000  	CLR	W0
0xEF78	0x985710  	MOV.B	W0, [W14+17]
;__Lib_Glcd.mpas,1059 :: 		
0xEF7A	0xEF2000  	CLR	W0
0xEF7C	0x985700  	MOV.B	W0, [W14+16]
;__Lib_Glcd.mpas,1060 :: 		
L__Glcd_PartialImage351:
;__Lib_Glcd.mpas,1062 :: 		
0xEF7E	0x90501E  	MOV.B	[W14+17], W0
0xEF80	0x984700  	MOV.B	W0, [W14+0]
;__Lib_Glcd.mpas,1064 :: 		
0xEF82	0xE12C60  	CP.B	W5, #0
0xEF84	0x36000B  	BRA LEU	L__Glcd_PartialImage359
L__Glcd_PartialImage789:
;__Lib_Glcd.mpas,1065 :: 		
0xEF86	0xFB8005  	ZE	W5, W0
0xEF88	0x1000E8  	SUBR	W0, #8, W1
0xEF8A	0x470070  	ADD	W14, #16, W0
0xEF8C	0xFB8010  	ZE	[W0], W0
0xEF8E	0xDE0181  	LSR	W0, W1, W3
0xEF90	0x470071  	ADD	W14, #17, W0
0xEF92	0xFB8010  	ZE	[W0], W0
0xEF94	0xFB8105  	ZE	W5, W2
0xEF96	0xDD0082  	SL	W0, W2, W1
0xEF98	0x470060  	ADD	W14, #0, W0
0xEF9A	0x71C801  	IOR.B	W3, W1, [W0]
L__Glcd_PartialImage359:
;__Lib_Glcd.mpas,1067 :: 		
0xEF9C	0xFB8086  	ZE	W6, W1
0xEF9E	0x470066  	ADD	W14, #6, W0
0xEFA0	0xE10810  	CP	W1, [W0]
0xEFA2	0xEF2002  	CLR	W1
0xEFA4	0x3A0001  	BRA NZ	L__Glcd_PartialImage790
0xEFA6	0xEEA002  	COM	W1
L__Glcd_PartialImage790:
0xEFA8	0xE12C60  	CP.B	W5, #0
0xEFAA	0xEF2000  	CLR	W0
0xEFAC	0x360001  	BRA LEU	L__Glcd_PartialImage791
0xEFAE	0xEEA000  	COM	W0
L__Glcd_PartialImage791:
0xEFB0	0x608000  	AND	W1, W0, W0
0xEFB2	0x320018  	BRA Z	L__Glcd_PartialImage362
L__Glcd_PartialImage792:
;__Lib_Glcd.mpas,1069 :: 		
0xEFB4	0x470068  	ADD	W14, #8, W0
0xEFB6	0x450010  	ADD	W10, [W0], W0
0xEFB8	0x781F8A  	PUSH	W10
0xEFBA	0x784500  	MOV.B	W0, W10
0xEFBC	0x078AEC  	RCALL	_Glcd_Set_X
0xEFBE	0x78054F  	POP	W10
;__Lib_Glcd.mpas,1070 :: 		
0xEFC0	0x078A3A  	RCALL	_Glcd_Read_Data
;__Lib_Glcd.mpas,1071 :: 		
0xEFC2	0x078A39  	RCALL	_Glcd_Read_Data
;__Lib_Glcd.mpas,1072 :: 		
0xEFC4	0xFB8085  	ZE	W5, W1
0xEFC6	0x108168  	SUBR	W1, #8, W2
0xEFC8	0x200FF1  	MOV	#255, W1
0xEFCA	0xDE0902  	LSR	W1, W2, W2
0xEFCC	0xFB8080  	ZE	W0, W1
0xEFCE	0xFB8002  	ZE	W2, W0
0xEFD0	0x608180  	AND	W1, W0, W3
;__Lib_Glcd.mpas,1073 :: 		
0xEFD2	0x200FF0  	MOV	#255, W0
0xEFD4	0xFB8105  	ZE	W5, W2
0xEFD6	0xDD0102  	SL	W0, W2, W2
0xEFD8	0x4700E0  	ADD	W14, #0, W1
0xEFDA	0x470060  	ADD	W14, #0, W0
0xEFDC	0x614811  	AND.B	W2, [W1], [W0]
;__Lib_Glcd.mpas,1074 :: 		
0xEFDE	0x4700E0  	ADD	W14, #0, W1
0xEFE0	0x470060  	ADD	W14, #0, W0
0xEFE2	0x71C811  	IOR.B	W3, [W1], [W0]
;__Lib_Glcd.mpas,1075 :: 		
L__Glcd_PartialImage362:
;__Lib_Glcd.mpas,1077 :: 		
0xEFE4	0xFB8084  	ZE	W4, W1
0xEFE6	0x470066  	ADD	W14, #6, W0
0xEFE8	0xE10810  	CP	W1, [W0]
0xEFEA	0xEF2002  	CLR	W1
0xEFEC	0x3A0001  	BRA NZ	L__Glcd_PartialImage793
0xEFEE	0xEEA002  	COM	W1
L__Glcd_PartialImage793:
0xEFF0	0x90401E  	MOV.B	[W14+1], W0
0xEFF2	0xE10460  	CP.B	W0, #0
0xEFF4	0xEF2000  	CLR	W0
0xEFF6	0x360001  	BRA LEU	L__Glcd_PartialImage794
0xEFF8	0xEEA000  	COM	W0
L__Glcd_PartialImage794:
0xEFFA	0x608000  	AND	W1, W0, W0
0xEFFC	0x32001A  	BRA Z	L__Glcd_PartialImage365
L__Glcd_PartialImage795:
;__Lib_Glcd.mpas,1079 :: 		
0xEFFE	0x470068  	ADD	W14, #8, W0
0xF000	0x450010  	ADD	W10, [W0], W0
0xF002	0x781F8A  	PUSH	W10
0xF004	0x784500  	MOV.B	W0, W10
0xF006	0x078AC7  	RCALL	_Glcd_Set_X
0xF008	0x78054F  	POP	W10
;__Lib_Glcd.mpas,1080 :: 		
0xF00A	0x078A15  	RCALL	_Glcd_Read_Data
;__Lib_Glcd.mpas,1081 :: 		
0xF00C	0x078A14  	RCALL	_Glcd_Read_Data
;__Lib_Glcd.mpas,1082 :: 		
0xF00E	0x200FF3  	MOV	#255, W3
0xF010	0x4700E1  	ADD	W14, #1, W1
0xF012	0xFB8111  	ZE	[W1], W2
0xF014	0xDD1902  	SL	W3, W2, W2
0xF016	0xFB8080  	ZE	W0, W1
0xF018	0xFB8002  	ZE	W2, W0
0xF01A	0x608180  	AND	W1, W0, W3
;__Lib_Glcd.mpas,1083 :: 		
0xF01C	0x470061  	ADD	W14, #1, W0
0xF01E	0xFB8010  	ZE	[W0], W0
0xF020	0x1000E8  	SUBR	W0, #8, W1
0xF022	0x200FF0  	MOV	#255, W0
0xF024	0xDE0101  	LSR	W0, W1, W2
0xF026	0x4700E0  	ADD	W14, #0, W1
0xF028	0x470060  	ADD	W14, #0, W0
0xF02A	0x614811  	AND.B	W2, [W1], [W0]
;__Lib_Glcd.mpas,1084 :: 		
0xF02C	0x4700E0  	ADD	W14, #0, W1
0xF02E	0x470060  	ADD	W14, #0, W0
0xF030	0x71C811  	IOR.B	W3, [W1], [W0]
;__Lib_Glcd.mpas,1085 :: 		
L__Glcd_PartialImage365:
;__Lib_Glcd.mpas,1087 :: 		
0xF032	0x9000CE  	MOV	[W14+8], W1
0xF034	0x570068  	SUB	W14, #8, W0
0xF036	0xE10810  	CP	W1, [W0]
0xF038	0x310003  	BRA GEU	L__Glcd_PartialImage368
L__Glcd_PartialImage796:
0xF03A	0x9000EE  	MOV	[W14+12], W1
0xF03C	0x47006C  	ADD	W14, #12, W0
0xF03E	0x408861  	ADD	W1, #1, [W0]
L__Glcd_PartialImage368:
;__Lib_Glcd.mpas,1089 :: 		
0xF040	0x470068  	ADD	W14, #8, W0
0xF042	0x450010  	ADD	W10, [W0], W0
0xF044	0x781F8A  	PUSH	W10
0xF046	0x784500  	MOV.B	W0, W10
0xF048	0x078AA6  	RCALL	_Glcd_Set_X
;__Lib_Glcd.mpas,1090 :: 		
0xF04A	0x90450E  	MOV.B	[W14+0], W10
0xF04C	0x079677  	RCALL	_Glcd_Write_Data
0xF04E	0x78054F  	POP	W10
;__Lib_Glcd.mpas,1092 :: 		
0xF050	0x4700E8  	ADD	W14, #8, W1
0xF052	0x90084E  	MOV	[W14+24], W0
0xF054	0xE10011  	CP	W0, [W1]
0xF056	0x320004  	BRA Z	L__Glcd_PartialImage348
L__Glcd_PartialImage797:
0xF058	0x9000CE  	MOV	[W14+8], W1
0xF05A	0x470068  	ADD	W14, #8, W0
0xF05C	0x408861  	ADD	W1, #1, [W0]
0xF05E	0x37FF2C  	BRA	L__Glcd_PartialImage344
L__Glcd_PartialImage348:
;__Lib_Glcd.mpas,1094 :: 		
0xF060	0x470062  	ADD	W14, #2, W0
0xF062	0xFB8090  	ZE	[W0], W1
0xF064	0x470066  	ADD	W14, #6, W0
0xF066	0xE10810  	CP	W1, [W0]
0xF068	0x360006  	BRA LEU	L__Glcd_PartialImage371
L__Glcd_PartialImage798:
;__Lib_Glcd.mpas,1096 :: 		
0xF06A	0x90002E  	MOV	[W14+4], W0
0xF06C	0x980750  	MOV	W0, [W14+10]
;__Lib_Glcd.mpas,1097 :: 		
0xF06E	0x90012E  	MOV	[W14+4], W2
0xF070	0x5700E8  	SUB	W14, #8, W1
0xF072	0x470064  	ADD	W14, #4, W0
0xF074	0x410811  	ADD	W2, [W1], [W0]
;__Lib_Glcd.mpas,1098 :: 		
L__Glcd_PartialImage371:
;__Lib_Glcd.mpas,1100 :: 		
0xF076	0xFB8084  	ZE	W4, W1
0xF078	0x470066  	ADD	W14, #6, W0
0xF07A	0xE10810  	CP	W1, [W0]
0xF07C	0x320007  	BRA Z	L__Glcd_PartialImage343
L__Glcd_PartialImage799:
0xF07E	0x9000BE  	MOV	[W14+6], W1
0xF080	0x470066  	ADD	W14, #6, W0
0xF082	0x408861  	ADD	W1, #1, [W0]
0xF084	0x784386  	MOV.B	W6, W7
; start_page end address is: 12 (W6)
; end_page end address is: 8 (W4)
; top_pomeraj end address is: 10 (W5)
0xF086	0x784404  	MOV.B	W4, W8
0xF088	0x784485  	MOV.B	W5, W9
0xF08A	0x37FF0B  	BRA	L__Glcd_PartialImage339
L__Glcd_PartialImage343:
;__Lib_Glcd.mpas,1101 :: 		
L_end_Glcd_PartialImage:
0xF08C	0xFA8000  	ULNK
0xF08E	0x060000  	RETURN
; end of _Glcd_PartialImage
_UART1_Write_Text:
0xE044	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,202 :: 		
;__Lib_UART_12_p30.mpas,203 :: 		
; counter start address is: 2 (W1)
0xE046	0xEF2002  	CLR	W1
;__Lib_UART_12_p30.mpas,204 :: 		
0xE048	0x78401A  	MOV.B	[W10], W0
; data_ start address is: 4 (W2)
0xE04A	0x784100  	MOV.B	W0, W2
; data_ end address is: 4 (W2)
; counter end address is: 2 (W1)
0xE04C	0x784002  	MOV.B	W2, W0
0xE04E	0x784101  	MOV.B	W1, W2
;__Lib_UART_12_p30.mpas,205 :: 		
L__UART1_Write_Text19:
; data_ start address is: 0 (W0)
; counter start address is: 4 (W2)
0xE050	0xE10460  	CP.B	W0, #0
0xE052	0x32000A  	BRA Z	L__UART1_Write_Text20
L__UART1_Write_Text146:
;__Lib_UART_12_p30.mpas,207 :: 		
0xE054	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0xE056	0xFB8500  	ZE	W0, W10
0xE058	0x079285  	RCALL	_UART1_Write
0xE05A	0x78054F  	POP	W10
;__Lib_UART_12_p30.mpas,208 :: 		
; counter start address is: 2 (W1)
0xE05C	0x4140E1  	ADD.B	W2, #1, W1
; counter end address is: 4 (W2)
;__Lib_UART_12_p30.mpas,209 :: 		
0xE05E	0xFB8001  	ZE	W1, W0
0xE060	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0xE062	0x784010  	MOV.B	[W0], W0
;__Lib_UART_12_p30.mpas,210 :: 		
0xE064	0x784101  	MOV.B	W1, W2
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0xE066	0x37FFF4  	BRA	L__UART1_Write_Text19
L__UART1_Write_Text20:
;__Lib_UART_12_p30.mpas,211 :: 		
L_end_UART1_Write_Text:
0xE068	0xFA8000  	ULNK
0xE06A	0x060000  	RETURN
; end of _UART1_Write_Text
_UART1_Write:
0x0564	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,179 :: 		
;__Lib_UART_12_p30.mpas,180 :: 		
L__UART1_Write10:
0x0566	0x801071  	MOV	U1STA, W1
0x0568	0x201000  	MOV	#256, W0
0x056A	0x608000  	AND	W1, W0, W0
0x056C	0xE10060  	CP	W0, #0
0x056E	0x3A0002  	BRA NZ	L__UART1_Write11
L__UART1_Write141:
;__Lib_UART_12_p30.mpas,181 :: 		
0x0570	0x000000  	NOP
0x0572	0x37FFF9  	BRA	L__UART1_Write10
L__UART1_Write11:
;__Lib_UART_12_p30.mpas,182 :: 		
0x0574	0x88108A  	MOV	W10, U1TXREG
;__Lib_UART_12_p30.mpas,183 :: 		
L_end_UART1_Write:
0x0576	0xFA8000  	ULNK
0x0578	0x060000  	RETURN
; end of _UART1_Write
_MainMenu:
0xE1C8	0xFA0032  	LNK	#50
;GRR3000LManagementPanel.mpas,8744 :: 		begin
;GRR3000LManagementPanel.mpas,8746 :: 		MainMenuCounter := 1;
0xE1CA	0x781F8A  	PUSH	W10
0xE1CC	0x781F8B  	PUSH	W11
0xE1CE	0x781F8C  	PUSH	W12
0xE1D0	0x781F8D  	PUSH	W13
0xE1D2	0xB3C010  	MOV.B	#1, W0
0xE1D4	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,8747 :: 		Glcd_Fill(0x00);
0xE1D6	0xEF2014  	CLR	W10
0xE1D8	0x07DB79  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8749 :: 		MainMenuExit        := 0x00;
0xE1DA	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE1DC	0xEF2000  	CLR	W0
0xE1DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8750 :: 		MenuSayacValue      := 1;
0xE1E0	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xE1E2	0xB3C010  	MOV.B	#1, W0
0xE1E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8751 :: 		i                   := 2;
0xE1E6	0xB3C020  	MOV.B	#2, W0
0xE1E8	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8753 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xE1EA	0xB3C07D  	MOV.B	#7, W13
0xE1EC	0xB3C05C  	MOV.B	#5, W12
0xE1EE	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xE1F0	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xE1F2	0x200200  	MOV	#32, W0
0xE1F4	0x781F80  	PUSH	W0
0xE1F6	0x07BC60  	RCALL	_Glcd_Set_Font
0xE1F8	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,8755 :: 		While (MainMenuExit = 0x00) do
L__MainMenu4114:
0xE1FA	0x213880  	MOV	#lo_addr(_MainMenuExit), W0
0xE1FC	0x784010  	MOV.B	[W0], W0
0xE1FE	0xE10460  	CP.B	W0, #0
0xE200	0x3A0304  	BRA NZ	L__MainMenu4115
L__MainMenu5669:
;GRR3000LManagementPanel.mpas,8759 :: 		asm ClrWDT; end;
0xE202	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8761 :: 		if (Down_Button =0) then
0xE204	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xE206	0x37001A  	BRA	L__MainMenu4119
;GRR3000LManagementPanel.mpas,8763 :: 		while (Down_Button =0) do
L__MainMenu4122:
0xE208	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xE20A	0x370002  	BRA	L__MainMenu4123
;GRR3000LManagementPanel.mpas,8765 :: 		asm ClrWDT; end;
0xE20C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8766 :: 		end;
0xE20E	0x37FFFC  	BRA	L__MainMenu4122
L__MainMenu4123:
;GRR3000LManagementPanel.mpas,8769 :: 		Glcd_Write_Char(' ', 0, MainMenuCounter, Black);
0xE210	0xB3C01D  	MOV.B	#1, W13
0xE212	0x90460E  	MOV.B	[W14+0], W12
0xE214	0xEF2016  	CLR	W11
0xE216	0xB3C20A  	MOV.B	#32, W10
0xE218	0x079DAD  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8770 :: 		Glcd_Write_Char(' ', 0, (MainMenuCounter-7), Black);
0xE21A	0x470060  	ADD	W14, #0, W0
0xE21C	0xFB8010  	ZE	[W0], W0
0xE21E	0x500067  	SUB	W0, #7, W0
0xE220	0xB3C01D  	MOV.B	#1, W13
0xE222	0x784600  	MOV.B	W0, W12
0xE224	0xEF2016  	CLR	W11
0xE226	0xB3C20A  	MOV.B	#32, W10
0xE228	0x079DA5  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8772 :: 		Inc(MainMenuCounter);
0xE22A	0x470060  	ADD	W14, #0, W0
0xE22C	0xFB8010  	ZE	[W0], W0
0xE22E	0xEC2000  	INC	W0
0xE230	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,8773 :: 		if (MainMenuCounter > 13) then MainMenuCounter := 1;
0xE232	0xE1046D  	CP.B	W0, #13
0xE234	0x360002  	BRA LEU	L__MainMenu4127
L__MainMenu5670:
0xE236	0xB3C010  	MOV.B	#1, W0
0xE238	0x984700  	MOV.B	W0, [W14+0]
L__MainMenu4127:
;GRR3000LManagementPanel.mpas,8774 :: 		end else
0xE23A	0x37001B  	BRA	L__MainMenu4120
L__MainMenu4119:
;GRR3000LManagementPanel.mpas,8775 :: 		if (Up_Button =0) then
0xE23C	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xE23E	0x370019  	BRA	L__MainMenu4130
;GRR3000LManagementPanel.mpas,8777 :: 		while (Up_Button =0) do
L__MainMenu4133:
0xE240	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xE242	0x370002  	BRA	L__MainMenu4134
;GRR3000LManagementPanel.mpas,8779 :: 		asm ClrWDT; end;
0xE244	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8780 :: 		end;
0xE246	0x37FFFC  	BRA	L__MainMenu4133
L__MainMenu4134:
;GRR3000LManagementPanel.mpas,8783 :: 		Glcd_Write_Char(' ', 0, MainMenuCounter, Black);
0xE248	0xB3C01D  	MOV.B	#1, W13
0xE24A	0x90460E  	MOV.B	[W14+0], W12
0xE24C	0xEF2016  	CLR	W11
0xE24E	0xB3C20A  	MOV.B	#32, W10
0xE250	0x079D91  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8784 :: 		Glcd_Write_Char(' ', 0, (MainMenuCounter-7), Black);
0xE252	0x470060  	ADD	W14, #0, W0
0xE254	0xFB8010  	ZE	[W0], W0
0xE256	0x500067  	SUB	W0, #7, W0
0xE258	0xB3C01D  	MOV.B	#1, W13
0xE25A	0x784600  	MOV.B	W0, W12
0xE25C	0xEF2016  	CLR	W11
0xE25E	0xB3C20A  	MOV.B	#32, W10
0xE260	0x079D89  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8786 :: 		Dec(MainMenuCounter);
0xE262	0x470060  	ADD	W14, #0, W0
0xE264	0xFB8010  	ZE	[W0], W0
0xE266	0xED2000  	DEC	W0
0xE268	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,8787 :: 		if (MainMenuCounter < 1) then MainMenuCounter := 13;
0xE26A	0xE10461  	CP.B	W0, #1
0xE26C	0x310002  	BRA GEU	L__MainMenu4138
L__MainMenu5671:
0xE26E	0xB3C0D0  	MOV.B	#13, W0
0xE270	0x984700  	MOV.B	W0, [W14+0]
L__MainMenu4138:
;GRR3000LManagementPanel.mpas,8788 :: 		end;
L__MainMenu4130:
L__MainMenu4120:
;GRR3000LManagementPanel.mpas,8793 :: 		if (MainMenuCounter < 8) then
0xE272	0x90400E  	MOV.B	[W14+0], W0
0xE274	0xE10468  	CP.B	W0, #8
0xE276	0x3100AA  	BRA GEU	L__MainMenu4141
L__MainMenu5672:
;GRR3000LManagementPanel.mpas,8796 :: 		Glcd_Write_Char('>', 0, MainMenuCounter, Black);
0xE278	0xB3C01D  	MOV.B	#1, W13
0xE27A	0x90460E  	MOV.B	[W14+0], W12
0xE27C	0xEF2016  	CLR	W11
0xE27E	0xB3C3EA  	MOV.B	#62, W10
0xE280	0x079D79  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8798 :: 		if (i = 2) then // resmi sürekli basma
0xE282	0x90401E  	MOV.B	[W14+1], W0
0xE284	0xE10462  	CP.B	W0, #2
0xE286	0x3A00A1  	BRA NZ	L__MainMenu4144
L__MainMenu5673:
;GRR3000LManagementPanel.mpas,8801 :: 		Glcd_Fill(0x00);
0xE288	0xEF2014  	CLR	W10
0xE28A	0x07DB20  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8804 :: 		Glcd_Write_Text('     ..MENU..     1-2',      0,  Row1, Black);
0xE28C	0x4700F7  	ADD	W14, #23, W1
0xE28E	0xB3C200  	MOV.B	#32, W0
0xE290	0x785880  	MOV.B	W0, [W1++]
0xE292	0xB3C200  	MOV.B	#32, W0
0xE294	0x785880  	MOV.B	W0, [W1++]
0xE296	0xB3C200  	MOV.B	#32, W0
0xE298	0x785880  	MOV.B	W0, [W1++]
0xE29A	0xB3C200  	MOV.B	#32, W0
0xE29C	0x785880  	MOV.B	W0, [W1++]
0xE29E	0xB3C200  	MOV.B	#32, W0
0xE2A0	0x785880  	MOV.B	W0, [W1++]
0xE2A2	0xB3C2E0  	MOV.B	#46, W0
0xE2A4	0x785880  	MOV.B	W0, [W1++]
0xE2A6	0xB3C2E0  	MOV.B	#46, W0
0xE2A8	0x785880  	MOV.B	W0, [W1++]
0xE2AA	0xB3C4D0  	MOV.B	#77, W0
0xE2AC	0x785880  	MOV.B	W0, [W1++]
0xE2AE	0xB3C450  	MOV.B	#69, W0
0xE2B0	0x785880  	MOV.B	W0, [W1++]
0xE2B2	0xB3C4E0  	MOV.B	#78, W0
0xE2B4	0x785880  	MOV.B	W0, [W1++]
0xE2B6	0xB3C550  	MOV.B	#85, W0
0xE2B8	0x785880  	MOV.B	W0, [W1++]
0xE2BA	0xB3C2E0  	MOV.B	#46, W0
0xE2BC	0x785880  	MOV.B	W0, [W1++]
0xE2BE	0xB3C2E0  	MOV.B	#46, W0
0xE2C0	0x785880  	MOV.B	W0, [W1++]
0xE2C2	0xB3C200  	MOV.B	#32, W0
0xE2C4	0x785880  	MOV.B	W0, [W1++]
0xE2C6	0xB3C200  	MOV.B	#32, W0
0xE2C8	0x785880  	MOV.B	W0, [W1++]
0xE2CA	0xB3C200  	MOV.B	#32, W0
0xE2CC	0x785880  	MOV.B	W0, [W1++]
0xE2CE	0xB3C200  	MOV.B	#32, W0
0xE2D0	0x785880  	MOV.B	W0, [W1++]
0xE2D2	0xB3C200  	MOV.B	#32, W0
0xE2D4	0x785880  	MOV.B	W0, [W1++]
0xE2D6	0xB3C310  	MOV.B	#49, W0
0xE2D8	0x785880  	MOV.B	W0, [W1++]
0xE2DA	0xB3C2D0  	MOV.B	#45, W0
0xE2DC	0x785880  	MOV.B	W0, [W1++]
0xE2DE	0xB3C320  	MOV.B	#50, W0
0xE2E0	0x785880  	MOV.B	W0, [W1++]
0xE2E2	0xEF2000  	CLR	W0
0xE2E4	0x785880  	MOV.B	W0, [W1++]
0xE2E6	0x470077  	ADD	W14, #23, W0
0xE2E8	0xB3C01D  	MOV.B	#1, W13
0xE2EA	0xEF2018  	CLR	W12
0xE2EC	0xEF2016  	CLR	W11
0xE2EE	0x780500  	MOV	W0, W10
0xE2F0	0x07BA4C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8806 :: 		TitleText := Title_AcMenu;
0xE2F2	0x470062  	ADD	W14, #2, W0
0xE2F4	0x213731  	MOV	#lo_addr(_Title_AcMenu), W1
0xE2F6	0x07F2A7  	RCALL	___CS2S
0xE2F8	0x780080  	MOV	W0, W1
0xE2FA	0xEF2000  	CLR	W0
0xE2FC	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8807 :: 		ltrim(TitleText);
0xE2FE	0x470062  	ADD	W14, #2, W0
0xE300	0x981F00  	MOV	W0, [W14+48]
0xE302	0x780500  	MOV	W0, W10
0xE304	0x07DFD7  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8808 :: 		Glcd_Write_Text(TitleText,                 6,  Row2, Black);  // 1
0xE306	0x470062  	ADD	W14, #2, W0
0xE308	0xB3C01D  	MOV.B	#1, W13
0xE30A	0xB3C01C  	MOV.B	#1, W12
0xE30C	0xB3C06B  	MOV.B	#6, W11
0xE30E	0x780500  	MOV	W0, W10
0xE310	0x07BA3C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8810 :: 		TitleText := Title_DcMenu;
0xE312	0x470062  	ADD	W14, #2, W0
0xE314	0x212A61  	MOV	#lo_addr(_Title_DcMenu), W1
0xE316	0x07F297  	RCALL	___CS2S
0xE318	0x780080  	MOV	W0, W1
0xE31A	0xEF2000  	CLR	W0
0xE31C	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8811 :: 		ltrim(TitleText);
0xE31E	0x90180E  	MOV	[W14+48], W0
0xE320	0x780500  	MOV	W0, W10
0xE322	0x07DFC8  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8812 :: 		Glcd_Write_Text(TitleText,                 6,  Row3, Black);  // 2
0xE324	0x470062  	ADD	W14, #2, W0
0xE326	0xB3C01D  	MOV.B	#1, W13
0xE328	0xB3C02C  	MOV.B	#2, W12
0xE32A	0xB3C06B  	MOV.B	#6, W11
0xE32C	0x780500  	MOV	W0, W10
0xE32E	0x07BA2D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8814 :: 		TitleText := Title_DroppMenu;
0xE330	0x470062  	ADD	W14, #2, W0
0xE332	0x213891  	MOV	#lo_addr(_Title_DroppMenu), W1
0xE334	0x07F288  	RCALL	___CS2S
0xE336	0x780080  	MOV	W0, W1
0xE338	0xEF2000  	CLR	W0
0xE33A	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8815 :: 		ltrim(TitleText);
0xE33C	0x90180E  	MOV	[W14+48], W0
0xE33E	0x780500  	MOV	W0, W10
0xE340	0x07DFB9  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8816 :: 		Glcd_Write_Text(TitleText,                 6,  Row4, Black);  // 3
0xE342	0x470062  	ADD	W14, #2, W0
0xE344	0xB3C01D  	MOV.B	#1, W13
0xE346	0xB3C03C  	MOV.B	#3, W12
0xE348	0xB3C06B  	MOV.B	#6, W11
0xE34A	0x780500  	MOV	W0, W10
0xE34C	0x07BA1E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8818 :: 		TitleText := Title_BattMenu;
0xE34E	0x470062  	ADD	W14, #2, W0
0xE350	0x213B31  	MOV	#lo_addr(_Title_BattMenu), W1
0xE352	0x07F279  	RCALL	___CS2S
0xE354	0x780080  	MOV	W0, W1
0xE356	0xEF2000  	CLR	W0
0xE358	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8819 :: 		ltrim(TitleText);
0xE35A	0x90180E  	MOV	[W14+48], W0
0xE35C	0x780500  	MOV	W0, W10
0xE35E	0x07DFAA  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8820 :: 		Glcd_Write_Text(TitleText,                 6,  Row5, Black);  // 4
0xE360	0x470062  	ADD	W14, #2, W0
0xE362	0xB3C01D  	MOV.B	#1, W13
0xE364	0xB3C04C  	MOV.B	#4, W12
0xE366	0xB3C06B  	MOV.B	#6, W11
0xE368	0x780500  	MOV	W0, W10
0xE36A	0x07BA0F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8822 :: 		TitleText := Title_BattServMenu;
0xE36C	0x470062  	ADD	W14, #2, W0
0xE36E	0x213E31  	MOV	#lo_addr(_Title_BattServMenu), W1
0xE370	0x07F26A  	RCALL	___CS2S
0xE372	0x780080  	MOV	W0, W1
0xE374	0xEF2000  	CLR	W0
0xE376	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8823 :: 		ltrim(TitleText);
0xE378	0x90180E  	MOV	[W14+48], W0
0xE37A	0x780500  	MOV	W0, W10
0xE37C	0x07DF9B  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8824 :: 		Glcd_Write_Text(TitleText,                 6,  Row6, Black);  // 5
0xE37E	0x470062  	ADD	W14, #2, W0
0xE380	0xB3C01D  	MOV.B	#1, W13
0xE382	0xB3C05C  	MOV.B	#5, W12
0xE384	0xB3C06B  	MOV.B	#6, W11
0xE386	0x780500  	MOV	W0, W10
0xE388	0x07BA00  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8826 :: 		TitleText := Title_LeakMenu;
0xE38A	0x470062  	ADD	W14, #2, W0
0xE38C	0x212371  	MOV	#lo_addr(_Title_LeakMenu), W1
0xE38E	0x07F25B  	RCALL	___CS2S
0xE390	0x780080  	MOV	W0, W1
0xE392	0xEF2000  	CLR	W0
0xE394	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8827 :: 		ltrim(TitleText);
0xE396	0x90180E  	MOV	[W14+48], W0
0xE398	0x780500  	MOV	W0, W10
0xE39A	0x07DF8C  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8828 :: 		Glcd_Write_Text(TitleText,                 6,  Row7, Black);  // 6
0xE39C	0x470062  	ADD	W14, #2, W0
0xE39E	0xB3C01D  	MOV.B	#1, W13
0xE3A0	0xB3C06C  	MOV.B	#6, W12
0xE3A2	0xB3C06B  	MOV.B	#6, W11
0xE3A4	0x780500  	MOV	W0, W10
0xE3A6	0x07B9F1  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8830 :: 		TitleText := Title_TempMenu;
0xE3A8	0x470062  	ADD	W14, #2, W0
0xE3AA	0x211B21  	MOV	#lo_addr(_Title_TempMenu), W1
0xE3AC	0x07F24C  	RCALL	___CS2S
0xE3AE	0x780080  	MOV	W0, W1
0xE3B0	0xEF2000  	CLR	W0
0xE3B2	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8831 :: 		ltrim(TitleText);
0xE3B4	0x90180E  	MOV	[W14+48], W0
0xE3B6	0x780500  	MOV	W0, W10
0xE3B8	0x07DF7D  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8832 :: 		Glcd_Write_Text(TitleText,                 6,  Row8, Black);  // 7
0xE3BA	0x470062  	ADD	W14, #2, W0
0xE3BC	0xB3C01D  	MOV.B	#1, W13
0xE3BE	0xB3C07C  	MOV.B	#7, W12
0xE3C0	0xB3C06B  	MOV.B	#6, W11
0xE3C2	0x780500  	MOV	W0, W10
0xE3C4	0x07B9E2  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8836 :: 		i := 3;
0xE3C6	0xB3C030  	MOV.B	#3, W0
0xE3C8	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8837 :: 		end;
L__MainMenu4144:
;GRR3000LManagementPanel.mpas,8839 :: 		end else
0xE3CA	0x3700A0  	BRA	L__MainMenu4142
L__MainMenu4141:
;GRR3000LManagementPanel.mpas,8840 :: 		if (MainMenuCounter >= 8) then
0xE3CC	0x90400E  	MOV.B	[W14+0], W0
0xE3CE	0xE10468  	CP.B	W0, #8
0xE3D0	0x39009D  	BRA LTU	L__MainMenu4147
L__MainMenu5674:
;GRR3000LManagementPanel.mpas,8843 :: 		Glcd_Write_Char('>', 0, (MainMenuCounter-7), Black);
0xE3D2	0x470060  	ADD	W14, #0, W0
0xE3D4	0xFB8010  	ZE	[W0], W0
0xE3D6	0x500067  	SUB	W0, #7, W0
0xE3D8	0xB3C01D  	MOV.B	#1, W13
0xE3DA	0x784600  	MOV.B	W0, W12
0xE3DC	0xEF2016  	CLR	W11
0xE3DE	0xB3C3EA  	MOV.B	#62, W10
0xE3E0	0x079CC9  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8845 :: 		if (i = 3) then // resmi sürekli basma
0xE3E2	0x90401E  	MOV.B	[W14+1], W0
0xE3E4	0xE10463  	CP.B	W0, #3
0xE3E6	0x3A0092  	BRA NZ	L__MainMenu4150
L__MainMenu5675:
;GRR3000LManagementPanel.mpas,8849 :: 		Glcd_Fill(0x00);
0xE3E8	0xEF2014  	CLR	W10
0xE3EA	0x07DA70  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8851 :: 		Glcd_Write_Text('     ..MENU..     2-2',      0,  Row1, Black);
0xE3EC	0x4700F7  	ADD	W14, #23, W1
0xE3EE	0xB3C200  	MOV.B	#32, W0
0xE3F0	0x785880  	MOV.B	W0, [W1++]
0xE3F2	0xB3C200  	MOV.B	#32, W0
0xE3F4	0x785880  	MOV.B	W0, [W1++]
0xE3F6	0xB3C200  	MOV.B	#32, W0
0xE3F8	0x785880  	MOV.B	W0, [W1++]
0xE3FA	0xB3C200  	MOV.B	#32, W0
0xE3FC	0x785880  	MOV.B	W0, [W1++]
0xE3FE	0xB3C200  	MOV.B	#32, W0
0xE400	0x785880  	MOV.B	W0, [W1++]
0xE402	0xB3C2E0  	MOV.B	#46, W0
0xE404	0x785880  	MOV.B	W0, [W1++]
0xE406	0xB3C2E0  	MOV.B	#46, W0
0xE408	0x785880  	MOV.B	W0, [W1++]
0xE40A	0xB3C4D0  	MOV.B	#77, W0
0xE40C	0x785880  	MOV.B	W0, [W1++]
0xE40E	0xB3C450  	MOV.B	#69, W0
0xE410	0x785880  	MOV.B	W0, [W1++]
0xE412	0xB3C4E0  	MOV.B	#78, W0
0xE414	0x785880  	MOV.B	W0, [W1++]
0xE416	0xB3C550  	MOV.B	#85, W0
0xE418	0x785880  	MOV.B	W0, [W1++]
0xE41A	0xB3C2E0  	MOV.B	#46, W0
0xE41C	0x785880  	MOV.B	W0, [W1++]
0xE41E	0xB3C2E0  	MOV.B	#46, W0
0xE420	0x785880  	MOV.B	W0, [W1++]
0xE422	0xB3C200  	MOV.B	#32, W0
0xE424	0x785880  	MOV.B	W0, [W1++]
0xE426	0xB3C200  	MOV.B	#32, W0
0xE428	0x785880  	MOV.B	W0, [W1++]
0xE42A	0xB3C200  	MOV.B	#32, W0
0xE42C	0x785880  	MOV.B	W0, [W1++]
0xE42E	0xB3C200  	MOV.B	#32, W0
0xE430	0x785880  	MOV.B	W0, [W1++]
0xE432	0xB3C200  	MOV.B	#32, W0
0xE434	0x785880  	MOV.B	W0, [W1++]
0xE436	0xB3C320  	MOV.B	#50, W0
0xE438	0x785880  	MOV.B	W0, [W1++]
0xE43A	0xB3C2D0  	MOV.B	#45, W0
0xE43C	0x785880  	MOV.B	W0, [W1++]
0xE43E	0xB3C320  	MOV.B	#50, W0
0xE440	0x785880  	MOV.B	W0, [W1++]
0xE442	0xEF2000  	CLR	W0
0xE444	0x785880  	MOV.B	W0, [W1++]
0xE446	0x470077  	ADD	W14, #23, W0
0xE448	0xB3C01D  	MOV.B	#1, W13
0xE44A	0xEF2018  	CLR	W12
0xE44C	0xEF2016  	CLR	W11
0xE44E	0x780500  	MOV	W0, W10
0xE450	0x07B99C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8853 :: 		TitleText := Title_ClockMenu;
0xE452	0x470062  	ADD	W14, #2, W0
0xE454	0x211E41  	MOV	#lo_addr(_Title_ClockMenu), W1
0xE456	0x07F1F7  	RCALL	___CS2S
0xE458	0x780080  	MOV	W0, W1
0xE45A	0xEF2000  	CLR	W0
0xE45C	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8854 :: 		ltrim(TitleText);
0xE45E	0x470062  	ADD	W14, #2, W0
0xE460	0x981F00  	MOV	W0, [W14+48]
0xE462	0x780500  	MOV	W0, W10
0xE464	0x07DF27  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8855 :: 		Glcd_Write_Text(TitleText,                 6,  Row2, Black);  // 8
0xE466	0x470062  	ADD	W14, #2, W0
0xE468	0xB3C01D  	MOV.B	#1, W13
0xE46A	0xB3C01C  	MOV.B	#1, W12
0xE46C	0xB3C06B  	MOV.B	#6, W11
0xE46E	0x780500  	MOV	W0, W10
0xE470	0x07B98C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8857 :: 		TitleText := Title_ModbusMenu;
0xE472	0x470062  	ADD	W14, #2, W0
0xE474	0x2139E1  	MOV	#lo_addr(_Title_ModbusMenu), W1
0xE476	0x07F1E7  	RCALL	___CS2S
0xE478	0x780080  	MOV	W0, W1
0xE47A	0xEF2000  	CLR	W0
0xE47C	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8858 :: 		ltrim(TitleText);
0xE47E	0x90180E  	MOV	[W14+48], W0
0xE480	0x780500  	MOV	W0, W10
0xE482	0x07DF18  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8859 :: 		Glcd_Write_Text(TitleText,                 6,  Row3, Black);  // 9
0xE484	0x470062  	ADD	W14, #2, W0
0xE486	0xB3C01D  	MOV.B	#1, W13
0xE488	0xB3C02C  	MOV.B	#2, W12
0xE48A	0xB3C06B  	MOV.B	#6, W11
0xE48C	0x780500  	MOV	W0, W10
0xE48E	0x07B97D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8861 :: 		TitleText := Title_LangMenu;
0xE490	0x470062  	ADD	W14, #2, W0
0xE492	0x213491  	MOV	#lo_addr(_Title_LangMenu), W1
0xE494	0x07F1D8  	RCALL	___CS2S
0xE496	0x780080  	MOV	W0, W1
0xE498	0xEF2000  	CLR	W0
0xE49A	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8862 :: 		ltrim(TitleText);
0xE49C	0x90180E  	MOV	[W14+48], W0
0xE49E	0x780500  	MOV	W0, W10
0xE4A0	0x07DF09  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8863 :: 		Glcd_Write_Text(TitleText,                 6,  Row4, Black);  // 10
0xE4A2	0x470062  	ADD	W14, #2, W0
0xE4A4	0xB3C01D  	MOV.B	#1, W13
0xE4A6	0xB3C03C  	MOV.B	#3, W12
0xE4A8	0xB3C06B  	MOV.B	#6, W11
0xE4AA	0x780500  	MOV	W0, W10
0xE4AC	0x07B96E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8865 :: 		TitleText := Title_Event;
0xE4AE	0x470062  	ADD	W14, #2, W0
0xE4B0	0x213341  	MOV	#lo_addr(_Title_Event), W1
0xE4B2	0x07F1C9  	RCALL	___CS2S
0xE4B4	0x780080  	MOV	W0, W1
0xE4B6	0xEF2000  	CLR	W0
0xE4B8	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8866 :: 		ltrim(TitleText);
0xE4BA	0x90180E  	MOV	[W14+48], W0
0xE4BC	0x780500  	MOV	W0, W10
0xE4BE	0x07DEFA  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8867 :: 		Glcd_Write_Text(TitleText,                 6,  Row5, Black);  // 11
0xE4C0	0x470062  	ADD	W14, #2, W0
0xE4C2	0xB3C01D  	MOV.B	#1, W13
0xE4C4	0xB3C04C  	MOV.B	#4, W12
0xE4C6	0xB3C06B  	MOV.B	#6, W11
0xE4C8	0x780500  	MOV	W0, W10
0xE4CA	0x07B95F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8869 :: 		TitleText := Title_AuthMenu;
0xE4CC	0x470062  	ADD	W14, #2, W0
0xE4CE	0x2135E1  	MOV	#lo_addr(_Title_AuthMenu), W1
0xE4D0	0x07F1BA  	RCALL	___CS2S
0xE4D2	0x780080  	MOV	W0, W1
0xE4D4	0xEF2000  	CLR	W0
0xE4D6	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8870 :: 		ltrim(TitleText);
0xE4D8	0x90180E  	MOV	[W14+48], W0
0xE4DA	0x780500  	MOV	W0, W10
0xE4DC	0x07DEEB  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8871 :: 		Glcd_Write_Text(TitleText,                 6,  Row6, Black);  // 12
0xE4DE	0x470062  	ADD	W14, #2, W0
0xE4E0	0xB3C01D  	MOV.B	#1, W13
0xE4E2	0xB3C05C  	MOV.B	#5, W12
0xE4E4	0xB3C06B  	MOV.B	#6, W11
0xE4E6	0x780500  	MOV	W0, W10
0xE4E8	0x07B950  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8873 :: 		TitleText := SubTitle_Back;
0xE4EA	0x470062  	ADD	W14, #2, W0
0xE4EC	0x214541  	MOV	#lo_addr(_SubTitle_Back), W1
0xE4EE	0x07F1AB  	RCALL	___CS2S
0xE4F0	0x780080  	MOV	W0, W1
0xE4F2	0xEF2000  	CLR	W0
0xE4F4	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8874 :: 		ltrim(TitleText);
0xE4F6	0x90180E  	MOV	[W14+48], W0
0xE4F8	0x780500  	MOV	W0, W10
0xE4FA	0x07DEDC  	RCALL	_ltrim
;GRR3000LManagementPanel.mpas,8875 :: 		Glcd_Write_Text(TitleText,                 6,  Row7, Black);  // 13
0xE4FC	0x470062  	ADD	W14, #2, W0
0xE4FE	0xB3C01D  	MOV.B	#1, W13
0xE500	0xB3C06C  	MOV.B	#6, W12
0xE502	0xB3C06B  	MOV.B	#6, W11
0xE504	0x780500  	MOV	W0, W10
0xE506	0x07B941  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8877 :: 		i := 2;
0xE508	0xB3C020  	MOV.B	#2, W0
0xE50A	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8878 :: 		end;
L__MainMenu4150:
;GRR3000LManagementPanel.mpas,8879 :: 		end;
L__MainMenu4147:
L__MainMenu4142:
;GRR3000LManagementPanel.mpas,8883 :: 		1: begin  // ac sett
0xE50C	0x90400E  	MOV.B	[W14+0], W0
0xE50E	0xE10461  	CP.B	W0, #1
0xE510	0x3A0023  	BRA NZ	L__MainMenu4155
L__MainMenu5676:
;GRR3000LManagementPanel.mpas,8885 :: 		if (Ok_Button =0) then
0xE512	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE514	0x370020  	BRA	L__MainMenu4157
;GRR3000LManagementPanel.mpas,8887 :: 		while (Ok_Button =0) do
L__MainMenu4160:
0xE516	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE518	0x370002  	BRA	L__MainMenu4161
;GRR3000LManagementPanel.mpas,8889 :: 		asm ClrWDT; end;
0xE51A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8890 :: 		end;
0xE51C	0x37FFFC  	BRA	L__MainMenu4160
L__MainMenu4161:
;GRR3000LManagementPanel.mpas,8892 :: 		if (Confirm_AcMenuBit = 1) then
0xE51E	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0xE520	0xA69010  	BTSS	[W0], BitPos(_Confirm_AcMenuBit+0)
0xE522	0x370007  	BRA	L__MainMenu4165
;GRR3000LManagementPanel.mpas,8894 :: 		AC_Settings;
0xE524	0x07DEE0  	RCALL	_AC_Settings
;GRR3000LManagementPanel.mpas,8895 :: 		MainMenuExit := 0x00;
0xE526	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE528	0xEF2000  	CLR	W0
0xE52A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8896 :: 		i            := 2;
0xE52C	0xB3C020  	MOV.B	#2, W0
0xE52E	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8897 :: 		end else
0xE530	0x370012  	BRA	L__MainMenu4166
L__MainMenu4165:
;GRR3000LManagementPanel.mpas,8899 :: 		Glcd_Image(@notauthority);
0xE532	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE534	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE536	0x070184  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,8903 :: 		Pause_ms(600);
0xE538	0x20258A  	MOV	#600, W10
0xE53A	0x07FCAD  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8904 :: 		asm ClrWDT; end;
0xE53C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8905 :: 		Pause_ms(600);
0xE53E	0x20258A  	MOV	#600, W10
0xE540	0x07FCAA  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8906 :: 		MainMenuExit := 0;
0xE542	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE544	0xEF2000  	CLR	W0
0xE546	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8909 :: 		MainMenuExit := 0x00;
0xE548	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE54A	0xEF2000  	CLR	W0
0xE54C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8910 :: 		Glcd_Fill(0x00);
0xE54E	0xEF2014  	CLR	W10
0xE550	0x07D9BD  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8911 :: 		i := 2;
0xE552	0xB3C020  	MOV.B	#2, W0
0xE554	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8912 :: 		end;
L__MainMenu4166:
;GRR3000LManagementPanel.mpas,8913 :: 		end;
L__MainMenu4157:
;GRR3000LManagementPanel.mpas,8915 :: 		end;
0xE556	0x370158  	BRA	L__MainMenu4152
L__MainMenu4155:
;GRR3000LManagementPanel.mpas,8917 :: 		2: begin  // dc sett
0xE558	0x90400E  	MOV.B	[W14+0], W0
0xE55A	0xE10462  	CP.B	W0, #2
0xE55C	0x3A0023  	BRA NZ	L__MainMenu4169
L__MainMenu5677:
;GRR3000LManagementPanel.mpas,8919 :: 		if (Ok_Button =0) then
0xE55E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE560	0x370020  	BRA	L__MainMenu4171
;GRR3000LManagementPanel.mpas,8921 :: 		while (Ok_Button =0) do
L__MainMenu4174:
0xE562	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE564	0x370002  	BRA	L__MainMenu4175
;GRR3000LManagementPanel.mpas,8923 :: 		asm ClrWDT; end;
0xE566	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8924 :: 		end;
0xE568	0x37FFFC  	BRA	L__MainMenu4174
L__MainMenu4175:
;GRR3000LManagementPanel.mpas,8926 :: 		if (Confirm_DcMenuBit = 1) then
0xE56A	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0xE56C	0xA68010  	BTSS	[W0], BitPos(_Confirm_DcMenuBit+0)
0xE56E	0x370007  	BRA	L__MainMenu4179
;GRR3000LManagementPanel.mpas,8928 :: 		DC_Settings;
0xE570	0x07DB44  	RCALL	_DC_Settings
;GRR3000LManagementPanel.mpas,8929 :: 		MainMenuExit := 0x00;
0xE572	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE574	0xEF2000  	CLR	W0
0xE576	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8930 :: 		i := 2;
0xE578	0xB3C020  	MOV.B	#2, W0
0xE57A	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8931 :: 		end else
0xE57C	0x370012  	BRA	L__MainMenu4180
L__MainMenu4179:
;GRR3000LManagementPanel.mpas,8934 :: 		Glcd_Image(@notauthority);
0xE57E	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE580	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE582	0x07015E  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,8935 :: 		Pause_ms(600);
0xE584	0x20258A  	MOV	#600, W10
0xE586	0x07FC87  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8936 :: 		asm ClrWDT; end;
0xE588	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8937 :: 		Pause_ms(600);
0xE58A	0x20258A  	MOV	#600, W10
0xE58C	0x07FC84  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8938 :: 		MainMenuExit := 0;
0xE58E	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE590	0xEF2000  	CLR	W0
0xE592	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8940 :: 		MainMenuExit := 0x00;
0xE594	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE596	0xEF2000  	CLR	W0
0xE598	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8941 :: 		Glcd_Fill(0x00);
0xE59A	0xEF2014  	CLR	W10
0xE59C	0x07D997  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8942 :: 		i := 2;
0xE59E	0xB3C020  	MOV.B	#2, W0
0xE5A0	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8943 :: 		end;
L__MainMenu4180:
;GRR3000LManagementPanel.mpas,8945 :: 		end;
L__MainMenu4171:
;GRR3000LManagementPanel.mpas,8947 :: 		end;
0xE5A2	0x370132  	BRA	L__MainMenu4152
L__MainMenu4169:
;GRR3000LManagementPanel.mpas,8949 :: 		3: begin //  dropper sett
0xE5A4	0x90400E  	MOV.B	[W14+0], W0
0xE5A6	0xE10463  	CP.B	W0, #3
0xE5A8	0x3A0023  	BRA NZ	L__MainMenu4183
L__MainMenu5678:
;GRR3000LManagementPanel.mpas,8951 :: 		if (Ok_Button =0) then
0xE5AA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE5AC	0x370020  	BRA	L__MainMenu4185
;GRR3000LManagementPanel.mpas,8953 :: 		while (Ok_Button =0) do
L__MainMenu4188:
0xE5AE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE5B0	0x370002  	BRA	L__MainMenu4189
;GRR3000LManagementPanel.mpas,8955 :: 		asm ClrWDT; end;
0xE5B2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8956 :: 		end;
0xE5B4	0x37FFFC  	BRA	L__MainMenu4188
L__MainMenu4189:
;GRR3000LManagementPanel.mpas,8958 :: 		if (Confirm_OperaMenuBit = 1) then
0xE5B6	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0xE5B8	0xA67010  	BTSS	[W0], BitPos(_Confirm_OperaMenuBit+0)
0xE5BA	0x370007  	BRA	L__MainMenu4193
;GRR3000LManagementPanel.mpas,8960 :: 		Dropper_Module;
0xE5BC	0x07EE74  	RCALL	_Dropper_Module
;GRR3000LManagementPanel.mpas,8961 :: 		MainMenuExit := 0x00;
0xE5BE	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE5C0	0xEF2000  	CLR	W0
0xE5C2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8962 :: 		i := 2;
0xE5C4	0xB3C020  	MOV.B	#2, W0
0xE5C6	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8963 :: 		end else
0xE5C8	0x370012  	BRA	L__MainMenu4194
L__MainMenu4193:
;GRR3000LManagementPanel.mpas,8966 :: 		Glcd_Image(@notauthority);
0xE5CA	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE5CC	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE5CE	0x070138  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,8967 :: 		Pause_ms(600);
0xE5D0	0x20258A  	MOV	#600, W10
0xE5D2	0x07FC61  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8968 :: 		asm ClrWDT; end;
0xE5D4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8969 :: 		Pause_ms(600);
0xE5D6	0x20258A  	MOV	#600, W10
0xE5D8	0x07FC5E  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8970 :: 		MainMenuExit := 0;
0xE5DA	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE5DC	0xEF2000  	CLR	W0
0xE5DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8972 :: 		MainMenuExit := 0x00;
0xE5E0	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE5E2	0xEF2000  	CLR	W0
0xE5E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8973 :: 		Glcd_Fill(0x00);
0xE5E6	0xEF2014  	CLR	W10
0xE5E8	0x07D971  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8974 :: 		i := 2;
0xE5EA	0xB3C020  	MOV.B	#2, W0
0xE5EC	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8975 :: 		end;
L__MainMenu4194:
;GRR3000LManagementPanel.mpas,8977 :: 		end;
L__MainMenu4185:
;GRR3000LManagementPanel.mpas,8979 :: 		end;
0xE5EE	0x37010C  	BRA	L__MainMenu4152
L__MainMenu4183:
;GRR3000LManagementPanel.mpas,8981 :: 		4: begin // battery set
0xE5F0	0x90400E  	MOV.B	[W14+0], W0
0xE5F2	0xE10464  	CP.B	W0, #4
0xE5F4	0x3A0023  	BRA NZ	L__MainMenu4197
L__MainMenu5679:
;GRR3000LManagementPanel.mpas,8983 :: 		if (Ok_Button =0) then
0xE5F6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE5F8	0x370020  	BRA	L__MainMenu4199
;GRR3000LManagementPanel.mpas,8985 :: 		while (Ok_Button =0) do
L__MainMenu4202:
0xE5FA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE5FC	0x370002  	BRA	L__MainMenu4203
;GRR3000LManagementPanel.mpas,8987 :: 		asm ClrWDT; end;
0xE5FE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8988 :: 		end;
0xE600	0x37FFFC  	BRA	L__MainMenu4202
L__MainMenu4203:
;GRR3000LManagementPanel.mpas,8990 :: 		if (Confirm_BattMenuBit = 1) then
0xE602	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0xE604	0xA62010  	BTSS	[W0], BitPos(_Confirm_BattMenuBit+0)
0xE606	0x370007  	BRA	L__MainMenu4207
;GRR3000LManagementPanel.mpas,8992 :: 		Battery_Settings;
0xE608	0x07E0A2  	RCALL	_Battery_Settings
;GRR3000LManagementPanel.mpas,8993 :: 		MainMenuExit := 0x00;
0xE60A	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE60C	0xEF2000  	CLR	W0
0xE60E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8994 :: 		i := 2;
0xE610	0xB3C020  	MOV.B	#2, W0
0xE612	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,8995 :: 		end else
0xE614	0x370012  	BRA	L__MainMenu4208
L__MainMenu4207:
;GRR3000LManagementPanel.mpas,8998 :: 		Glcd_Image(@notauthority);
0xE616	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE618	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE61A	0x070112  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,8999 :: 		Pause_ms(600);
0xE61C	0x20258A  	MOV	#600, W10
0xE61E	0x07FC3B  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9000 :: 		asm ClrWDT; end;
0xE620	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9001 :: 		Pause_ms(600);
0xE622	0x20258A  	MOV	#600, W10
0xE624	0x07FC38  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9002 :: 		MainMenuExit := 0;
0xE626	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE628	0xEF2000  	CLR	W0
0xE62A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9004 :: 		MainMenuExit := 0x00;
0xE62C	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE62E	0xEF2000  	CLR	W0
0xE630	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9005 :: 		Glcd_Fill(0x00);
0xE632	0xEF2014  	CLR	W10
0xE634	0x07D94B  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9006 :: 		i := 2;
0xE636	0xB3C020  	MOV.B	#2, W0
0xE638	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9007 :: 		end;
L__MainMenu4208:
;GRR3000LManagementPanel.mpas,9009 :: 		end;
L__MainMenu4199:
;GRR3000LManagementPanel.mpas,9011 :: 		end;
0xE63A	0x3700E6  	BRA	L__MainMenu4152
L__MainMenu4197:
;GRR3000LManagementPanel.mpas,9014 :: 		5: begin // battery maintenance
0xE63C	0x90400E  	MOV.B	[W14+0], W0
0xE63E	0xE10465  	CP.B	W0, #5
0xE640	0x3A000E  	BRA NZ	L__MainMenu4211
L__MainMenu5680:
;GRR3000LManagementPanel.mpas,9016 :: 		asm ClrWDT; end;
0xE642	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9018 :: 		if (Ok_Button =0) then
0xE644	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE646	0x37000A  	BRA	L__MainMenu4213
;GRR3000LManagementPanel.mpas,9020 :: 		while (Ok_Button =0) do
L__MainMenu4216:
0xE648	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE64A	0x370002  	BRA	L__MainMenu4217
;GRR3000LManagementPanel.mpas,9022 :: 		asm clrwdt; end;
0xE64C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9023 :: 		end;
0xE64E	0x37FFFC  	BRA	L__MainMenu4216
L__MainMenu4217:
;GRR3000LManagementPanel.mpas,9025 :: 		AkuTestBakim();
0xE650	0x07E97C  	RCALL	_AkuTestBakim
;GRR3000LManagementPanel.mpas,9026 :: 		MainMenuExit := 0x00;
0xE652	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE654	0xEF2000  	CLR	W0
0xE656	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9027 :: 		i := 2;
0xE658	0xB3C020  	MOV.B	#2, W0
0xE65A	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9029 :: 		end;
L__MainMenu4213:
;GRR3000LManagementPanel.mpas,9032 :: 		end;
0xE65C	0x3700D5  	BRA	L__MainMenu4152
L__MainMenu4211:
;GRR3000LManagementPanel.mpas,9034 :: 		6: begin // kaçak
0xE65E	0x90400E  	MOV.B	[W14+0], W0
0xE660	0xE10466  	CP.B	W0, #6
0xE662	0x3A0023  	BRA NZ	L__MainMenu4222
L__MainMenu5681:
;GRR3000LManagementPanel.mpas,9036 :: 		if (Ok_Button =0) then
0xE664	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE666	0x370020  	BRA	L__MainMenu4224
;GRR3000LManagementPanel.mpas,9038 :: 		while (Ok_Button =0) do
L__MainMenu4227:
0xE668	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE66A	0x370002  	BRA	L__MainMenu4228
;GRR3000LManagementPanel.mpas,9040 :: 		asm ClrWDT; end;
0xE66C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9041 :: 		end;
0xE66E	0x37FFFC  	BRA	L__MainMenu4227
L__MainMenu4228:
;GRR3000LManagementPanel.mpas,9043 :: 		if (Confirm_LeakaMenuBit = 1) then
0xE670	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0xE672	0xA61010  	BTSS	[W0], BitPos(_Confirm_LeakaMenuBit+0)
0xE674	0x370007  	BRA	L__MainMenu4232
;GRR3000LManagementPanel.mpas,9045 :: 		Leakage_Settings;
0xE676	0x07AD0D  	RCALL	_Leakage_Settings
;GRR3000LManagementPanel.mpas,9046 :: 		MainMenuExit := 0x00;
0xE678	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE67A	0xEF2000  	CLR	W0
0xE67C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9047 :: 		i := 2;
0xE67E	0xB3C020  	MOV.B	#2, W0
0xE680	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9048 :: 		end else
0xE682	0x370012  	BRA	L__MainMenu4233
L__MainMenu4232:
;GRR3000LManagementPanel.mpas,9051 :: 		Glcd_Image(@notauthority);
0xE684	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE686	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE688	0x0700DB  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,9052 :: 		Pause_ms(600);
0xE68A	0x20258A  	MOV	#600, W10
0xE68C	0x07FC04  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9053 :: 		asm ClrWDT; end;
0xE68E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9054 :: 		Pause_ms(600);
0xE690	0x20258A  	MOV	#600, W10
0xE692	0x07FC01  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9055 :: 		MainMenuExit := 0;
0xE694	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE696	0xEF2000  	CLR	W0
0xE698	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9057 :: 		MainMenuExit := 0x00;
0xE69A	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE69C	0xEF2000  	CLR	W0
0xE69E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9058 :: 		Glcd_Fill(0x00);
0xE6A0	0xEF2014  	CLR	W10
0xE6A2	0x07D914  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9059 :: 		i := 2;
0xE6A4	0xB3C020  	MOV.B	#2, W0
0xE6A6	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9060 :: 		end;
L__MainMenu4233:
;GRR3000LManagementPanel.mpas,9062 :: 		end;
L__MainMenu4224:
;GRR3000LManagementPanel.mpas,9065 :: 		end;
0xE6A8	0x3700AF  	BRA	L__MainMenu4152
L__MainMenu4222:
;GRR3000LManagementPanel.mpas,9068 :: 		7: begin //  temperature set
0xE6AA	0x90400E  	MOV.B	[W14+0], W0
0xE6AC	0xE10467  	CP.B	W0, #7
0xE6AE	0x3A0023  	BRA NZ	L__MainMenu4236
L__MainMenu5682:
;GRR3000LManagementPanel.mpas,9070 :: 		if (Ok_Button =0) then
0xE6B0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE6B2	0x370020  	BRA	L__MainMenu4238
;GRR3000LManagementPanel.mpas,9072 :: 		while (Ok_Button =0) do
L__MainMenu4241:
0xE6B4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE6B6	0x370002  	BRA	L__MainMenu4242
;GRR3000LManagementPanel.mpas,9074 :: 		asm ClrWDT; end;
0xE6B8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9075 :: 		end;
0xE6BA	0x37FFFC  	BRA	L__MainMenu4241
L__MainMenu4242:
;GRR3000LManagementPanel.mpas,9077 :: 		if (Confirm_TempeMenuBit = 1) then
0xE6BC	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0xE6BE	0xA63010  	BTSS	[W0], BitPos(_Confirm_TempeMenuBit+0)
0xE6C0	0x370007  	BRA	L__MainMenu4246
;GRR3000LManagementPanel.mpas,9079 :: 		Temperature_Settings;
0xE6C2	0x07AAC6  	RCALL	_Temperature_Settings
;GRR3000LManagementPanel.mpas,9080 :: 		MainMenuExit := 0x00;
0xE6C4	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE6C6	0xEF2000  	CLR	W0
0xE6C8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9081 :: 		i := 2;
0xE6CA	0xB3C020  	MOV.B	#2, W0
0xE6CC	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9082 :: 		end else
0xE6CE	0x370012  	BRA	L__MainMenu4247
L__MainMenu4246:
;GRR3000LManagementPanel.mpas,9085 :: 		Glcd_Image(@notauthority);
0xE6D0	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE6D2	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE6D4	0x0700B5  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,9086 :: 		Pause_ms(600);
0xE6D6	0x20258A  	MOV	#600, W10
0xE6D8	0x07FBDE  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9087 :: 		asm ClrWDT; end;
0xE6DA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9088 :: 		Pause_ms(600);
0xE6DC	0x20258A  	MOV	#600, W10
0xE6DE	0x07FBDB  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9089 :: 		MainMenuExit := 0;
0xE6E0	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE6E2	0xEF2000  	CLR	W0
0xE6E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9091 :: 		MainMenuExit := 0x00;
0xE6E6	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE6E8	0xEF2000  	CLR	W0
0xE6EA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9092 :: 		Glcd_Fill(0x00);
0xE6EC	0xEF2014  	CLR	W10
0xE6EE	0x07D8EE  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9093 :: 		i := 2;
0xE6F0	0xB3C020  	MOV.B	#2, W0
0xE6F2	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9094 :: 		end;
L__MainMenu4247:
;GRR3000LManagementPanel.mpas,9096 :: 		end;
L__MainMenu4238:
;GRR3000LManagementPanel.mpas,9098 :: 		end;
0xE6F4	0x370089  	BRA	L__MainMenu4152
L__MainMenu4236:
;GRR3000LManagementPanel.mpas,9100 :: 		8: begin // date-clock sett
0xE6F6	0x90400E  	MOV.B	[W14+0], W0
0xE6F8	0xE10468  	CP.B	W0, #8
0xE6FA	0x3A0023  	BRA NZ	L__MainMenu4250
L__MainMenu5683:
;GRR3000LManagementPanel.mpas,9102 :: 		if (Ok_Button =0) then
0xE6FC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE6FE	0x370020  	BRA	L__MainMenu4252
;GRR3000LManagementPanel.mpas,9104 :: 		while (Ok_Button =0) do
L__MainMenu4255:
0xE700	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE702	0x370002  	BRA	L__MainMenu4256
;GRR3000LManagementPanel.mpas,9106 :: 		asm ClrWDT; end;
0xE704	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9107 :: 		end;
0xE706	0x37FFFC  	BRA	L__MainMenu4255
L__MainMenu4256:
;GRR3000LManagementPanel.mpas,9109 :: 		if (Confirm_ClockMenuBit = 1) then
0xE708	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0xE70A	0xA65010  	BTSS	[W0], BitPos(_Confirm_ClockMenuBit+0)
0xE70C	0x370007  	BRA	L__MainMenu4260
;GRR3000LManagementPanel.mpas,9111 :: 		Clock_Settings;
0xE70E	0x079EDE  	RCALL	_Clock_Settings
;GRR3000LManagementPanel.mpas,9112 :: 		MainMenuExit := 0x00;
0xE710	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE712	0xEF2000  	CLR	W0
0xE714	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9113 :: 		i := 3;
0xE716	0xB3C030  	MOV.B	#3, W0
0xE718	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9114 :: 		end else
0xE71A	0x370012  	BRA	L__MainMenu4261
L__MainMenu4260:
;GRR3000LManagementPanel.mpas,9117 :: 		Glcd_Image(@notauthority);
0xE71C	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE71E	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE720	0x07008F  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,9118 :: 		Pause_ms(600);
0xE722	0x20258A  	MOV	#600, W10
0xE724	0x07FBB8  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9119 :: 		asm ClrWDT; end;
0xE726	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9120 :: 		Pause_ms(600);
0xE728	0x20258A  	MOV	#600, W10
0xE72A	0x07FBB5  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9121 :: 		MainMenuExit := 0;
0xE72C	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE72E	0xEF2000  	CLR	W0
0xE730	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9123 :: 		MainMenuExit := 0x00;
0xE732	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE734	0xEF2000  	CLR	W0
0xE736	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9124 :: 		Glcd_Fill(0x00);
0xE738	0xEF2014  	CLR	W10
0xE73A	0x07D8C8  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9125 :: 		i := 3;
0xE73C	0xB3C030  	MOV.B	#3, W0
0xE73E	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9126 :: 		end;
L__MainMenu4261:
;GRR3000LManagementPanel.mpas,9128 :: 		end;
L__MainMenu4252:
;GRR3000LManagementPanel.mpas,9130 :: 		end;
0xE740	0x370063  	BRA	L__MainMenu4152
L__MainMenu4250:
;GRR3000LManagementPanel.mpas,9132 :: 		9: begin // modbus sett
0xE742	0x90400E  	MOV.B	[W14+0], W0
0xE744	0xE10469  	CP.B	W0, #9
0xE746	0x3A0023  	BRA NZ	L__MainMenu4264
L__MainMenu5684:
;GRR3000LManagementPanel.mpas,9134 :: 		if (Ok_Button =0) then
0xE748	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE74A	0x370020  	BRA	L__MainMenu4266
;GRR3000LManagementPanel.mpas,9136 :: 		while (Ok_Button =0) do
L__MainMenu4269:
0xE74C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE74E	0x370002  	BRA	L__MainMenu4270
;GRR3000LManagementPanel.mpas,9138 :: 		asm ClrWDT; end;
0xE750	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9139 :: 		end;
0xE752	0x37FFFC  	BRA	L__MainMenu4269
L__MainMenu4270:
;GRR3000LManagementPanel.mpas,9141 :: 		if (Confirm_ModbusMenuBit = 1) then
0xE754	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0xE756	0xA64010  	BTSS	[W0], BitPos(_Confirm_ModbusMenuBit+0)
0xE758	0x370007  	BRA	L__MainMenu4274
;GRR3000LManagementPanel.mpas,9143 :: 		Modbus_Settings;
0xE75A	0x07A39C  	RCALL	_Modbus_Settings
;GRR3000LManagementPanel.mpas,9144 :: 		MainMenuExit := 0x00;
0xE75C	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE75E	0xEF2000  	CLR	W0
0xE760	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9145 :: 		i := 3;
0xE762	0xB3C030  	MOV.B	#3, W0
0xE764	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9146 :: 		end else
0xE766	0x370012  	BRA	L__MainMenu4275
L__MainMenu4274:
;GRR3000LManagementPanel.mpas,9149 :: 		Glcd_Image(@notauthority);
0xE768	0x28648A  	MOV	#lo_addr(_notauthority), W10
0xE76A	0x20002B  	MOV	#higher_addr(_notauthority), W11
0xE76C	0x070069  	RCALL	_Glcd_Image
;GRR3000LManagementPanel.mpas,9150 :: 		Pause_ms(600);
0xE76E	0x20258A  	MOV	#600, W10
0xE770	0x07FB92  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9151 :: 		asm ClrWDT; end;
0xE772	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9152 :: 		Pause_ms(600);
0xE774	0x20258A  	MOV	#600, W10
0xE776	0x07FB8F  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,9153 :: 		MainMenuExit := 0;
0xE778	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE77A	0xEF2000  	CLR	W0
0xE77C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9155 :: 		MainMenuExit := 0x00;
0xE77E	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE780	0xEF2000  	CLR	W0
0xE782	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9156 :: 		Glcd_Fill(0x00);
0xE784	0xEF2014  	CLR	W10
0xE786	0x07D8A2  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,9157 :: 		i := 3;
0xE788	0xB3C030  	MOV.B	#3, W0
0xE78A	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9158 :: 		end;
L__MainMenu4275:
;GRR3000LManagementPanel.mpas,9160 :: 		end;
L__MainMenu4266:
;GRR3000LManagementPanel.mpas,9162 :: 		end;
0xE78C	0x37003D  	BRA	L__MainMenu4152
L__MainMenu4264:
;GRR3000LManagementPanel.mpas,9164 :: 		10: begin  // hakkýnda
0xE78E	0x90400E  	MOV.B	[W14+0], W0
0xE790	0xE1046A  	CP.B	W0, #10
0xE792	0x3A000D  	BRA NZ	L__MainMenu4278
L__MainMenu5685:
;GRR3000LManagementPanel.mpas,9166 :: 		if (Ok_Button =0) then
0xE794	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE796	0x37000A  	BRA	L__MainMenu4280
;GRR3000LManagementPanel.mpas,9168 :: 		while (Ok_Button =0) do
L__MainMenu4283:
0xE798	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE79A	0x370002  	BRA	L__MainMenu4284
;GRR3000LManagementPanel.mpas,9170 :: 		asm ClrWDT; end;
0xE79C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9171 :: 		end;
0xE79E	0x37FFFC  	BRA	L__MainMenu4283
L__MainMenu4284:
;GRR3000LManagementPanel.mpas,9173 :: 		Language_Settings();
0xE7A0	0x07AE91  	RCALL	_Language_Settings
;GRR3000LManagementPanel.mpas,9175 :: 		MainMenuExit := 0x00;
0xE7A2	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE7A4	0xEF2000  	CLR	W0
0xE7A6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9176 :: 		i := 3;
0xE7A8	0xB3C030  	MOV.B	#3, W0
0xE7AA	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9178 :: 		end;
L__MainMenu4280:
;GRR3000LManagementPanel.mpas,9180 :: 		end;
0xE7AC	0x37002D  	BRA	L__MainMenu4152
L__MainMenu4278:
;GRR3000LManagementPanel.mpas,9182 :: 		11: begin  // log
0xE7AE	0x90400E  	MOV.B	[W14+0], W0
0xE7B0	0xE1046B  	CP.B	W0, #11
0xE7B2	0x3A000D  	BRA NZ	L__MainMenu4289
L__MainMenu5686:
;GRR3000LManagementPanel.mpas,9184 :: 		if (Ok_Button =0) then
0xE7B4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7B6	0x37000A  	BRA	L__MainMenu4291
;GRR3000LManagementPanel.mpas,9186 :: 		while (Ok_Button =0) do
L__MainMenu4294:
0xE7B8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7BA	0x370002  	BRA	L__MainMenu4295
;GRR3000LManagementPanel.mpas,9188 :: 		asm ClrWDT; end;
0xE7BC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9189 :: 		end;
0xE7BE	0x37FFFC  	BRA	L__MainMenu4294
L__MainMenu4295:
;GRR3000LManagementPanel.mpas,9191 :: 		Log_Settings;
0xE7C0	0x07AFCC  	RCALL	_Log_Settings
;GRR3000LManagementPanel.mpas,9192 :: 		MainMenuExit := 0x00;
0xE7C2	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE7C4	0xEF2000  	CLR	W0
0xE7C6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9193 :: 		i := 3;
0xE7C8	0xB3C030  	MOV.B	#3, W0
0xE7CA	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9194 :: 		end;
L__MainMenu4291:
;GRR3000LManagementPanel.mpas,9196 :: 		end;
0xE7CC	0x37001D  	BRA	L__MainMenu4152
L__MainMenu4289:
;GRR3000LManagementPanel.mpas,9198 :: 		12: begin  // password set
0xE7CE	0x90400E  	MOV.B	[W14+0], W0
0xE7D0	0xE1046C  	CP.B	W0, #12
0xE7D2	0x3A000D  	BRA NZ	L__MainMenu4300
L__MainMenu5687:
;GRR3000LManagementPanel.mpas,9200 :: 		if (Ok_Button =0) then
0xE7D4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7D6	0x37000A  	BRA	L__MainMenu4302
;GRR3000LManagementPanel.mpas,9202 :: 		while (Ok_Button =0) do
L__MainMenu4305:
0xE7D8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7DA	0x370002  	BRA	L__MainMenu4306
;GRR3000LManagementPanel.mpas,9204 :: 		asm ClrWDT; end;
0xE7DC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9205 :: 		end;
0xE7DE	0x37FFFC  	BRA	L__MainMenu4305
L__MainMenu4306:
;GRR3000LManagementPanel.mpas,9207 :: 		Password_Settings;
0xE7E0	0x07A5C2  	RCALL	_Password_Settings
;GRR3000LManagementPanel.mpas,9208 :: 		MainMenuExit := 0x00;
0xE7E2	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE7E4	0xEF2000  	CLR	W0
0xE7E6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9209 :: 		i := 3;
0xE7E8	0xB3C030  	MOV.B	#3, W0
0xE7EA	0x984710  	MOV.B	W0, [W14+1]
;GRR3000LManagementPanel.mpas,9210 :: 		end;
L__MainMenu4302:
;GRR3000LManagementPanel.mpas,9211 :: 		end;
0xE7EC	0x37000D  	BRA	L__MainMenu4152
L__MainMenu4300:
;GRR3000LManagementPanel.mpas,9215 :: 		13: begin  // geri
0xE7EE	0x90400E  	MOV.B	[W14+0], W0
0xE7F0	0xE1046D  	CP.B	W0, #13
0xE7F2	0x3A000A  	BRA NZ	L__MainMenu4311
L__MainMenu5688:
;GRR3000LManagementPanel.mpas,9217 :: 		if (Ok_Button =0) then
0xE7F4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7F6	0x370007  	BRA	L__MainMenu4313
;GRR3000LManagementPanel.mpas,9219 :: 		while (Ok_Button =0) do
L__MainMenu4316:
0xE7F8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xE7FA	0x370002  	BRA	L__MainMenu4317
;GRR3000LManagementPanel.mpas,9221 :: 		asm ClrWDT; end;
0xE7FC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,9222 :: 		end;
0xE7FE	0x37FFFC  	BRA	L__MainMenu4316
L__MainMenu4317:
;GRR3000LManagementPanel.mpas,9223 :: 		MainMenuExit := 1;
0xE800	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xE802	0xB3C010  	MOV.B	#1, W0
0xE804	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,9225 :: 		end;
L__MainMenu4313:
;GRR3000LManagementPanel.mpas,9226 :: 		end;
0xE806	0x370000  	BRA	L__MainMenu4152
L__MainMenu4311:
L__MainMenu4152:
;GRR3000LManagementPanel.mpas,9230 :: 		end;
0xE808	0x37FCF8  	BRA	L__MainMenu4114
L__MainMenu4115:
;GRR3000LManagementPanel.mpas,9232 :: 		end;
L_end_MainMenu:
0xE80A	0x7806CF  	POP	W13
0xE80C	0x78064F  	POP	W12
0xE80E	0x7805CF  	POP	W11
0xE810	0x78054F  	POP	W10
0xE812	0xFA8000  	ULNK
0xE814	0x060000  	RETURN
; end of _MainMenu
___CS2S:
0xC846	0xFA0000  	LNK	#0
;__Lib_System.mpas,26 :: 		
;__Lib_System.mpas,28 :: 		
L_loopCS2Ss:
;__Lib_System.mpas,29 :: 		
0xC848	0x784131  	MOV.B	[W1++], W2
;__Lib_System.mpas,30 :: 		
0xC84A	0xE24004  	CP0.B	W2
;__Lib_System.mpas,31 :: 		
0xC84C	0x320002  	BRA Z	L_CS2Send
;__Lib_System.mpas,32 :: 		
0xC84E	0x785802  	MOV.B	W2, [W0++]
;__Lib_System.mpas,33 :: 		
0xC850	0x37FFFB  	BRA	L_loopCS2Ss
;__Lib_System.mpas,34 :: 		
L_CS2Send:
;__Lib_System.mpas,36 :: 		
L_end___CS2S:
0xC852	0xFA8000  	ULNK
0xC854	0x060000  	RETURN
; end of ___CS2S
_ltrim:
0xA2B4	0xFA0000  	LNK	#0
;__Lib_String.mpas,339 :: 		
;__Lib_String.mpas,340 :: 		
; ptr1 start address is: 4 (W2)
0xA2B6	0x78010A  	MOV	W10, W2
;__Lib_String.mpas,341 :: 		
; ptr2 start address is: 0 (W0)
0xA2B8	0x78000A  	MOV	W10, W0
; ptr2 end address is: 0 (W0)
; ptr1 end address is: 4 (W2)
0xA2BA	0x780180  	MOV	W0, W3
;__Lib_String.mpas,342 :: 		
L__ltrim140:
; ptr2 start address is: 6 (W3)
; ptr1 start address is: 4 (W2)
0xA2BC	0x784093  	MOV.B	[W3], W1
0xA2BE	0xB3C200  	MOV.B	#32, W0
0xA2C0	0xE10C00  	CP.B	W1, W0
0xA2C2	0x3A0002  	BRA NZ	L__ltrim141
L__ltrim270:
;__Lib_String.mpas,344 :: 		
; ptr2 start address is: 6 (W3)
0xA2C4	0xEC2006  	INC	W3
; ptr2 end address is: 6 (W3)
;__Lib_String.mpas,345 :: 		
0xA2C6	0x37FFFA  	BRA	L__ltrim140
L__ltrim141:
;__Lib_String.mpas,346 :: 		
0xA2C8	0x780083  	MOV	W3, W1
; ptr1 end address is: 4 (W2)
0xA2CA	0x780002  	MOV	W2, W0
L__ltrim144:
; ptr2 end address is: 6 (W3)
;__Lib_String.mpas,348 :: 		
; ptr2 start address is: 2 (W1)
; ptr1 start address is: 0 (W0)
; ptr2 start address is: 2 (W1)
0xA2CC	0x784811  	MOV.B	[W1], [W0]
;__Lib_String.mpas,349 :: 		
; ptr1 start address is: 4 (W2)
0xA2CE	0x400161  	ADD	W0, #1, W2
; ptr1 end address is: 0 (W0)
;__Lib_String.mpas,350 :: 		
0xA2D0	0x408061  	ADD	W1, #1, W0
0xA2D2	0x780080  	MOV	W0, W1
; ptr2 end address is: 2 (W1)
;__Lib_String.mpas,352 :: 		
0xA2D4	0x784010  	MOV.B	[W0], W0
0xA2D6	0xE10460  	CP.B	W0, #0
0xA2D8	0x320002  	BRA Z	L__ltrim147
L__ltrim271:
; ptr2 end address is: 2 (W1)
; ptr2 start address is: 2 (W1)
; ptr2 end address is: 2 (W1)
0xA2DA	0x780002  	MOV	W2, W0
0xA2DC	0x37FFF7  	BRA	L__ltrim144
L__ltrim147:
;__Lib_String.mpas,353 :: 		
0xA2DE	0xEF2000  	CLR	W0
0xA2E0	0x784900  	MOV.B	W0, [W2]
; ptr1 end address is: 4 (W2)
;__Lib_String.mpas,354 :: 		
L_end_ltrim:
0xA2E2	0xFA8000  	ULNK
0xA2E4	0x060000  	RETURN
; end of _ltrim
_AC_Settings:
;GRR3000LManagementPanel.mpas,4274 :: 		begin
;GRR3000LManagementPanel.mpas,4275 :: 		Glcd_Fill(0x00);
0xA2E6	0x781F8A  	PUSH	W10
0xA2E8	0x781F8B  	PUSH	W11
0xA2EA	0x781F8C  	PUSH	W12
0xA2EC	0x781F8D  	PUSH	W13
0xA2EE	0xEF2014  	CLR	W10
0xA2F0	0x07FAED  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,4276 :: 		MenuExit        := 0;
0xA2F2	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xA2F4	0xEF2000  	CLR	W0
0xA2F6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4277 :: 		MenuSayacValue  := 1;
0xA2F8	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xA2FA	0xB3C010  	MOV.B	#1, W0
0xA2FC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4278 :: 		Chng[3]         := 2;
0xA2FE	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xA300	0xB3C020  	MOV.B	#2, W0
0xA302	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4284 :: 		Glcd_Write_Text(Title_AcMenu,     0, Row1, Black);
0xA304	0xB3C01D  	MOV.B	#1, W13
0xA306	0xEF2018  	CLR	W12
0xA308	0xEF2016  	CLR	W11
0xA30A	0x21373A  	MOV	#lo_addr(_Title_AcMenu), W10
0xA30C	0x07DA3E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4285 :: 		Glcd_Write_Text(SubTitle_MaxVolt, 6, Row2, Black);
0xA30E	0xB3C01D  	MOV.B	#1, W13
0xA310	0xB3C01C  	MOV.B	#1, W12
0xA312	0xB3C06B  	MOV.B	#6, W11
0xA314	0x21314A  	MOV	#lo_addr(_SubTitle_MaxVolt), W10
0xA316	0x07DA39  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4286 :: 		Glcd_Write_Text(SubTitle_MinVolt, 6, Row3, Black);
0xA318	0xB3C01D  	MOV.B	#1, W13
0xA31A	0xB3C02C  	MOV.B	#2, W12
0xA31C	0xB3C06B  	MOV.B	#6, W11
0xA31E	0x21324A  	MOV	#lo_addr(_SubTitle_MinVolt), W10
0xA320	0x07DA34  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4287 :: 		Glcd_Write_Text(SubTitle_VoltDiff,6, Row4, Black);
0xA322	0xB3C01D  	MOV.B	#1, W13
0xA324	0xB3C03C  	MOV.B	#3, W12
0xA326	0xB3C06B  	MOV.B	#6, W11
0xA328	0x212C9A  	MOV	#lo_addr(_SubTitle_VoltDiff), W10
0xA32A	0x07DA2F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4288 :: 		Glcd_Write_Text(SubTitle_VoltProt,6, Row5, Black);
0xA32C	0xB3C01D  	MOV.B	#1, W13
0xA32E	0xB3C04C  	MOV.B	#4, W12
0xA330	0xB3C06B  	MOV.B	#6, W11
0xA332	0x212BBA  	MOV	#lo_addr(_SubTitle_VoltProt), W10
0xA334	0x07DA2A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4289 :: 		Glcd_Write_Text(SubTitle_Back,    6, Row6, Black);
0xA336	0xB3C01D  	MOV.B	#1, W13
0xA338	0xB3C05C  	MOV.B	#5, W12
0xA33A	0xB3C06B  	MOV.B	#6, W11
0xA33C	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0xA33E	0x07DA25  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4291 :: 		ACMaxVoltSet := EEPROM_Read(EE_ACMaxVoltSetEeAddr);
0xA340	0x2F03AA  	MOV	#61498, W10
0xA342	0x2007FB  	MOV	#127, W11
0xA344	0x07C08D  	RCALL	_EEPROM_Read
0xA346	0x8896C0  	MOV	W0, _ACMaxVoltSet
;GRR3000LManagementPanel.mpas,4292 :: 		ValueDivide(ACMaxVoltSet, 0);
0xA348	0xEF2016  	CLR	W11
0xA34A	0x780500  	MOV	W0, W10
0xA34C	0x07B3F1  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4293 :: 		WriteText := Value_Text + 'V ';
0xA34E	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA350	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA352	0x071279  	RCALL	___CS2S
0xA354	0xB3C562  	MOV.B	#86, W2
0xA356	0x785802  	MOV.B	W2, [W0++]
0xA358	0xB3C202  	MOV.B	#32, W2
0xA35A	0x785802  	MOV.B	W2, [W0++]
0xA35C	0xEF2004  	CLR	W2
0xA35E	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4294 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0xA360	0xB3C01D  	MOV.B	#1, W13
0xA362	0xB3C01C  	MOV.B	#1, W12
0xA364	0xB3C54B  	MOV.B	#84, W11
0xA366	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA368	0x07DA10  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4296 :: 		ACMinVoltSet := EEPROM_Read(EE_ACMinVoltSetEeAddr);
0xA36A	0x2F03CA  	MOV	#61500, W10
0xA36C	0x2007FB  	MOV	#127, W11
0xA36E	0x07C078  	RCALL	_EEPROM_Read
0xA370	0x8896D0  	MOV	W0, _ACMinVoltSet
;GRR3000LManagementPanel.mpas,4297 :: 		ValueDivide(ACMinVoltSet, 0);
0xA372	0xEF2016  	CLR	W11
0xA374	0x780500  	MOV	W0, W10
0xA376	0x07B3DC  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4298 :: 		WriteText := Value_Text + 'V ';
0xA378	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA37A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA37C	0x071264  	RCALL	___CS2S
0xA37E	0xB3C562  	MOV.B	#86, W2
0xA380	0x785802  	MOV.B	W2, [W0++]
0xA382	0xB3C202  	MOV.B	#32, W2
0xA384	0x785802  	MOV.B	W2, [W0++]
0xA386	0xEF2004  	CLR	W2
0xA388	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4299 :: 		Glcd_Write_Text(WriteText, 84, Row3, Black);
0xA38A	0xB3C01D  	MOV.B	#1, W13
0xA38C	0xB3C02C  	MOV.B	#2, W12
0xA38E	0xB3C54B  	MOV.B	#84, W11
0xA390	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA392	0x07D9FB  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4301 :: 		ACVolt_Different := EEPROM_Read(EE_ACVoltDifferentEeAddr);
0xA394	0x2F072A  	MOV	#61554, W10
0xA396	0x2007FB  	MOV	#127, W11
0xA398	0x07C063  	RCALL	_EEPROM_Read
0xA39A	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xA39C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4302 :: 		ValueDivide(ACVolt_Different, 0);
0xA39E	0xEF2016  	CLR	W11
0xA3A0	0xFB8500  	ZE	W0, W10
0xA3A2	0x07B3C6  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4303 :: 		WriteText := Value_Text + 'V ';
0xA3A4	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA3A6	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA3A8	0x07124E  	RCALL	___CS2S
0xA3AA	0xB3C562  	MOV.B	#86, W2
0xA3AC	0x785802  	MOV.B	W2, [W0++]
0xA3AE	0xB3C202  	MOV.B	#32, W2
0xA3B0	0x785802  	MOV.B	W2, [W0++]
0xA3B2	0xEF2004  	CLR	W2
0xA3B4	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4304 :: 		Glcd_Write_Text(WriteText, 84, Row4, Black);
0xA3B6	0xB3C01D  	MOV.B	#1, W13
0xA3B8	0xB3C03C  	MOV.B	#3, W12
0xA3BA	0xB3C54B  	MOV.B	#84, W11
0xA3BC	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA3BE	0x07D9E5  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4306 :: 		AC_ProtectBit   := EEPROM_Read(EE_ACProtectEeAddr);
0xA3C0	0x2F074A  	MOV	#61556, W10
0xA3C2	0x2007FB  	MOV	#127, W11
0xA3C4	0x07C04D  	RCALL	_EEPROM_Read
0xA3C6	0x212A41  	MOV	#lo_addr(_AC_ProtectBit), W1
0xA3C8	0xA06011  	BSET	[W1], BitPos(_AC_ProtectBit+0)
0xA3CA	0xAE0000  	BTSS	W0, #0
0xA3CC	0xA16011  	BCLR	[W1], BitPos(_AC_ProtectBit+0)
;GRR3000LManagementPanel.mpas,4307 :: 		if (AC_ProtectBit = 0) then
0xA3CE	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xA3D0	0xA76010  	BTSC	[W0], BitPos(_AC_ProtectBit+0)
0xA3D2	0x370006  	BRA	L__AC_Settings1408
;GRR3000LManagementPanel.mpas,4309 :: 		Glcd_Write_Text(DisableText, 84, Row5, Black);
0xA3D4	0xB3C01D  	MOV.B	#1, W13
0xA3D6	0xB3C04C  	MOV.B	#4, W12
0xA3D8	0xB3C54B  	MOV.B	#84, W11
0xA3DA	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xA3DC	0x07D9D6  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4310 :: 		end else
0xA3DE	0x370005  	BRA	L__AC_Settings1409
L__AC_Settings1408:
;GRR3000LManagementPanel.mpas,4312 :: 		Glcd_Write_Text(EnableText, 84, Row5, Black);
0xA3E0	0xB3C01D  	MOV.B	#1, W13
0xA3E2	0xB3C04C  	MOV.B	#4, W12
0xA3E4	0xB3C54B  	MOV.B	#84, W11
0xA3E6	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xA3E8	0x07D9D0  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4313 :: 		end;
L__AC_Settings1409:
;GRR3000LManagementPanel.mpas,4317 :: 		While (MenuExit =0) do
L__AC_Settings1411:
0xA3EA	0x214660  	MOV	#lo_addr(_MenuExit), W0
0xA3EC	0x784010  	MOV.B	[W0], W0
0xA3EE	0xE10460  	CP.B	W0, #0
0xA3F0	0x3A01A4  	BRA NZ	L__AC_Settings1412
L__AC_Settings5250:
;GRR3000LManagementPanel.mpas,4329 :: 		MenuSayac := MenuButtonRead(5, 255);  // menu için butonlarý oku 5 satýr menü var
0xA3F2	0xB3CFFB  	MOV.B	#255, W11
0xA3F4	0xB3C05A  	MOV.B	#5, W10
0xA3F6	0x07B74C  	RCALL	_MenuButtonRead
0xA3F8	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0xA3FA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4331 :: 		asm ClrWDT; end;
0xA3FC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4334 :: 		1: begin // AC Max Gerilimi
0xA3FE	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA400	0x784010  	MOV.B	[W0], W0
0xA402	0xE10461  	CP.B	W0, #1
0xA404	0x3A005E  	BRA NZ	L__AC_Settings1418
L__AC_Settings5251:
;GRR3000LManagementPanel.mpas,4335 :: 		if (Ok_Button =0) then
0xA406	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA408	0x37005B  	BRA	L__AC_Settings1420
;GRR3000LManagementPanel.mpas,4337 :: 		while (Ok_Button =0) do
L__AC_Settings1423:
0xA40A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA40C	0x370002  	BRA	L__AC_Settings1424
;GRR3000LManagementPanel.mpas,4339 :: 		asm ClrWDT; end;
0xA40E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4340 :: 		end;
0xA410	0x37FFFC  	BRA	L__AC_Settings1423
L__AC_Settings1424:
;GRR3000LManagementPanel.mpas,4342 :: 		Chng[1] := 1;
0xA412	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xA414	0xB3C010  	MOV.B	#1, W0
0xA416	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4344 :: 		While (Chng[1] =1) do
L__AC_Settings1428:
0xA418	0x2124C0  	MOV	#lo_addr(_Chng), W0
0xA41A	0x784010  	MOV.B	[W0], W0
0xA41C	0xE10461  	CP.B	W0, #1
0xA41E	0x3A0050  	BRA NZ	L__AC_Settings1429
L__AC_Settings5252:
;GRR3000LManagementPanel.mpas,4347 :: 		asm ClrWDT; end;
0xA420	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4349 :: 		if (Up_Button =0) then
0xA422	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xA424	0x370013  	BRA	L__AC_Settings1433
;GRR3000LManagementPanel.mpas,4351 :: 		ButonStop       := 0;
0xA426	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA428	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4352 :: 		BtCounterNormal := 0;
0xA42A	0xEF2000  	CLR	W0
0xA42C	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4353 :: 		while (ButonStop = 0) do
L__AC_Settings1436:
0xA42E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA430	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA432	0x370002  	BRA	L__AC_Settings1437
;GRR3000LManagementPanel.mpas,4355 :: 		asm ClrWDT; end;
0xA434	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4356 :: 		end;
0xA436	0x37FFFB  	BRA	L__AC_Settings1436
L__AC_Settings1437:
;GRR3000LManagementPanel.mpas,4357 :: 		Inc(ACMaxVoltSet);
0xA438	0x200011  	MOV	#1, W1
0xA43A	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xA43C	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4358 :: 		if (ACMaxVoltSet > 480) then
0xA43E	0x8096C1  	MOV	_ACMaxVoltSet, W1
0xA440	0x201E00  	MOV	#480, W0
0xA442	0xE10800  	CP	W1, W0
0xA444	0x360002  	BRA LEU	L__AC_Settings1441
L__AC_Settings5253:
;GRR3000LManagementPanel.mpas,4359 :: 		ACMaxVoltSet := 480;
0xA446	0x201E00  	MOV	#480, W0
0xA448	0x8896C0  	MOV	W0, _ACMaxVoltSet
L__AC_Settings1441:
;GRR3000LManagementPanel.mpas,4360 :: 		end else
0xA44A	0x370014  	BRA	L__AC_Settings1434
L__AC_Settings1433:
;GRR3000LManagementPanel.mpas,4361 :: 		if (Down_Button =0) then
0xA44C	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA44E	0x370012  	BRA	L__AC_Settings1444
;GRR3000LManagementPanel.mpas,4363 :: 		ButonStop       := 0;
0xA450	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA452	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4364 :: 		BtCounterNormal := 0;
0xA454	0xEF2000  	CLR	W0
0xA456	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4365 :: 		while (ButonStop = 0) do
L__AC_Settings1447:
0xA458	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA45A	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA45C	0x370002  	BRA	L__AC_Settings1448
;GRR3000LManagementPanel.mpas,4367 :: 		asm ClrWDT; end;
0xA45E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4368 :: 		end;
0xA460	0x37FFFB  	BRA	L__AC_Settings1447
L__AC_Settings1448:
;GRR3000LManagementPanel.mpas,4369 :: 		Dec(ACMaxVoltSet);
0xA462	0x200011  	MOV	#1, W1
0xA464	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xA466	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4370 :: 		if (ACMaxVoltSet < 320) then
0xA468	0x8096C1  	MOV	_ACMaxVoltSet, W1
0xA46A	0x201400  	MOV	#320, W0
0xA46C	0xE10800  	CP	W1, W0
0xA46E	0x310002  	BRA GEU	L__AC_Settings1452
L__AC_Settings5254:
;GRR3000LManagementPanel.mpas,4371 :: 		ACMaxVoltSet := 320;
0xA470	0x201400  	MOV	#320, W0
0xA472	0x8896C0  	MOV	W0, _ACMaxVoltSet
L__AC_Settings1452:
;GRR3000LManagementPanel.mpas,4372 :: 		end;
L__AC_Settings1444:
L__AC_Settings1434:
;GRR3000LManagementPanel.mpas,4374 :: 		ValueDivide(ACMaxVoltSet, 0);
0xA474	0xEF2016  	CLR	W11
0xA476	0x8096CA  	MOV	_ACMaxVoltSet, W10
0xA478	0x07B35B  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4375 :: 		WriteText := Value_Text + 'V ';
0xA47A	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA47C	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA47E	0x0711E3  	RCALL	___CS2S
0xA480	0xB3C562  	MOV.B	#86, W2
0xA482	0x785802  	MOV.B	W2, [W0++]
0xA484	0xB3C202  	MOV.B	#32, W2
0xA486	0x785802  	MOV.B	W2, [W0++]
0xA488	0xEF2004  	CLR	W2
0xA48A	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4377 :: 		Glcd_Write_Text(WriteText, 84, Row2, White);
0xA48C	0xEF201A  	CLR	W13
0xA48E	0xB3C01C  	MOV.B	#1, W12
0xA490	0xB3C54B  	MOV.B	#84, W11
0xA492	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA494	0x07D97A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4379 :: 		if (Ok_Button =0) then
0xA496	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA498	0x370012  	BRA	L__AC_Settings1455
;GRR3000LManagementPanel.mpas,4381 :: 		while (Ok_Button =0) do
L__AC_Settings1458:
0xA49A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA49C	0x370002  	BRA	L__AC_Settings1459
;GRR3000LManagementPanel.mpas,4383 :: 		asm ClrWDT; end;
0xA49E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4384 :: 		end;
0xA4A0	0x37FFFC  	BRA	L__AC_Settings1458
L__AC_Settings1459:
;GRR3000LManagementPanel.mpas,4386 :: 		EEPROM_Write(EE_ACMaxVoltSetEeAddr, ACMaxVoltSet);
0xA4A2	0x8096CC  	MOV	_ACMaxVoltSet, W12
0xA4A4	0x2F03AA  	MOV	#61498, W10
0xA4A6	0x2007FB  	MOV	#127, W11
0xA4A8	0x07B776  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4387 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__AC_Settings1463:
0xA4AA	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA4AC	0x37FFFE  	BRA	L__AC_Settings1463
;GRR3000LManagementPanel.mpas,4389 :: 		Chng[1] := 0;
0xA4AE	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xA4B0	0xEF2000  	CLR	W0
0xA4B2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4390 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0xA4B4	0xB3C01D  	MOV.B	#1, W13
0xA4B6	0xB3C01C  	MOV.B	#1, W12
0xA4B8	0xB3C54B  	MOV.B	#84, W11
0xA4BA	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA4BC	0x07D966  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4393 :: 		end;
L__AC_Settings1455:
;GRR3000LManagementPanel.mpas,4396 :: 		end; // chng[1] while end
0xA4BE	0x37FFAC  	BRA	L__AC_Settings1428
L__AC_Settings1429:
;GRR3000LManagementPanel.mpas,4398 :: 		end;
L__AC_Settings1420:
;GRR3000LManagementPanel.mpas,4399 :: 		end;
0xA4C0	0x37013B  	BRA	L__AC_Settings1415
L__AC_Settings1418:
;GRR3000LManagementPanel.mpas,4401 :: 		2: begin // AC Min Gerilimi
0xA4C2	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA4C4	0x784010  	MOV.B	[W0], W0
0xA4C6	0xE10462  	CP.B	W0, #2
0xA4C8	0x3A005E  	BRA NZ	L__AC_Settings1469
L__AC_Settings5255:
;GRR3000LManagementPanel.mpas,4402 :: 		if (Ok_Button =0) then
0xA4CA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA4CC	0x37005B  	BRA	L__AC_Settings1471
;GRR3000LManagementPanel.mpas,4404 :: 		while (Ok_Button =0) do
L__AC_Settings1474:
0xA4CE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA4D0	0x370002  	BRA	L__AC_Settings1475
;GRR3000LManagementPanel.mpas,4406 :: 		asm ClrWDT; end;
0xA4D2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4407 :: 		end;
0xA4D4	0x37FFFC  	BRA	L__AC_Settings1474
L__AC_Settings1475:
;GRR3000LManagementPanel.mpas,4409 :: 		Chng[2] := 1;
0xA4D6	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xA4D8	0xB3C010  	MOV.B	#1, W0
0xA4DA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4411 :: 		While (Chng[2] =1) do
L__AC_Settings1479:
0xA4DC	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0xA4DE	0x784010  	MOV.B	[W0], W0
0xA4E0	0xE10461  	CP.B	W0, #1
0xA4E2	0x3A0050  	BRA NZ	L__AC_Settings1480
L__AC_Settings5256:
;GRR3000LManagementPanel.mpas,4414 :: 		asm ClrWDT; end;
0xA4E4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4416 :: 		if (Up_Button =0) then
0xA4E6	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xA4E8	0x370013  	BRA	L__AC_Settings1484
;GRR3000LManagementPanel.mpas,4418 :: 		ButonStop       := 0;
0xA4EA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA4EC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4419 :: 		BtCounterNormal := 0;
0xA4EE	0xEF2000  	CLR	W0
0xA4F0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4420 :: 		while (ButonStop = 0) do
L__AC_Settings1487:
0xA4F2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA4F4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA4F6	0x370002  	BRA	L__AC_Settings1488
;GRR3000LManagementPanel.mpas,4422 :: 		asm ClrWDT; end;
0xA4F8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4423 :: 		end;
0xA4FA	0x37FFFB  	BRA	L__AC_Settings1487
L__AC_Settings1488:
;GRR3000LManagementPanel.mpas,4424 :: 		Inc(ACMinVoltSet);
0xA4FC	0x200011  	MOV	#1, W1
0xA4FE	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xA500	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4425 :: 		if (ACMinVoltSet > 480) then
0xA502	0x8096D1  	MOV	_ACMinVoltSet, W1
0xA504	0x201E00  	MOV	#480, W0
0xA506	0xE10800  	CP	W1, W0
0xA508	0x360002  	BRA LEU	L__AC_Settings1492
L__AC_Settings5257:
;GRR3000LManagementPanel.mpas,4426 :: 		ACMinVoltSet := 480;
0xA50A	0x201E00  	MOV	#480, W0
0xA50C	0x8896D0  	MOV	W0, _ACMinVoltSet
L__AC_Settings1492:
;GRR3000LManagementPanel.mpas,4427 :: 		end else
0xA50E	0x370014  	BRA	L__AC_Settings1485
L__AC_Settings1484:
;GRR3000LManagementPanel.mpas,4428 :: 		if (Down_Button =0) then
0xA510	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA512	0x370012  	BRA	L__AC_Settings1495
;GRR3000LManagementPanel.mpas,4430 :: 		ButonStop       := 0;
0xA514	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA516	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4431 :: 		BtCounterNormal := 0;
0xA518	0xEF2000  	CLR	W0
0xA51A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4432 :: 		while (ButonStop = 0) do
L__AC_Settings1498:
0xA51C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA51E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA520	0x370002  	BRA	L__AC_Settings1499
;GRR3000LManagementPanel.mpas,4434 :: 		asm ClrWDT; end;
0xA522	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4435 :: 		end;
0xA524	0x37FFFB  	BRA	L__AC_Settings1498
L__AC_Settings1499:
;GRR3000LManagementPanel.mpas,4436 :: 		Dec(ACMinVoltSet);
0xA526	0x200011  	MOV	#1, W1
0xA528	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xA52A	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4437 :: 		if (ACMinVoltSet < 320) then
0xA52C	0x8096D1  	MOV	_ACMinVoltSet, W1
0xA52E	0x201400  	MOV	#320, W0
0xA530	0xE10800  	CP	W1, W0
0xA532	0x310002  	BRA GEU	L__AC_Settings1503
L__AC_Settings5258:
;GRR3000LManagementPanel.mpas,4438 :: 		ACMinVoltSet := 320;
0xA534	0x201400  	MOV	#320, W0
0xA536	0x8896D0  	MOV	W0, _ACMinVoltSet
L__AC_Settings1503:
;GRR3000LManagementPanel.mpas,4439 :: 		end;
L__AC_Settings1495:
L__AC_Settings1485:
;GRR3000LManagementPanel.mpas,4441 :: 		ValueDivide(ACMinVoltSet, 0);
0xA538	0xEF2016  	CLR	W11
0xA53A	0x8096DA  	MOV	_ACMinVoltSet, W10
0xA53C	0x07B2F9  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4442 :: 		WriteText := Value_Text + 'V ';
0xA53E	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA540	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA542	0x071181  	RCALL	___CS2S
0xA544	0xB3C562  	MOV.B	#86, W2
0xA546	0x785802  	MOV.B	W2, [W0++]
0xA548	0xB3C202  	MOV.B	#32, W2
0xA54A	0x785802  	MOV.B	W2, [W0++]
0xA54C	0xEF2004  	CLR	W2
0xA54E	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4443 :: 		Glcd_Write_Text(WriteText, 84, Row3, White);
0xA550	0xEF201A  	CLR	W13
0xA552	0xB3C02C  	MOV.B	#2, W12
0xA554	0xB3C54B  	MOV.B	#84, W11
0xA556	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA558	0x07D918  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4445 :: 		if (Ok_Button =0) then
0xA55A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA55C	0x370012  	BRA	L__AC_Settings1506
;GRR3000LManagementPanel.mpas,4447 :: 		while (Ok_Button =0) do
L__AC_Settings1509:
0xA55E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA560	0x370002  	BRA	L__AC_Settings1510
;GRR3000LManagementPanel.mpas,4449 :: 		asm ClrWDT; end;
0xA562	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4450 :: 		end;
0xA564	0x37FFFC  	BRA	L__AC_Settings1509
L__AC_Settings1510:
;GRR3000LManagementPanel.mpas,4452 :: 		EEPROM_Write(EE_ACMinVoltSetEeAddr, ACMinVoltSet);
0xA566	0x8096DC  	MOV	_ACMinVoltSet, W12
0xA568	0x2F03CA  	MOV	#61500, W10
0xA56A	0x2007FB  	MOV	#127, W11
0xA56C	0x07B714  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4453 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__AC_Settings1514:
0xA56E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA570	0x37FFFE  	BRA	L__AC_Settings1514
;GRR3000LManagementPanel.mpas,4455 :: 		Chng[2] := 0;
0xA572	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xA574	0xEF2000  	CLR	W0
0xA576	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4456 :: 		Glcd_Write_Text(WriteText, 84, Row3, Black);
0xA578	0xB3C01D  	MOV.B	#1, W13
0xA57A	0xB3C02C  	MOV.B	#2, W12
0xA57C	0xB3C54B  	MOV.B	#84, W11
0xA57E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA580	0x07D904  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4459 :: 		end;
L__AC_Settings1506:
;GRR3000LManagementPanel.mpas,4462 :: 		end; // chng[2] while end
0xA582	0x37FFAC  	BRA	L__AC_Settings1479
L__AC_Settings1480:
;GRR3000LManagementPanel.mpas,4464 :: 		end;
L__AC_Settings1471:
;GRR3000LManagementPanel.mpas,4465 :: 		end;
0xA584	0x3700D9  	BRA	L__AC_Settings1415
L__AC_Settings1469:
;GRR3000LManagementPanel.mpas,4467 :: 		3: begin // AC Volt farký
0xA586	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA588	0x784010  	MOV.B	[W0], W0
0xA58A	0xE10463  	CP.B	W0, #3
0xA58C	0x3A0062  	BRA NZ	L__AC_Settings1520
L__AC_Settings5259:
;GRR3000LManagementPanel.mpas,4468 :: 		if (Ok_Button =0) then
0xA58E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA590	0x37005F  	BRA	L__AC_Settings1522
;GRR3000LManagementPanel.mpas,4470 :: 		while (Ok_Button =0) do
L__AC_Settings1525:
0xA592	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA594	0x370002  	BRA	L__AC_Settings1526
;GRR3000LManagementPanel.mpas,4472 :: 		asm ClrWDT; end;
0xA596	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4473 :: 		end;
0xA598	0x37FFFC  	BRA	L__AC_Settings1525
L__AC_Settings1526:
;GRR3000LManagementPanel.mpas,4475 :: 		Chng[3] := 1;
0xA59A	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xA59C	0xB3C010  	MOV.B	#1, W0
0xA59E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4477 :: 		While (Chng[3] =1) do
L__AC_Settings1530:
0xA5A0	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0xA5A2	0x784010  	MOV.B	[W0], W0
0xA5A4	0xE10461  	CP.B	W0, #1
0xA5A6	0x3A0054  	BRA NZ	L__AC_Settings1531
L__AC_Settings5260:
;GRR3000LManagementPanel.mpas,4480 :: 		asm ClrWDT; end;
0xA5A8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4482 :: 		if (Up_Button =0) then
0xA5AA	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xA5AC	0x370014  	BRA	L__AC_Settings1535
;GRR3000LManagementPanel.mpas,4484 :: 		ButonStop       := 0;
0xA5AE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA5B0	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4485 :: 		BtCounterNormal := 0;
0xA5B2	0xEF2000  	CLR	W0
0xA5B4	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4486 :: 		while (ButonStop = 0) do
L__AC_Settings1538:
0xA5B6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA5B8	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA5BA	0x370002  	BRA	L__AC_Settings1539
;GRR3000LManagementPanel.mpas,4488 :: 		asm ClrWDT; end;
0xA5BC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4489 :: 		end;
0xA5BE	0x37FFFB  	BRA	L__AC_Settings1538
L__AC_Settings1539:
;GRR3000LManagementPanel.mpas,4490 :: 		Inc(ACVolt_Different);
0xA5C0	0xB3C011  	MOV.B	#1, W1
0xA5C2	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA5C4	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4491 :: 		if (ACVolt_Different > 30) then // 30V' a kadar ayarlanacak
0xA5C6	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA5C8	0x784010  	MOV.B	[W0], W0
0xA5CA	0xE1047E  	CP.B	W0, #30
0xA5CC	0x360003  	BRA LEU	L__AC_Settings1543
L__AC_Settings5261:
;GRR3000LManagementPanel.mpas,4492 :: 		ACVolt_Different := 30;
0xA5CE	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xA5D0	0xB3C1E0  	MOV.B	#30, W0
0xA5D2	0x784880  	MOV.B	W0, [W1]
L__AC_Settings1543:
;GRR3000LManagementPanel.mpas,4493 :: 		end else
0xA5D4	0x370015  	BRA	L__AC_Settings1536
L__AC_Settings1535:
;GRR3000LManagementPanel.mpas,4494 :: 		if (Down_Button =0) then
0xA5D6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA5D8	0x370013  	BRA	L__AC_Settings1546
;GRR3000LManagementPanel.mpas,4496 :: 		ButonStop       := 0;
0xA5DA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA5DC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4497 :: 		BtCounterNormal := 0;
0xA5DE	0xEF2000  	CLR	W0
0xA5E0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4498 :: 		while (ButonStop = 0) do
L__AC_Settings1549:
0xA5E2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA5E4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA5E6	0x370002  	BRA	L__AC_Settings1550
;GRR3000LManagementPanel.mpas,4500 :: 		asm ClrWDT; end;
0xA5E8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4501 :: 		end;
0xA5EA	0x37FFFB  	BRA	L__AC_Settings1549
L__AC_Settings1550:
;GRR3000LManagementPanel.mpas,4502 :: 		Dec(ACVolt_Different);
0xA5EC	0xB3C011  	MOV.B	#1, W1
0xA5EE	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA5F0	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4503 :: 		if (ACVolt_Different < 15) then
0xA5F2	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA5F4	0x784010  	MOV.B	[W0], W0
0xA5F6	0xE1046F  	CP.B	W0, #15
0xA5F8	0x310003  	BRA GEU	L__AC_Settings1554
L__AC_Settings5262:
;GRR3000LManagementPanel.mpas,4504 :: 		ACVolt_Different := 15;
0xA5FA	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xA5FC	0xB3C0F0  	MOV.B	#15, W0
0xA5FE	0x784880  	MOV.B	W0, [W1]
L__AC_Settings1554:
;GRR3000LManagementPanel.mpas,4505 :: 		end;
L__AC_Settings1546:
L__AC_Settings1536:
;GRR3000LManagementPanel.mpas,4507 :: 		ValueDivide(ACVolt_Different, 0);
0xA600	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA602	0xEF2016  	CLR	W11
0xA604	0xFB8510  	ZE	[W0], W10
0xA606	0x07B294  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4508 :: 		WriteText := Value_Text + 'V ';
0xA608	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA60A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA60C	0x07111C  	RCALL	___CS2S
0xA60E	0xB3C562  	MOV.B	#86, W2
0xA610	0x785802  	MOV.B	W2, [W0++]
0xA612	0xB3C202  	MOV.B	#32, W2
0xA614	0x785802  	MOV.B	W2, [W0++]
0xA616	0xEF2004  	CLR	W2
0xA618	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4509 :: 		Glcd_Write_Text(WriteText, 84, Row4, White);
0xA61A	0xEF201A  	CLR	W13
0xA61C	0xB3C03C  	MOV.B	#3, W12
0xA61E	0xB3C54B  	MOV.B	#84, W11
0xA620	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA622	0x07D8B3  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4511 :: 		if (Ok_Button =0) then
0xA624	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA626	0x370013  	BRA	L__AC_Settings1557
;GRR3000LManagementPanel.mpas,4513 :: 		while (Ok_Button =0) do
L__AC_Settings1560:
0xA628	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA62A	0x370002  	BRA	L__AC_Settings1561
;GRR3000LManagementPanel.mpas,4515 :: 		asm ClrWDT; end;
0xA62C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4516 :: 		end;
0xA62E	0x37FFFC  	BRA	L__AC_Settings1560
L__AC_Settings1561:
;GRR3000LManagementPanel.mpas,4518 :: 		EEPROM_Write(EE_ACVoltDifferentEeAddr, ACVolt_Different);
0xA630	0x212A30  	MOV	#lo_addr(_ACVolt_Different), W0
0xA632	0xFB8610  	ZE	[W0], W12
0xA634	0x2F072A  	MOV	#61554, W10
0xA636	0x2007FB  	MOV	#127, W11
0xA638	0x07B6AE  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4519 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__AC_Settings1565:
0xA63A	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA63C	0x37FFFE  	BRA	L__AC_Settings1565
;GRR3000LManagementPanel.mpas,4521 :: 		Chng[3] := 0;
0xA63E	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xA640	0xEF2000  	CLR	W0
0xA642	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4522 :: 		Glcd_Write_Text(WriteText, 84, Row4, Black);
0xA644	0xB3C01D  	MOV.B	#1, W13
0xA646	0xB3C03C  	MOV.B	#3, W12
0xA648	0xB3C54B  	MOV.B	#84, W11
0xA64A	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA64C	0x07D89E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4525 :: 		end;
L__AC_Settings1557:
;GRR3000LManagementPanel.mpas,4528 :: 		end; // chng[2] while end
0xA64E	0x37FFA8  	BRA	L__AC_Settings1530
L__AC_Settings1531:
;GRR3000LManagementPanel.mpas,4530 :: 		end;
L__AC_Settings1522:
;GRR3000LManagementPanel.mpas,4531 :: 		end;
0xA650	0x370073  	BRA	L__AC_Settings1415
L__AC_Settings1520:
;GRR3000LManagementPanel.mpas,4533 :: 		4: begin // AC Koruma
0xA652	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA654	0x784010  	MOV.B	[W0], W0
0xA656	0xE10464  	CP.B	W0, #4
0xA658	0x3A0061  	BRA NZ	L__AC_Settings1571
L__AC_Settings5263:
;GRR3000LManagementPanel.mpas,4535 :: 		if (Ok_Button =0) then
0xA65A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA65C	0x37005E  	BRA	L__AC_Settings1573
;GRR3000LManagementPanel.mpas,4537 :: 		while (Ok_Button =0) do
L__AC_Settings1576:
0xA65E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA660	0x370002  	BRA	L__AC_Settings1577
;GRR3000LManagementPanel.mpas,4539 :: 		asm ClrWDT; end;
0xA662	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4540 :: 		end;
0xA664	0x37FFFC  	BRA	L__AC_Settings1576
L__AC_Settings1577:
;GRR3000LManagementPanel.mpas,4542 :: 		Chng[4] := 1;
0xA666	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xA668	0xB3C010  	MOV.B	#1, W0
0xA66A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4544 :: 		While (Chng[4] =1) do
L__AC_Settings1581:
0xA66C	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0xA66E	0x784010  	MOV.B	[W0], W0
0xA670	0xE10461  	CP.B	W0, #1
0xA672	0x3A0053  	BRA NZ	L__AC_Settings1582
L__AC_Settings5264:
;GRR3000LManagementPanel.mpas,4547 :: 		asm ClrWDT; end;
0xA674	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4549 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0xA676	0xA90006  	BCLR	W3, #0
0xA678	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xA67A	0xA80006  	BSET	W3, #0
0xA67C	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xA67E	0xA80042  	BSET	SR, #0
0xA680	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA682	0xA90042  	BCLR	SR, #0
0xA684	0xAE0006  	BTSS	W3, #0
0xA686	0xAF0042  	BTSC	SR, #0
0xA688	0x370002  	BRA	L__AC_Settings5265
0xA68A	0xA90006  	BCLR	W3, #0
0xA68C	0x370001  	BRA	L__AC_Settings5268
L__AC_Settings5265:
0xA68E	0xA80006  	BSET	W3, #0
L__AC_Settings5268:
0xA690	0xAE0006  	BTSS	W3, #0
0xA692	0x370014  	BRA	L__AC_Settings1586
;GRR3000LManagementPanel.mpas,4552 :: 		while ((Up_Button =0)or(Down_Button =0)) do
L__AC_Settings1589:
0xA694	0xA90006  	BCLR	W3, #0
0xA696	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xA698	0xA80006  	BSET	W3, #0
0xA69A	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xA69C	0xA80042  	BSET	SR, #0
0xA69E	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA6A0	0xA90042  	BCLR	SR, #0
0xA6A2	0xAE0006  	BTSS	W3, #0
0xA6A4	0xAF0042  	BTSC	SR, #0
0xA6A6	0x370002  	BRA	L__AC_Settings5269
0xA6A8	0xA90006  	BCLR	W3, #0
0xA6AA	0x370001  	BRA	L__AC_Settings5272
L__AC_Settings5269:
0xA6AC	0xA80006  	BSET	W3, #0
L__AC_Settings5272:
0xA6AE	0xAE0006  	BTSS	W3, #0
0xA6B0	0x370002  	BRA	L__AC_Settings1590
;GRR3000LManagementPanel.mpas,4554 :: 		asm ClrWDT; end;
0xA6B2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4555 :: 		end;
0xA6B4	0x37FFEF  	BRA	L__AC_Settings1589
L__AC_Settings1590:
;GRR3000LManagementPanel.mpas,4557 :: 		AC_ProtectBit := not AC_ProtectBit;
0xA6B6	0x212A41  	MOV	#lo_addr(_AC_ProtectBit), W1
0xA6B8	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xA6BA	0xA26010  	BTG	[W0], BitPos(_AC_ProtectBit+0)
;GRR3000LManagementPanel.mpas,4559 :: 		end;
L__AC_Settings1586:
;GRR3000LManagementPanel.mpas,4563 :: 		if (AC_ProtectBit = 0) then
0xA6BC	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xA6BE	0xA76010  	BTSC	[W0], BitPos(_AC_ProtectBit+0)
0xA6C0	0x370006  	BRA	L__AC_Settings1594
;GRR3000LManagementPanel.mpas,4565 :: 		Glcd_Write_Text(DisableText, 84, Row5, White);
0xA6C2	0xEF201A  	CLR	W13
0xA6C4	0xB3C04C  	MOV.B	#4, W12
0xA6C6	0xB3C54B  	MOV.B	#84, W11
0xA6C8	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xA6CA	0x07D85F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4566 :: 		end else
0xA6CC	0x370005  	BRA	L__AC_Settings1595
L__AC_Settings1594:
;GRR3000LManagementPanel.mpas,4568 :: 		Glcd_Write_Text(EnableText, 84, Row5, White);
0xA6CE	0xEF201A  	CLR	W13
0xA6D0	0xB3C04C  	MOV.B	#4, W12
0xA6D2	0xB3C54B  	MOV.B	#84, W11
0xA6D4	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xA6D6	0x07D859  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4569 :: 		end;
L__AC_Settings1595:
;GRR3000LManagementPanel.mpas,4572 :: 		if (Ok_Button =0) then
0xA6D8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA6DA	0x37001E  	BRA	L__AC_Settings1597
;GRR3000LManagementPanel.mpas,4574 :: 		while (Ok_Button =0) do
L__AC_Settings1600:
0xA6DC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA6DE	0x370002  	BRA	L__AC_Settings1601
;GRR3000LManagementPanel.mpas,4576 :: 		asm ClrWDT; end;
0xA6E0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4577 :: 		end;
0xA6E2	0x37FFFC  	BRA	L__AC_Settings1600
L__AC_Settings1601:
;GRR3000LManagementPanel.mpas,4579 :: 		EEPROM_Write(EE_ACProtectEeAddr, AC_ProtectBit);
0xA6E4	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xA6E6	0xEF2018  	CLR	W12
0xA6E8	0xA76010  	BTSC	[W0], BitPos(_AC_ProtectBit+0)
0xA6EA	0xEC2018  	INC	W12
0xA6EC	0x2F074A  	MOV	#61556, W10
0xA6EE	0x2007FB  	MOV	#127, W11
0xA6F0	0x07B652  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4580 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__AC_Settings1605:
0xA6F2	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA6F4	0x37FFFE  	BRA	L__AC_Settings1605
;GRR3000LManagementPanel.mpas,4582 :: 		Chng[4] := 0;
0xA6F6	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xA6F8	0xEF2000  	CLR	W0
0xA6FA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4583 :: 		if (AC_ProtectBit = 0) then
0xA6FC	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xA6FE	0xA76010  	BTSC	[W0], BitPos(_AC_ProtectBit+0)
0xA700	0x370006  	BRA	L__AC_Settings1610
;GRR3000LManagementPanel.mpas,4585 :: 		Glcd_Write_Text(DisableText, 84, Row5, Black);
0xA702	0xB3C01D  	MOV.B	#1, W13
0xA704	0xB3C04C  	MOV.B	#4, W12
0xA706	0xB3C54B  	MOV.B	#84, W11
0xA708	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xA70A	0x07D83F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4586 :: 		end else
0xA70C	0x370005  	BRA	L__AC_Settings1611
L__AC_Settings1610:
;GRR3000LManagementPanel.mpas,4588 :: 		Glcd_Write_Text(EnableText, 84, Row5, Black);
0xA70E	0xB3C01D  	MOV.B	#1, W13
0xA710	0xB3C04C  	MOV.B	#4, W12
0xA712	0xB3C54B  	MOV.B	#84, W11
0xA714	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xA716	0x07D839  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4589 :: 		end;
L__AC_Settings1611:
;GRR3000LManagementPanel.mpas,4591 :: 		end;
L__AC_Settings1597:
;GRR3000LManagementPanel.mpas,4593 :: 		end; // chng[4] while end
0xA718	0x37FFA9  	BRA	L__AC_Settings1581
L__AC_Settings1582:
;GRR3000LManagementPanel.mpas,4595 :: 		end;
L__AC_Settings1573:
;GRR3000LManagementPanel.mpas,4597 :: 		end;
0xA71A	0x37000E  	BRA	L__AC_Settings1415
L__AC_Settings1571:
;GRR3000LManagementPanel.mpas,4668 :: 		5: begin // geri
0xA71C	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA71E	0x784010  	MOV.B	[W0], W0
0xA720	0xE10465  	CP.B	W0, #5
0xA722	0x3A000A  	BRA NZ	L__AC_Settings1614
L__AC_Settings5273:
;GRR3000LManagementPanel.mpas,4670 :: 		if (Ok_Button =0) then
0xA724	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA726	0x370007  	BRA	L__AC_Settings1616
;GRR3000LManagementPanel.mpas,4672 :: 		while (Ok_Button =0) do
L__AC_Settings1619:
0xA728	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA72A	0x370002  	BRA	L__AC_Settings1620
;GRR3000LManagementPanel.mpas,4674 :: 		asm ClrWDT; end;
0xA72C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4675 :: 		end;
0xA72E	0x37FFFC  	BRA	L__AC_Settings1619
L__AC_Settings1620:
;GRR3000LManagementPanel.mpas,4676 :: 		MenuExit := 1;
0xA730	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xA732	0xB3C010  	MOV.B	#1, W0
0xA734	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4678 :: 		end;
L__AC_Settings1616:
;GRR3000LManagementPanel.mpas,4682 :: 		end;
0xA736	0x370000  	BRA	L__AC_Settings1415
L__AC_Settings1614:
L__AC_Settings1415:
;GRR3000LManagementPanel.mpas,4686 :: 		end; // MenuExit while
0xA738	0x37FE58  	BRA	L__AC_Settings1411
L__AC_Settings1412:
;GRR3000LManagementPanel.mpas,4688 :: 		Glcd_Fill(0x00);
0xA73A	0xEF2014  	CLR	W10
0xA73C	0x07F8C7  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,4689 :: 		MenuSayacValue := 1;
0xA73E	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xA740	0xB3C010  	MOV.B	#1, W0
0xA742	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4691 :: 		end;
L_end_AC_Settings:
0xA744	0x7806CF  	POP	W13
0xA746	0x78064F  	POP	W12
0xA748	0x7805CF  	POP	W11
0xA74A	0x78054F  	POP	W10
0xA74C	0x060000  	RETURN
; end of _AC_Settings
_ValueDivide:
;GRR3000LManagementPanel.mpas,2893 :: 		begin
;GRR3000LManagementPanel.mpas,2899 :: 		if (Value >= 60000) then Value := 0; // eepromdan veri saçma gelirse deðerleri 0 yazdýr
0x0B30	0x2EA600  	MOV	#60000, W0
0x0B32	0xE15000  	CP	W10, W0
0x0B34	0x390001  	BRA LTU	L__ValueDivide528
L__ValueDivide5127:
0x0B36	0xEF2014  	CLR	W10
L__ValueDivide528:
;GRR3000LManagementPanel.mpas,2901 :: 		if (Dot = 255) then // virgülden sonra 1 basamak
0x0B38	0xB3CFF0  	MOV.B	#255, W0
0x0B3A	0xE15C00  	CP.B	W11, W0
0x0B3C	0x3A003B  	BRA NZ	L__ValueDivide531
L__ValueDivide5128:
;GRR3000LManagementPanel.mpas,2904 :: 		Value_Text[4]    := '.';
0x0B3E	0x214201  	MOV	#lo_addr(_Value_Text+3), W1
0x0B40	0xB3C2E0  	MOV.B	#46, W0
0x0B42	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2905 :: 		Value_Text[5]    := ((Value mod 10) + 48);
0x0B44	0x2000A2  	MOV	#10, W2
0x0B46	0x090011  	REPEAT	#17
0x0B48	0xD88502  	DIV.U	W10, W2
0x0B4A	0x780101  	MOV	W1, W2
0x0B4C	0xB3C301  	MOV.B	#48, W1
0x0B4E	0x214210  	MOV	#lo_addr(_Value_Text+4), W0
0x0B50	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2906 :: 		Fnc_Temp_Byte    := (Value mod 100);
0x0B52	0x200642  	MOV	#100, W2
0x0B54	0x090011  	REPEAT	#17
0x0B56	0xD88502  	DIV.U	W10, W2
0x0B58	0x780001  	MOV	W1, W0
;GRR3000LManagementPanel.mpas,2907 :: 		Value_Text[3]    := ((Fnc_Temp_Byte div 10) + 48);
0x0B5A	0xFB8000  	ZE	W0, W0
0x0B5C	0x2000A2  	MOV	#10, W2
0x0B5E	0x090011  	REPEAT	#17
0x0B60	0xD88002  	DIV.U	W0, W2
0x0B62	0x780100  	MOV	W0, W2
0x0B64	0xB3C301  	MOV.B	#48, W1
0x0B66	0x2141F0  	MOV	#lo_addr(_Value_Text+2), W0
0x0B68	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2909 :: 		Dig1 := value div 100;
0x0B6A	0x200642  	MOV	#100, W2
0x0B6C	0x090011  	REPEAT	#17
0x0B6E	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2910 :: 		if (Dig1 < 1) then
0x0B70	0xE10461  	CP.B	W0, #1
0x0B72	0x310004  	BRA GEU	L__ValueDivide534
L__ValueDivide5129:
;GRR3000LManagementPanel.mpas,2911 :: 		Value_Text[2] := ' '
0x0B74	0x2141E1  	MOV	#lo_addr(_Value_Text+1), W1
0x0B76	0xB3C200  	MOV.B	#32, W0
0x0B78	0x784880  	MOV.B	W0, [W1]
0x0B7A	0x37000B  	BRA	L__ValueDivide535
;GRR3000LManagementPanel.mpas,2912 :: 		else
L__ValueDivide534:
;GRR3000LManagementPanel.mpas,2914 :: 		Fnc_Temp_Byte    := (Value div 100);
0x0B7C	0x200642  	MOV	#100, W2
0x0B7E	0x090011  	REPEAT	#17
0x0B80	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2915 :: 		Value_Text[2]    := ((Fnc_Temp_Byte mod 10) + 48);
0x0B82	0xFB8000  	ZE	W0, W0
0x0B84	0x2000A2  	MOV	#10, W2
0x0B86	0x090011  	REPEAT	#17
0x0B88	0xD88002  	DIV.U	W0, W2
0x0B8A	0x780101  	MOV	W1, W2
0x0B8C	0xB3C301  	MOV.B	#48, W1
0x0B8E	0x2141E0  	MOV	#lo_addr(_Value_Text+1), W0
0x0B90	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2916 :: 		end;
L__ValueDivide535:
;GRR3000LManagementPanel.mpas,2918 :: 		Dig2 := value div 1000;
0x0B92	0x203E82  	MOV	#1000, W2
0x0B94	0x090011  	REPEAT	#17
0x0B96	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2919 :: 		if (Dig2 < 1) then
0x0B98	0xE10461  	CP.B	W0, #1
0x0B9A	0x310004  	BRA GEU	L__ValueDivide537
L__ValueDivide5130:
;GRR3000LManagementPanel.mpas,2920 :: 		Value_Text[1] := ' '
0x0B9C	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x0B9E	0xB3C200  	MOV.B	#32, W0
0x0BA0	0x784880  	MOV.B	W0, [W1]
0x0BA2	0x370007  	BRA	L__ValueDivide538
;GRR3000LManagementPanel.mpas,2921 :: 		else
L__ValueDivide537:
;GRR3000LManagementPanel.mpas,2923 :: 		Value_Text[1] := (Value div 1000)+48;
0x0BA4	0x203E82  	MOV	#1000, W2
0x0BA6	0x090011  	REPEAT	#17
0x0BA8	0xD88502  	DIV.U	W10, W2
0x0BAA	0x780100  	MOV	W0, W2
0x0BAC	0xB3C301  	MOV.B	#48, W1
0x0BAE	0x2141D0  	MOV	#lo_addr(_Value_Text), W0
0x0BB0	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2925 :: 		end;
L__ValueDivide538:
;GRR3000LManagementPanel.mpas,2926 :: 		end else
0x0BB2	0x3700EE  	BRA	L__ValueDivide532
L__ValueDivide531:
;GRR3000LManagementPanel.mpas,2927 :: 		if (Dot = 250) then  // virgülden sonra 2 basamak ise
0x0BB4	0xB3CFA0  	MOV.B	#250, W0
0x0BB6	0xE15C00  	CP.B	W11, W0
0x0BB8	0x3A0031  	BRA NZ	L__ValueDivide540
L__ValueDivide5131:
;GRR3000LManagementPanel.mpas,2929 :: 		Value_Text[3]    := '.';
0x0BBA	0x2141F1  	MOV	#lo_addr(_Value_Text+2), W1
0x0BBC	0xB3C2E0  	MOV.B	#46, W0
0x0BBE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2930 :: 		Value_Text[5]    := ((Value mod 10) + 48);
0x0BC0	0x2000A2  	MOV	#10, W2
0x0BC2	0x090011  	REPEAT	#17
0x0BC4	0xD88502  	DIV.U	W10, W2
0x0BC6	0x780101  	MOV	W1, W2
0x0BC8	0xB3C301  	MOV.B	#48, W1
0x0BCA	0x214210  	MOV	#lo_addr(_Value_Text+4), W0
0x0BCC	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2931 :: 		Fnc_Temp_Byte    := (Value div 10);
0x0BCE	0x2000A2  	MOV	#10, W2
0x0BD0	0x090011  	REPEAT	#17
0x0BD2	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2932 :: 		Value_Text[4]    := ((Fnc_Temp_Byte mod 10) + 48);
0x0BD4	0xFB8000  	ZE	W0, W0
0x0BD6	0x2000A2  	MOV	#10, W2
0x0BD8	0x090011  	REPEAT	#17
0x0BDA	0xD88002  	DIV.U	W0, W2
0x0BDC	0x780101  	MOV	W1, W2
0x0BDE	0xB3C301  	MOV.B	#48, W1
0x0BE0	0x214200  	MOV	#lo_addr(_Value_Text+3), W0
0x0BE2	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2933 :: 		Fnc_Temp_Byte    := (Value div 100);
0x0BE4	0x200642  	MOV	#100, W2
0x0BE6	0x090011  	REPEAT	#17
0x0BE8	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2934 :: 		Value_Text[2]    := ((Fnc_Temp_Byte mod 10) + 48);
0x0BEA	0xFB8000  	ZE	W0, W0
0x0BEC	0x2000A2  	MOV	#10, W2
0x0BEE	0x090011  	REPEAT	#17
0x0BF0	0xD88002  	DIV.U	W0, W2
0x0BF2	0x780101  	MOV	W1, W2
0x0BF4	0xB3C301  	MOV.B	#48, W1
0x0BF6	0x2141E0  	MOV	#lo_addr(_Value_Text+1), W0
0x0BF8	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2937 :: 		Dig2 := value div 1000;
0x0BFA	0x203E82  	MOV	#1000, W2
0x0BFC	0x090011  	REPEAT	#17
0x0BFE	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2938 :: 		if (Dig2 < 1) then
0x0C00	0xE10461  	CP.B	W0, #1
0x0C02	0x310004  	BRA GEU	L__ValueDivide543
L__ValueDivide5132:
;GRR3000LManagementPanel.mpas,2939 :: 		Value_Text[1] := ' '
0x0C04	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x0C06	0xB3C200  	MOV.B	#32, W0
0x0C08	0x784880  	MOV.B	W0, [W1]
0x0C0A	0x370007  	BRA	L__ValueDivide544
;GRR3000LManagementPanel.mpas,2940 :: 		else
L__ValueDivide543:
;GRR3000LManagementPanel.mpas,2941 :: 		Value_Text[1] := ((Value div 1000) + 48);
0x0C0C	0x203E82  	MOV	#1000, W2
0x0C0E	0x090011  	REPEAT	#17
0x0C10	0xD88502  	DIV.U	W10, W2
0x0C12	0x780100  	MOV	W0, W2
0x0C14	0xB3C301  	MOV.B	#48, W1
0x0C16	0x2141D0  	MOV	#lo_addr(_Value_Text), W0
0x0C18	0x414801  	ADD.B	W2, W1, [W0]
L__ValueDivide544:
;GRR3000LManagementPanel.mpas,2943 :: 		end else
0x0C1A	0x3700BA  	BRA	L__ValueDivide541
L__ValueDivide540:
;GRR3000LManagementPanel.mpas,2944 :: 		if (Dot =0) then  // tam sayý ise
0x0C1C	0xE15C60  	CP.B	W11, #0
0x0C1E	0x3A003F  	BRA NZ	L__ValueDivide546
L__ValueDivide5133:
;GRR3000LManagementPanel.mpas,2948 :: 		Value_Text[5]   := ((Value mod 10) + 48);
0x0C20	0x2000A2  	MOV	#10, W2
0x0C22	0x090011  	REPEAT	#17
0x0C24	0xD88502  	DIV.U	W10, W2
0x0C26	0x780101  	MOV	W1, W2
0x0C28	0xB3C301  	MOV.B	#48, W1
0x0C2A	0x214210  	MOV	#lo_addr(_Value_Text+4), W0
0x0C2C	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2949 :: 		Fnc_Temp_Byte   := (Value mod 100);
0x0C2E	0x200642  	MOV	#100, W2
0x0C30	0x090011  	REPEAT	#17
0x0C32	0xD88502  	DIV.U	W10, W2
0x0C34	0x780001  	MOV	W1, W0
;GRR3000LManagementPanel.mpas,2950 :: 		Value_Text[4]   := ((Fnc_Temp_Byte div 10) + 48);
0x0C36	0xFB8000  	ZE	W0, W0
0x0C38	0x2000A2  	MOV	#10, W2
0x0C3A	0x090011  	REPEAT	#17
0x0C3C	0xD88002  	DIV.U	W0, W2
0x0C3E	0x780100  	MOV	W0, W2
0x0C40	0xB3C301  	MOV.B	#48, W1
0x0C42	0x214200  	MOV	#lo_addr(_Value_Text+3), W0
0x0C44	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2952 :: 		Dig1 := value div 100;
0x0C46	0x200642  	MOV	#100, W2
0x0C48	0x090011  	REPEAT	#17
0x0C4A	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2953 :: 		if (dig1 < 1) then
0x0C4C	0xE10461  	CP.B	W0, #1
0x0C4E	0x310004  	BRA GEU	L__ValueDivide549
L__ValueDivide5134:
;GRR3000LManagementPanel.mpas,2954 :: 		Value_Text[3] := ' '
0x0C50	0x2141F1  	MOV	#lo_addr(_Value_Text+2), W1
0x0C52	0xB3C200  	MOV.B	#32, W0
0x0C54	0x784880  	MOV.B	W0, [W1]
0x0C56	0x37000B  	BRA	L__ValueDivide550
;GRR3000LManagementPanel.mpas,2955 :: 		else
L__ValueDivide549:
;GRR3000LManagementPanel.mpas,2957 :: 		Fnc_Temp_Byte      := (Value div 100);
0x0C58	0x200642  	MOV	#100, W2
0x0C5A	0x090011  	REPEAT	#17
0x0C5C	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2958 :: 		Value_Text[3]      := ((Fnc_Temp_Byte mod 10) + 48);
0x0C5E	0xFB8000  	ZE	W0, W0
0x0C60	0x2000A2  	MOV	#10, W2
0x0C62	0x090011  	REPEAT	#17
0x0C64	0xD88002  	DIV.U	W0, W2
0x0C66	0x780101  	MOV	W1, W2
0x0C68	0xB3C301  	MOV.B	#48, W1
0x0C6A	0x2141F0  	MOV	#lo_addr(_Value_Text+2), W0
0x0C6C	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2959 :: 		end;
L__ValueDivide550:
;GRR3000LManagementPanel.mpas,2961 :: 		Dig2 := value div 1000;
0x0C6E	0x203E82  	MOV	#1000, W2
0x0C70	0x090011  	REPEAT	#17
0x0C72	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2962 :: 		if (Dig2 < 1) then
0x0C74	0xE10461  	CP.B	W0, #1
0x0C76	0x310004  	BRA GEU	L__ValueDivide552
L__ValueDivide5135:
;GRR3000LManagementPanel.mpas,2964 :: 		Value_Text[2] := ' ';
0x0C78	0x2141E1  	MOV	#lo_addr(_Value_Text+1), W1
0x0C7A	0xB3C200  	MOV.B	#32, W0
0x0C7C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2965 :: 		end else
0x0C7E	0x37000B  	BRA	L__ValueDivide553
L__ValueDivide552:
;GRR3000LManagementPanel.mpas,2967 :: 		Fnc_Temp_Byte   := (Value div 1000);
0x0C80	0x203E82  	MOV	#1000, W2
0x0C82	0x090011  	REPEAT	#17
0x0C84	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2968 :: 		Value_Text[2]   := ((Fnc_Temp_Byte mod 10)+48);
0x0C86	0xFB8000  	ZE	W0, W0
0x0C88	0x2000A2  	MOV	#10, W2
0x0C8A	0x090011  	REPEAT	#17
0x0C8C	0xD88002  	DIV.U	W0, W2
0x0C8E	0x780101  	MOV	W1, W2
0x0C90	0xB3C301  	MOV.B	#48, W1
0x0C92	0x2141E0  	MOV	#lo_addr(_Value_Text+1), W0
0x0C94	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2969 :: 		end;
L__ValueDivide553:
;GRR3000LManagementPanel.mpas,2971 :: 		Value_Text[1] := ' ';
0x0C96	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x0C98	0xB3C200  	MOV.B	#32, W0
0x0C9A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2981 :: 		end else
0x0C9C	0x370079  	BRA	L__ValueDivide547
L__ValueDivide546:
;GRR3000LManagementPanel.mpas,2982 :: 		if (Dot =128) then // Akü%
0x0C9E	0xB3C800  	MOV.B	#128, W0
0x0CA0	0xE15C00  	CP.B	W11, W0
0x0CA2	0x3A003C  	BRA NZ	L__ValueDivide555
L__ValueDivide5136:
;GRR3000LManagementPanel.mpas,2985 :: 		ValueText2[4]   := '.';
0x0CA4	0x212E71  	MOV	#lo_addr(_ValueText2+3), W1
0x0CA6	0xB3C2E0  	MOV.B	#46, W0
0x0CA8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2987 :: 		ValueText2[5]   := ((Value mod 10) + 48);
0x0CAA	0x2000A2  	MOV	#10, W2
0x0CAC	0x090011  	REPEAT	#17
0x0CAE	0xD88502  	DIV.U	W10, W2
0x0CB0	0x780101  	MOV	W1, W2
0x0CB2	0xB3C301  	MOV.B	#48, W1
0x0CB4	0x212E80  	MOV	#lo_addr(_ValueText2+4), W0
0x0CB6	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2989 :: 		Fnc_Temp_Byte      := (Value mod 100);
0x0CB8	0x200642  	MOV	#100, W2
0x0CBA	0x090011  	REPEAT	#17
0x0CBC	0xD88502  	DIV.U	W10, W2
0x0CBE	0x780001  	MOV	W1, W0
;GRR3000LManagementPanel.mpas,2990 :: 		ValueText2[3]   := ((Fnc_Temp_Byte div 10) + 48);
0x0CC0	0xFB8000  	ZE	W0, W0
0x0CC2	0x2000A2  	MOV	#10, W2
0x0CC4	0x090011  	REPEAT	#17
0x0CC6	0xD88002  	DIV.U	W0, W2
0x0CC8	0x780100  	MOV	W0, W2
0x0CCA	0xB3C301  	MOV.B	#48, W1
0x0CCC	0x212E60  	MOV	#lo_addr(_ValueText2+2), W0
0x0CCE	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2992 :: 		dig2 := value div 100;
0x0CD0	0x200642  	MOV	#100, W2
0x0CD2	0x090011  	REPEAT	#17
0x0CD4	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,2993 :: 		if (dig2 < 1) then ValueText2[2] := ' ' else
0x0CD6	0xE10461  	CP.B	W0, #1
0x0CD8	0x310004  	BRA GEU	L__ValueDivide558
L__ValueDivide5137:
0x0CDA	0x212E51  	MOV	#lo_addr(_ValueText2+1), W1
0x0CDC	0xB3C200  	MOV.B	#32, W0
0x0CDE	0x784880  	MOV.B	W0, [W1]
0x0CE0	0x37000C  	BRA	L__ValueDivide559
L__ValueDivide558:
;GRR3000LManagementPanel.mpas,2995 :: 		Fnc_Temp_Byte      := (Value mod 1000);
0x0CE2	0x203E82  	MOV	#1000, W2
0x0CE4	0x090011  	REPEAT	#17
0x0CE6	0xD88502  	DIV.U	W10, W2
0x0CE8	0x780001  	MOV	W1, W0
;GRR3000LManagementPanel.mpas,2996 :: 		ValueText2[2]   := ((Fnc_Temp_Byte div 100) + 48);
0x0CEA	0xFB8000  	ZE	W0, W0
0x0CEC	0x200642  	MOV	#100, W2
0x0CEE	0x090011  	REPEAT	#17
0x0CF0	0xD88002  	DIV.U	W0, W2
0x0CF2	0x780100  	MOV	W0, W2
0x0CF4	0xB3C301  	MOV.B	#48, W1
0x0CF6	0x212E50  	MOV	#lo_addr(_ValueText2+1), W0
0x0CF8	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,2997 :: 		end;
L__ValueDivide559:
;GRR3000LManagementPanel.mpas,2999 :: 		dig1 := value div 1000;
0x0CFA	0x203E82  	MOV	#1000, W2
0x0CFC	0x090011  	REPEAT	#17
0x0CFE	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,3000 :: 		if (dig1 < 1) then ValueText2[1] := ' ' else ValueText2[1] := ((Value div 1000) + 48);
0x0D00	0xE10461  	CP.B	W0, #1
0x0D02	0x310004  	BRA GEU	L__ValueDivide561
L__ValueDivide5138:
0x0D04	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0x0D06	0xB3C200  	MOV.B	#32, W0
0x0D08	0x784880  	MOV.B	W0, [W1]
0x0D0A	0x370007  	BRA	L__ValueDivide562
L__ValueDivide561:
0x0D0C	0x203E82  	MOV	#1000, W2
0x0D0E	0x090011  	REPEAT	#17
0x0D10	0xD88502  	DIV.U	W10, W2
0x0D12	0x780100  	MOV	W0, W2
0x0D14	0xB3C301  	MOV.B	#48, W1
0x0D16	0x212E40  	MOV	#lo_addr(_ValueText2), W0
0x0D18	0x414801  	ADD.B	W2, W1, [W0]
L__ValueDivide562:
;GRR3000LManagementPanel.mpas,3001 :: 		end else
0x0D1A	0x37003A  	BRA	L__ValueDivide556
L__ValueDivide555:
;GRR3000LManagementPanel.mpas,3002 :: 		if (Dot = 31) then  // tam sayý ise :)
0x0D1C	0xE15C7F  	CP.B	W11, #31
0x0D1E	0x3A0038  	BRA NZ	L__ValueDivide564
L__ValueDivide5139:
;GRR3000LManagementPanel.mpas,3006 :: 		Value_Text[5]   := ((Value mod 10) + 48);
0x0D20	0x2000A2  	MOV	#10, W2
0x0D22	0x090011  	REPEAT	#17
0x0D24	0xD88502  	DIV.U	W10, W2
0x0D26	0x780101  	MOV	W1, W2
0x0D28	0xB3C301  	MOV.B	#48, W1
0x0D2A	0x214210  	MOV	#lo_addr(_Value_Text+4), W0
0x0D2C	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3007 :: 		Fnc_Temp_Byte   := (Value mod 100);
0x0D2E	0x200642  	MOV	#100, W2
0x0D30	0x090011  	REPEAT	#17
0x0D32	0xD88502  	DIV.U	W10, W2
0x0D34	0x780001  	MOV	W1, W0
;GRR3000LManagementPanel.mpas,3008 :: 		Value_Text[4]   := ((Fnc_Temp_Byte div 10) + 48);
0x0D36	0xFB8000  	ZE	W0, W0
0x0D38	0x2000A2  	MOV	#10, W2
0x0D3A	0x090011  	REPEAT	#17
0x0D3C	0xD88002  	DIV.U	W0, W2
0x0D3E	0x780100  	MOV	W0, W2
0x0D40	0xB3C301  	MOV.B	#48, W1
0x0D42	0x214200  	MOV	#lo_addr(_Value_Text+3), W0
0x0D44	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3010 :: 		Fnc_Temp_Byte      := (Value div 100);
0x0D46	0x200642  	MOV	#100, W2
0x0D48	0x090011  	REPEAT	#17
0x0D4A	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,3011 :: 		Value_Text[3]      := ((Fnc_Temp_Byte mod 10) + 48);
0x0D4C	0xFB8000  	ZE	W0, W0
0x0D4E	0x2000A2  	MOV	#10, W2
0x0D50	0x090011  	REPEAT	#17
0x0D52	0xD88002  	DIV.U	W0, W2
0x0D54	0x780101  	MOV	W1, W2
0x0D56	0xB3C301  	MOV.B	#48, W1
0x0D58	0x2141F0  	MOV	#lo_addr(_Value_Text+2), W0
0x0D5A	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3013 :: 		Fnc_Temp_Byte   := (Value div 1000);
0x0D5C	0x203E82  	MOV	#1000, W2
0x0D5E	0x090011  	REPEAT	#17
0x0D60	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,3014 :: 		Value_Text[2]   := ((Fnc_Temp_Byte mod 10)+48);
0x0D62	0xFB8000  	ZE	W0, W0
0x0D64	0x2000A2  	MOV	#10, W2
0x0D66	0x090011  	REPEAT	#17
0x0D68	0xD88002  	DIV.U	W0, W2
0x0D6A	0x780101  	MOV	W1, W2
0x0D6C	0xB3C301  	MOV.B	#48, W1
0x0D6E	0x2141E0  	MOV	#lo_addr(_Value_Text+1), W0
0x0D70	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3017 :: 		Value_Text[2]   := ((Fnc_Temp_Byte mod 10)+48);
0x0D72	0xFB8102  	ZE	W2, W2
0x0D74	0xB3C301  	MOV.B	#48, W1
0x0D76	0x2141E0  	MOV	#lo_addr(_Value_Text+1), W0
0x0D78	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3019 :: 		Fnc_Temp_Byte   := (Value div 10000);
0x0D7A	0x227102  	MOV	#10000, W2
0x0D7C	0x090011  	REPEAT	#17
0x0D7E	0xD88502  	DIV.U	W10, W2
;GRR3000LManagementPanel.mpas,3020 :: 		Value_Text[1]   := ((Fnc_Temp_Byte mod 10)+48);
0x0D80	0xFB8000  	ZE	W0, W0
0x0D82	0x2000A2  	MOV	#10, W2
0x0D84	0x090011  	REPEAT	#17
0x0D86	0xD88002  	DIV.U	W0, W2
0x0D88	0x780101  	MOV	W1, W2
0x0D8A	0xB3C301  	MOV.B	#48, W1
0x0D8C	0x2141D0  	MOV	#lo_addr(_Value_Text), W0
0x0D8E	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,3021 :: 		end;
L__ValueDivide564:
L__ValueDivide556:
L__ValueDivide547:
L__ValueDivide541:
L__ValueDivide532:
;GRR3000LManagementPanel.mpas,3027 :: 		end;
L_end_ValueDivide:
0x0D90	0x060000  	RETURN
; end of _ValueDivide
_MenuButtonRead:
;GRR3000LManagementPanel.mpas,3031 :: 		begin
;GRR3000LManagementPanel.mpas,3032 :: 		if (Down_Button =0) then
0x1290	0x781F8C  	PUSH	W12
0x1292	0x781F8D  	PUSH	W13
0x1294	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x1296	0x37002D  	BRA	L__MenuButtonRead568
;GRR3000LManagementPanel.mpas,3034 :: 		Pause_ms(100);
0x1298	0x781F8A  	PUSH	W10
0x129A	0x20064A  	MOV	#100, W10
0x129C	0x0765FC  	RCALL	_Pause_Ms
0x129E	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,3035 :: 		while (Down_Button =0) do
L__MenuButtonRead571:
0x12A0	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x12A2	0x370002  	BRA	L__MenuButtonRead572
;GRR3000LManagementPanel.mpas,3037 :: 		asm ClrWDT; end;
0x12A4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3038 :: 		end;
0x12A6	0x37FFFC  	BRA	L__MenuButtonRead571
L__MenuButtonRead572:
;GRR3000LManagementPanel.mpas,3040 :: 		if (MenuSayacValue < 8) then
0x12A8	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12AA	0x784010  	MOV.B	[W0], W0
0x12AC	0xE10468  	CP.B	W0, #8
0x12AE	0x3D0009  	BRA GE	L__MenuButtonRead576
L__MenuButtonRead5141:
;GRR3000LManagementPanel.mpas,3042 :: 		Glcd_Write_Char(' ',0, MenuSayacValue, Black);
0x12B0	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12B2	0xBE9F8A  	PUSH.D	W10
0x12B4	0xB3C01D  	MOV.B	#1, W13
0x12B6	0x784610  	MOV.B	[W0], W12
0x12B8	0xEF2016  	CLR	W11
0x12BA	0xB3C20A  	MOV.B	#32, W10
0x12BC	0x07055B  	RCALL	_Glcd_Write_Char
0x12BE	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3043 :: 		end else
0x12C0	0x37000E  	BRA	L__MenuButtonRead577
L__MenuButtonRead576:
;GRR3000LManagementPanel.mpas,3044 :: 		if (MenuSayacValue >= 8) then
0x12C2	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12C4	0x784010  	MOV.B	[W0], W0
0x12C6	0xE10468  	CP.B	W0, #8
0x12C8	0x35000A  	BRA LT	L__MenuButtonRead579
L__MenuButtonRead5142:
;GRR3000LManagementPanel.mpas,3046 :: 		Glcd_Write_Char(' ',0, (MenuSayacValue-7), Black);
0x12CA	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12CC	0xFB0010  	SE	[W0], W0
0x12CE	0x500067  	SUB	W0, #7, W0
0x12D0	0xBE9F8A  	PUSH.D	W10
0x12D2	0xB3C01D  	MOV.B	#1, W13
0x12D4	0x784600  	MOV.B	W0, W12
0x12D6	0xEF2016  	CLR	W11
0x12D8	0xB3C20A  	MOV.B	#32, W10
0x12DA	0x07054C  	RCALL	_Glcd_Write_Char
0x12DC	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3047 :: 		end;
L__MenuButtonRead579:
L__MenuButtonRead577:
;GRR3000LManagementPanel.mpas,3049 :: 		Inc(MenuSayacValue);
0x12DE	0xB3C011  	MOV.B	#1, W1
0x12E0	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12E2	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,3050 :: 		if (MenuSayacValue > Sayac) then MenuSayacValue := 1;
0x12E4	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x12E6	0xE15410  	CP.B	W10, [W0]
0x12E8	0x3D0003  	BRA GE	L__MenuButtonRead582
L__MenuButtonRead5143:
0x12EA	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x12EC	0xB3C010  	MOV.B	#1, W0
0x12EE	0x784880  	MOV.B	W0, [W1]
L__MenuButtonRead582:
;GRR3000LManagementPanel.mpas,3051 :: 		end else
0x12F0	0x37002E  	BRA	L__MenuButtonRead569
L__MenuButtonRead568:
;GRR3000LManagementPanel.mpas,3052 :: 		if (Up_Button =0) then
0x12F2	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x12F4	0x37002C  	BRA	L__MenuButtonRead585
;GRR3000LManagementPanel.mpas,3054 :: 		Pause_ms(100);
0x12F6	0x781F8A  	PUSH	W10
0x12F8	0x20064A  	MOV	#100, W10
0x12FA	0x0765CD  	RCALL	_Pause_Ms
0x12FC	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,3055 :: 		while (Up_Button =0) do
L__MenuButtonRead588:
0x12FE	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x1300	0x370002  	BRA	L__MenuButtonRead589
;GRR3000LManagementPanel.mpas,3057 :: 		asm ClrWDT; end;
0x1302	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3058 :: 		end;
0x1304	0x37FFFC  	BRA	L__MenuButtonRead588
L__MenuButtonRead589:
;GRR3000LManagementPanel.mpas,3060 :: 		if (MenuSayacValue < 8) then
0x1306	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1308	0x784010  	MOV.B	[W0], W0
0x130A	0xE10468  	CP.B	W0, #8
0x130C	0x3D0009  	BRA GE	L__MenuButtonRead593
L__MenuButtonRead5144:
;GRR3000LManagementPanel.mpas,3062 :: 		Glcd_Write_Char(' ',0, MenuSayacValue, Black);
0x130E	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1310	0xBE9F8A  	PUSH.D	W10
0x1312	0xB3C01D  	MOV.B	#1, W13
0x1314	0x784610  	MOV.B	[W0], W12
0x1316	0xEF2016  	CLR	W11
0x1318	0xB3C20A  	MOV.B	#32, W10
0x131A	0x07052C  	RCALL	_Glcd_Write_Char
0x131C	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3063 :: 		end else
0x131E	0x37000E  	BRA	L__MenuButtonRead594
L__MenuButtonRead593:
;GRR3000LManagementPanel.mpas,3064 :: 		if (MenuSayacValue >= 8) then
0x1320	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1322	0x784010  	MOV.B	[W0], W0
0x1324	0xE10468  	CP.B	W0, #8
0x1326	0x35000A  	BRA LT	L__MenuButtonRead596
L__MenuButtonRead5145:
;GRR3000LManagementPanel.mpas,3066 :: 		Glcd_Write_Char(' ',0, (MenuSayacValue-7), Black);
0x1328	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x132A	0xFB0010  	SE	[W0], W0
0x132C	0x500067  	SUB	W0, #7, W0
0x132E	0xBE9F8A  	PUSH.D	W10
0x1330	0xB3C01D  	MOV.B	#1, W13
0x1332	0x784600  	MOV.B	W0, W12
0x1334	0xEF2016  	CLR	W11
0x1336	0xB3C20A  	MOV.B	#32, W10
0x1338	0x07051D  	RCALL	_Glcd_Write_Char
0x133A	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3067 :: 		end;
L__MenuButtonRead596:
L__MenuButtonRead594:
;GRR3000LManagementPanel.mpas,3069 :: 		Dec(MenuSayacValue);
0x133C	0xB3C011  	MOV.B	#1, W1
0x133E	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1340	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,3070 :: 		if (MenuSayacValue < 1) then MenuSayacValue := Sayac;
0x1342	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1344	0x784010  	MOV.B	[W0], W0
0x1346	0xE10461  	CP.B	W0, #1
0x1348	0x3D0002  	BRA GE	L__MenuButtonRead599
L__MenuButtonRead5146:
0x134A	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x134C	0x78480A  	MOV.B	W10, [W0]
L__MenuButtonRead599:
;GRR3000LManagementPanel.mpas,3071 :: 		end;
L__MenuButtonRead585:
L__MenuButtonRead569:
;GRR3000LManagementPanel.mpas,3073 :: 		if (Menu = 255) then   // program menüleri için ise iþaretleri satýrlara ">" iþaretini koy
0x134E	0xB3CFF0  	MOV.B	#255, W0
0x1350	0xE15C00  	CP.B	W11, W0
0x1352	0x3A001B  	BRA NZ	L__MenuButtonRead602
L__MenuButtonRead5147:
;GRR3000LManagementPanel.mpas,3075 :: 		if (MenuSayacValue < 8) then
0x1354	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1356	0x784010  	MOV.B	[W0], W0
0x1358	0xE10468  	CP.B	W0, #8
0x135A	0x3D0009  	BRA GE	L__MenuButtonRead605
L__MenuButtonRead5148:
;GRR3000LManagementPanel.mpas,3077 :: 		Glcd_Write_Char('>',0, MenuSayacValue, Black);
0x135C	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x135E	0xBE9F8A  	PUSH.D	W10
0x1360	0xB3C01D  	MOV.B	#1, W13
0x1362	0x784610  	MOV.B	[W0], W12
0x1364	0xEF2016  	CLR	W11
0x1366	0xB3C3EA  	MOV.B	#62, W10
0x1368	0x070505  	RCALL	_Glcd_Write_Char
0x136A	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3078 :: 		end else
0x136C	0x37000E  	BRA	L__MenuButtonRead606
L__MenuButtonRead605:
;GRR3000LManagementPanel.mpas,3079 :: 		if (MenuSayacValue >= 8) then
0x136E	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1370	0x784010  	MOV.B	[W0], W0
0x1372	0xE10468  	CP.B	W0, #8
0x1374	0x35000A  	BRA LT	L__MenuButtonRead608
L__MenuButtonRead5149:
;GRR3000LManagementPanel.mpas,3081 :: 		Glcd_Write_Char('>',0, (MenuSayacValue-7), Black);
0x1376	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
0x1378	0xFB0010  	SE	[W0], W0
0x137A	0x500067  	SUB	W0, #7, W0
0x137C	0xBE9F8A  	PUSH.D	W10
0x137E	0xB3C01D  	MOV.B	#1, W13
0x1380	0x784600  	MOV.B	W0, W12
0x1382	0xEF2016  	CLR	W11
0x1384	0xB3C3EA  	MOV.B	#62, W10
0x1386	0x0704F6  	RCALL	_Glcd_Write_Char
0x1388	0xBE054F  	POP.D	W10
;GRR3000LManagementPanel.mpas,3082 :: 		end;
L__MenuButtonRead608:
L__MenuButtonRead606:
;GRR3000LManagementPanel.mpas,3083 :: 		end;
L__MenuButtonRead602:
;GRR3000LManagementPanel.mpas,3085 :: 		Result := MenuSayacValue;
0x138A	0x212360  	MOV	#lo_addr(_MenuSayacValue), W0
; Result start address is: 2 (W1)
0x138C	0x784090  	MOV.B	[W0], W1
;GRR3000LManagementPanel.mpas,3087 :: 		end;
0x138E	0x784001  	MOV.B	W1, W0
; Result end address is: 2 (W1)
L_end_MenuButtonRead:
0x1390	0x7806CF  	POP	W13
0x1392	0x78064F  	POP	W12
0x1394	0x060000  	RETURN
; end of _MenuButtonRead
_EEPROM_Write:
0x1396	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.mpas,136 :: 		
;__Lib_EEPROM_p30.mpas,138 :: 		
0x1398	0x07F88D  	RCALL	_EEPROM_Erase
;__Lib_EEPROM_p30.mpas,141 :: 		
L__EEPROM_Write6:
0x139A	0xAEE761  	BTSS	NVMCON, #15
0x139C	0x370002  	BRA	L__EEPROM_Write7
;__Lib_EEPROM_p30.mpas,142 :: 		
0x139E	0x000000  	NOP
0x13A0	0x37FFFC  	BRA	L__EEPROM_Write6
L__EEPROM_Write7:
;__Lib_EEPROM_p30.mpas,145 :: 		
0x13A2	0x78048A  	MOV	W10, W9
;__Lib_EEPROM_p30.mpas,146 :: 		
0x13A4	0x88019B  	MOV	W11, TBLPAG
;__Lib_EEPROM_p30.mpas,147 :: 		
0x13A6	0x78040C  	MOV	W12, W8
;__Lib_EEPROM_p30.mpas,149 :: 		
0x13A8	0xBB0C88  	TBLWTL	W8, [W9]
;__Lib_EEPROM_p30.mpas,151 :: 		
0x13AA	0x240040  	MOV	#16388, W0
0x13AC	0xB7A760  	MOV	WREG, NVMCON
;__Lib_EEPROM_p30.mpas,154 :: 		
0x13AE	0x07F6C0  	RCALL	__Lib_EEPROM_p30_KeySequence
;__Lib_EEPROM_p30.mpas,157 :: 		
0x13B0	0xA9C761  	BCLR	NVMCON, #14
;__Lib_EEPROM_p30.mpas,158 :: 		
L_end_EEPROM_Write:
0x13B2	0xFA8000  	ULNK
0x13B4	0x060000  	RETURN
; end of _EEPROM_Write
_EEPROM_Erase:
0x04B4	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.mpas,89 :: 		
;__Lib_EEPROM_p30.mpas,90 :: 		
0x04B6	0x781F8C  	PUSH	W12
0x04B8	0x24044C  	MOV	#16452, W12
0x04BA	0x07FE9B  	RCALL	__Lib_EEPROM_p30_EraseGlobal
;__Lib_EEPROM_p30.mpas,91 :: 		
L_end_EEPROM_Erase:
0x04BC	0x78064F  	POP	W12
0x04BE	0xFA8000  	ULNK
0x04C0	0x060000  	RETURN
; end of _EEPROM_Erase
__Lib_EEPROM_p30_EraseGlobal:
0x01F2	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.mpas,58 :: 		
;__Lib_EEPROM_p30.mpas,59 :: 		
0x01F4	0x883B1A  	MOV	W10, NVMADR
;__Lib_EEPROM_p30.mpas,60 :: 		
0x01F6	0x883B2B  	MOV	W11, NVMADRU
;__Lib_EEPROM_p30.mpas,62 :: 		
0x01F8	0x883B0C  	MOV	W12, NVMCON
;__Lib_EEPROM_p30.mpas,64 :: 		
0x01FA	0x07FF9A  	RCALL	__Lib_EEPROM_p30_KeySequence
;__Lib_EEPROM_p30.mpas,65 :: 		
L_end_EraseGlobal:
0x01FC	0xFA8000  	ULNK
0x01FE	0x060000  	RETURN
; end of __Lib_EEPROM_p30_EraseGlobal
__Lib_EEPROM_p30_KeySequence:
0x0130	0xFA0000  	LNK	#0
;__Lib_EEPROM_p30.mpas,41 :: 		
;__Lib_EEPROM_p30.mpas,45 :: 		
0x0132	0xFC0005  	DISI	#5
;__Lib_EEPROM_p30.mpas,46 :: 		
0x0134	0x200559  	MOV	#85, W9
;__Lib_EEPROM_p30.mpas,47 :: 		
0x0136	0x883B39  	MOV	W9, NVMKEY
;__Lib_EEPROM_p30.mpas,48 :: 		
0x0138	0x200AA9  	MOV	#170, W9
;__Lib_EEPROM_p30.mpas,49 :: 		
0x013A	0x883B39  	MOV	W9, NVMKEY
;__Lib_EEPROM_p30.mpas,50 :: 		
0x013C	0xA8E761  	BSET	NVMCON, #15
;__Lib_EEPROM_p30.mpas,51 :: 		
0x013E	0x000000  	NOP
;__Lib_EEPROM_p30.mpas,52 :: 		
0x0140	0x000000  	NOP
;__Lib_EEPROM_p30.mpas,54 :: 		
L_end_KeySequence:
0x0142	0xFA8000  	ULNK
0x0144	0x060000  	RETURN
; end of __Lib_EEPROM_p30_KeySequence
_DC_Settings:
0x9BFA	0xFA000C  	LNK	#12
;GRR3000LManagementPanel.mpas,6219 :: 		begin
;GRR3000LManagementPanel.mpas,6220 :: 		Glcd_Fill(0x00);
0x9BFC	0x781F8A  	PUSH	W10
0x9BFE	0x781F8B  	PUSH	W11
0x9C00	0x781F8C  	PUSH	W12
0x9C02	0x781F8D  	PUSH	W13
0x9C04	0xEF2014  	CLR	W10
0x9C06	0x07FE62  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6221 :: 		MenuExit        := 0;
0x9C08	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x9C0A	0xEF2000  	CLR	W0
0x9C0C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6222 :: 		MenuSayacValue  := 1;
0x9C0E	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x9C10	0xB3C010  	MOV.B	#1, W0
0x9C12	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6223 :: 		Chng[6]         := 2;
0x9C14	0x212511  	MOV	#lo_addr(_Chng+5), W1
0x9C16	0xB3C020  	MOV.B	#2, W0
0x9C18	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6230 :: 		Glcd_Write_Text(Title_DcMenu,     0, Row1, Black);
0x9C1A	0xB3C01D  	MOV.B	#1, W13
0x9C1C	0xEF2018  	CLR	W12
0x9C1E	0xEF2016  	CLR	W11
0x9C20	0x212A6A  	MOV	#lo_addr(_Title_DcMenu), W10
0x9C22	0x07DDB3  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6231 :: 		Glcd_Write_Text(SubTitle_SetVolt, 6, Row2, Black);
0x9C24	0xB3C01D  	MOV.B	#1, W13
0x9C26	0xB3C01C  	MOV.B	#1, W12
0x9C28	0xB3C06B  	MOV.B	#6, W11
0x9C2A	0x21306A  	MOV	#lo_addr(_SubTitle_SetVolt), W10
0x9C2C	0x07DDAE  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6232 :: 		Glcd_Write_Text(SubTitle_SetAmps, 6, Row3, Black);
0x9C2E	0xB3C01D  	MOV.B	#1, W13
0x9C30	0xB3C02C  	MOV.B	#2, W12
0x9C32	0xB3C06B  	MOV.B	#6, W11
0x9C34	0x212F8A  	MOV	#lo_addr(_SubTitle_SetAmps), W10
0x9C36	0x07DDA9  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6233 :: 		Glcd_Write_Text(SubTitle_MaxVolt, 6, Row4, Black);
0x9C38	0xB3C01D  	MOV.B	#1, W13
0x9C3A	0xB3C03C  	MOV.B	#3, W12
0x9C3C	0xB3C06B  	MOV.B	#6, W11
0x9C3E	0x21314A  	MOV	#lo_addr(_SubTitle_MaxVolt), W10
0x9C40	0x07DDA4  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6234 :: 		Glcd_Write_Text(SubTitle_MinVolt, 6, Row5, Black);
0x9C42	0xB3C01D  	MOV.B	#1, W13
0x9C44	0xB3C04C  	MOV.B	#4, W12
0x9C46	0xB3C06B  	MOV.B	#6, W11
0x9C48	0x21324A  	MOV	#lo_addr(_SubTitle_MinVolt), W10
0x9C4A	0x07DD9F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6235 :: 		Glcd_Write_Text(SubTitle_Back,    6, Row6, Black);
0x9C4C	0xB3C01D  	MOV.B	#1, W13
0x9C4E	0xB3C05C  	MOV.B	#5, W12
0x9C50	0xB3C06B  	MOV.B	#6, W11
0x9C52	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x9C54	0x07DD9A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6237 :: 		ChargeMode     := EEPROM_Read(EE_ChargeModeEeAddr);
0x9C56	0x2F01CA  	MOV	#61468, W10
0x9C58	0x2007FB  	MOV	#127, W11
0x9C5A	0x07C402  	RCALL	_EEPROM_Read
0x9C5C	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0x9C5E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6238 :: 		DCOutVoltSet   := EEPROM_Read(EE_DCOutVoltSetEeAddr);
0x9C60	0x2F02CA  	MOV	#61484, W10
0x9C62	0x2007FB  	MOV	#127, W11
0x9C64	0x07C3FD  	RCALL	_EEPROM_Read
0x9C66	0x889910  	MOV	W0, _DCOutVoltSet
;GRR3000LManagementPanel.mpas,6239 :: 		RedresorAkim   := EEPROM_Read(EE_RedresorAkimEeAddr);
0x9C68	0x2F010A  	MOV	#61456, W10
0x9C6A	0x2007FB  	MOV	#127, W11
0x9C6C	0x07C3F9  	RCALL	_EEPROM_Read
0x9C6E	0x889780  	MOV	W0, _RedresorAkim
;GRR3000LManagementPanel.mpas,6240 :: 		DCOutAmpsSet   := EEPROM_Read(EE_DcOutAmpsSetEeAddr);
0x9C70	0x2F02EA  	MOV	#61486, W10
0x9C72	0x2007FB  	MOV	#127, W11
0x9C74	0x07C3F5  	RCALL	_EEPROM_Read
0x9C76	0x889770  	MOV	W0, _DcOutAmpsSet
;GRR3000LManagementPanel.mpas,6241 :: 		MaxVoltSet     := EEPROM_Read(EE_MaxVoltSetEeAddr);
0x9C78	0x2F030A  	MOV	#61488, W10
0x9C7A	0x2007FB  	MOV	#127, W11
0x9C7C	0x07C3F1  	RCALL	_EEPROM_Read
0x9C7E	0x889790  	MOV	W0, _MaxvoltSet
;GRR3000LManagementPanel.mpas,6242 :: 		MinVoltSet     := EEPROM_Read(EE_MinVoltSetEeAddr);
0x9C80	0x2F032A  	MOV	#61490, W10
0x9C82	0x2007FB  	MOV	#127, W11
0x9C84	0x07C3ED  	RCALL	_EEPROM_Read
0x9C86	0x8897B0  	MOV	W0, _MinVoltSet
;GRR3000LManagementPanel.mpas,6244 :: 		ValueDivide(DCOutVoltSet, 255);
0x9C88	0xB3CFFB  	MOV.B	#255, W11
0x9C8A	0x80991A  	MOV	_DCOutVoltSet, W10
0x9C8C	0x07B751  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6245 :: 		WriteText := Value_Text + 'V';
0x9C8E	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9C90	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9C92	0x0715D9  	RCALL	___CS2S
0x9C94	0xB3C562  	MOV.B	#86, W2
0x9C96	0x785802  	MOV.B	W2, [W0++]
0x9C98	0xEF2004  	CLR	W2
0x9C9A	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6246 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0x9C9C	0xB3C01D  	MOV.B	#1, W13
0x9C9E	0xB3C01C  	MOV.B	#1, W12
0x9CA0	0xB3C54B  	MOV.B	#84, W11
0x9CA2	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9CA4	0x07DD72  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6248 :: 		ValueDivide(DcOutAmpsSet, 255);
0x9CA6	0xB3CFFB  	MOV.B	#255, W11
0x9CA8	0x80977A  	MOV	_DcOutAmpsSet, W10
0x9CAA	0x07B742  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6249 :: 		WriteText := Value_Text + 'A';
0x9CAC	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9CAE	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9CB0	0x0715CA  	RCALL	___CS2S
0x9CB2	0xB3C412  	MOV.B	#65, W2
0x9CB4	0x785802  	MOV.B	W2, [W0++]
0x9CB6	0xEF2004  	CLR	W2
0x9CB8	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6250 :: 		Glcd_Write_Text(WriteText, 84, Row3, Black);
0x9CBA	0xB3C01D  	MOV.B	#1, W13
0x9CBC	0xB3C02C  	MOV.B	#2, W12
0x9CBE	0xB3C54B  	MOV.B	#84, W11
0x9CC0	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9CC2	0x07DD63  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6252 :: 		ValueDivide(MaxVoltSet, 255);
0x9CC4	0xB3CFFB  	MOV.B	#255, W11
0x9CC6	0x80979A  	MOV	_MaxvoltSet, W10
0x9CC8	0x07B733  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6253 :: 		WriteText := Value_Text + 'V';
0x9CCA	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9CCC	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9CCE	0x0715BB  	RCALL	___CS2S
0x9CD0	0xB3C562  	MOV.B	#86, W2
0x9CD2	0x785802  	MOV.B	W2, [W0++]
0x9CD4	0xEF2004  	CLR	W2
0x9CD6	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6254 :: 		Glcd_Write_Text(WriteText, 84, Row4, Black);
0x9CD8	0xB3C01D  	MOV.B	#1, W13
0x9CDA	0xB3C03C  	MOV.B	#3, W12
0x9CDC	0xB3C54B  	MOV.B	#84, W11
0x9CDE	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9CE0	0x07DD54  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6256 :: 		ValueDivide(MinVoltSet, 255);
0x9CE2	0xB3CFFB  	MOV.B	#255, W11
0x9CE4	0x8097BA  	MOV	_MinVoltSet, W10
0x9CE6	0x07B724  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6257 :: 		WriteText := Value_Text + 'V';
0x9CE8	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9CEA	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9CEC	0x0715AC  	RCALL	___CS2S
0x9CEE	0xB3C562  	MOV.B	#86, W2
0x9CF0	0x785802  	MOV.B	W2, [W0++]
0x9CF2	0xEF2004  	CLR	W2
0x9CF4	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6258 :: 		Glcd_Write_Text(WriteText, 84, Row5, Black);
0x9CF6	0xB3C01D  	MOV.B	#1, W13
0x9CF8	0xB3C04C  	MOV.B	#4, W12
0x9CFA	0xB3C54B  	MOV.B	#84, W11
0x9CFC	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9CFE	0x07DD45  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6264 :: 		While (MenuExit =0) do
L__DC_Settings2510:
0x9D00	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x9D02	0x784010  	MOV.B	[W0], W0
0x9D04	0xE10460  	CP.B	W0, #0
0x9D06	0x3A02CB  	BRA NZ	L__DC_Settings2511
L__DC_Settings5417:
;GRR3000LManagementPanel.mpas,6267 :: 		MenuSayac := MenuButtonRead(5, 255);  // menu için butonlarý oku 6 satýr menü var
0x9D08	0xB3CFFB  	MOV.B	#255, W11
0x9D0A	0xB3C05A  	MOV.B	#5, W10
0x9D0C	0x07BAC1  	RCALL	_MenuButtonRead
0x9D0E	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x9D10	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6269 :: 		asm ClrWDT; end;
0x9D12	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6272 :: 		1: begin  // çýkýþ gerilimi
0x9D14	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x9D16	0x784010  	MOV.B	[W0], W0
0x9D18	0xE10461  	CP.B	W0, #1
0x9D1A	0x3A00D2  	BRA NZ	L__DC_Settings2517
L__DC_Settings5418:
;GRR3000LManagementPanel.mpas,6274 :: 		if (ChargeMode = Manuel) then // þarj modu Manuel ise ayar yap deðilse yapma
0x9D1C	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0x9D1E	0x784010  	MOV.B	[W0], W0
0x9D20	0xE10464  	CP.B	W0, #4
0x9D22	0x3A00B8  	BRA NZ	L__DC_Settings2519
L__DC_Settings5419:
;GRR3000LManagementPanel.mpas,6276 :: 		if (Ok_Button =0) then
0x9D24	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9D26	0x3700B5  	BRA	L__DC_Settings2522
;GRR3000LManagementPanel.mpas,6278 :: 		while (Ok_Button =0) do
L__DC_Settings2525:
0x9D28	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9D2A	0x370002  	BRA	L__DC_Settings2526
;GRR3000LManagementPanel.mpas,6280 :: 		asm ClrWDT; end;
0x9D2C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6281 :: 		end;
0x9D2E	0x37FFFC  	BRA	L__DC_Settings2525
L__DC_Settings2526:
;GRR3000LManagementPanel.mpas,6283 :: 		Chng[1] := 1;
0x9D30	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x9D32	0xB3C010  	MOV.B	#1, W0
0x9D34	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6285 :: 		While (Chng[1] =1) do
L__DC_Settings2530:
0x9D36	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x9D38	0x784010  	MOV.B	[W0], W0
0x9D3A	0xE10461  	CP.B	W0, #1
0x9D3C	0x3A00AA  	BRA NZ	L__DC_Settings2531
L__DC_Settings5420:
;GRR3000LManagementPanel.mpas,6288 :: 		asm ClrWDT; end;
0x9D3E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6290 :: 		if (Up_Button =0) then
0x9D40	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x9D42	0x370041  	BRA	L__DC_Settings2535
;GRR3000LManagementPanel.mpas,6292 :: 		ButonStop       := 0;
0x9D44	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9D46	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6293 :: 		BtCounterNormal := 0;
0x9D48	0xEF2000  	CLR	W0
0x9D4A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6294 :: 		while (ButonStop = 0) do
L__DC_Settings2538:
0x9D4C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9D4E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x9D50	0x370002  	BRA	L__DC_Settings2539
;GRR3000LManagementPanel.mpas,6296 :: 		asm ClrWDT; end;
0x9D52	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6297 :: 		end;
0x9D54	0x37FFFB  	BRA	L__DC_Settings2538
L__DC_Settings2539:
;GRR3000LManagementPanel.mpas,6298 :: 		Inc(DCOutVoltSet);
0x9D56	0x200011  	MOV	#1, W1
0x9D58	0x213220  	MOV	#lo_addr(_DCOutVoltSet), W0
0x9D5A	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6299 :: 		if (DCOutVoltSet > ((HucreSayisi*2)*(B_ChargePercentHi * 0.1))) then
0x9D5C	0x809FF0  	MOV	_HucreSayisi, W0
0x9D5E	0xDD0041  	SL	W0, #1, W0
0x9D60	0x980740  	MOV	W0, [W14+8]
0x9D62	0x8097A0  	MOV	_B_ChargePercentHi, W0
0x9D64	0xEB0080  	CLR	W1
0x9D66	0x07FE61  	RCALL	__Long2Float
0x9D68	0x2CCCD2  	MOV	#52429, W2
0x9D6A	0x23DCC3  	MOV	#15820, W3
0x9D6C	0x07FEB9  	RCALL	__Mul_FP
0x9D6E	0x90014E  	MOV	[W14+8], W2
0x9D70	0x980740  	MOV	W0, [W14+8]
0x9D72	0x980751  	MOV	W1, [W14+10]
0x9D74	0x780002  	MOV	W2, W0
0x9D76	0xEB0080  	CLR	W1
0x9D78	0x07FE58  	RCALL	__Long2Float
0x9D7A	0x90014E  	MOV	[W14+8], W2
0x9D7C	0x9001DE  	MOV	[W14+10], W3
0x9D7E	0x07FEB0  	RCALL	__Mul_FP
0x9D80	0x980740  	MOV	W0, [W14+8]
0x9D82	0x980751  	MOV	W1, [W14+10]
0x9D84	0x809910  	MOV	_DCOutVoltSet, W0
0x9D86	0xEB0080  	CLR	W1
0x9D88	0x07FE50  	RCALL	__Long2Float
0x9D8A	0x90014E  	MOV	[W14+8], W2
0x9D8C	0x9001DE  	MOV	[W14+10], W3
0x9D8E	0x071544  	RCALL	__Compare_Ge_Fp
0x9D90	0xE00000  	CP0	W0
0x9D92	0xEF2000  	CLR	W0
0x9D94	0x340001  	BRA LE	L__DC_Settings5421
0x9D96	0xEEA000  	COM	W0
L__DC_Settings5421:
0x9D98	0xE20000  	CP0	W0
0x9D9A	0x320014  	BRA Z	L__DC_Settings2543
L__DC_Settings5422:
;GRR3000LManagementPanel.mpas,6300 :: 		DCOutVoltSet := ((HucreSayisi*2)*(B_ChargePercentHi * 0.1));
0x9D9C	0x809FF0  	MOV	_HucreSayisi, W0
0x9D9E	0xDD0041  	SL	W0, #1, W0
0x9DA0	0x980740  	MOV	W0, [W14+8]
0x9DA2	0x8097A0  	MOV	_B_ChargePercentHi, W0
0x9DA4	0xEB0080  	CLR	W1
0x9DA6	0x07FE41  	RCALL	__Long2Float
0x9DA8	0x2CCCD2  	MOV	#52429, W2
0x9DAA	0x23DCC3  	MOV	#15820, W3
0x9DAC	0x07FE99  	RCALL	__Mul_FP
0x9DAE	0x90014E  	MOV	[W14+8], W2
0x9DB0	0x980740  	MOV	W0, [W14+8]
0x9DB2	0x980751  	MOV	W1, [W14+10]
0x9DB4	0x780002  	MOV	W2, W0
0x9DB6	0xEB0080  	CLR	W1
0x9DB8	0x07FE38  	RCALL	__Long2Float
0x9DBA	0x90014E  	MOV	[W14+8], W2
0x9DBC	0x9001DE  	MOV	[W14+10], W3
0x9DBE	0x07FE90  	RCALL	__Mul_FP
0x9DC0	0x07B642  	RCALL	__Float2Longint
0x9DC2	0x889910  	MOV	W0, _DCOutVoltSet
L__DC_Settings2543:
;GRR3000LManagementPanel.mpas,6301 :: 		end else
0x9DC4	0x370042  	BRA	L__DC_Settings2536
L__DC_Settings2535:
;GRR3000LManagementPanel.mpas,6302 :: 		if (Down_Button =0) then
0x9DC6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x9DC8	0x370040  	BRA	L__DC_Settings2546
;GRR3000LManagementPanel.mpas,6304 :: 		ButonStop       := 0;
0x9DCA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9DCC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6305 :: 		BtCounterNormal := 0;
0x9DCE	0xEF2000  	CLR	W0
0x9DD0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6306 :: 		while (ButonStop = 0) do
L__DC_Settings2549:
0x9DD2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9DD4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x9DD6	0x370002  	BRA	L__DC_Settings2550
;GRR3000LManagementPanel.mpas,6308 :: 		asm ClrWDT; end;
0x9DD8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6309 :: 		end;
0x9DDA	0x37FFFB  	BRA	L__DC_Settings2549
L__DC_Settings2550:
;GRR3000LManagementPanel.mpas,6310 :: 		Dec(DCOutVoltSet);
0x9DDC	0x200011  	MOV	#1, W1
0x9DDE	0x213220  	MOV	#lo_addr(_DCOutVoltSet), W0
0x9DE0	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6311 :: 		if (DCOutVoltSet < ((HucreSayisi*2)*(F_ChargePercentlo * 0.1))) then
0x9DE2	0x809FF0  	MOV	_HucreSayisi, W0
0x9DE4	0xDD0041  	SL	W0, #1, W0
0x9DE6	0x980740  	MOV	W0, [W14+8]
0x9DE8	0x809990  	MOV	_F_ChargePercentLo, W0
0x9DEA	0xEB0080  	CLR	W1
0x9DEC	0x07FE1E  	RCALL	__Long2Float
0x9DEE	0x2CCCD2  	MOV	#52429, W2
0x9DF0	0x23DCC3  	MOV	#15820, W3
0x9DF2	0x07FE76  	RCALL	__Mul_FP
0x9DF4	0x90014E  	MOV	[W14+8], W2
0x9DF6	0x980740  	MOV	W0, [W14+8]
0x9DF8	0x980751  	MOV	W1, [W14+10]
0x9DFA	0x780002  	MOV	W2, W0
0x9DFC	0xEB0080  	CLR	W1
0x9DFE	0x07FE15  	RCALL	__Long2Float
0x9E00	0x90014E  	MOV	[W14+8], W2
0x9E02	0x9001DE  	MOV	[W14+10], W3
0x9E04	0x07FE6D  	RCALL	__Mul_FP
0x9E06	0x980740  	MOV	W0, [W14+8]
0x9E08	0x980751  	MOV	W1, [W14+10]
0x9E0A	0x809910  	MOV	_DCOutVoltSet, W0
0x9E0C	0xEB0080  	CLR	W1
0x9E0E	0x07FE0D  	RCALL	__Long2Float
0x9E10	0x90014E  	MOV	[W14+8], W2
0x9E12	0x9001DE  	MOV	[W14+10], W3
0x9E14	0x071506  	RCALL	__Compare_Le_Fp
0x9E16	0xE00000  	CP0	W0
0x9E18	0xEF2000  	CLR	W0
0x9E1A	0x3D0001  	BRA GE	L__DC_Settings5423
0x9E1C	0xEEA000  	COM	W0
L__DC_Settings5423:
0x9E1E	0xE20000  	CP0	W0
0x9E20	0x320014  	BRA Z	L__DC_Settings2554
L__DC_Settings5424:
;GRR3000LManagementPanel.mpas,6312 :: 		DCOutVoltSet := ((HucreSayisi*2)*(F_ChargePercentLo * 0.1));
0x9E22	0x809FF0  	MOV	_HucreSayisi, W0
0x9E24	0xDD0041  	SL	W0, #1, W0
0x9E26	0x980740  	MOV	W0, [W14+8]
0x9E28	0x809990  	MOV	_F_ChargePercentLo, W0
0x9E2A	0xEB0080  	CLR	W1
0x9E2C	0x07FDFE  	RCALL	__Long2Float
0x9E2E	0x2CCCD2  	MOV	#52429, W2
0x9E30	0x23DCC3  	MOV	#15820, W3
0x9E32	0x07FE56  	RCALL	__Mul_FP
0x9E34	0x90014E  	MOV	[W14+8], W2
0x9E36	0x980740  	MOV	W0, [W14+8]
0x9E38	0x980751  	MOV	W1, [W14+10]
0x9E3A	0x780002  	MOV	W2, W0
0x9E3C	0xEB0080  	CLR	W1
0x9E3E	0x07FDF5  	RCALL	__Long2Float
0x9E40	0x90014E  	MOV	[W14+8], W2
0x9E42	0x9001DE  	MOV	[W14+10], W3
0x9E44	0x07FE4D  	RCALL	__Mul_FP
0x9E46	0x07B5FF  	RCALL	__Float2Longint
0x9E48	0x889910  	MOV	W0, _DCOutVoltSet
L__DC_Settings2554:
;GRR3000LManagementPanel.mpas,6313 :: 		end;
L__DC_Settings2546:
L__DC_Settings2536:
;GRR3000LManagementPanel.mpas,6315 :: 		ValueDivide(DCOutVoltSet, 255);
0x9E4A	0xB3CFFB  	MOV.B	#255, W11
0x9E4C	0x80991A  	MOV	_DCOutVoltSet, W10
0x9E4E	0x07B670  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6316 :: 		WriteText := Value_Text + 'V';
0x9E50	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9E52	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9E54	0x0714F8  	RCALL	___CS2S
0x9E56	0xB3C562  	MOV.B	#86, W2
0x9E58	0x785802  	MOV.B	W2, [W0++]
0x9E5A	0xEF2004  	CLR	W2
0x9E5C	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6317 :: 		Glcd_Write_Text(WriteText, 84, Row2, White);
0x9E5E	0xEF201A  	CLR	W13
0x9E60	0xB3C01C  	MOV.B	#1, W12
0x9E62	0xB3C54B  	MOV.B	#84, W11
0x9E64	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9E66	0x07DC91  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6319 :: 		if (Ok_Button =0) then
0x9E68	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9E6A	0x370012  	BRA	L__DC_Settings2557
;GRR3000LManagementPanel.mpas,6321 :: 		while (Ok_Button =0) do
L__DC_Settings2560:
0x9E6C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9E6E	0x370002  	BRA	L__DC_Settings2561
;GRR3000LManagementPanel.mpas,6323 :: 		asm ClrWDT; end;
0x9E70	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6324 :: 		end;
0x9E72	0x37FFFC  	BRA	L__DC_Settings2560
L__DC_Settings2561:
;GRR3000LManagementPanel.mpas,6326 :: 		EEPROM_Write(EE_DCOutVoltSetEeAddr, DCOutVoltSet);
0x9E74	0x80991C  	MOV	_DCOutVoltSet, W12
0x9E76	0x2F02CA  	MOV	#61484, W10
0x9E78	0x2007FB  	MOV	#127, W11
0x9E7A	0x07BA8D  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6327 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__DC_Settings2565:
0x9E7C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x9E7E	0x37FFFE  	BRA	L__DC_Settings2565
;GRR3000LManagementPanel.mpas,6329 :: 		Chng[1] := 0;
0x9E80	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x9E82	0xEF2000  	CLR	W0
0x9E84	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6330 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0x9E86	0xB3C01D  	MOV.B	#1, W13
0x9E88	0xB3C01C  	MOV.B	#1, W12
0x9E8A	0xB3C54B  	MOV.B	#84, W11
0x9E8C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9E8E	0x07DC7D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6336 :: 		end;
L__DC_Settings2557:
;GRR3000LManagementPanel.mpas,6341 :: 		end; // chng[1] while end
0x9E90	0x37FF52  	BRA	L__DC_Settings2530
L__DC_Settings2531:
;GRR3000LManagementPanel.mpas,6344 :: 		end;
L__DC_Settings2522:
;GRR3000LManagementPanel.mpas,6345 :: 		end else Glcd_Write_Text('------',84,Row2, Black); // þarj modu Manuel deðilse ekrana ---- iþaretlerini yaz
0x9E92	0x370015  	BRA	L__DC_Settings2520
L__DC_Settings2519:
0x9E94	0x4700E0  	ADD	W14, #0, W1
0x9E96	0xB3C2D0  	MOV.B	#45, W0
0x9E98	0x785880  	MOV.B	W0, [W1++]
0x9E9A	0xB3C2D0  	MOV.B	#45, W0
0x9E9C	0x785880  	MOV.B	W0, [W1++]
0x9E9E	0xB3C2D0  	MOV.B	#45, W0
0x9EA0	0x785880  	MOV.B	W0, [W1++]
0x9EA2	0xB3C2D0  	MOV.B	#45, W0
0x9EA4	0x785880  	MOV.B	W0, [W1++]
0x9EA6	0xB3C2D0  	MOV.B	#45, W0
0x9EA8	0x785880  	MOV.B	W0, [W1++]
0x9EAA	0xB3C2D0  	MOV.B	#45, W0
0x9EAC	0x785880  	MOV.B	W0, [W1++]
0x9EAE	0xEF2000  	CLR	W0
0x9EB0	0x785880  	MOV.B	W0, [W1++]
0x9EB2	0x470060  	ADD	W14, #0, W0
0x9EB4	0xB3C01D  	MOV.B	#1, W13
0x9EB6	0xB3C01C  	MOV.B	#1, W12
0x9EB8	0xB3C54B  	MOV.B	#84, W11
0x9EBA	0x780500  	MOV	W0, W10
0x9EBC	0x07DC66  	RCALL	_Glcd_Write_Text
L__DC_Settings2520:
;GRR3000LManagementPanel.mpas,6347 :: 		end;
0x9EBE	0x3701ED  	BRA	L__DC_Settings2514
L__DC_Settings2517:
;GRR3000LManagementPanel.mpas,6349 :: 		2: begin  // çýkýþ akýmý
0x9EC0	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x9EC2	0x784010  	MOV.B	[W0], W0
0x9EC4	0xE10462  	CP.B	W0, #2
0x9EC6	0x3A005F  	BRA NZ	L__DC_Settings2571
L__DC_Settings5425:
;GRR3000LManagementPanel.mpas,6352 :: 		if (Ok_Button =0) then
0x9EC8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9ECA	0x37005C  	BRA	L__DC_Settings2573
;GRR3000LManagementPanel.mpas,6354 :: 		while (Ok_Button =0) do
L__DC_Settings2576:
0x9ECC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9ECE	0x370002  	BRA	L__DC_Settings2577
;GRR3000LManagementPanel.mpas,6356 :: 		asm ClrWDT; end;
0x9ED0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6357 :: 		end;
0x9ED2	0x37FFFC  	BRA	L__DC_Settings2576
L__DC_Settings2577:
;GRR3000LManagementPanel.mpas,6359 :: 		Chng[2] := 1;
0x9ED4	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x9ED6	0xB3C010  	MOV.B	#1, W0
0x9ED8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6361 :: 		While (Chng[2] =1) do
L__DC_Settings2581:
0x9EDA	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x9EDC	0x784010  	MOV.B	[W0], W0
0x9EDE	0xE10461  	CP.B	W0, #1
0x9EE0	0x3A0051  	BRA NZ	L__DC_Settings2582
L__DC_Settings5426:
;GRR3000LManagementPanel.mpas,6364 :: 		asm ClrWDT; end;
0x9EE2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6366 :: 		if (Up_Button =0) then
0x9EE4	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x9EE6	0x370017  	BRA	L__DC_Settings2586
;GRR3000LManagementPanel.mpas,6368 :: 		ButonStop       := 0;
0x9EE8	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9EEA	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6369 :: 		BtCounterNormal := 0;
0x9EEC	0xEF2000  	CLR	W0
0x9EEE	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6370 :: 		while (ButonStop = 0) do
L__DC_Settings2589:
0x9EF0	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9EF2	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x9EF4	0x370002  	BRA	L__DC_Settings2590
;GRR3000LManagementPanel.mpas,6372 :: 		asm ClrWDT; end;
0x9EF6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6373 :: 		end;
0x9EF8	0x37FFFB  	BRA	L__DC_Settings2589
L__DC_Settings2590:
;GRR3000LManagementPanel.mpas,6374 :: 		Inc(DcOutAmpsSet);
0x9EFA	0x200011  	MOV	#1, W1
0x9EFC	0x212EE0  	MOV	#lo_addr(_DcOutAmpsSet), W0
0x9EFE	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6375 :: 		if (DcOutAmpsSet > RedresorAkim*10) then
0x9F00	0x809781  	MOV	_RedresorAkim, W1
0x9F02	0x2000A0  	MOV	#10, W0
0x9F04	0xB80900  	MUL.UU	W1, W0, W2
0x9F06	0x212EE0  	MOV	#lo_addr(_DcOutAmpsSet), W0
0x9F08	0xE11010  	CP	W2, [W0]
0x9F0A	0x310004  	BRA GEU	L__DC_Settings2594
L__DC_Settings5427:
;GRR3000LManagementPanel.mpas,6376 :: 		DcOutAmpsSet := RedresorAkim*10;
0x9F0C	0x809781  	MOV	_RedresorAkim, W1
0x9F0E	0x2000A0  	MOV	#10, W0
0x9F10	0xB80800  	MUL.UU	W1, W0, W0
0x9F12	0x889770  	MOV	W0, _DcOutAmpsSet
L__DC_Settings2594:
;GRR3000LManagementPanel.mpas,6377 :: 		end else
0x9F14	0x370013  	BRA	L__DC_Settings2587
L__DC_Settings2586:
;GRR3000LManagementPanel.mpas,6378 :: 		if (Down_Button =0) then
0x9F16	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x9F18	0x370011  	BRA	L__DC_Settings2597
;GRR3000LManagementPanel.mpas,6380 :: 		ButonStop       := 0;
0x9F1A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9F1C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6381 :: 		BtCounterNormal := 0;
0x9F1E	0xEF2000  	CLR	W0
0x9F20	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6382 :: 		while (ButonStop = 0) do
L__DC_Settings2600:
0x9F22	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9F24	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x9F26	0x370002  	BRA	L__DC_Settings2601
;GRR3000LManagementPanel.mpas,6384 :: 		asm ClrWDT; end;
0x9F28	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6385 :: 		end;
0x9F2A	0x37FFFB  	BRA	L__DC_Settings2600
L__DC_Settings2601:
;GRR3000LManagementPanel.mpas,6386 :: 		Dec(DcOutAmpsSet);
0x9F2C	0x200011  	MOV	#1, W1
0x9F2E	0x212EE0  	MOV	#lo_addr(_DcOutAmpsSet), W0
0x9F30	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6387 :: 		if (DcOutAmpsSet < 1) then
0x9F32	0x809770  	MOV	_DcOutAmpsSet, W0
0x9F34	0xE10061  	CP	W0, #1
0x9F36	0x310002  	BRA GEU	L__DC_Settings2605
L__DC_Settings5428:
;GRR3000LManagementPanel.mpas,6388 :: 		DcOutAmpsSet := 1;
0x9F38	0x200010  	MOV	#1, W0
0x9F3A	0x889770  	MOV	W0, _DcOutAmpsSet
L__DC_Settings2605:
;GRR3000LManagementPanel.mpas,6389 :: 		end;
L__DC_Settings2597:
L__DC_Settings2587:
;GRR3000LManagementPanel.mpas,6391 :: 		ValueDivide(DcOutAmpsSet, 255);
0x9F3C	0xB3CFFB  	MOV.B	#255, W11
0x9F3E	0x80977A  	MOV	_DcOutAmpsSet, W10
0x9F40	0x07B5F7  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6392 :: 		WriteText := Value_Text + 'A';
0x9F42	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x9F44	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x9F46	0x07147F  	RCALL	___CS2S
0x9F48	0xB3C412  	MOV.B	#65, W2
0x9F4A	0x785802  	MOV.B	W2, [W0++]
0x9F4C	0xEF2004  	CLR	W2
0x9F4E	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6393 :: 		Glcd_Write_Text(WriteText, 84, Row3, White);
0x9F50	0xEF201A  	CLR	W13
0x9F52	0xB3C02C  	MOV.B	#2, W12
0x9F54	0xB3C54B  	MOV.B	#84, W11
0x9F56	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9F58	0x07DC18  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6395 :: 		if (Ok_Button =0) then
0x9F5A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9F5C	0x370012  	BRA	L__DC_Settings2608
;GRR3000LManagementPanel.mpas,6397 :: 		while (Ok_Button =0) do
L__DC_Settings2611:
0x9F5E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9F60	0x370002  	BRA	L__DC_Settings2612
;GRR3000LManagementPanel.mpas,6399 :: 		asm ClrWDT; end;
0x9F62	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6400 :: 		end;
0x9F64	0x37FFFC  	BRA	L__DC_Settings2611
L__DC_Settings2612:
;GRR3000LManagementPanel.mpas,6402 :: 		EEPROM_Write(EE_DcOutAmpsSetEeAddr, DcOutAmpsSet);
0x9F66	0x80977C  	MOV	_DcOutAmpsSet, W12
0x9F68	0x2F02EA  	MOV	#61486, W10
0x9F6A	0x2007FB  	MOV	#127, W11
0x9F6C	0x07BA14  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6403 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__DC_Settings2616:
0x9F6E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x9F70	0x37FFFE  	BRA	L__DC_Settings2616
;GRR3000LManagementPanel.mpas,6405 :: 		Chng[2] := 0;
0x9F72	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x9F74	0xEF2000  	CLR	W0
0x9F76	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6406 :: 		Glcd_Write_Text(WriteText, 84, Row3, Black);
0x9F78	0xB3C01D  	MOV.B	#1, W13
0x9F7A	0xB3C02C  	MOV.B	#2, W12
0x9F7C	0xB3C54B  	MOV.B	#84, W11
0x9F7E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x9F80	0x07DC04  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6410 :: 		end;
L__DC_Settings2608:
;GRR3000LManagementPanel.mpas,6415 :: 		end; // chng[2] while end
0x9F82	0x37FFAB  	BRA	L__DC_Settings2581
L__DC_Settings2582:
;GRR3000LManagementPanel.mpas,6418 :: 		end;
L__DC_Settings2573:
;GRR3000LManagementPanel.mpas,6421 :: 		end;
0x9F84	0x37018A  	BRA	L__DC_Settings2514
L__DC_Settings2571:
;GRR3000LManagementPanel.mpas,6423 :: 		3: begin  // max gerilimi
0x9F86	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x9F88	0x784010  	MOV.B	[W0], W0
0x9F8A	0xE10463  	CP.B	W0, #3
0x9F8C	0x3A00BA  	BRA NZ	L__DC_Settings2622
L__DC_Settings5429:
;GRR3000LManagementPanel.mpas,6425 :: 		if (Ok_Button =0) then
0x9F8E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9F90	0x3700B7  	BRA	L__DC_Settings2624
;GRR3000LManagementPanel.mpas,6427 :: 		while (Ok_Button =0) do
L__DC_Settings2627:
0x9F92	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x9F94	0x370002  	BRA	L__DC_Settings2628
;GRR3000LManagementPanel.mpas,6429 :: 		asm ClrWDT; end;
0x9F96	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6430 :: 		end;
0x9F98	0x37FFFC  	BRA	L__DC_Settings2627
L__DC_Settings2628:
;GRR3000LManagementPanel.mpas,6432 :: 		Chng[3] := 1;
0x9F9A	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x9F9C	0xB3C010  	MOV.B	#1, W0
0x9F9E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6434 :: 		While (Chng[3] =1) do
L__DC_Settings2632:
0x9FA0	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0x9FA2	0x784010  	MOV.B	[W0], W0
0x9FA4	0xE10461  	CP.B	W0, #1
0x9FA6	0x3A00AC  	BRA NZ	L__DC_Settings2633
L__DC_Settings5430:
;GRR3000LManagementPanel.mpas,6437 :: 		asm ClrWDT; end;
0x9FA8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6439 :: 		if (Up_Button =0) then
0x9FAA	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x9FAC	0x370043  	BRA	L__DC_Settings2637
;GRR3000LManagementPanel.mpas,6441 :: 		ButonStop       := 0;
0x9FAE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9FB0	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6442 :: 		BtCounterNormal := 0;
0x9FB2	0xEF2000  	CLR	W0
0x9FB4	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6443 :: 		while (ButonStop = 0) do
L__DC_Settings2640:
0x9FB6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x9FB8	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x9FBA	0x370002  	BRA	L__DC_Settings2641
;GRR3000LManagementPanel.mpas,6445 :: 		asm ClrWDT; end;
0x9FBC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6446 :: 		end;
0x9FBE	0x37FFFB  	BRA	L__DC_Settings2640
L__DC_Settings2641:
;GRR3000LManagementPanel.mpas,6447 :: 		Inc(MaxVoltSet);
0x9FC0	0x200011  	MOV	#1, W1
0x9FC2	0x212F20  	MOV	#lo_addr(_MaxvoltSet), W0
0x9FC4	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6448 :: 		if (MaxVoltSet > ((HucreSayisi*2)*((B_ChargePercentHi+10) * 0.1))) then
0x9FC6	0x809FF0  	MOV	_HucreSayisi, W0
0x9FC8	0xDD0041  	SL	W0, #1, W0
0x9FCA	0x980740  	MOV	W0, [W14+8]
0x9FCC	0x8097A0  	MOV	_B_ChargePercentHi, W0
0x9FCE	0x40006A  	ADD	W0, #10, W0
0x9FD0	0xEB0080  	CLR	W1
0x9FD2	0x07FD2B  	RCALL	__Long2Float
0x9FD4	0x2CCCD2  	MOV	#52429, W2
0x9FD6	0x23DCC3  	MOV	#15820, W3
0x9FD8	0x07FD83  	RCALL	__Mul_FP
0x9FDA	0x90014E  	MOV	[W14+8], W2
0x9FDC	0x980740  	MOV	W0, [W14+8]
0x9FDE	0x980751  	MOV	W1, [W14+10]
0x9FE0	0x780002  	MOV	W2, W0
0x9FE2	0xEB0080  	CLR	W1
0x9FE4	0x07FD22  	RCALL	__Long2Float
0x9FE6	0x90014E  	MOV	[W14+8], W2
0x9FE8	0x9001DE  	MOV	[W14+10], W3
0x9FEA	0x07FD7A  	RCALL	__Mul_FP
0x9FEC	0x980740  	MOV	W0, [W14+8]
0x9FEE	0x980751  	MOV	W1, [W14+10]
0x9FF0	0x809790  	MOV	_MaxvoltSet, W0
0x9FF2	0xEB0080  	CLR	W1
0x9FF4	0x07FD1A  	RCALL	__Long2Float
0x9FF6	0x90014E  	MOV	[W14+8], W2
0x9FF8	0x9001DE  	MOV	[W14+10], W3
0x9FFA	0x07140E  	RCALL	__Compare_Ge_Fp
0x9FFC	0xE00000  	CP0	W0
0x9FFE	0xEF2000  	CLR	W0
0xA000	0x340001  	BRA LE	L__DC_Settings5431
0xA002	0xEEA000  	COM	W0
L__DC_Settings5431:
0xA004	0xE20000  	CP0	W0
0xA006	0x320015  	BRA Z	L__DC_Settings2645
L__DC_Settings5432:
;GRR3000LManagementPanel.mpas,6449 :: 		MaxVoltSet := ((HucreSayisi*2)*((B_ChargePercentHi+10) * 0.1));
0xA008	0x809FF0  	MOV	_HucreSayisi, W0
0xA00A	0xDD0041  	SL	W0, #1, W0
0xA00C	0x980740  	MOV	W0, [W14+8]
0xA00E	0x8097A0  	MOV	_B_ChargePercentHi, W0
0xA010	0x40006A  	ADD	W0, #10, W0
0xA012	0xEB0080  	CLR	W1
0xA014	0x07FD0A  	RCALL	__Long2Float
0xA016	0x2CCCD2  	MOV	#52429, W2
0xA018	0x23DCC3  	MOV	#15820, W3
0xA01A	0x07FD62  	RCALL	__Mul_FP
0xA01C	0x90014E  	MOV	[W14+8], W2
0xA01E	0x980740  	MOV	W0, [W14+8]
0xA020	0x980751  	MOV	W1, [W14+10]
0xA022	0x780002  	MOV	W2, W0
0xA024	0xEB0080  	CLR	W1
0xA026	0x07FD01  	RCALL	__Long2Float
0xA028	0x90014E  	MOV	[W14+8], W2
0xA02A	0x9001DE  	MOV	[W14+10], W3
0xA02C	0x07FD59  	RCALL	__Mul_FP
0xA02E	0x07B50B  	RCALL	__Float2Longint
0xA030	0x889790  	MOV	W0, _MaxvoltSet
L__DC_Settings2645:
;GRR3000LManagementPanel.mpas,6450 :: 		end else
0xA032	0x370042  	BRA	L__DC_Settings2638
L__DC_Settings2637:
;GRR3000LManagementPanel.mpas,6451 :: 		if (Down_Button =0) then
0xA034	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA036	0x370040  	BRA	L__DC_Settings2648
;GRR3000LManagementPanel.mpas,6453 :: 		ButonStop       := 0;
0xA038	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA03A	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6454 :: 		BtCounterNormal := 0;
0xA03C	0xEF2000  	CLR	W0
0xA03E	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6455 :: 		while (ButonStop = 0) do
L__DC_Settings2651:
0xA040	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA042	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA044	0x370002  	BRA	L__DC_Settings2652
;GRR3000LManagementPanel.mpas,6457 :: 		asm ClrWDT; end;
0xA046	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6458 :: 		end;
0xA048	0x37FFFB  	BRA	L__DC_Settings2651
L__DC_Settings2652:
;GRR3000LManagementPanel.mpas,6459 :: 		Dec(MaxVoltSet);
0xA04A	0x200011  	MOV	#1, W1
0xA04C	0x212F20  	MOV	#lo_addr(_MaxvoltSet), W0
0xA04E	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6460 :: 		if (MaxVoltSet < ((HucreSayisi*2)*(F_ChargePercentlo * 0.1))) then
0xA050	0x809FF0  	MOV	_HucreSayisi, W0
0xA052	0xDD0041  	SL	W0, #1, W0
0xA054	0x980740  	MOV	W0, [W14+8]
0xA056	0x809990  	MOV	_F_ChargePercentLo, W0
0xA058	0xEB0080  	CLR	W1
0xA05A	0x07FCE7  	RCALL	__Long2Float
0xA05C	0x2CCCD2  	MOV	#52429, W2
0xA05E	0x23DCC3  	MOV	#15820, W3
0xA060	0x07FD3F  	RCALL	__Mul_FP
0xA062	0x90014E  	MOV	[W14+8], W2
0xA064	0x980740  	MOV	W0, [W14+8]
0xA066	0x980751  	MOV	W1, [W14+10]
0xA068	0x780002  	MOV	W2, W0
0xA06A	0xEB0080  	CLR	W1
0xA06C	0x07FCDE  	RCALL	__Long2Float
0xA06E	0x90014E  	MOV	[W14+8], W2
0xA070	0x9001DE  	MOV	[W14+10], W3
0xA072	0x07FD36  	RCALL	__Mul_FP
0xA074	0x980740  	MOV	W0, [W14+8]
0xA076	0x980751  	MOV	W1, [W14+10]
0xA078	0x809790  	MOV	_MaxvoltSet, W0
0xA07A	0xEB0080  	CLR	W1
0xA07C	0x07FCD6  	RCALL	__Long2Float
0xA07E	0x90014E  	MOV	[W14+8], W2
0xA080	0x9001DE  	MOV	[W14+10], W3
0xA082	0x0713CF  	RCALL	__Compare_Le_Fp
0xA084	0xE00000  	CP0	W0
0xA086	0xEF2000  	CLR	W0
0xA088	0x3D0001  	BRA GE	L__DC_Settings5433
0xA08A	0xEEA000  	COM	W0
L__DC_Settings5433:
0xA08C	0xE20000  	CP0	W0
0xA08E	0x320014  	BRA Z	L__DC_Settings2656
L__DC_Settings5434:
;GRR3000LManagementPanel.mpas,6461 :: 		MaxVoltSet := ((HucreSayisi*2)*(F_ChargePercentLo * 0.1));
0xA090	0x809FF0  	MOV	_HucreSayisi, W0
0xA092	0xDD0041  	SL	W0, #1, W0
0xA094	0x980740  	MOV	W0, [W14+8]
0xA096	0x809990  	MOV	_F_ChargePercentLo, W0
0xA098	0xEB0080  	CLR	W1
0xA09A	0x07FCC7  	RCALL	__Long2Float
0xA09C	0x2CCCD2  	MOV	#52429, W2
0xA09E	0x23DCC3  	MOV	#15820, W3
0xA0A0	0x07FD1F  	RCALL	__Mul_FP
0xA0A2	0x90014E  	MOV	[W14+8], W2
0xA0A4	0x980740  	MOV	W0, [W14+8]
0xA0A6	0x980751  	MOV	W1, [W14+10]
0xA0A8	0x780002  	MOV	W2, W0
0xA0AA	0xEB0080  	CLR	W1
0xA0AC	0x07FCBE  	RCALL	__Long2Float
0xA0AE	0x90014E  	MOV	[W14+8], W2
0xA0B0	0x9001DE  	MOV	[W14+10], W3
0xA0B2	0x07FD16  	RCALL	__Mul_FP
0xA0B4	0x07B4C8  	RCALL	__Float2Longint
0xA0B6	0x889790  	MOV	W0, _MaxvoltSet
L__DC_Settings2656:
;GRR3000LManagementPanel.mpas,6462 :: 		end;
L__DC_Settings2648:
L__DC_Settings2638:
;GRR3000LManagementPanel.mpas,6464 :: 		ValueDivide(MaxVoltSet, 255);
0xA0B8	0xB3CFFB  	MOV.B	#255, W11
0xA0BA	0x80979A  	MOV	_MaxvoltSet, W10
0xA0BC	0x07B539  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6465 :: 		WriteText := Value_Text + 'V';
0xA0BE	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA0C0	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA0C2	0x0713C1  	RCALL	___CS2S
0xA0C4	0xB3C562  	MOV.B	#86, W2
0xA0C6	0x785802  	MOV.B	W2, [W0++]
0xA0C8	0xEF2004  	CLR	W2
0xA0CA	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6466 :: 		Glcd_Write_Text(WriteText, 84, Row4, White);
0xA0CC	0xEF201A  	CLR	W13
0xA0CE	0xB3C03C  	MOV.B	#3, W12
0xA0D0	0xB3C54B  	MOV.B	#84, W11
0xA0D2	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA0D4	0x07DB5A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6468 :: 		if (Ok_Button =0) then
0xA0D6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA0D8	0x370012  	BRA	L__DC_Settings2659
;GRR3000LManagementPanel.mpas,6470 :: 		while (Ok_Button =0) do
L__DC_Settings2662:
0xA0DA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA0DC	0x370002  	BRA	L__DC_Settings2663
;GRR3000LManagementPanel.mpas,6472 :: 		asm ClrWDT; end;
0xA0DE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6473 :: 		end;
0xA0E0	0x37FFFC  	BRA	L__DC_Settings2662
L__DC_Settings2663:
;GRR3000LManagementPanel.mpas,6475 :: 		EEPROM_Write(EE_MaxVoltSetEeAddr, MaxVoltSet);
0xA0E2	0x80979C  	MOV	_MaxvoltSet, W12
0xA0E4	0x2F030A  	MOV	#61488, W10
0xA0E6	0x2007FB  	MOV	#127, W11
0xA0E8	0x07B956  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6476 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__DC_Settings2667:
0xA0EA	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA0EC	0x37FFFE  	BRA	L__DC_Settings2667
;GRR3000LManagementPanel.mpas,6478 :: 		Chng[3] := 0;
0xA0EE	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xA0F0	0xEF2000  	CLR	W0
0xA0F2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6479 :: 		Glcd_Write_Text(WriteText, 84, Row4, Black);
0xA0F4	0xB3C01D  	MOV.B	#1, W13
0xA0F6	0xB3C03C  	MOV.B	#3, W12
0xA0F8	0xB3C54B  	MOV.B	#84, W11
0xA0FA	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA0FC	0x07DB46  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6483 :: 		end;
L__DC_Settings2659:
;GRR3000LManagementPanel.mpas,6488 :: 		end; // chng[3] while end
0xA0FE	0x37FF50  	BRA	L__DC_Settings2632
L__DC_Settings2633:
;GRR3000LManagementPanel.mpas,6490 :: 		end;
L__DC_Settings2624:
;GRR3000LManagementPanel.mpas,6492 :: 		end;
0xA100	0x3700CC  	BRA	L__DC_Settings2514
L__DC_Settings2622:
;GRR3000LManagementPanel.mpas,6494 :: 		4: begin  // min gerilimi
0xA102	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA104	0x784010  	MOV.B	[W0], W0
0xA106	0xE10464  	CP.B	W0, #4
0xA108	0x3A00BA  	BRA NZ	L__DC_Settings2673
L__DC_Settings5435:
;GRR3000LManagementPanel.mpas,6496 :: 		if (Ok_Button =0) then
0xA10A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA10C	0x3700B7  	BRA	L__DC_Settings2675
;GRR3000LManagementPanel.mpas,6498 :: 		while (Ok_Button =0) do
L__DC_Settings2678:
0xA10E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA110	0x370002  	BRA	L__DC_Settings2679
;GRR3000LManagementPanel.mpas,6500 :: 		asm ClrWDT; end;
0xA112	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6501 :: 		end;
0xA114	0x37FFFC  	BRA	L__DC_Settings2678
L__DC_Settings2679:
;GRR3000LManagementPanel.mpas,6503 :: 		Chng[4] := 1;
0xA116	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xA118	0xB3C010  	MOV.B	#1, W0
0xA11A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6505 :: 		While (Chng[4] =1) do
L__DC_Settings2683:
0xA11C	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0xA11E	0x784010  	MOV.B	[W0], W0
0xA120	0xE10461  	CP.B	W0, #1
0xA122	0x3A00AC  	BRA NZ	L__DC_Settings2684
L__DC_Settings5436:
;GRR3000LManagementPanel.mpas,6508 :: 		asm ClrWDT; end;
0xA124	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6510 :: 		if (Up_Button =0) then
0xA126	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xA128	0x370041  	BRA	L__DC_Settings2688
;GRR3000LManagementPanel.mpas,6512 :: 		ButonStop       := 0;
0xA12A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA12C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6513 :: 		BtCounterNormal := 0;
0xA12E	0xEF2000  	CLR	W0
0xA130	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6514 :: 		while (ButonStop = 0) do
L__DC_Settings2691:
0xA132	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA134	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA136	0x370002  	BRA	L__DC_Settings2692
;GRR3000LManagementPanel.mpas,6516 :: 		asm ClrWDT; end;
0xA138	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6517 :: 		end;
0xA13A	0x37FFFB  	BRA	L__DC_Settings2691
L__DC_Settings2692:
;GRR3000LManagementPanel.mpas,6518 :: 		Inc(MinVoltSet);
0xA13C	0x200011  	MOV	#1, W1
0xA13E	0x212F60  	MOV	#lo_addr(_MinVoltSet), W0
0xA140	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6519 :: 		if (MinVoltSet > ((HucreSayisi*2)*(B_ChargePercentHi * 0.1))) then
0xA142	0x809FF0  	MOV	_HucreSayisi, W0
0xA144	0xDD0041  	SL	W0, #1, W0
0xA146	0x980740  	MOV	W0, [W14+8]
0xA148	0x8097A0  	MOV	_B_ChargePercentHi, W0
0xA14A	0xEB0080  	CLR	W1
0xA14C	0x07FC6E  	RCALL	__Long2Float
0xA14E	0x2CCCD2  	MOV	#52429, W2
0xA150	0x23DCC3  	MOV	#15820, W3
0xA152	0x07FCC6  	RCALL	__Mul_FP
0xA154	0x90014E  	MOV	[W14+8], W2
0xA156	0x980740  	MOV	W0, [W14+8]
0xA158	0x980751  	MOV	W1, [W14+10]
0xA15A	0x780002  	MOV	W2, W0
0xA15C	0xEB0080  	CLR	W1
0xA15E	0x07FC65  	RCALL	__Long2Float
0xA160	0x90014E  	MOV	[W14+8], W2
0xA162	0x9001DE  	MOV	[W14+10], W3
0xA164	0x07FCBD  	RCALL	__Mul_FP
0xA166	0x980740  	MOV	W0, [W14+8]
0xA168	0x980751  	MOV	W1, [W14+10]
0xA16A	0x8097B0  	MOV	_MinVoltSet, W0
0xA16C	0xEB0080  	CLR	W1
0xA16E	0x07FC5D  	RCALL	__Long2Float
0xA170	0x90014E  	MOV	[W14+8], W2
0xA172	0x9001DE  	MOV	[W14+10], W3
0xA174	0x071351  	RCALL	__Compare_Ge_Fp
0xA176	0xE00000  	CP0	W0
0xA178	0xEF2000  	CLR	W0
0xA17A	0x340001  	BRA LE	L__DC_Settings5437
0xA17C	0xEEA000  	COM	W0
L__DC_Settings5437:
0xA17E	0xE20000  	CP0	W0
0xA180	0x320014  	BRA Z	L__DC_Settings2696
L__DC_Settings5438:
;GRR3000LManagementPanel.mpas,6520 :: 		MinVoltSet := ((HucreSayisi*2)*(B_ChargePercentHi * 0.1));
0xA182	0x809FF0  	MOV	_HucreSayisi, W0
0xA184	0xDD0041  	SL	W0, #1, W0
0xA186	0x980740  	MOV	W0, [W14+8]
0xA188	0x8097A0  	MOV	_B_ChargePercentHi, W0
0xA18A	0xEB0080  	CLR	W1
0xA18C	0x07FC4E  	RCALL	__Long2Float
0xA18E	0x2CCCD2  	MOV	#52429, W2
0xA190	0x23DCC3  	MOV	#15820, W3
0xA192	0x07FCA6  	RCALL	__Mul_FP
0xA194	0x90014E  	MOV	[W14+8], W2
0xA196	0x980740  	MOV	W0, [W14+8]
0xA198	0x980751  	MOV	W1, [W14+10]
0xA19A	0x780002  	MOV	W2, W0
0xA19C	0xEB0080  	CLR	W1
0xA19E	0x07FC45  	RCALL	__Long2Float
0xA1A0	0x90014E  	MOV	[W14+8], W2
0xA1A2	0x9001DE  	MOV	[W14+10], W3
0xA1A4	0x07FC9D  	RCALL	__Mul_FP
0xA1A6	0x07B44F  	RCALL	__Float2Longint
0xA1A8	0x8897B0  	MOV	W0, _MinVoltSet
L__DC_Settings2696:
;GRR3000LManagementPanel.mpas,6521 :: 		end else
0xA1AA	0x370044  	BRA	L__DC_Settings2689
L__DC_Settings2688:
;GRR3000LManagementPanel.mpas,6522 :: 		if (Down_Button =0) then
0xA1AC	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xA1AE	0x370042  	BRA	L__DC_Settings2699
;GRR3000LManagementPanel.mpas,6524 :: 		ButonStop       := 0;
0xA1B0	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA1B2	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6525 :: 		BtCounterNormal := 0;
0xA1B4	0xEF2000  	CLR	W0
0xA1B6	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6526 :: 		while (ButonStop = 0) do
L__DC_Settings2702:
0xA1B8	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xA1BA	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xA1BC	0x370002  	BRA	L__DC_Settings2703
;GRR3000LManagementPanel.mpas,6528 :: 		asm ClrWDT; end;
0xA1BE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6529 :: 		end;
0xA1C0	0x37FFFB  	BRA	L__DC_Settings2702
L__DC_Settings2703:
;GRR3000LManagementPanel.mpas,6530 :: 		Dec(MinVoltSet);
0xA1C2	0x200011  	MOV	#1, W1
0xA1C4	0x212F60  	MOV	#lo_addr(_MinVoltSet), W0
0xA1C6	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6531 :: 		if (MinVoltSet < ((HucreSayisi*2)*((F_ChargePercentlo-10) * 0.1))) then
0xA1C8	0x809FF0  	MOV	_HucreSayisi, W0
0xA1CA	0xDD0041  	SL	W0, #1, W0
0xA1CC	0x980740  	MOV	W0, [W14+8]
0xA1CE	0x809990  	MOV	_F_ChargePercentLo, W0
0xA1D0	0x50006A  	SUB	W0, #10, W0
0xA1D2	0xEB0080  	CLR	W1
0xA1D4	0x07FC2A  	RCALL	__Long2Float
0xA1D6	0x2CCCD2  	MOV	#52429, W2
0xA1D8	0x23DCC3  	MOV	#15820, W3
0xA1DA	0x07FC82  	RCALL	__Mul_FP
0xA1DC	0x90014E  	MOV	[W14+8], W2
0xA1DE	0x980740  	MOV	W0, [W14+8]
0xA1E0	0x980751  	MOV	W1, [W14+10]
0xA1E2	0x780002  	MOV	W2, W0
0xA1E4	0xEB0080  	CLR	W1
0xA1E6	0x07FC21  	RCALL	__Long2Float
0xA1E8	0x90014E  	MOV	[W14+8], W2
0xA1EA	0x9001DE  	MOV	[W14+10], W3
0xA1EC	0x07FC79  	RCALL	__Mul_FP
0xA1EE	0x980740  	MOV	W0, [W14+8]
0xA1F0	0x980751  	MOV	W1, [W14+10]
0xA1F2	0x8097B0  	MOV	_MinVoltSet, W0
0xA1F4	0xEB0080  	CLR	W1
0xA1F6	0x07FC19  	RCALL	__Long2Float
0xA1F8	0x90014E  	MOV	[W14+8], W2
0xA1FA	0x9001DE  	MOV	[W14+10], W3
0xA1FC	0x071312  	RCALL	__Compare_Le_Fp
0xA1FE	0xE00000  	CP0	W0
0xA200	0xEF2000  	CLR	W0
0xA202	0x3D0001  	BRA GE	L__DC_Settings5439
0xA204	0xEEA000  	COM	W0
L__DC_Settings5439:
0xA206	0xE20000  	CP0	W0
0xA208	0x320015  	BRA Z	L__DC_Settings2707
L__DC_Settings5440:
;GRR3000LManagementPanel.mpas,6532 :: 		MinVoltSet := ((HucreSayisi*2)*((F_ChargePercentLo-10) * 0.1));
0xA20A	0x809FF0  	MOV	_HucreSayisi, W0
0xA20C	0xDD0041  	SL	W0, #1, W0
0xA20E	0x980740  	MOV	W0, [W14+8]
0xA210	0x809990  	MOV	_F_ChargePercentLo, W0
0xA212	0x50006A  	SUB	W0, #10, W0
0xA214	0xEB0080  	CLR	W1
0xA216	0x07FC09  	RCALL	__Long2Float
0xA218	0x2CCCD2  	MOV	#52429, W2
0xA21A	0x23DCC3  	MOV	#15820, W3
0xA21C	0x07FC61  	RCALL	__Mul_FP
0xA21E	0x90014E  	MOV	[W14+8], W2
0xA220	0x980740  	MOV	W0, [W14+8]
0xA222	0x980751  	MOV	W1, [W14+10]
0xA224	0x780002  	MOV	W2, W0
0xA226	0xEB0080  	CLR	W1
0xA228	0x07FC00  	RCALL	__Long2Float
0xA22A	0x90014E  	MOV	[W14+8], W2
0xA22C	0x9001DE  	MOV	[W14+10], W3
0xA22E	0x07FC58  	RCALL	__Mul_FP
0xA230	0x07B40A  	RCALL	__Float2Longint
0xA232	0x8897B0  	MOV	W0, _MinVoltSet
L__DC_Settings2707:
;GRR3000LManagementPanel.mpas,6533 :: 		end;
L__DC_Settings2699:
L__DC_Settings2689:
;GRR3000LManagementPanel.mpas,6535 :: 		ValueDivide(MinVoltSet, 255);
0xA234	0xB3CFFB  	MOV.B	#255, W11
0xA236	0x8097BA  	MOV	_MinVoltSet, W10
0xA238	0x07B47B  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6536 :: 		WriteText := Value_Text + 'V';
0xA23A	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA23C	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA23E	0x071303  	RCALL	___CS2S
0xA240	0xB3C562  	MOV.B	#86, W2
0xA242	0x785802  	MOV.B	W2, [W0++]
0xA244	0xEF2004  	CLR	W2
0xA246	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6537 :: 		Glcd_Write_Text(WriteText, 84, Row5, White);
0xA248	0xEF201A  	CLR	W13
0xA24A	0xB3C04C  	MOV.B	#4, W12
0xA24C	0xB3C54B  	MOV.B	#84, W11
0xA24E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA250	0x07DA9C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6539 :: 		if (Ok_Button =0) then
0xA252	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA254	0x370012  	BRA	L__DC_Settings2710
;GRR3000LManagementPanel.mpas,6541 :: 		while (Ok_Button =0) do
L__DC_Settings2713:
0xA256	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA258	0x370002  	BRA	L__DC_Settings2714
;GRR3000LManagementPanel.mpas,6543 :: 		asm ClrWDT; end;
0xA25A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6544 :: 		end;
0xA25C	0x37FFFC  	BRA	L__DC_Settings2713
L__DC_Settings2714:
;GRR3000LManagementPanel.mpas,6546 :: 		EEPROM_Write(EE_MinVoltSetEeAddr, MinVoltSet);
0xA25E	0x8097BC  	MOV	_MinVoltSet, W12
0xA260	0x2F032A  	MOV	#61490, W10
0xA262	0x2007FB  	MOV	#127, W11
0xA264	0x07B898  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6547 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__DC_Settings2718:
0xA266	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA268	0x37FFFE  	BRA	L__DC_Settings2718
;GRR3000LManagementPanel.mpas,6549 :: 		Chng[4] := 0;
0xA26A	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xA26C	0xEF2000  	CLR	W0
0xA26E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6550 :: 		Glcd_Write_Text(WriteText, 84, Row5, Black);
0xA270	0xB3C01D  	MOV.B	#1, W13
0xA272	0xB3C04C  	MOV.B	#4, W12
0xA274	0xB3C54B  	MOV.B	#84, W11
0xA276	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA278	0x07DA88  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6554 :: 		end;
L__DC_Settings2710:
;GRR3000LManagementPanel.mpas,6559 :: 		end; // chng[4] while end
0xA27A	0x37FF50  	BRA	L__DC_Settings2683
L__DC_Settings2684:
;GRR3000LManagementPanel.mpas,6562 :: 		end;
L__DC_Settings2675:
;GRR3000LManagementPanel.mpas,6564 :: 		end;
0xA27C	0x37000E  	BRA	L__DC_Settings2514
L__DC_Settings2673:
;GRR3000LManagementPanel.mpas,6635 :: 		5: begin // geri
0xA27E	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA280	0x784010  	MOV.B	[W0], W0
0xA282	0xE10465  	CP.B	W0, #5
0xA284	0x3A000A  	BRA NZ	L__DC_Settings2724
L__DC_Settings5441:
;GRR3000LManagementPanel.mpas,6637 :: 		if (Ok_Button =0) then
0xA286	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA288	0x370007  	BRA	L__DC_Settings2726
;GRR3000LManagementPanel.mpas,6639 :: 		while (Ok_Button =0) do
L__DC_Settings2729:
0xA28A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xA28C	0x370002  	BRA	L__DC_Settings2730
;GRR3000LManagementPanel.mpas,6641 :: 		asm ClrWDT; end;
0xA28E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6642 :: 		end;
0xA290	0x37FFFC  	BRA	L__DC_Settings2729
L__DC_Settings2730:
;GRR3000LManagementPanel.mpas,6643 :: 		MenuExit := 1;
0xA292	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xA294	0xB3C010  	MOV.B	#1, W0
0xA296	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6645 :: 		end;
L__DC_Settings2726:
;GRR3000LManagementPanel.mpas,6649 :: 		end;
0xA298	0x370000  	BRA	L__DC_Settings2514
L__DC_Settings2724:
L__DC_Settings2514:
;GRR3000LManagementPanel.mpas,6652 :: 		asm ClrWDT; end;
0xA29A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6654 :: 		end; // MenuExit while end
0xA29C	0x37FD31  	BRA	L__DC_Settings2510
L__DC_Settings2511:
;GRR3000LManagementPanel.mpas,6656 :: 		Glcd_Fill(0x00);
0xA29E	0xEF2014  	CLR	W10
0xA2A0	0x07FB15  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6657 :: 		MenuSayacValue := 2;
0xA2A2	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xA2A4	0xB3C020  	MOV.B	#2, W0
0xA2A6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6659 :: 		end;
L_end_DC_Settings:
0xA2A8	0x7806CF  	POP	W13
0xA2AA	0x78064F  	POP	W12
0xA2AC	0x7805CF  	POP	W11
0xA2AE	0x78054F  	POP	W10
0xA2B0	0xFA8000  	ULNK
0xA2B2	0x060000  	RETURN
; end of _DC_Settings
__Long2Float:
0x9A2A	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,118 :: 		
;__Lib_MathDouble.mpas,120 :: 		
0x9A2C	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.mpas,121 :: 		
0x9A2E	0x000000049ADC  	GOTO	the_end__Long2Float
;__Lib_MathDouble.mpas,123 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.mpas,125 :: 		
0x9A32	0xE20004  	CP0	W2
;__Lib_MathDouble.mpas,126 :: 		
0x9A34	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.mpas,128 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.mpas,129 :: 		
0x9A36	0xEB0500  	CLR	W10
;__Lib_MathDouble.mpas,130 :: 		
0x9A38	0xE20002  	CP0	W1
;__Lib_MathDouble.mpas,131 :: 		
0x9A3A	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.mpas,132 :: 		
0x9A3C	0xE20000  	CP0	W0
;__Lib_MathDouble.mpas,133 :: 		
0x9A3E	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.mpas,134 :: 		
0x9A40	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.mpas,136 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.mpas,137 :: 		
0x9A42	0x8800A1  	MOV	W1, W10
;__Lib_MathDouble.mpas,138 :: 		
0x9A44	0xE20002  	CP0	W1
;__Lib_MathDouble.mpas,139 :: 		
0x9A46	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.mpas,140 :: 		
0x9A48	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.mpas,141 :: 		
0x9A4A	0xE20000  	CP0	W0
;__Lib_MathDouble.mpas,142 :: 		
0x9A4C	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.mpas,143 :: 		
0x9A4E	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.mpas,144 :: 		
Longint2Float_negative:
;__Lib_MathDouble.mpas,145 :: 		
0x9A50	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.mpas,146 :: 		
0x9A52	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.mpas,147 :: 		
0x9A54	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.mpas,148 :: 		
0x9A56	0x2CF001  	MOV	#52992, W1
;__Lib_MathDouble.mpas,149 :: 		
0x9A58	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.mpas,151 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.mpas,152 :: 		
0x9A5A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.mpas,153 :: 		
0x9A5C	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.mpas,154 :: 		
0x9A5E	0x20096B  	MOV	#150, W11
;__Lib_MathDouble.mpas,155 :: 		
0x9A60	0xCF8209  	FF1L	W9, W4
;__Lib_MathDouble.mpas,156 :: 		
0x9A62	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.mpas,157 :: 		
0x9A64	0xCF8208  	FF1L	W8, W4
;__Lib_MathDouble.mpas,158 :: 		
0x9A66	0xB04104  	ADD.B	#16, W4
;__Lib_MathDouble.mpas,159 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.mpas,160 :: 		
0x9A68	0x524269  	SUB.B	W4, #9, W4
;__Lib_MathDouble.mpas,161 :: 		
0x9A6A	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.mpas,162 :: 		
0x9A6C	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.mpas,163 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.mpas,164 :: 		
0x9A6E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,165 :: 		
0x9A70	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,166 :: 		
0x9A72	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,167 :: 		
0x9A74	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,168 :: 		
0x9A76	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,169 :: 		
0x9A78	0xE84204  	INC.B	W4, W4
;__Lib_MathDouble.mpas,170 :: 		
0x9A7A	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.mpas,171 :: 		
0x9A7C	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.mpas,172 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.mpas,173 :: 		
0x9A7E	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.mpas,174 :: 		
0x9A80	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.mpas,175 :: 		
0x9A82	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.mpas,176 :: 		
0x9A84	0xE94204  	DEC.B	W4, W4
;__Lib_MathDouble.mpas,177 :: 		
0x9A86	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.mpas,178 :: 		
Long2Float_round:
;__Lib_MathDouble.mpas,179 :: 		
0x9A88	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.mpas,180 :: 		
0x9A8A	0xA7F00A  	BTSC	W10, #15
;__Lib_MathDouble.mpas,181 :: 		
0x9A8C	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.mpas,182 :: 		
Long2Float_return0:
;__Lib_MathDouble.mpas,183 :: 		
0x9A8E	0x060000  	RETURN
;__Lib_MathDouble.mpas,184 :: 		
Long2Float__fpack:
;__Lib_MathDouble.mpas,185 :: 		
0x9A90	0x200081  	MOV	#8, W1
;__Lib_MathDouble.mpas,186 :: 		
0x9A92	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.mpas,187 :: 		
0x9A94	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.mpas,188 :: 		
0x9A96	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.mpas,189 :: 		
0x9A98	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.mpas,190 :: 		
0x9A9A	0xE10001  	CP	W0, W1
;__Lib_MathDouble.mpas,191 :: 		
0x9A9C	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.mpas,192 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.mpas,193 :: 		
0x9A9E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,194 :: 		
0x9AA0	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,195 :: 		
0x9AA2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,196 :: 		
0x9AA4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,197 :: 		
0x9AA6	0xE80000  	INC	W0, W0
;__Lib_MathDouble.mpas,198 :: 		
0x9AA8	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.mpas,199 :: 		
0x9AAA	0x200071  	MOV	#7, W1
;__Lib_MathDouble.mpas,200 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.mpas,201 :: 		
0x9AAC	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.mpas,202 :: 		
0x9AAE	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.mpas,203 :: 		
0x9AB0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.mpas,204 :: 		
0x9AB2	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.mpas,205 :: 		
0x9AB4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.mpas,206 :: 		
0x9AB6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.mpas,207 :: 		
0x9AB8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.mpas,208 :: 		
0x9ABA	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.mpas,209 :: 		
0x9ABC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,210 :: 		
0x9ABE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.mpas,211 :: 		
0x9AC0	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.mpas,212 :: 		
0x9AC2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,213 :: 		
0x9AC4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,214 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.mpas,215 :: 		
0x9AC6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.mpas,216 :: 		
0x9AC8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.mpas,217 :: 		
0x9ACA	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.mpas,218 :: 		
0x9ACC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.mpas,219 :: 		
0x9ACE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.mpas,220 :: 		
0x9AD0	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.mpas,221 :: 		
0x9AD2	0x880008  	MOV	W8, W0
;__Lib_MathDouble.mpas,222 :: 		
0x9AD4	0x060000  	RETURN
;__Lib_MathDouble.mpas,223 :: 		
Long2Float_overflow:
;__Lib_MathDouble.mpas,224 :: 		
0x9AD6	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.mpas,225 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.mpas,226 :: 		
0x9AD8	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.mpas,227 :: 		
0x9ADA	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,229 :: 		
the_end__Long2Float:
;__Lib_MathDouble.mpas,232 :: 		
L_end__Long2Float:
0x9ADC	0xFA8000  	ULNK
0x9ADE	0x060000  	RETURN
; end of __Long2Float
__Mul_FP:
0x9AE0	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,872 :: 		
;__Lib_MathDouble.mpas,874 :: 		
0x9AE2	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.mpas,875 :: 		
0x9AE4	0x000000049BF6  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.mpas,877 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.mpas,878 :: 		
0x9AE8	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.mpas,879 :: 		
0x9AEA	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.mpas,880 :: 		
0x9AEC	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.mpas,881 :: 		
0x9AEE	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.mpas,882 :: 		
0x9AF0	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.mpas,883 :: 		
0x9AF2	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.mpas,884 :: 		
0x9AF4	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,885 :: 		
0x9AF6	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.mpas,886 :: 		
0x9AF8	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,887 :: 		
0x9AFA	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.mpas,888 :: 		
0x9AFC	0xE15061  	CP	W10, #1
;__Lib_MathDouble.mpas,889 :: 		
0x9AFE	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.mpas,890 :: 		
0x9B00	0xE12061  	CP	W4, #1
;__Lib_MathDouble.mpas,891 :: 		
0x9B02	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.mpas,892 :: 		
0x9B04	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.mpas,893 :: 		
0x9B06	0xB107EB  	SUB	#126, W11
;__Lib_MathDouble.mpas,894 :: 		
0x9B08	0xB83401  	MUL.UU	W6, W1, W8
;__Lib_MathDouble.mpas,895 :: 		
0x9B0A	0xB83A00  	MUL.UU	W7, W0, W4
;__Lib_MathDouble.mpas,896 :: 		
0x9B0C	0x420408  	ADD	W4, W8, W8
;__Lib_MathDouble.mpas,897 :: 		
0x9B0E	0x4A8489  	ADDC	W5, W9, W9
;__Lib_MathDouble.mpas,898 :: 		
0x9B10	0xB83A01  	MUL.UU	W7, W1, W4
;__Lib_MathDouble.mpas,899 :: 		
0x9B12	0xB83000  	MUL.UU	W6, W0, W0
;__Lib_MathDouble.mpas,900 :: 		
0x9B14	0x408088  	ADD	W1, W8, W1
;__Lib_MathDouble.mpas,901 :: 		
0x9B16	0x4A0109  	ADDC	W4, W9, W2
;__Lib_MathDouble.mpas,902 :: 		
0x9B18	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.mpas,903 :: 		
0x9B1A	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,904 :: 		
0x9B1C	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.mpas,905 :: 		
0x9B1E	0x490102  	ADDC	W2, W2, W2
;__Lib_MathDouble.mpas,906 :: 		
0x9B20	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.mpas,907 :: 		
MulFP_formsticky:
;__Lib_MathDouble.mpas,908 :: 		
0x9B22	0xDD09C9  	SL	W1, #9, W3
;__Lib_MathDouble.mpas,909 :: 		
0x9B24	0x700183  	IOR	W0, W3, W3
;__Lib_MathDouble.mpas,910 :: 		
0x9B26	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.mpas,911 :: 		
0x9B28	0x200013  	MOV	#1, W3
;__Lib_MathDouble.mpas,912 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.mpas,913 :: 		
0x9B2A	0xDE14C8  	LSR	W2, #8, W9
;__Lib_MathDouble.mpas,914 :: 		
0x9B2C	0xDD1448  	SL	W2, #8, W8
;__Lib_MathDouble.mpas,915 :: 		
0x9B2E	0xDE0947  	LSR	W1, #7, W2
;__Lib_MathDouble.mpas,916 :: 		
0x9B30	0xB20012  	AND	#1, W2
;__Lib_MathDouble.mpas,917 :: 		
0x9B32	0xDE08C8  	LSR	W1, #8, W1
;__Lib_MathDouble.mpas,918 :: 		
0x9B34	0x708408  	IOR	W1, W8, W8
;__Lib_MathDouble.mpas,919 :: 		
0x9B36	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.mpas,920 :: 		
MulFP_return0_1:
;__Lib_MathDouble.mpas,921 :: 		
0x9B38	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.mpas,922 :: 		
0x9B3A	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.mpas,923 :: 		
0x9B3C	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.mpas,924 :: 		
0x9B3E	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.mpas,925 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.mpas,926 :: 		
0x9B40	0xE12061  	CP	W4, #1
;__Lib_MathDouble.mpas,927 :: 		
0x9B42	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.mpas,928 :: 		
MulFP_return8_1:
;__Lib_MathDouble.mpas,929 :: 		
0x9B44	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.mpas,930 :: 		
MulFP_return2_1:
;__Lib_MathDouble.mpas,931 :: 		
0x9B46	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,932 :: 		
0x9B48	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.mpas,933 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.mpas,934 :: 		
0x9B4A	0xE15061  	CP	W10, #1
;__Lib_MathDouble.mpas,935 :: 		
0x9B4C	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.mpas,936 :: 		
0x9B4E	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.mpas,937 :: 		
MulFP__funpack2:
;__Lib_MathDouble.mpas,938 :: 		
0x9B50	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.mpas,939 :: 		
0x9B52	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.mpas,940 :: 		
0x9B54	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.mpas,941 :: 		
0x9B56	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.mpas,942 :: 		
0x9B58	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,943 :: 		
0x9B5A	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.mpas,944 :: 		
0x9B5C	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.mpas,945 :: 		
0x9B5E	0x060000  	RETURN
;__Lib_MathDouble.mpas,946 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.mpas,947 :: 		
0x9B60	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,948 :: 		
0x9B62	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,949 :: 		
0x9B64	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.mpas,950 :: 		
0x9B66	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,951 :: 		
0x9B68	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.mpas,952 :: 		
0x9B6A	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.mpas,953 :: 		
0x9B6C	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.mpas,954 :: 		
MulFP_return8_2:
;__Lib_MathDouble.mpas,955 :: 		
0x9B6E	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.mpas,956 :: 		
MulFP_return0_2:
;__Lib_MathDouble.mpas,957 :: 		
0x9B70	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.mpas,958 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.mpas,959 :: 		
0x9B72	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.mpas,960 :: 		
0x9B74	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.mpas,961 :: 		
0x9B76	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.mpas,962 :: 		
0x9B78	0x060000  	RETURN
;__Lib_MathDouble.mpas,963 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.mpas,964 :: 		
0x9B7A	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.mpas,965 :: 		
0x9B7C	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.mpas,966 :: 		
0x9B7E	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.mpas,967 :: 		
MulFP__fpack:
;__Lib_MathDouble.mpas,968 :: 		
0x9B80	0x200081  	MOV	#8, W1
;__Lib_MathDouble.mpas,969 :: 		
0x9B82	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.mpas,970 :: 		
0x9B84	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.mpas,971 :: 		
0x9B86	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.mpas,972 :: 		
0x9B88	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.mpas,973 :: 		
0x9B8A	0xE10001  	CP	W0, W1
;__Lib_MathDouble.mpas,974 :: 		
0x9B8C	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.mpas,975 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.mpas,976 :: 		
0x9B8E	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,977 :: 		
0x9B90	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,978 :: 		
0x9B92	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,979 :: 		
0x9B94	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,980 :: 		
0x9B96	0xE80000  	INC	W0, W0
;__Lib_MathDouble.mpas,981 :: 		
0x9B98	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.mpas,982 :: 		
0x9B9A	0x200071  	MOV	#7, W1
;__Lib_MathDouble.mpas,983 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.mpas,984 :: 		
0x9B9C	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.mpas,985 :: 		
0x9B9E	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.mpas,986 :: 		
0x9BA0	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.mpas,987 :: 		
0x9BA2	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.mpas,988 :: 		
0x9BA4	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.mpas,989 :: 		
0x9BA6	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.mpas,990 :: 		
0x9BA8	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.mpas,991 :: 		
0x9BAA	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.mpas,992 :: 		
0x9BAC	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,993 :: 		
0x9BAE	0xE10868  	CP	W1, #8
;__Lib_MathDouble.mpas,994 :: 		
0x9BB0	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.mpas,995 :: 		
0x9BB2	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,996 :: 		
0x9BB4	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,997 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.mpas,998 :: 		
0x9BB6	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.mpas,999 :: 		
0x9BB8	0xE15802  	CP	W11, W2
;__Lib_MathDouble.mpas,1000 :: 		
0x9BBA	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.mpas,1001 :: 		
0x9BBC	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.mpas,1002 :: 		
0x9BBE	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.mpas,1003 :: 		
0x9BC0	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.mpas,1004 :: 		
0x9BC2	0x880008  	MOV	W8, W0
;__Lib_MathDouble.mpas,1005 :: 		
0x9BC4	0x060000  	RETURN
;__Lib_MathDouble.mpas,1006 :: 		
MulFP_overflow:
;__Lib_MathDouble.mpas,1007 :: 		
0x9BC6	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.mpas,1008 :: 		
MulFP_zerosig:
;__Lib_MathDouble.mpas,1009 :: 		
0x9BC8	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.mpas,1010 :: 		
0x9BCA	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,1011 :: 		
MulFP__funpack:
;__Lib_MathDouble.mpas,1012 :: 		
0x9BCC	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.mpas,1013 :: 		
0x9BCE	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.mpas,1014 :: 		
0x9BD0	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.mpas,1015 :: 		
0x9BD2	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.mpas,1016 :: 		
0x9BD4	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.mpas,1017 :: 		
0x9BD6	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.mpas,1018 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.mpas,1019 :: 		
0x9BD8	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1020 :: 		
0x9BDA	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1021 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.mpas,1022 :: 		
0x9BDC	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1023 :: 		
0x9BDE	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.mpas,1024 :: 		
0x9BE0	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.mpas,1025 :: 		
MulFP_infinite:
;__Lib_MathDouble.mpas,1026 :: 		
0x9BE2	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.mpas,1027 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.mpas,1028 :: 		
0x9BE4	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1029 :: 		
0x9BE6	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.mpas,1030 :: 		
0x9BE8	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.mpas,1031 :: 		
MulFP_normalize:
;__Lib_MathDouble.mpas,1032 :: 		
0x9BEA	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,1033 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.mpas,1034 :: 		
0x9BEC	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,1035 :: 		
0x9BEE	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.mpas,1036 :: 		
0x9BF0	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.mpas,1037 :: 		
0x9BF2	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1038 :: 		
0x9BF4	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1040 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.mpas,1043 :: 		
L_end__Mul_FP:
0x9BF6	0xFA8000  	ULNK
0x9BF8	0x060000  	RETURN
; end of __Mul_FP
__Compare_Ge_Fp:
0xC818	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,1374 :: 		
;__Lib_MathDouble.mpas,1376 :: 		
0xC81A	0x2FFFF4  	MOV	#65535, W4
;__Lib_MathDouble.mpas,1378 :: 		
0xC81C	0x07A150  	RCALL	__Compare_Fp
;__Lib_MathDouble.mpas,1379 :: 		
L_end__Compare_Ge_Fp:
0xC81E	0xFA8000  	ULNK
0xC820	0x060000  	RETURN
; end of __Compare_Ge_Fp
__Compare_Fp:
0x0ABE	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,1288 :: 		
;__Lib_MathDouble.mpas,1290 :: 		
0x0AC0	0x070002  	RCALL	CompareFp__fcompare
;__Lib_MathDouble.mpas,1291 :: 		
0x0AC2	0x000000040B2C  	GOTO	the_end__Compare_Fp
;__Lib_MathDouble.mpas,1293 :: 		
CompareFp__fcompare:
;__Lib_MathDouble.mpas,1294 :: 		
0x0AC6	0x781F84  	MOV	W4, [W15++]
;__Lib_MathDouble.mpas,1295 :: 		
0x0AC8	0x070014  	RCALL	CompareFp__funpack2
;__Lib_MathDouble.mpas,1296 :: 		
0x0ACA	0x78004F  	MOV	[--W15], W0
;__Lib_MathDouble.mpas,1297 :: 		
0x0ACC	0x330011  	BRA N	CompareFp_exit
;__Lib_MathDouble.mpas,1298 :: 		
0x0ACE	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.mpas,1299 :: 		
0x0AD0	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.mpas,1300 :: 		
0x0AD2	0x3B0006  	BRA NN	CompareFp_comparemag
;__Lib_MathDouble.mpas,1301 :: 		
0x0AD4	0x650504  	AND	W10, W4, W10
;__Lib_MathDouble.mpas,1302 :: 		
0x0AD6	0xA7000A  	BTSC	W10, #0
;__Lib_MathDouble.mpas,1303 :: 		
0x0AD8	0x370008  	BRA	CompareFp_returnEqual
;__Lib_MathDouble.mpas,1304 :: 		
0x0ADA	0xA6F009  	BTSS	W9, #15
;__Lib_MathDouble.mpas,1305 :: 		
0x0ADC	0x200010  	MOV	#1, W0
;__Lib_MathDouble.mpas,1306 :: 		
0x0ADE	0x370008  	BRA	CompareFp_exit
;__Lib_MathDouble.mpas,1307 :: 		
CompareFp_comparemag:
;__Lib_MathDouble.mpas,1308 :: 		
0x0AE0	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.mpas,1309 :: 		
0x0AE2	0x5C8F83  	SUBB	W9, W3, [W15]
;__Lib_MathDouble.mpas,1310 :: 		
0x0AE4	0x390003  	BRA LTU	CompareFp_adjust
;__Lib_MathDouble.mpas,1311 :: 		
0x0AE6	0x200010  	MOV	#1, W0
;__Lib_MathDouble.mpas,1312 :: 		
0x0AE8	0x3E0001  	BRA GTU	CompareFp_adjust
;__Lib_MathDouble.mpas,1313 :: 		
CompareFp_returnEqual:
;__Lib_MathDouble.mpas,1314 :: 		
0x0AEA	0x200000  	MOV	#0, W0
;__Lib_MathDouble.mpas,1315 :: 		
CompareFp_adjust:
;__Lib_MathDouble.mpas,1316 :: 		
0x0AEC	0xA7F009  	BTSC	W9, #15
;__Lib_MathDouble.mpas,1317 :: 		
0x0AEE	0xEA0000  	NEG	W0, W0
;__Lib_MathDouble.mpas,1318 :: 		
CompareFp_exit:
;__Lib_MathDouble.mpas,1319 :: 		
0x0AF0	0x060000  	RETURN
;__Lib_MathDouble.mpas,1320 :: 		
CompareFp__funpack2:
;__Lib_MathDouble.mpas,1321 :: 		
0x0AF2	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.mpas,1322 :: 		
0x0AF4	0x070006  	RCALL	CompareFp__funpack
;__Lib_MathDouble.mpas,1323 :: 		
0x0AF6	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.mpas,1324 :: 		
0x0AF8	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.mpas,1325 :: 		
0x0AFA	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,1326 :: 		
0x0AFC	0x070002  	RCALL	CompareFp__funpack
;__Lib_MathDouble.mpas,1327 :: 		
0x0AFE	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.mpas,1328 :: 		
0x0B00	0x060000  	RETURN
;__Lib_MathDouble.mpas,1329 :: 		
CompareFp__funpack:
;__Lib_MathDouble.mpas,1330 :: 		
0x0B02	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.mpas,1331 :: 		
0x0B04	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.mpas,1332 :: 		
0x0B06	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.mpas,1333 :: 		
0x0B08	0x320008  	BRA Z	CompareFp_zeroorsub
;__Lib_MathDouble.mpas,1334 :: 		
0x0B0A	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.mpas,1335 :: 		
0x0B0C	0x320002  	BRA Z	CompareFp_nanorinf
;__Lib_MathDouble.mpas,1336 :: 		
CompareFp_finitereturn:
;__Lib_MathDouble.mpas,1337 :: 		
0x0B0E	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1338 :: 		
0x0B10	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1339 :: 		
CompareFp_nanorinf:
;__Lib_MathDouble.mpas,1340 :: 		
0x0B12	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1341 :: 		
0x0B14	0x320001  	BRA Z	CompareFp_infinite
;__Lib_MathDouble.mpas,1342 :: 		
0x0B16	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.mpas,1343 :: 		
CompareFp_infinite:
;__Lib_MathDouble.mpas,1344 :: 		
0x0B18	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.mpas,1345 :: 		
CompareFp_zeroorsub:
;__Lib_MathDouble.mpas,1346 :: 		
0x0B1A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1347 :: 		
0x0B1C	0x3A0002  	BRA NZ	CompareFp_subnormal
;__Lib_MathDouble.mpas,1348 :: 		
0x0B1E	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.mpas,1349 :: 		
CompareFp_normalize:
;__Lib_MathDouble.mpas,1350 :: 		
0x0B20	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,1351 :: 		
CompareFp_subnormal:
;__Lib_MathDouble.mpas,1352 :: 		
0x0B22	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,1353 :: 		
0x0B24	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.mpas,1354 :: 		
0x0B26	0x3BFFFC  	BRA NN	CompareFp_normalize
;__Lib_MathDouble.mpas,1355 :: 		
0x0B28	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1356 :: 		
0x0B2A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1358 :: 		
the_end__Compare_Fp:
;__Lib_MathDouble.mpas,1361 :: 		
L_end__Compare_Fp:
0x0B2C	0xFA8000  	ULNK
0x0B2E	0x060000  	RETURN
; end of __Compare_Fp
__Float2Longint:
0x0A46	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,495 :: 		
;__Lib_MathDouble.mpas,497 :: 		
0x0A48	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.mpas,498 :: 		
0x0A4A	0x000000040ABA  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.mpas,500 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.mpas,501 :: 		
0x0A4E	0xBE8100  	MOV.D	W0, W2
;__Lib_MathDouble.mpas,502 :: 		
0x0A50	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.mpas,503 :: 		
0x0A52	0xA77004  	BTSC	W4, #7
;__Lib_MathDouble.mpas,504 :: 		
0x0A54	0xA1F003  	BCLR	W3, #15
;__Lib_MathDouble.mpas,505 :: 		
0x0A56	0xB10965  	SUB	#150, W5
;__Lib_MathDouble.mpas,506 :: 		
0x0A58	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.mpas,507 :: 		
0x0A5A	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.mpas,508 :: 		
0x0A5C	0xE12868  	CP	W5, #8
;__Lib_MathDouble.mpas,509 :: 		
0x0A5E	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.mpas,510 :: 		
0x0A60	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.mpas,511 :: 		
0x0A62	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.mpas,512 :: 		
0x0A64	0xE20006  	CP0	W3
;__Lib_MathDouble.mpas,513 :: 		
0x0A66	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.mpas,514 :: 		
0x0A68	0x280001  	MOV	#32768, W1
;__Lib_MathDouble.mpas,515 :: 		
0x0A6A	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,516 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.mpas,517 :: 		
0x0A6C	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,518 :: 		
0x0A6E	0x488081  	ADDC	W1, W1, W1
;__Lib_MathDouble.mpas,519 :: 		
0x0A70	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,520 :: 		
0x0A72	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.mpas,521 :: 		
0x0A74	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.mpas,522 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.mpas,523 :: 		
0x0A76	0x428FF8  	ADD	W5, #24, [W15]
;__Lib_MathDouble.mpas,524 :: 		
0x0A78	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.mpas,525 :: 		
0x0A7A	0xEB0080  	CLR	W1
;__Lib_MathDouble.mpas,526 :: 		
0x0A7C	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,527 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.mpas,528 :: 		
0x0A7E	0xD10081  	LSR	W1, W1
;__Lib_MathDouble.mpas,529 :: 		
0x0A80	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.mpas,530 :: 		
0x0A82	0xE80285  	INC	W5, W5
;__Lib_MathDouble.mpas,531 :: 		
0x0A84	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.mpas,532 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.mpas,533 :: 		
0x0A86	0xE20006  	CP0	W3
;__Lib_MathDouble.mpas,534 :: 		
0x0A88	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.mpas,535 :: 		
0x0A8A	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.mpas,536 :: 		
0x0A8C	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.mpas,537 :: 		
Float2Longint_exit:
;__Lib_MathDouble.mpas,538 :: 		
0x0A8E	0x060000  	RETURN
;__Lib_MathDouble.mpas,539 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.mpas,540 :: 		
0x0A90	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.mpas,541 :: 		
0x0A92	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.mpas,542 :: 		
0x0A94	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.mpas,543 :: 		
0x0A96	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.mpas,544 :: 		
0x0A98	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.mpas,545 :: 		
0x0A9A	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.mpas,546 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.mpas,547 :: 		
0x0A9C	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,548 :: 		
0x0A9E	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,549 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.mpas,550 :: 		
0x0AA0	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,551 :: 		
0x0AA2	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.mpas,552 :: 		
0x0AA4	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.mpas,553 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.mpas,554 :: 		
0x0AA6	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.mpas,555 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.mpas,556 :: 		
0x0AA8	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,557 :: 		
0x0AAA	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.mpas,558 :: 		
0x0AAC	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.mpas,559 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.mpas,560 :: 		
0x0AAE	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,561 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.mpas,562 :: 		
0x0AB0	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,563 :: 		
0x0AB2	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.mpas,564 :: 		
0x0AB4	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.mpas,565 :: 		
0x0AB6	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,566 :: 		
0x0AB8	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,568 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.mpas,571 :: 		
L_end__Float2Longint:
0x0ABA	0xFA8000  	ULNK
0x0ABC	0x060000  	RETURN
; end of __Float2Longint
__Compare_Le_Fp:
0xC822	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,1365 :: 		
;__Lib_MathDouble.mpas,1367 :: 		
0xC824	0x200014  	MOV	#1, W4
;__Lib_MathDouble.mpas,1369 :: 		
0xC826	0x07A14B  	RCALL	__Compare_Fp
;__Lib_MathDouble.mpas,1370 :: 		
L_end__Compare_Le_Fp:
0xC828	0xFA8000  	ULNK
0xC82A	0x060000  	RETURN
; end of __Compare_Le_Fp
_Dropper_Module:
0xC2A6	0xFA0008  	LNK	#8
;GRR3000LManagementPanel.mpas,3885 :: 		begin
;GRR3000LManagementPanel.mpas,3886 :: 		Glcd_Fill(0x00);
0xC2A8	0x781F8A  	PUSH	W10
0xC2AA	0x781F8B  	PUSH	W11
0xC2AC	0x781F8C  	PUSH	W12
0xC2AE	0x781F8D  	PUSH	W13
0xC2B0	0xEF2014  	CLR	W10
0xC2B2	0x07EB0C  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,3887 :: 		MenuExit        := 0;
0xC2B4	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xC2B6	0xEF2000  	CLR	W0
0xC2B8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3888 :: 		MenuSayacValue  := 1;
0xC2BA	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xC2BC	0xB3C010  	MOV.B	#1, W0
0xC2BE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3889 :: 		Chng[5]         := 2;
0xC2C0	0x212501  	MOV	#lo_addr(_Chng+4), W1
0xC2C2	0xB3C020  	MOV.B	#2, W0
0xC2C4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3894 :: 		Glcd_Write_Text(Title_DroppMenu,     0, Row1, Black);
0xC2C6	0xB3C01D  	MOV.B	#1, W13
0xC2C8	0xEF2018  	CLR	W12
0xC2CA	0xEF2016  	CLR	W11
0xC2CC	0x21389A  	MOV	#lo_addr(_Title_DroppMenu), W10
0xC2CE	0x07CA5D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3895 :: 		Glcd_Write_Text(SubTitle_DropMod,    6, Row2, Black);
0xC2D0	0xB3C01D  	MOV.B	#1, W13
0xC2D2	0xB3C01C  	MOV.B	#1, W12
0xC2D4	0xB3C06B  	MOV.B	#6, W11
0xC2D6	0x2150EA  	MOV	#lo_addr(_SubTitle_DropMod), W10
0xC2D8	0x07CA58  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3896 :: 		Glcd_Write_Text(SubTitle_OpMod,      6, Row3, Black);
0xC2DA	0xB3C01D  	MOV.B	#1, W13
0xC2DC	0xB3C02C  	MOV.B	#2, W12
0xC2DE	0xB3C06B  	MOV.B	#6, W11
0xC2E0	0x21500A  	MOV	#lo_addr(_SubTitle_OpMod), W10
0xC2E2	0x07CA53  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3897 :: 		Glcd_Write_Text(SubTitle_MS,         6, Row4, Black);
0xC2E4	0xB3C01D  	MOV.B	#1, W13
0xC2E6	0xB3C03C  	MOV.B	#3, W12
0xC2E8	0xB3C06B  	MOV.B	#6, W11
0xC2EA	0x2151CA  	MOV	#lo_addr(_SubTitle_MS), W10
0xC2EC	0x07CA4E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3898 :: 		Glcd_Write_Text(SubTitle_Back,       6, Row5, Black);
0xC2EE	0xB3C01D  	MOV.B	#1, W13
0xC2F0	0xB3C04C  	MOV.B	#4, W12
0xC2F2	0xB3C06B  	MOV.B	#6, W11
0xC2F4	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0xC2F6	0x07CA49  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3904 :: 		Dropper_OutStatus := EEPROM_Read(EE_DropperOutStatusEeAddr);
0xC2F8	0x2F038A  	MOV	#61496, W10
0xC2FA	0x2007FB  	MOV	#127, W11
0xC2FC	0x07B0B1  	RCALL	_EEPROM_Read
0xC2FE	0x212DC1  	MOV	#lo_addr(_Dropper_OutStatus), W1
0xC300	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3906 :: 		1: Glcd_Write_Text('ByPass1', 84, Row2, Black);
0xC302	0xE10461  	CP.B	W0, #1
0xC304	0x3A0018  	BRA NZ	L__Dropper_Module1155
L__Dropper_Module5208:
0xC306	0x4700E0  	ADD	W14, #0, W1
0xC308	0xB3C420  	MOV.B	#66, W0
0xC30A	0x785880  	MOV.B	W0, [W1++]
0xC30C	0xB3C790  	MOV.B	#121, W0
0xC30E	0x785880  	MOV.B	W0, [W1++]
0xC310	0xB3C500  	MOV.B	#80, W0
0xC312	0x785880  	MOV.B	W0, [W1++]
0xC314	0xB3C610  	MOV.B	#97, W0
0xC316	0x785880  	MOV.B	W0, [W1++]
0xC318	0xB3C730  	MOV.B	#115, W0
0xC31A	0x785880  	MOV.B	W0, [W1++]
0xC31C	0xB3C730  	MOV.B	#115, W0
0xC31E	0x785880  	MOV.B	W0, [W1++]
0xC320	0xB3C310  	MOV.B	#49, W0
0xC322	0x785880  	MOV.B	W0, [W1++]
0xC324	0xEF2000  	CLR	W0
0xC326	0x785880  	MOV.B	W0, [W1++]
0xC328	0x470060  	ADD	W14, #0, W0
0xC32A	0xB3C01D  	MOV.B	#1, W13
0xC32C	0xB3C01C  	MOV.B	#1, W12
0xC32E	0xB3C54B  	MOV.B	#84, W11
0xC330	0x780500  	MOV	W0, W10
0xC332	0x07CA2B  	RCALL	_Glcd_Write_Text
0xC334	0x370014  	BRA	L__Dropper_Module1152
L__Dropper_Module1155:
;GRR3000LManagementPanel.mpas,3907 :: 		2: Glcd_Write_Text(DisableText, 84, Row2, Black);
0xC336	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC338	0x784010  	MOV.B	[W0], W0
0xC33A	0xE10462  	CP.B	W0, #2
0xC33C	0x3A0006  	BRA NZ	L__Dropper_Module1158
L__Dropper_Module5209:
0xC33E	0xB3C01D  	MOV.B	#1, W13
0xC340	0xB3C01C  	MOV.B	#1, W12
0xC342	0xB3C54B  	MOV.B	#84, W11
0xC344	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xC346	0x07CA21  	RCALL	_Glcd_Write_Text
0xC348	0x37000A  	BRA	L__Dropper_Module1152
L__Dropper_Module1158:
;GRR3000LManagementPanel.mpas,3908 :: 		3: Glcd_Write_Text(EnableText, 84, Row2, Black);
0xC34A	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC34C	0x784010  	MOV.B	[W0], W0
0xC34E	0xE10463  	CP.B	W0, #3
0xC350	0x3A0006  	BRA NZ	L__Dropper_Module1161
L__Dropper_Module5210:
0xC352	0xB3C01D  	MOV.B	#1, W13
0xC354	0xB3C01C  	MOV.B	#1, W12
0xC356	0xB3C54B  	MOV.B	#84, W11
0xC358	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xC35A	0x07CA17  	RCALL	_Glcd_Write_Text
0xC35C	0x370000  	BRA	L__Dropper_Module1152
L__Dropper_Module1161:
L__Dropper_Module1152:
;GRR3000LManagementPanel.mpas,3911 :: 		OperationMode  := EEPROM_Read(EE_OperationModeEeAddr);
0xC35E	0x2F054A  	MOV	#61524, W10
0xC360	0x2007FB  	MOV	#127, W11
0xC362	0x07B07E  	RCALL	_EEPROM_Read
0xC364	0x212D71  	MOV	#lo_addr(_OperationMode), W1
0xC366	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3913 :: 		1: Glcd_Write_Text(SingleText, 84, Row3, Black);
0xC368	0xE10461  	CP.B	W0, #1
0xC36A	0x3A0006  	BRA NZ	L__Dropper_Module1165
L__Dropper_Module5211:
0xC36C	0xB3C01D  	MOV.B	#1, W13
0xC36E	0xB3C02C  	MOV.B	#2, W12
0xC370	0xB3C54B  	MOV.B	#84, W11
0xC372	0x21532A  	MOV	#lo_addr(_SingleText), W10
0xC374	0x07CA0A  	RCALL	_Glcd_Write_Text
0xC376	0x370014  	BRA	L__Dropper_Module1162
L__Dropper_Module1165:
;GRR3000LManagementPanel.mpas,3914 :: 		2: Glcd_Write_Text(BackupText, 84, Row3, Black);
0xC378	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC37A	0x784010  	MOV.B	[W0], W0
0xC37C	0xE10462  	CP.B	W0, #2
0xC37E	0x3A0006  	BRA NZ	L__Dropper_Module1168
L__Dropper_Module5212:
0xC380	0xB3C01D  	MOV.B	#1, W13
0xC382	0xB3C02C  	MOV.B	#2, W12
0xC384	0xB3C54B  	MOV.B	#84, W11
0xC386	0x2152AA  	MOV	#lo_addr(_BackupText), W10
0xC388	0x07CA00  	RCALL	_Glcd_Write_Text
0xC38A	0x37000A  	BRA	L__Dropper_Module1162
L__Dropper_Module1168:
;GRR3000LManagementPanel.mpas,3915 :: 		3: Glcd_Write_Text(ParalelText, 84, Row3, Black);
0xC38C	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC38E	0x784010  	MOV.B	[W0], W0
0xC390	0xE10463  	CP.B	W0, #3
0xC392	0x3A0006  	BRA NZ	L__Dropper_Module1171
L__Dropper_Module5213:
0xC394	0xB3C01D  	MOV.B	#1, W13
0xC396	0xB3C02C  	MOV.B	#2, W12
0xC398	0xB3C54B  	MOV.B	#84, W11
0xC39A	0x2153FA  	MOV	#lo_addr(_ParalelText), W10
0xC39C	0x07C9F6  	RCALL	_Glcd_Write_Text
0xC39E	0x370000  	BRA	L__Dropper_Module1162
L__Dropper_Module1171:
L__Dropper_Module1162:
;GRR3000LManagementPanel.mpas,3918 :: 		MasterSlave  := EEPROM_Read(EE_MasterSlaveEeAddr);
0xC3A0	0x2F056A  	MOV	#61526, W10
0xC3A2	0x2007FB  	MOV	#127, W11
0xC3A4	0x07B05D  	RCALL	_EEPROM_Read
0xC3A6	0x8896F0  	MOV	W0, _MasterSlave
;GRR3000LManagementPanel.mpas,3920 :: 		1: Glcd_Write_Text('Master', 84, Row4, Black);
0xC3A8	0xE10061  	CP	W0, #1
0xC3AA	0x3A0016  	BRA NZ	L__Dropper_Module1175
L__Dropper_Module5214:
0xC3AC	0x4700E0  	ADD	W14, #0, W1
0xC3AE	0xB3C4D0  	MOV.B	#77, W0
0xC3B0	0x785880  	MOV.B	W0, [W1++]
0xC3B2	0xB3C610  	MOV.B	#97, W0
0xC3B4	0x785880  	MOV.B	W0, [W1++]
0xC3B6	0xB3C730  	MOV.B	#115, W0
0xC3B8	0x785880  	MOV.B	W0, [W1++]
0xC3BA	0xB3C740  	MOV.B	#116, W0
0xC3BC	0x785880  	MOV.B	W0, [W1++]
0xC3BE	0xB3C650  	MOV.B	#101, W0
0xC3C0	0x785880  	MOV.B	W0, [W1++]
0xC3C2	0xB3C720  	MOV.B	#114, W0
0xC3C4	0x785880  	MOV.B	W0, [W1++]
0xC3C6	0xEF2000  	CLR	W0
0xC3C8	0x785880  	MOV.B	W0, [W1++]
0xC3CA	0x470060  	ADD	W14, #0, W0
0xC3CC	0xB3C01D  	MOV.B	#1, W13
0xC3CE	0xB3C03C  	MOV.B	#3, W12
0xC3D0	0xB3C54B  	MOV.B	#84, W11
0xC3D2	0x780500  	MOV	W0, W10
0xC3D4	0x07C9DA  	RCALL	_Glcd_Write_Text
0xC3D6	0x370019  	BRA	L__Dropper_Module1172
L__Dropper_Module1175:
;GRR3000LManagementPanel.mpas,3921 :: 		2: Glcd_Write_Text('Slave ', 84, Row4, Black);
0xC3D8	0x8096F0  	MOV	_MasterSlave, W0
0xC3DA	0xE10062  	CP	W0, #2
0xC3DC	0x3A0016  	BRA NZ	L__Dropper_Module1178
L__Dropper_Module5215:
0xC3DE	0x4700E0  	ADD	W14, #0, W1
0xC3E0	0xB3C530  	MOV.B	#83, W0
0xC3E2	0x785880  	MOV.B	W0, [W1++]
0xC3E4	0xB3C6C0  	MOV.B	#108, W0
0xC3E6	0x785880  	MOV.B	W0, [W1++]
0xC3E8	0xB3C610  	MOV.B	#97, W0
0xC3EA	0x785880  	MOV.B	W0, [W1++]
0xC3EC	0xB3C760  	MOV.B	#118, W0
0xC3EE	0x785880  	MOV.B	W0, [W1++]
0xC3F0	0xB3C650  	MOV.B	#101, W0
0xC3F2	0x785880  	MOV.B	W0, [W1++]
0xC3F4	0xB3C200  	MOV.B	#32, W0
0xC3F6	0x785880  	MOV.B	W0, [W1++]
0xC3F8	0xEF2000  	CLR	W0
0xC3FA	0x785880  	MOV.B	W0, [W1++]
0xC3FC	0x470060  	ADD	W14, #0, W0
0xC3FE	0xB3C01D  	MOV.B	#1, W13
0xC400	0xB3C03C  	MOV.B	#3, W12
0xC402	0xB3C54B  	MOV.B	#84, W11
0xC404	0x780500  	MOV	W0, W10
0xC406	0x07C9C1  	RCALL	_Glcd_Write_Text
0xC408	0x370000  	BRA	L__Dropper_Module1172
L__Dropper_Module1178:
L__Dropper_Module1172:
;GRR3000LManagementPanel.mpas,3926 :: 		While (MenuExit =0) do
L__Dropper_Module1180:
0xC40A	0x214660  	MOV	#lo_addr(_MenuExit), W0
0xC40C	0x784010  	MOV.B	[W0], W0
0xC40E	0xE10460  	CP.B	W0, #0
0xC410	0x3A01E3  	BRA NZ	L__Dropper_Module1181
L__Dropper_Module5216:
;GRR3000LManagementPanel.mpas,3930 :: 		MenuSayac := MenuButtonRead(4, 255);  // menu için butonlarý oku 4 satýr menü var
0xC412	0xB3CFFB  	MOV.B	#255, W11
0xC414	0xB3C04A  	MOV.B	#4, W10
0xC416	0x07A73C  	RCALL	_MenuButtonRead
0xC418	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0xC41A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3932 :: 		asm ClrWDT; end;
0xC41C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3934 :: 		MenuBit := 0;
0xC41E	0x212A40  	MOV	#lo_addr(_MenuBit), W0
0xC420	0xA1C010  	BCLR	[W0], BitPos(_MenuBit+0)
;GRR3000LManagementPanel.mpas,4008 :: 		1: begin // dropper durumu
0xC422	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xC424	0x784010  	MOV.B	[W0], W0
0xC426	0xE10461  	CP.B	W0, #1
0xC428	0x3A00A3  	BRA NZ	L__Dropper_Module1187
L__Dropper_Module5217:
;GRR3000LManagementPanel.mpas,4010 :: 		if (Ok_Button =0) then
0xC42A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC42C	0x3700A0  	BRA	L__Dropper_Module1189
;GRR3000LManagementPanel.mpas,4012 :: 		while (Ok_Button =0) do
L__Dropper_Module1192:
0xC42E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC430	0x370002  	BRA	L__Dropper_Module1193
;GRR3000LManagementPanel.mpas,4014 :: 		asm ClrWDT; end;
0xC432	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4015 :: 		end;
0xC434	0x37FFFC  	BRA	L__Dropper_Module1192
L__Dropper_Module1193:
;GRR3000LManagementPanel.mpas,4017 :: 		MenuBit := 1;
0xC436	0x212A40  	MOV	#lo_addr(_MenuBit), W0
0xC438	0xA0C010  	BSET	[W0], BitPos(_MenuBit+0)
;GRR3000LManagementPanel.mpas,4019 :: 		Chng[2] := 1;
0xC43A	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xC43C	0xB3C010  	MOV.B	#1, W0
0xC43E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4021 :: 		While (Chng[2] =1) do
L__Dropper_Module1197:
0xC440	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0xC442	0x784010  	MOV.B	[W0], W0
0xC444	0xE10461  	CP.B	W0, #1
0xC446	0x3A0093  	BRA NZ	L__Dropper_Module1198
L__Dropper_Module5218:
;GRR3000LManagementPanel.mpas,4024 :: 		asm ClrWDT; end;
0xC448	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4026 :: 		if (Up_Button =0) then
0xC44A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC44C	0x37000F  	BRA	L__Dropper_Module1202
;GRR3000LManagementPanel.mpas,4028 :: 		while (Up_Button =0) do
L__Dropper_Module1205:
0xC44E	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC450	0x370002  	BRA	L__Dropper_Module1206
;GRR3000LManagementPanel.mpas,4030 :: 		asm ClrWDT; end;
0xC452	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4031 :: 		end;
0xC454	0x37FFFC  	BRA	L__Dropper_Module1205
L__Dropper_Module1206:
;GRR3000LManagementPanel.mpas,4032 :: 		Inc(Dropper_OutStatus);
0xC456	0xB3C011  	MOV.B	#1, W1
0xC458	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC45A	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4033 :: 		if (Dropper_OutStatus > 3) then
0xC45C	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC45E	0x784010  	MOV.B	[W0], W0
0xC460	0xE10463  	CP.B	W0, #3
0xC462	0x360003  	BRA LEU	L__Dropper_Module1210
L__Dropper_Module5219:
;GRR3000LManagementPanel.mpas,4034 :: 		Dropper_OutStatus := 1;
0xC464	0x212DC1  	MOV	#lo_addr(_Dropper_OutStatus), W1
0xC466	0xB3C010  	MOV.B	#1, W0
0xC468	0x784880  	MOV.B	W0, [W1]
L__Dropper_Module1210:
;GRR3000LManagementPanel.mpas,4035 :: 		end else
0xC46A	0x370010  	BRA	L__Dropper_Module1203
L__Dropper_Module1202:
;GRR3000LManagementPanel.mpas,4036 :: 		if (Down_Button =0) then
0xC46C	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC46E	0x37000E  	BRA	L__Dropper_Module1213
;GRR3000LManagementPanel.mpas,4038 :: 		while (Down_Button =0) do
L__Dropper_Module1216:
0xC470	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC472	0x370002  	BRA	L__Dropper_Module1217
;GRR3000LManagementPanel.mpas,4040 :: 		asm ClrWDT; end;
0xC474	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4041 :: 		end;
0xC476	0x37FFFC  	BRA	L__Dropper_Module1216
L__Dropper_Module1217:
;GRR3000LManagementPanel.mpas,4042 :: 		Dec(Dropper_OutStatus);
0xC478	0xB3C011  	MOV.B	#1, W1
0xC47A	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC47C	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4043 :: 		if (Dropper_OutStatus < 1) then //
0xC47E	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC480	0x784010  	MOV.B	[W0], W0
0xC482	0xE10461  	CP.B	W0, #1
0xC484	0x310003  	BRA GEU	L__Dropper_Module1221
L__Dropper_Module5220:
;GRR3000LManagementPanel.mpas,4044 :: 		Dropper_OutStatus := 3;
0xC486	0x212DC1  	MOV	#lo_addr(_Dropper_OutStatus), W1
0xC488	0xB3C030  	MOV.B	#3, W0
0xC48A	0x784880  	MOV.B	W0, [W1]
L__Dropper_Module1221:
;GRR3000LManagementPanel.mpas,4045 :: 		end;
L__Dropper_Module1213:
L__Dropper_Module1203:
;GRR3000LManagementPanel.mpas,4049 :: 		1: Glcd_Write_Text('ByPass1', 84, Row2, White);
0xC48C	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC48E	0x784010  	MOV.B	[W0], W0
0xC490	0xE10461  	CP.B	W0, #1
0xC492	0x3A0018  	BRA NZ	L__Dropper_Module1226
L__Dropper_Module5221:
0xC494	0x4700E0  	ADD	W14, #0, W1
0xC496	0xB3C420  	MOV.B	#66, W0
0xC498	0x785880  	MOV.B	W0, [W1++]
0xC49A	0xB3C790  	MOV.B	#121, W0
0xC49C	0x785880  	MOV.B	W0, [W1++]
0xC49E	0xB3C500  	MOV.B	#80, W0
0xC4A0	0x785880  	MOV.B	W0, [W1++]
0xC4A2	0xB3C610  	MOV.B	#97, W0
0xC4A4	0x785880  	MOV.B	W0, [W1++]
0xC4A6	0xB3C730  	MOV.B	#115, W0
0xC4A8	0x785880  	MOV.B	W0, [W1++]
0xC4AA	0xB3C730  	MOV.B	#115, W0
0xC4AC	0x785880  	MOV.B	W0, [W1++]
0xC4AE	0xB3C310  	MOV.B	#49, W0
0xC4B0	0x785880  	MOV.B	W0, [W1++]
0xC4B2	0xEF2000  	CLR	W0
0xC4B4	0x785880  	MOV.B	W0, [W1++]
0xC4B6	0x470060  	ADD	W14, #0, W0
0xC4B8	0xEF201A  	CLR	W13
0xC4BA	0xB3C01C  	MOV.B	#1, W12
0xC4BC	0xB3C54B  	MOV.B	#84, W11
0xC4BE	0x780500  	MOV	W0, W10
0xC4C0	0x07C964  	RCALL	_Glcd_Write_Text
0xC4C2	0x370014  	BRA	L__Dropper_Module1223
L__Dropper_Module1226:
;GRR3000LManagementPanel.mpas,4050 :: 		2: Glcd_Write_Text(DisableText, 84, Row2, White);
0xC4C4	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC4C6	0x784010  	MOV.B	[W0], W0
0xC4C8	0xE10462  	CP.B	W0, #2
0xC4CA	0x3A0006  	BRA NZ	L__Dropper_Module1229
L__Dropper_Module5222:
0xC4CC	0xEF201A  	CLR	W13
0xC4CE	0xB3C01C  	MOV.B	#1, W12
0xC4D0	0xB3C54B  	MOV.B	#84, W11
0xC4D2	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xC4D4	0x07C95A  	RCALL	_Glcd_Write_Text
0xC4D6	0x37000A  	BRA	L__Dropper_Module1223
L__Dropper_Module1229:
;GRR3000LManagementPanel.mpas,4051 :: 		3: Glcd_Write_Text(EnableText, 84, Row2, White);
0xC4D8	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC4DA	0x784010  	MOV.B	[W0], W0
0xC4DC	0xE10463  	CP.B	W0, #3
0xC4DE	0x3A0006  	BRA NZ	L__Dropper_Module1232
L__Dropper_Module5223:
0xC4E0	0xEF201A  	CLR	W13
0xC4E2	0xB3C01C  	MOV.B	#1, W12
0xC4E4	0xB3C54B  	MOV.B	#84, W11
0xC4E6	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xC4E8	0x07C950  	RCALL	_Glcd_Write_Text
0xC4EA	0x370000  	BRA	L__Dropper_Module1223
L__Dropper_Module1232:
L__Dropper_Module1223:
;GRR3000LManagementPanel.mpas,4055 :: 		if (Ok_Button =0) then
0xC4EC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC4EE	0x37003E  	BRA	L__Dropper_Module1234
;GRR3000LManagementPanel.mpas,4057 :: 		while (Ok_Button =0) do
L__Dropper_Module1237:
0xC4F0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC4F2	0x370002  	BRA	L__Dropper_Module1238
;GRR3000LManagementPanel.mpas,4059 :: 		asm ClrWDT; end;
0xC4F4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4060 :: 		end;
0xC4F6	0x37FFFC  	BRA	L__Dropper_Module1237
L__Dropper_Module1238:
;GRR3000LManagementPanel.mpas,4062 :: 		EEPROM_Write(EE_DropperOutStatusEeAddr, Dropper_OutStatus);
0xC4F8	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC4FA	0xFB8610  	ZE	[W0], W12
0xC4FC	0x2F038A  	MOV	#61496, W10
0xC4FE	0x2007FB  	MOV	#127, W11
0xC500	0x07A74A  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4063 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Dropper_Module1242:
0xC502	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xC504	0x37FFFE  	BRA	L__Dropper_Module1242
;GRR3000LManagementPanel.mpas,4065 :: 		Chng[2] := 0;
0xC506	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xC508	0xEF2000  	CLR	W0
0xC50A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4067 :: 		1: Glcd_Write_Text('ByPass1', 84, Row2, Black);
0xC50C	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC50E	0x784010  	MOV.B	[W0], W0
0xC510	0xE10461  	CP.B	W0, #1
0xC512	0x3A0018  	BRA NZ	L__Dropper_Module1249
L__Dropper_Module5224:
0xC514	0x4700E0  	ADD	W14, #0, W1
0xC516	0xB3C420  	MOV.B	#66, W0
0xC518	0x785880  	MOV.B	W0, [W1++]
0xC51A	0xB3C790  	MOV.B	#121, W0
0xC51C	0x785880  	MOV.B	W0, [W1++]
0xC51E	0xB3C500  	MOV.B	#80, W0
0xC520	0x785880  	MOV.B	W0, [W1++]
0xC522	0xB3C610  	MOV.B	#97, W0
0xC524	0x785880  	MOV.B	W0, [W1++]
0xC526	0xB3C730  	MOV.B	#115, W0
0xC528	0x785880  	MOV.B	W0, [W1++]
0xC52A	0xB3C730  	MOV.B	#115, W0
0xC52C	0x785880  	MOV.B	W0, [W1++]
0xC52E	0xB3C310  	MOV.B	#49, W0
0xC530	0x785880  	MOV.B	W0, [W1++]
0xC532	0xEF2000  	CLR	W0
0xC534	0x785880  	MOV.B	W0, [W1++]
0xC536	0x470060  	ADD	W14, #0, W0
0xC538	0xB3C01D  	MOV.B	#1, W13
0xC53A	0xB3C01C  	MOV.B	#1, W12
0xC53C	0xB3C54B  	MOV.B	#84, W11
0xC53E	0x780500  	MOV	W0, W10
0xC540	0x07C924  	RCALL	_Glcd_Write_Text
0xC542	0x370014  	BRA	L__Dropper_Module1246
L__Dropper_Module1249:
;GRR3000LManagementPanel.mpas,4068 :: 		2: Glcd_Write_Text(DisableText, 84, Row2, Black);
0xC544	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC546	0x784010  	MOV.B	[W0], W0
0xC548	0xE10462  	CP.B	W0, #2
0xC54A	0x3A0006  	BRA NZ	L__Dropper_Module1252
L__Dropper_Module5225:
0xC54C	0xB3C01D  	MOV.B	#1, W13
0xC54E	0xB3C01C  	MOV.B	#1, W12
0xC550	0xB3C54B  	MOV.B	#84, W11
0xC552	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xC554	0x07C91A  	RCALL	_Glcd_Write_Text
0xC556	0x37000A  	BRA	L__Dropper_Module1246
L__Dropper_Module1252:
;GRR3000LManagementPanel.mpas,4069 :: 		3: Glcd_Write_Text(EnableText, 84, Row2, Black);
0xC558	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC55A	0x784010  	MOV.B	[W0], W0
0xC55C	0xE10463  	CP.B	W0, #3
0xC55E	0x3A0006  	BRA NZ	L__Dropper_Module1255
L__Dropper_Module5226:
0xC560	0xB3C01D  	MOV.B	#1, W13
0xC562	0xB3C01C  	MOV.B	#1, W12
0xC564	0xB3C54B  	MOV.B	#84, W11
0xC566	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xC568	0x07C910  	RCALL	_Glcd_Write_Text
0xC56A	0x370000  	BRA	L__Dropper_Module1246
L__Dropper_Module1255:
L__Dropper_Module1246:
;GRR3000LManagementPanel.mpas,4074 :: 		end;
L__Dropper_Module1234:
;GRR3000LManagementPanel.mpas,4079 :: 		end; // chng[2] while end
0xC56C	0x37FF69  	BRA	L__Dropper_Module1197
L__Dropper_Module1198:
;GRR3000LManagementPanel.mpas,4082 :: 		end;
L__Dropper_Module1189:
;GRR3000LManagementPanel.mpas,4084 :: 		end;
0xC56E	0x370133  	BRA	L__Dropper_Module1184
L__Dropper_Module1187:
;GRR3000LManagementPanel.mpas,4086 :: 		2: begin // çalýþma durumu
0xC570	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xC572	0x784010  	MOV.B	[W0], W0
0xC574	0xE10462  	CP.B	W0, #2
0xC576	0x3A007D  	BRA NZ	L__Dropper_Module1258
L__Dropper_Module5227:
;GRR3000LManagementPanel.mpas,4088 :: 		if (Ok_Button =0) then
0xC578	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC57A	0x37007A  	BRA	L__Dropper_Module1260
;GRR3000LManagementPanel.mpas,4090 :: 		while (Ok_Button =0) do
L__Dropper_Module1263:
0xC57C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC57E	0x370002  	BRA	L__Dropper_Module1264
;GRR3000LManagementPanel.mpas,4092 :: 		asm ClrWDT; end;
0xC580	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4093 :: 		end;
0xC582	0x37FFFC  	BRA	L__Dropper_Module1263
L__Dropper_Module1264:
;GRR3000LManagementPanel.mpas,4095 :: 		Chng[3] := 1;
0xC584	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xC586	0xB3C010  	MOV.B	#1, W0
0xC588	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4097 :: 		While (Chng[3] =1) do
L__Dropper_Module1268:
0xC58A	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0xC58C	0x784010  	MOV.B	[W0], W0
0xC58E	0xE10461  	CP.B	W0, #1
0xC590	0x3A006F  	BRA NZ	L__Dropper_Module1269
L__Dropper_Module5228:
;GRR3000LManagementPanel.mpas,4100 :: 		asm ClrWDT; end;
0xC592	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4102 :: 		if (Up_Button =0) then
0xC594	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC596	0x37000F  	BRA	L__Dropper_Module1273
;GRR3000LManagementPanel.mpas,4104 :: 		while (Up_Button =0) do
L__Dropper_Module1276:
0xC598	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC59A	0x370002  	BRA	L__Dropper_Module1277
;GRR3000LManagementPanel.mpas,4106 :: 		asm ClrWDT; end;
0xC59C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4107 :: 		end;
0xC59E	0x37FFFC  	BRA	L__Dropper_Module1276
L__Dropper_Module1277:
;GRR3000LManagementPanel.mpas,4108 :: 		Inc(OperationMode);
0xC5A0	0xB3C011  	MOV.B	#1, W1
0xC5A2	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5A4	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4109 :: 		if (OperationMode > 3) then
0xC5A6	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5A8	0x784010  	MOV.B	[W0], W0
0xC5AA	0xE10463  	CP.B	W0, #3
0xC5AC	0x360003  	BRA LEU	L__Dropper_Module1281
L__Dropper_Module5229:
;GRR3000LManagementPanel.mpas,4110 :: 		OperationMode := 1;
0xC5AE	0x212D71  	MOV	#lo_addr(_OperationMode), W1
0xC5B0	0xB3C010  	MOV.B	#1, W0
0xC5B2	0x784880  	MOV.B	W0, [W1]
L__Dropper_Module1281:
;GRR3000LManagementPanel.mpas,4111 :: 		end else
0xC5B4	0x370010  	BRA	L__Dropper_Module1274
L__Dropper_Module1273:
;GRR3000LManagementPanel.mpas,4112 :: 		if (Down_Button =0) then
0xC5B6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC5B8	0x37000E  	BRA	L__Dropper_Module1284
;GRR3000LManagementPanel.mpas,4114 :: 		while (Down_Button =0) do
L__Dropper_Module1287:
0xC5BA	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC5BC	0x370002  	BRA	L__Dropper_Module1288
;GRR3000LManagementPanel.mpas,4116 :: 		asm ClrWDT; end;
0xC5BE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4117 :: 		end;
0xC5C0	0x37FFFC  	BRA	L__Dropper_Module1287
L__Dropper_Module1288:
;GRR3000LManagementPanel.mpas,4118 :: 		Dec(OperationMode);
0xC5C2	0xB3C011  	MOV.B	#1, W1
0xC5C4	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5C6	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4119 :: 		if (OperationMode < 1) then //
0xC5C8	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5CA	0x784010  	MOV.B	[W0], W0
0xC5CC	0xE10461  	CP.B	W0, #1
0xC5CE	0x310003  	BRA GEU	L__Dropper_Module1292
L__Dropper_Module5230:
;GRR3000LManagementPanel.mpas,4120 :: 		OperationMode := 3;
0xC5D0	0x212D71  	MOV	#lo_addr(_OperationMode), W1
0xC5D2	0xB3C030  	MOV.B	#3, W0
0xC5D4	0x784880  	MOV.B	W0, [W1]
L__Dropper_Module1292:
;GRR3000LManagementPanel.mpas,4121 :: 		end;
L__Dropper_Module1284:
L__Dropper_Module1274:
;GRR3000LManagementPanel.mpas,4125 :: 		1: Glcd_Write_Text(SingleText, 84, Row3, White);
0xC5D6	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5D8	0x784010  	MOV.B	[W0], W0
0xC5DA	0xE10461  	CP.B	W0, #1
0xC5DC	0x3A0006  	BRA NZ	L__Dropper_Module1297
L__Dropper_Module5231:
0xC5DE	0xEF201A  	CLR	W13
0xC5E0	0xB3C02C  	MOV.B	#2, W12
0xC5E2	0xB3C54B  	MOV.B	#84, W11
0xC5E4	0x21532A  	MOV	#lo_addr(_SingleText), W10
0xC5E6	0x07C8D1  	RCALL	_Glcd_Write_Text
0xC5E8	0x370014  	BRA	L__Dropper_Module1294
L__Dropper_Module1297:
;GRR3000LManagementPanel.mpas,4126 :: 		2: Glcd_Write_Text(BackupText, 84, Row3, White);
0xC5EA	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC5EC	0x784010  	MOV.B	[W0], W0
0xC5EE	0xE10462  	CP.B	W0, #2
0xC5F0	0x3A0006  	BRA NZ	L__Dropper_Module1300
L__Dropper_Module5232:
0xC5F2	0xEF201A  	CLR	W13
0xC5F4	0xB3C02C  	MOV.B	#2, W12
0xC5F6	0xB3C54B  	MOV.B	#84, W11
0xC5F8	0x2152AA  	MOV	#lo_addr(_BackupText), W10
0xC5FA	0x07C8C7  	RCALL	_Glcd_Write_Text
0xC5FC	0x37000A  	BRA	L__Dropper_Module1294
L__Dropper_Module1300:
;GRR3000LManagementPanel.mpas,4127 :: 		3: Glcd_Write_Text(ParalelText, 84, Row3, White);
0xC5FE	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC600	0x784010  	MOV.B	[W0], W0
0xC602	0xE10463  	CP.B	W0, #3
0xC604	0x3A0006  	BRA NZ	L__Dropper_Module1303
L__Dropper_Module5233:
0xC606	0xEF201A  	CLR	W13
0xC608	0xB3C02C  	MOV.B	#2, W12
0xC60A	0xB3C54B  	MOV.B	#84, W11
0xC60C	0x2153FA  	MOV	#lo_addr(_ParalelText), W10
0xC60E	0x07C8BD  	RCALL	_Glcd_Write_Text
0xC610	0x370000  	BRA	L__Dropper_Module1294
L__Dropper_Module1303:
L__Dropper_Module1294:
;GRR3000LManagementPanel.mpas,4131 :: 		if (Ok_Button =0) then
0xC612	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC614	0x37002C  	BRA	L__Dropper_Module1305
;GRR3000LManagementPanel.mpas,4133 :: 		while (Ok_Button =0) do
L__Dropper_Module1308:
0xC616	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC618	0x370002  	BRA	L__Dropper_Module1309
;GRR3000LManagementPanel.mpas,4135 :: 		asm ClrWDT; end;
0xC61A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4136 :: 		end;
0xC61C	0x37FFFC  	BRA	L__Dropper_Module1308
L__Dropper_Module1309:
;GRR3000LManagementPanel.mpas,4138 :: 		EEPROM_Write(EE_OperationModeEeAddr, OperationMode);
0xC61E	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC620	0xFB8610  	ZE	[W0], W12
0xC622	0x2F054A  	MOV	#61524, W10
0xC624	0x2007FB  	MOV	#127, W11
0xC626	0x07A6B7  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4139 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Dropper_Module1313:
0xC628	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xC62A	0x37FFFE  	BRA	L__Dropper_Module1313
;GRR3000LManagementPanel.mpas,4141 :: 		Chng[3] := 0;
0xC62C	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xC62E	0xEF2000  	CLR	W0
0xC630	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4143 :: 		1: Glcd_Write_Text(SingleText, 84, Row3, Black);
0xC632	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC634	0x784010  	MOV.B	[W0], W0
0xC636	0xE10461  	CP.B	W0, #1
0xC638	0x3A0006  	BRA NZ	L__Dropper_Module1320
L__Dropper_Module5234:
0xC63A	0xB3C01D  	MOV.B	#1, W13
0xC63C	0xB3C02C  	MOV.B	#2, W12
0xC63E	0xB3C54B  	MOV.B	#84, W11
0xC640	0x21532A  	MOV	#lo_addr(_SingleText), W10
0xC642	0x07C8A3  	RCALL	_Glcd_Write_Text
0xC644	0x370014  	BRA	L__Dropper_Module1317
L__Dropper_Module1320:
;GRR3000LManagementPanel.mpas,4144 :: 		2: Glcd_Write_Text(BackupText, 84, Row3, Black);
0xC646	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC648	0x784010  	MOV.B	[W0], W0
0xC64A	0xE10462  	CP.B	W0, #2
0xC64C	0x3A0006  	BRA NZ	L__Dropper_Module1323
L__Dropper_Module5235:
0xC64E	0xB3C01D  	MOV.B	#1, W13
0xC650	0xB3C02C  	MOV.B	#2, W12
0xC652	0xB3C54B  	MOV.B	#84, W11
0xC654	0x2152AA  	MOV	#lo_addr(_BackupText), W10
0xC656	0x07C899  	RCALL	_Glcd_Write_Text
0xC658	0x37000A  	BRA	L__Dropper_Module1317
L__Dropper_Module1323:
;GRR3000LManagementPanel.mpas,4145 :: 		3: Glcd_Write_Text(ParalelText, 84, Row3, Black);
0xC65A	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC65C	0x784010  	MOV.B	[W0], W0
0xC65E	0xE10463  	CP.B	W0, #3
0xC660	0x3A0006  	BRA NZ	L__Dropper_Module1326
L__Dropper_Module5236:
0xC662	0xB3C01D  	MOV.B	#1, W13
0xC664	0xB3C02C  	MOV.B	#2, W12
0xC666	0xB3C54B  	MOV.B	#84, W11
0xC668	0x2153FA  	MOV	#lo_addr(_ParalelText), W10
0xC66A	0x07C88F  	RCALL	_Glcd_Write_Text
0xC66C	0x370000  	BRA	L__Dropper_Module1317
L__Dropper_Module1326:
L__Dropper_Module1317:
;GRR3000LManagementPanel.mpas,4150 :: 		end;
L__Dropper_Module1305:
;GRR3000LManagementPanel.mpas,4155 :: 		end; // chng[2] while end
0xC66E	0x37FF8D  	BRA	L__Dropper_Module1268
L__Dropper_Module1269:
;GRR3000LManagementPanel.mpas,4158 :: 		end;
L__Dropper_Module1260:
;GRR3000LManagementPanel.mpas,4160 :: 		end;
0xC670	0x3700B2  	BRA	L__Dropper_Module1184
L__Dropper_Module1258:
;GRR3000LManagementPanel.mpas,4161 :: 		3: begin // master sleave
0xC672	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xC674	0x784010  	MOV.B	[W0], W0
0xC676	0xE10463  	CP.B	W0, #3
0xC678	0x3A00A0  	BRA NZ	L__Dropper_Module1329
L__Dropper_Module5237:
;GRR3000LManagementPanel.mpas,4163 :: 		if (Ok_Button =0) then
0xC67A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC67C	0x37009D  	BRA	L__Dropper_Module1331
;GRR3000LManagementPanel.mpas,4165 :: 		while (Ok_Button =0) do
L__Dropper_Module1334:
0xC67E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC680	0x370002  	BRA	L__Dropper_Module1335
;GRR3000LManagementPanel.mpas,4167 :: 		asm ClrWDT; end;
0xC682	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4168 :: 		end;
0xC684	0x37FFFC  	BRA	L__Dropper_Module1334
L__Dropper_Module1335:
;GRR3000LManagementPanel.mpas,4170 :: 		Chng[4] := 1;
0xC686	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xC688	0xB3C010  	MOV.B	#1, W0
0xC68A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4172 :: 		While (Chng[4] =1) do
L__Dropper_Module1339:
0xC68C	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0xC68E	0x784010  	MOV.B	[W0], W0
0xC690	0xE10461  	CP.B	W0, #1
0xC692	0x3A0092  	BRA NZ	L__Dropper_Module1340
L__Dropper_Module5238:
;GRR3000LManagementPanel.mpas,4175 :: 		asm ClrWDT; end;
0xC694	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4177 :: 		if (Up_Button =0) then
0xC696	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC698	0x37000D  	BRA	L__Dropper_Module1344
;GRR3000LManagementPanel.mpas,4179 :: 		while (Up_Button =0) do
L__Dropper_Module1347:
0xC69A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xC69C	0x370002  	BRA	L__Dropper_Module1348
;GRR3000LManagementPanel.mpas,4181 :: 		asm ClrWDT; end;
0xC69E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4182 :: 		end;
0xC6A0	0x37FFFC  	BRA	L__Dropper_Module1347
L__Dropper_Module1348:
;GRR3000LManagementPanel.mpas,4183 :: 		Inc(MasterSlave);
0xC6A2	0x200011  	MOV	#1, W1
0xC6A4	0x212DE0  	MOV	#lo_addr(_MasterSlave), W0
0xC6A6	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4184 :: 		if (MasterSlave > 2) then
0xC6A8	0x8096F0  	MOV	_MasterSlave, W0
0xC6AA	0xE10062  	CP	W0, #2
0xC6AC	0x360002  	BRA LEU	L__Dropper_Module1352
L__Dropper_Module5239:
;GRR3000LManagementPanel.mpas,4185 :: 		MasterSlave := 1;
0xC6AE	0x200010  	MOV	#1, W0
0xC6B0	0x8896F0  	MOV	W0, _MasterSlave
L__Dropper_Module1352:
;GRR3000LManagementPanel.mpas,4186 :: 		end else
0xC6B2	0x37000E  	BRA	L__Dropper_Module1345
L__Dropper_Module1344:
;GRR3000LManagementPanel.mpas,4187 :: 		if (Down_Button =0) then
0xC6B4	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC6B6	0x37000C  	BRA	L__Dropper_Module1355
;GRR3000LManagementPanel.mpas,4189 :: 		while (Down_Button =0) do
L__Dropper_Module1358:
0xC6B8	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xC6BA	0x370002  	BRA	L__Dropper_Module1359
;GRR3000LManagementPanel.mpas,4191 :: 		asm ClrWDT; end;
0xC6BC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4192 :: 		end;
0xC6BE	0x37FFFC  	BRA	L__Dropper_Module1358
L__Dropper_Module1359:
;GRR3000LManagementPanel.mpas,4193 :: 		Dec(MasterSlave);
0xC6C0	0x200011  	MOV	#1, W1
0xC6C2	0x212DE0  	MOV	#lo_addr(_MasterSlave), W0
0xC6C4	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4194 :: 		if (MasterSlave < 1) then //
0xC6C6	0x8096F0  	MOV	_MasterSlave, W0
0xC6C8	0xE10061  	CP	W0, #1
0xC6CA	0x310002  	BRA GEU	L__Dropper_Module1363
L__Dropper_Module5240:
;GRR3000LManagementPanel.mpas,4195 :: 		MasterSlave := 2;
0xC6CC	0x200020  	MOV	#2, W0
0xC6CE	0x8896F0  	MOV	W0, _MasterSlave
L__Dropper_Module1363:
;GRR3000LManagementPanel.mpas,4196 :: 		end;
L__Dropper_Module1355:
L__Dropper_Module1345:
;GRR3000LManagementPanel.mpas,4200 :: 		1: Glcd_Write_Text('Master', 84, Row4, white);
0xC6D0	0x8096F0  	MOV	_MasterSlave, W0
0xC6D2	0xE10061  	CP	W0, #1
0xC6D4	0x3A0016  	BRA NZ	L__Dropper_Module1368
L__Dropper_Module5241:
0xC6D6	0x4700E0  	ADD	W14, #0, W1
0xC6D8	0xB3C4D0  	MOV.B	#77, W0
0xC6DA	0x785880  	MOV.B	W0, [W1++]
0xC6DC	0xB3C610  	MOV.B	#97, W0
0xC6DE	0x785880  	MOV.B	W0, [W1++]
0xC6E0	0xB3C730  	MOV.B	#115, W0
0xC6E2	0x785880  	MOV.B	W0, [W1++]
0xC6E4	0xB3C740  	MOV.B	#116, W0
0xC6E6	0x785880  	MOV.B	W0, [W1++]
0xC6E8	0xB3C650  	MOV.B	#101, W0
0xC6EA	0x785880  	MOV.B	W0, [W1++]
0xC6EC	0xB3C720  	MOV.B	#114, W0
0xC6EE	0x785880  	MOV.B	W0, [W1++]
0xC6F0	0xEF2000  	CLR	W0
0xC6F2	0x785880  	MOV.B	W0, [W1++]
0xC6F4	0x470060  	ADD	W14, #0, W0
0xC6F6	0xEF201A  	CLR	W13
0xC6F8	0xB3C03C  	MOV.B	#3, W12
0xC6FA	0xB3C54B  	MOV.B	#84, W11
0xC6FC	0x780500  	MOV	W0, W10
0xC6FE	0x07C845  	RCALL	_Glcd_Write_Text
0xC700	0x370019  	BRA	L__Dropper_Module1365
L__Dropper_Module1368:
;GRR3000LManagementPanel.mpas,4201 :: 		2: Glcd_Write_Text('Slave ', 84, Row4, white);
0xC702	0x8096F0  	MOV	_MasterSlave, W0
0xC704	0xE10062  	CP	W0, #2
0xC706	0x3A0016  	BRA NZ	L__Dropper_Module1371
L__Dropper_Module5242:
0xC708	0x4700E0  	ADD	W14, #0, W1
0xC70A	0xB3C530  	MOV.B	#83, W0
0xC70C	0x785880  	MOV.B	W0, [W1++]
0xC70E	0xB3C6C0  	MOV.B	#108, W0
0xC710	0x785880  	MOV.B	W0, [W1++]
0xC712	0xB3C610  	MOV.B	#97, W0
0xC714	0x785880  	MOV.B	W0, [W1++]
0xC716	0xB3C760  	MOV.B	#118, W0
0xC718	0x785880  	MOV.B	W0, [W1++]
0xC71A	0xB3C650  	MOV.B	#101, W0
0xC71C	0x785880  	MOV.B	W0, [W1++]
0xC71E	0xB3C200  	MOV.B	#32, W0
0xC720	0x785880  	MOV.B	W0, [W1++]
0xC722	0xEF2000  	CLR	W0
0xC724	0x785880  	MOV.B	W0, [W1++]
0xC726	0x470060  	ADD	W14, #0, W0
0xC728	0xEF201A  	CLR	W13
0xC72A	0xB3C03C  	MOV.B	#3, W12
0xC72C	0xB3C54B  	MOV.B	#84, W11
0xC72E	0x780500  	MOV	W0, W10
0xC730	0x07C82C  	RCALL	_Glcd_Write_Text
0xC732	0x370000  	BRA	L__Dropper_Module1365
L__Dropper_Module1371:
L__Dropper_Module1365:
;GRR3000LManagementPanel.mpas,4205 :: 		if (Ok_Button =0) then
0xC734	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC736	0x37003F  	BRA	L__Dropper_Module1373
;GRR3000LManagementPanel.mpas,4207 :: 		while (Ok_Button =0) do
L__Dropper_Module1376:
0xC738	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC73A	0x370002  	BRA	L__Dropper_Module1377
;GRR3000LManagementPanel.mpas,4209 :: 		asm ClrWDT; end;
0xC73C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4210 :: 		end;
0xC73E	0x37FFFC  	BRA	L__Dropper_Module1376
L__Dropper_Module1377:
;GRR3000LManagementPanel.mpas,4212 :: 		EEPROM_Write(EE_MasterSlaveEeAddr, MasterSlave);
0xC740	0x8096FC  	MOV	_MasterSlave, W12
0xC742	0x2F056A  	MOV	#61526, W10
0xC744	0x2007FB  	MOV	#127, W11
0xC746	0x07A627  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4213 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Dropper_Module1381:
0xC748	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xC74A	0x37FFFE  	BRA	L__Dropper_Module1381
;GRR3000LManagementPanel.mpas,4215 :: 		Chng[4] := 0;
0xC74C	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xC74E	0xEF2000  	CLR	W0
0xC750	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4217 :: 		1: Glcd_Write_Text('Master', 84, Row4, black);
0xC752	0x8096F0  	MOV	_MasterSlave, W0
0xC754	0xE10061  	CP	W0, #1
0xC756	0x3A0016  	BRA NZ	L__Dropper_Module1388
L__Dropper_Module5243:
0xC758	0x4700E0  	ADD	W14, #0, W1
0xC75A	0xB3C4D0  	MOV.B	#77, W0
0xC75C	0x785880  	MOV.B	W0, [W1++]
0xC75E	0xB3C610  	MOV.B	#97, W0
0xC760	0x785880  	MOV.B	W0, [W1++]
0xC762	0xB3C730  	MOV.B	#115, W0
0xC764	0x785880  	MOV.B	W0, [W1++]
0xC766	0xB3C740  	MOV.B	#116, W0
0xC768	0x785880  	MOV.B	W0, [W1++]
0xC76A	0xB3C650  	MOV.B	#101, W0
0xC76C	0x785880  	MOV.B	W0, [W1++]
0xC76E	0xB3C720  	MOV.B	#114, W0
0xC770	0x785880  	MOV.B	W0, [W1++]
0xC772	0xEF2000  	CLR	W0
0xC774	0x785880  	MOV.B	W0, [W1++]
0xC776	0x470060  	ADD	W14, #0, W0
0xC778	0xB3C01D  	MOV.B	#1, W13
0xC77A	0xB3C03C  	MOV.B	#3, W12
0xC77C	0xB3C54B  	MOV.B	#84, W11
0xC77E	0x780500  	MOV	W0, W10
0xC780	0x07C804  	RCALL	_Glcd_Write_Text
0xC782	0x370019  	BRA	L__Dropper_Module1385
L__Dropper_Module1388:
;GRR3000LManagementPanel.mpas,4218 :: 		2: Glcd_Write_Text('Slave ', 84, Row4, black);
0xC784	0x8096F0  	MOV	_MasterSlave, W0
0xC786	0xE10062  	CP	W0, #2
0xC788	0x3A0016  	BRA NZ	L__Dropper_Module1391
L__Dropper_Module5244:
0xC78A	0x4700E0  	ADD	W14, #0, W1
0xC78C	0xB3C530  	MOV.B	#83, W0
0xC78E	0x785880  	MOV.B	W0, [W1++]
0xC790	0xB3C6C0  	MOV.B	#108, W0
0xC792	0x785880  	MOV.B	W0, [W1++]
0xC794	0xB3C610  	MOV.B	#97, W0
0xC796	0x785880  	MOV.B	W0, [W1++]
0xC798	0xB3C760  	MOV.B	#118, W0
0xC79A	0x785880  	MOV.B	W0, [W1++]
0xC79C	0xB3C650  	MOV.B	#101, W0
0xC79E	0x785880  	MOV.B	W0, [W1++]
0xC7A0	0xB3C200  	MOV.B	#32, W0
0xC7A2	0x785880  	MOV.B	W0, [W1++]
0xC7A4	0xEF2000  	CLR	W0
0xC7A6	0x785880  	MOV.B	W0, [W1++]
0xC7A8	0x470060  	ADD	W14, #0, W0
0xC7AA	0xB3C01D  	MOV.B	#1, W13
0xC7AC	0xB3C03C  	MOV.B	#3, W12
0xC7AE	0xB3C54B  	MOV.B	#84, W11
0xC7B0	0x780500  	MOV	W0, W10
0xC7B2	0x07C7EB  	RCALL	_Glcd_Write_Text
0xC7B4	0x370000  	BRA	L__Dropper_Module1385
L__Dropper_Module1391:
L__Dropper_Module1385:
;GRR3000LManagementPanel.mpas,4223 :: 		end;
L__Dropper_Module1373:
;GRR3000LManagementPanel.mpas,4228 :: 		end; // chng[2] while end
0xC7B6	0x37FF6A  	BRA	L__Dropper_Module1339
L__Dropper_Module1340:
;GRR3000LManagementPanel.mpas,4231 :: 		end;
L__Dropper_Module1331:
;GRR3000LManagementPanel.mpas,4233 :: 		end;
0xC7B8	0x37000E  	BRA	L__Dropper_Module1184
L__Dropper_Module1329:
;GRR3000LManagementPanel.mpas,4236 :: 		4:  begin // geri
0xC7BA	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xC7BC	0x784010  	MOV.B	[W0], W0
0xC7BE	0xE10464  	CP.B	W0, #4
0xC7C0	0x3A000A  	BRA NZ	L__Dropper_Module1394
L__Dropper_Module5245:
;GRR3000LManagementPanel.mpas,4238 :: 		if (Ok_Button =0) then
0xC7C2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC7C4	0x370007  	BRA	L__Dropper_Module1396
;GRR3000LManagementPanel.mpas,4240 :: 		while (Ok_Button =0) do
L__Dropper_Module1399:
0xC7C6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC7C8	0x370002  	BRA	L__Dropper_Module1400
;GRR3000LManagementPanel.mpas,4242 :: 		asm ClrWDT; end;
0xC7CA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4243 :: 		end;
0xC7CC	0x37FFFC  	BRA	L__Dropper_Module1399
L__Dropper_Module1400:
;GRR3000LManagementPanel.mpas,4244 :: 		MenuExit := 1;
0xC7CE	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xC7D0	0xB3C010  	MOV.B	#1, W0
0xC7D2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4246 :: 		end;
L__Dropper_Module1396:
;GRR3000LManagementPanel.mpas,4250 :: 		end;
0xC7D4	0x370000  	BRA	L__Dropper_Module1184
L__Dropper_Module1394:
L__Dropper_Module1184:
;GRR3000LManagementPanel.mpas,4255 :: 		end;
0xC7D6	0x37FE19  	BRA	L__Dropper_Module1180
L__Dropper_Module1181:
;GRR3000LManagementPanel.mpas,4257 :: 		if ((MasterSlave = 1)and(OperationMode = 2)) then // slave den mastera geçiþte açýlýþ counter deðerini sýfýrla
0xC7D8	0x8096F0  	MOV	_MasterSlave, W0
0xC7DA	0xE10061  	CP	W0, #1
0xC7DC	0xEF2002  	CLR	W1
0xC7DE	0x3A0001  	BRA NZ	L__Dropper_Module5246
0xC7E0	0xEEA002  	COM	W1
L__Dropper_Module5246:
0xC7E2	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xC7E4	0x784010  	MOV.B	[W0], W0
0xC7E6	0xE10462  	CP.B	W0, #2
0xC7E8	0xEF2000  	CLR	W0
0xC7EA	0x3A0001  	BRA NZ	L__Dropper_Module5247
0xC7EC	0xEEA000  	COM	W0
L__Dropper_Module5247:
0xC7EE	0x608000  	AND	W1, W0, W0
0xC7F0	0x320008  	BRA Z	L__Dropper_Module1404
L__Dropper_Module5248:
;GRR3000LManagementPanel.mpas,4259 :: 		Start_Counter := 15000;
0xC7F2	0x23A980  	MOV	#15000, W0
0xC7F4	0x88ABF0  	MOV	W0, _Start_Counter
;GRR3000LManagementPanel.mpas,4260 :: 		RedFaultBit   := 0;
0xC7F6	0x212A40  	MOV	#lo_addr(_RedFaultBit), W0
0xC7F8	0xA1D010  	BCLR	[W0], BitPos(_RedFaultBit+0)
;GRR3000LManagementPanel.mpas,4261 :: 		StopBit       := 0;
0xC7FA	0x212A40  	MOV	#lo_addr(_StopBit), W0
0xC7FC	0xA1F010  	BCLR	[W0], BitPos(_StopBit+0)
;GRR3000LManagementPanel.mpas,4262 :: 		Start_Bit     := 0;
0xC7FE	0x212A40  	MOV	#lo_addr(_Start_Bit), W0
0xC800	0xA1E010  	BCLR	[W0], BitPos(_Start_Bit+0)
;GRR3000LManagementPanel.mpas,4263 :: 		end;
L__Dropper_Module1404:
;GRR3000LManagementPanel.mpas,4268 :: 		Glcd_Fill(0x00);
0xC802	0xEF2014  	CLR	W10
0xC804	0x07E863  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,4269 :: 		MenuSayacValue := 3;
0xC806	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xC808	0xB3C030  	MOV.B	#3, W0
0xC80A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4271 :: 		end;
L_end_Dropper_Module:
0xC80C	0x7806CF  	POP	W13
0xC80E	0x78064F  	POP	W12
0xC810	0x7805CF  	POP	W11
0xC812	0x78054F  	POP	W10
0xC814	0xFA8000  	ULNK
0xC816	0x060000  	RETURN
; end of _Dropper_Module
_Battery_Settings:
0xA74E	0xFA0026  	LNK	#38
;GRR3000LManagementPanel.mpas,6684 :: 		begin
;GRR3000LManagementPanel.mpas,6685 :: 		Glcd_Fill(0x00);
0xA750	0x781F8A  	PUSH	W10
0xA752	0x781F8B  	PUSH	W11
0xA754	0x781F8C  	PUSH	W12
0xA756	0x781F8D  	PUSH	W13
0xA758	0xEF2014  	CLR	W10
0xA75A	0x07F8B8  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6686 :: 		MenuExit        := 0;
0xA75C	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xA75E	0xEF2000  	CLR	W0
0xA760	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6687 :: 		MenuSayacValue  := 1;
0xA762	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xA764	0xB3C010  	MOV.B	#1, W0
0xA766	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6688 :: 		Chng[11]        := 2;
0xA768	0x212561  	MOV	#lo_addr(_Chng+10), W1
0xA76A	0xB3C020  	MOV.B	#2, W0
0xA76C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6689 :: 		AkuAkimText     := '             ';
0xA76E	0x4700E0  	ADD	W14, #0, W1
0xA770	0xB3C200  	MOV.B	#32, W0
0xA772	0x785880  	MOV.B	W0, [W1++]
0xA774	0xB3C200  	MOV.B	#32, W0
0xA776	0x785880  	MOV.B	W0, [W1++]
0xA778	0xB3C200  	MOV.B	#32, W0
0xA77A	0x785880  	MOV.B	W0, [W1++]
0xA77C	0xB3C200  	MOV.B	#32, W0
0xA77E	0x785880  	MOV.B	W0, [W1++]
0xA780	0xB3C200  	MOV.B	#32, W0
0xA782	0x785880  	MOV.B	W0, [W1++]
0xA784	0xB3C200  	MOV.B	#32, W0
0xA786	0x785880  	MOV.B	W0, [W1++]
0xA788	0xB3C200  	MOV.B	#32, W0
0xA78A	0x785880  	MOV.B	W0, [W1++]
0xA78C	0xB3C200  	MOV.B	#32, W0
0xA78E	0x785880  	MOV.B	W0, [W1++]
0xA790	0xB3C200  	MOV.B	#32, W0
0xA792	0x785880  	MOV.B	W0, [W1++]
0xA794	0xB3C200  	MOV.B	#32, W0
0xA796	0x785880  	MOV.B	W0, [W1++]
0xA798	0xB3C200  	MOV.B	#32, W0
0xA79A	0x785880  	MOV.B	W0, [W1++]
0xA79C	0xB3C200  	MOV.B	#32, W0
0xA79E	0x785880  	MOV.B	W0, [W1++]
0xA7A0	0xB3C200  	MOV.B	#32, W0
0xA7A2	0x785880  	MOV.B	W0, [W1++]
0xA7A4	0xEF2000  	CLR	W0
0xA7A6	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6691 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0xA7A8	0xB3C07D  	MOV.B	#7, W13
0xA7AA	0xB3C05C  	MOV.B	#5, W12
0xA7AC	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0xA7AE	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0xA7B0	0x200200  	MOV	#32, W0
0xA7B2	0x781F80  	PUSH	W0
0xA7B4	0x07D981  	RCALL	_Glcd_Set_Font
0xA7B6	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,6693 :: 		BatteryAh           := EEPROM_Read(EE_BatteryAhEeAddr);
0xA7B8	0x2F012A  	MOV	#61458, W10
0xA7BA	0x2007FB  	MOV	#127, W11
0xA7BC	0x07BE51  	RCALL	_EEPROM_Read
0xA7BE	0x88AC60  	MOV	W0, _BatteryAh
;GRR3000LManagementPanel.mpas,6694 :: 		ChargeMode          := EEPROM_Read(EE_ChargeModeEeAddr);
0xA7C0	0x2F01CA  	MOV	#61468, W10
0xA7C2	0x2007FB  	MOV	#127, W11
0xA7C4	0x07BE4D  	RCALL	_EEPROM_Read
0xA7C6	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0xA7C8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6695 :: 		HucreSayisi         := EEPROM_Read(EE_HucreSayisiEeAddr);
0xA7CA	0x2F004A  	MOV	#61444, W10
0xA7CC	0x2007FB  	MOV	#127, W11
0xA7CE	0x07BE48  	RCALL	_EEPROM_Read
0xA7D0	0x889FF0  	MOV	W0, _HucreSayisi
;GRR3000LManagementPanel.mpas,6696 :: 		NomHucreGerilim     := EEPROM_Read(EE_NomHucreGerilimEeAddr);
0xA7D2	0x2F006A  	MOV	#61446, W10
0xA7D4	0x2007FB  	MOV	#127, W11
0xA7D6	0x07BE44  	RCALL	_EEPROM_Read
0xA7D8	0x889FD0  	MOV	W0, _NomHucreGerilim
;GRR3000LManagementPanel.mpas,6697 :: 		F_ChargePercentLo   := EEPROM_Read(EE_F_ChargePercentLoEeAddr);
0xA7DA	0x2F008A  	MOV	#61448, W10
0xA7DC	0x2007FB  	MOV	#127, W11
0xA7DE	0x07BE40  	RCALL	_EEPROM_Read
0xA7E0	0x889990  	MOV	W0, _F_ChargePercentLo
;GRR3000LManagementPanel.mpas,6698 :: 		F_ChargePercentHi   := EEPROM_Read(EE_F_ChargePercentHiEeAddr);
0xA7E2	0x2F00AA  	MOV	#61450, W10
0xA7E4	0x2007FB  	MOV	#127, W11
0xA7E6	0x07BE3C  	RCALL	_EEPROM_Read
0xA7E8	0x889710  	MOV	W0, _F_ChargePercentHi
;GRR3000LManagementPanel.mpas,6699 :: 		B_ChargePercentLo   := EEPROM_Read(EE_B_ChargePercentLoEeAddr);
0xA7EA	0x2F00CA  	MOV	#61452, W10
0xA7EC	0x2007FB  	MOV	#127, W11
0xA7EE	0x07BE38  	RCALL	_EEPROM_Read
0xA7F0	0x889750  	MOV	W0, _B_ChargePercentLo
;GRR3000LManagementPanel.mpas,6700 :: 		B_ChargePercentHi   := EEPROM_Read(EE_B_ChargePercentHiEeAddr);
0xA7F2	0x2F00EA  	MOV	#61454, W10
0xA7F4	0x2007FB  	MOV	#127, W11
0xA7F6	0x07BE34  	RCALL	_EEPROM_Read
0xA7F8	0x8897A0  	MOV	W0, _B_ChargePercentHi
;GRR3000LManagementPanel.mpas,6701 :: 		BoostChargeLimit    := EEPROM_Read(EE_BoostChargeLimitEeAddr);
0xA7FA	0x2F028A  	MOV	#61480, W10
0xA7FC	0x2007FB  	MOV	#127, W11
0xA7FE	0x07BE30  	RCALL	_EEPROM_Read
0xA800	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,6702 :: 		FloatChargeLimit    := EEPROM_Read(EE_FloatChargeLimitEeAddr);
0xA802	0x2F02AA  	MOV	#61482, W10
0xA804	0x2007FB  	MOV	#127, W11
0xA806	0x07BE2C  	RCALL	_EEPROM_Read
0xA808	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,6703 :: 		DeepDischargeVolt   := EEPROM_Read(EE_DeepDischargeVoltEeAddr);
0xA80A	0x2F024A  	MOV	#61476, W10
0xA80C	0x2007FB  	MOV	#127, W11
0xA80E	0x07BE28  	RCALL	_EEPROM_Read
0xA810	0x88AC90  	MOV	W0, _DeepDischargeVolt
;GRR3000LManagementPanel.mpas,6705 :: 		While (MenuExit =0) do
L__Battery_Settings2749:
0xA812	0x214660  	MOV	#lo_addr(_MenuExit), W0
0xA814	0x784010  	MOV.B	[W0], W0
0xA816	0xE10460  	CP.B	W0, #0
0xA818	0x3A087D  	BRA NZ	L__Battery_Settings2750
L__Battery_Settings5448:
;GRR3000LManagementPanel.mpas,6709 :: 		MenuSayac := MenuButtonRead(11,255); // menu için butonlarý oku 11 satýr menü var
0xA81A	0xB3CFFB  	MOV.B	#255, W11
0xA81C	0xB3C0BA  	MOV.B	#11, W10
0xA81E	0x07B538  	RCALL	_MenuButtonRead
0xA820	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0xA822	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6711 :: 		if (Hidden_Button =0) then // fabrikadan gönderilirken bu butona basýlacak. ilk devreye almada akü ayarlarý menüsü açýlacak.
0xA824	0xAFE2C2  	BTSC	RA7_bit, BitPos(RA7_bit+0)
0xA826	0x370016  	BRA	L__Battery_Settings2754
;GRR3000LManagementPanel.mpas,6713 :: 		Glcd_Write_Text('+',0,Row1,Black);
0xA828	0x4700EE  	ADD	W14, #14, W1
0xA82A	0xB3C2B0  	MOV.B	#43, W0
0xA82C	0x785880  	MOV.B	W0, [W1++]
0xA82E	0xEF2000  	CLR	W0
0xA830	0x785880  	MOV.B	W0, [W1++]
0xA832	0x47006E  	ADD	W14, #14, W0
0xA834	0xB3C01D  	MOV.B	#1, W13
0xA836	0xEF2018  	CLR	W12
0xA838	0xEF2016  	CLR	W11
0xA83A	0x780500  	MOV	W0, W10
0xA83C	0x07D7A6  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6714 :: 		FirstStartUpBattMenu := 120;
0xA83E	0x2159E1  	MOV	#lo_addr(_FirstStartUpBattMenu), W1
0xA840	0xB3C780  	MOV.B	#120, W0
0xA842	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6715 :: 		EEPROM_Write(EE_FirstBattMenuEeAddr, FirstStartUpBattMenu);
0xA844	0x20078C  	MOV	#120, W12
0xA846	0x2F086A  	MOV	#61574, W10
0xA848	0x2007FB  	MOV	#127, W11
0xA84A	0x07B5A5  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6716 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2757:
0xA84C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xA84E	0x37FFFE  	BRA	L__Battery_Settings2757
;GRR3000LManagementPanel.mpas,6718 :: 		Pause_ms(100);
0xA850	0x20064A  	MOV	#100, W10
0xA852	0x071B21  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,6720 :: 		end;
L__Battery_Settings2754:
;GRR3000LManagementPanel.mpas,6722 :: 		asm ClrWDT; end;
0xA854	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6724 :: 		if (MenuSayac < 8) then
0xA856	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xA858	0x784010  	MOV.B	[W0], W0
0xA85A	0xE10468  	CP.B	W0, #8
0xA85C	0x3D00F6  	BRA GE	L__Battery_Settings2762
L__Battery_Settings5449:
;GRR3000LManagementPanel.mpas,6727 :: 		if (Chng[11] = 2) then // ekrana sürekli resmi basma
0xA85E	0x212560  	MOV	#lo_addr(_Chng+10), W0
0xA860	0x784010  	MOV.B	[W0], W0
0xA862	0xE10462  	CP.B	W0, #2
0xA864	0x3A00F1  	BRA NZ	L__Battery_Settings2765
L__Battery_Settings5450:
;GRR3000LManagementPanel.mpas,6734 :: 		Glcd_Fill(0x00);
0xA866	0xEF2014  	CLR	W10
0xA868	0x07F831  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6737 :: 		Glcd_Write_Text(Title_BattMenu1,      0, Row1, Black);
0xA86A	0xB3C01D  	MOV.B	#1, W13
0xA86C	0xEF2018  	CLR	W12
0xA86E	0xEF2016  	CLR	W11
0xA870	0x21547A  	MOV	#lo_addr(_Title_BattMenu1), W10
0xA872	0x07D78B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6738 :: 		Glcd_Write_Text(SubTitle_BattAh,      6, Row2, Black);
0xA874	0xB3C01D  	MOV.B	#1, W13
0xA876	0xB3C01C  	MOV.B	#1, W12
0xA878	0xB3C06B  	MOV.B	#6, W11
0xA87A	0x2155CA  	MOV	#lo_addr(_SubTitle_BattAh), W10
0xA87C	0x07D786  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6739 :: 		Glcd_Write_Text(SubTitle_BattAmps,    6, Row3, Black);
0xA87E	0xB3C01D  	MOV.B	#1, W13
0xA880	0xB3C02C  	MOV.B	#2, W12
0xA882	0xB3C06B  	MOV.B	#6, W11
0xA884	0x21578A  	MOV	#lo_addr(_SubTitle_BattAmps), W10
0xA886	0x07D781  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6740 :: 		Glcd_Write_Text(SubTitle_ChrgMode,    6, Row4, Black);
0xA888	0xB3C01D  	MOV.B	#1, W13
0xA88A	0xB3C03C  	MOV.B	#3, W12
0xA88C	0xB3C06B  	MOV.B	#6, W11
0xA88E	0x2156AA  	MOV	#lo_addr(_SubTitle_ChrgMode), W10
0xA890	0x07D77C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6741 :: 		Glcd_Write_Text(SubTitle_BoostVolt,   6, Row5, Black);
0xA892	0xB3C01D  	MOV.B	#1, W13
0xA894	0xB3C04C  	MOV.B	#4, W12
0xA896	0xB3C06B  	MOV.B	#6, W11
0xA898	0x215AAA  	MOV	#lo_addr(_SubTitle_BoostVolt), W10
0xA89A	0x07D777  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6742 :: 		Glcd_Write_Text(SubTitle_FloatVolt,   6, Row6, Black);
0xA89C	0xB3C01D  	MOV.B	#1, W13
0xA89E	0xB3C05C  	MOV.B	#5, W12
0xA8A0	0xB3C06B  	MOV.B	#6, W11
0xA8A2	0x216AEA  	MOV	#lo_addr(_SubTitle_FloatVolt), W10
0xA8A4	0x07D772  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6743 :: 		Glcd_Write_Text(SubTitle_BoostTime,   6, Row7, Black);
0xA8A6	0xB3C01D  	MOV.B	#1, W13
0xA8A8	0xB3C06C  	MOV.B	#6, W12
0xA8AA	0xB3C06B  	MOV.B	#6, W11
0xA8AC	0x216A0A  	MOV	#lo_addr(_SubTitle_BoostTime), W10
0xA8AE	0x07D76D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6744 :: 		Glcd_Write_Text(SubTitle_DeepVolt,    6, Row8, Black);
0xA8B0	0xB3C01D  	MOV.B	#1, W13
0xA8B2	0xB3C07C  	MOV.B	#7, W12
0xA8B4	0xB3C06B  	MOV.B	#6, W11
0xA8B6	0x216BCA  	MOV	#lo_addr(_SubTitle_DeepVolt), W10
0xA8B8	0x07D768  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6746 :: 		Chng[11] := 1;
0xA8BA	0x212561  	MOV	#lo_addr(_Chng+10), W1
0xA8BC	0xB3C010  	MOV.B	#1, W0
0xA8BE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6748 :: 		WordToStr(BatteryAh, Value_Text);
0xA8C0	0x2141DB  	MOV	#lo_addr(_Value_Text), W11
0xA8C2	0x80AC6A  	MOV	_BatteryAh, W10
0xA8C4	0x07B4C6  	RCALL	_WordToStr
;GRR3000LManagementPanel.mpas,6749 :: 		WriteText := Value_Text + 'Ah';
0xA8C6	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA8C8	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA8CA	0x070FBD  	RCALL	___CS2S
0xA8CC	0xB3C412  	MOV.B	#65, W2
0xA8CE	0x785802  	MOV.B	W2, [W0++]
0xA8D0	0xB3C682  	MOV.B	#104, W2
0xA8D2	0x785802  	MOV.B	W2, [W0++]
0xA8D4	0xEF2004  	CLR	W2
0xA8D6	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6750 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0xA8D8	0xB3C01D  	MOV.B	#1, W13
0xA8DA	0xB3C01C  	MOV.B	#1, W12
0xA8DC	0xB3C54B  	MOV.B	#84, W11
0xA8DE	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA8E0	0x07D754  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6752 :: 		ChargeModeWrite(ChargeMode,Black);
0xA8E2	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xA8E4	0xB3C01B  	MOV.B	#1, W11
0xA8E6	0x784510  	MOV.B	[W0], W10
0xA8E8	0x07AF2B  	RCALL	_ChargeModeWrite
;GRR3000LManagementPanel.mpas,6755 :: 		Boost : begin
0xA8EA	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xA8EC	0x784010  	MOV.B	[W0], W0
0xA8EE	0xE10461  	CP.B	W0, #1
0xA8F0	0x3A0005  	BRA NZ	L__Battery_Settings2770
L__Battery_Settings5451:
;GRR3000LManagementPanel.mpas,6756 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsBoostEeAddr);
0xA8F2	0x2F014A  	MOV	#61460, W10
0xA8F4	0x2007FB  	MOV	#127, W11
0xA8F6	0x07BDB4  	RCALL	_EEPROM_Read
0xA8F8	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6757 :: 		end;
0xA8FA	0x37001B  	BRA	L__Battery_Settings2767
L__Battery_Settings2770:
;GRR3000LManagementPanel.mpas,6759 :: 		Float : begin
0xA8FC	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xA8FE	0x784010  	MOV.B	[W0], W0
0xA900	0xE10462  	CP.B	W0, #2
0xA902	0x3A0005  	BRA NZ	L__Battery_Settings2773
L__Battery_Settings5452:
;GRR3000LManagementPanel.mpas,6760 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsFloatEeAddr);
0xA904	0x2F016A  	MOV	#61462, W10
0xA906	0x2007FB  	MOV	#127, W11
0xA908	0x07BDAB  	RCALL	_EEPROM_Read
0xA90A	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6761 :: 		end;
0xA90C	0x370012  	BRA	L__Battery_Settings2767
L__Battery_Settings2773:
;GRR3000LManagementPanel.mpas,6763 :: 		TComp : begin
0xA90E	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xA910	0x784010  	MOV.B	[W0], W0
0xA912	0xE10463  	CP.B	W0, #3
0xA914	0x3A0005  	BRA NZ	L__Battery_Settings2776
L__Battery_Settings5453:
;GRR3000LManagementPanel.mpas,6764 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsTCompEeAddr);
0xA916	0x2F018A  	MOV	#61464, W10
0xA918	0x2007FB  	MOV	#127, W11
0xA91A	0x07BDA2  	RCALL	_EEPROM_Read
0xA91C	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6765 :: 		end;
0xA91E	0x370009  	BRA	L__Battery_Settings2767
L__Battery_Settings2776:
;GRR3000LManagementPanel.mpas,6767 :: 		Manuel: begin
0xA920	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xA922	0x784010  	MOV.B	[W0], W0
0xA924	0xE10464  	CP.B	W0, #4
0xA926	0x3A0005  	BRA NZ	L__Battery_Settings2779
L__Battery_Settings5454:
;GRR3000LManagementPanel.mpas,6768 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsManuelEeAddr);
0xA928	0x2F01AA  	MOV	#61466, W10
0xA92A	0x2007FB  	MOV	#127, W11
0xA92C	0x07BD99  	RCALL	_EEPROM_Read
0xA92E	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6769 :: 		end;
0xA930	0x370000  	BRA	L__Battery_Settings2767
L__Battery_Settings2779:
L__Battery_Settings2767:
;GRR3000LManagementPanel.mpas,6773 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xA932	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xA934	0xEB0080  	CLR	W1
0xA936	0x07F879  	RCALL	__Long2Float
0xA938	0x200002  	MOV	#0, W2
0xA93A	0x241203  	MOV	#16672, W3
0xA93C	0x07F8D1  	RCALL	__Mul_FP
0xA93E	0x981710  	MOV	W0, [W14+34]
0xA940	0x981721  	MOV	W1, [W14+36]
0xA942	0x80AC60  	MOV	_BatteryAh, W0
0xA944	0xEB0080  	CLR	W1
0xA946	0x07F871  	RCALL	__Long2Float
0xA948	0x980F70  	MOV	W0, [W14+30]
0xA94A	0x981701  	MOV	W1, [W14+32]
0xA94C	0x90101E  	MOV	[W14+34], W0
0xA94E	0x9010AE  	MOV	[W14+36], W1
0xA950	0xBE9F82  	PUSH.D	W2
0xA952	0x90097E  	MOV	[W14+30], W2
0xA954	0x90118E  	MOV	[W14+32], W3
0xA956	0x07AF49  	RCALL	__Div_FP
0xA958	0xBE014F  	POP.D	W2
0xA95A	0x88B660  	MOV	W0, _Temp_RealAku
0xA95C	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,6774 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xA95E	0x200002  	MOV	#0, W2
0xA960	0x241203  	MOV	#16672, W3
0xA962	0x07F8BE  	RCALL	__Mul_FP
0xA964	0x07B070  	RCALL	__Float2Longint
0xA966	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,6775 :: 		ValueDivide(Temp_WordAku, 128);
0xA968	0xB3C80B  	MOV.B	#128, W11
0xA96A	0x780500  	MOV	W0, W10
0xA96C	0x07B0E1  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6776 :: 		ValueDivide(BatteryAmpsSet, 255);
0xA96E	0xB3CFFB  	MOV.B	#255, W11
0xA970	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xA972	0x07B0DE  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6777 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text+'A';
0xA974	0x470070  	ADD	W14, #16, W0
0xA976	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xA978	0x070F66  	RCALL	___CS2S
0xA97A	0xB3C252  	MOV.B	#37, W2
0xA97C	0x785802  	MOV.B	W2, [W0++]
0xA97E	0xB3C202  	MOV.B	#32, W2
0xA980	0x785802  	MOV.B	W2, [W0++]
0xA982	0xB3C2D2  	MOV.B	#45, W2
0xA984	0x785802  	MOV.B	W2, [W0++]
0xA986	0xB3C202  	MOV.B	#32, W2
0xA988	0x785802  	MOV.B	W2, [W0++]
0xA98A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA98C	0x070F5C  	RCALL	___CS2S
0xA98E	0xB3C412  	MOV.B	#65, W2
0xA990	0x785802  	MOV.B	W2, [W0++]
0xA992	0xEF2004  	CLR	W2
0xA994	0x785802  	MOV.B	W2, [W0++]
0xA996	0x470060  	ADD	W14, #0, W0
0xA998	0x4700F0  	ADD	W14, #16, W1
0xA99A	0x070F55  	RCALL	___CS2S
0xA99C	0x780080  	MOV	W0, W1
0xA99E	0xEF2000  	CLR	W0
0xA9A0	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6778 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xA9A2	0x470060  	ADD	W14, #0, W0
0xA9A4	0xB3C01D  	MOV.B	#1, W13
0xA9A6	0xB3C02C  	MOV.B	#2, W12
0xA9A8	0xB3C24B  	MOV.B	#36, W11
0xA9AA	0x780500  	MOV	W0, W10
0xA9AC	0x07D6EE  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6780 :: 		BoostChargeVoltage := EEPROM_Read(EE_BoostChargeVoltEeAddr);
0xA9AE	0x2F01EA  	MOV	#61470, W10
0xA9B0	0x2007FB  	MOV	#127, W11
0xA9B2	0x07BD56  	RCALL	_EEPROM_Read
0xA9B4	0x88AC00  	MOV	W0, _BoostChargeVoltage
;GRR3000LManagementPanel.mpas,6781 :: 		ValueDivide(BoostChargeVoltage,255);
0xA9B6	0xB3CFFB  	MOV.B	#255, W11
0xA9B8	0x780500  	MOV	W0, W10
0xA9BA	0x07B0BA  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6782 :: 		WriteText := Value_Text + 'V';
0xA9BC	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA9BE	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA9C0	0x070F42  	RCALL	___CS2S
0xA9C2	0xB3C562  	MOV.B	#86, W2
0xA9C4	0x785802  	MOV.B	W2, [W0++]
0xA9C6	0xEF2004  	CLR	W2
0xA9C8	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6783 :: 		Glcd_Write_Text(WriteText,84 , Row5, Black);
0xA9CA	0xB3C01D  	MOV.B	#1, W13
0xA9CC	0xB3C04C  	MOV.B	#4, W12
0xA9CE	0xB3C54B  	MOV.B	#84, W11
0xA9D0	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA9D2	0x07D6DB  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6785 :: 		FloatChargeVoltage := EEPROM_Read(EE_FloatChargeVoltEeAddr);
0xA9D4	0x2F020A  	MOV	#61472, W10
0xA9D6	0x2007FB  	MOV	#127, W11
0xA9D8	0x07BD43  	RCALL	_EEPROM_Read
0xA9DA	0x88AC20  	MOV	W0, _FloatChargeVoltage
;GRR3000LManagementPanel.mpas,6786 :: 		ValueDivide(FloatChargeVoltage,255);
0xA9DC	0xB3CFFB  	MOV.B	#255, W11
0xA9DE	0x780500  	MOV	W0, W10
0xA9E0	0x07B0A7  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6787 :: 		WriteText := Value_Text + 'V';
0xA9E2	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xA9E4	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xA9E6	0x070F2F  	RCALL	___CS2S
0xA9E8	0xB3C562  	MOV.B	#86, W2
0xA9EA	0x785802  	MOV.B	W2, [W0++]
0xA9EC	0xEF2004  	CLR	W2
0xA9EE	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6788 :: 		Glcd_Write_Text(WriteText,84 , Row6, Black);
0xA9F0	0xB3C01D  	MOV.B	#1, W13
0xA9F2	0xB3C05C  	MOV.B	#5, W12
0xA9F4	0xB3C54B  	MOV.B	#84, W11
0xA9F6	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xA9F8	0x07D6C8  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6790 :: 		BoostChargeTimeSet    := EEPROM_Read(EE_BoostChargeTimeEeAddr);
0xA9FA	0x2F022A  	MOV	#61474, W10
0xA9FC	0x2007FB  	MOV	#127, W11
0xA9FE	0x07BD30  	RCALL	_EEPROM_Read
0xAA00	0x88AC50  	MOV	W0, _BoostChargeTimeSet
;GRR3000LManagementPanel.mpas,6791 :: 		ValueDivide(BoostChargeTimeSet,0);
0xAA02	0xEF2016  	CLR	W11
0xAA04	0x780500  	MOV	W0, W10
0xAA06	0x07B094  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6792 :: 		WriteText := Value_Text + MinuteText;
0xAA08	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xAA0A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAA0C	0x070F1C  	RCALL	___CS2S
0xAA0E	0x216731  	MOV	#lo_addr(_MinuteText), W1
0xAA10	0x070F1A  	RCALL	___CS2S
0xAA12	0x780080  	MOV	W0, W1
0xAA14	0xEF2000  	CLR	W0
0xAA16	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6793 :: 		Glcd_Write_Text(WriteText,84 , Row7, Black);
0xAA18	0xB3C01D  	MOV.B	#1, W13
0xAA1A	0xB3C06C  	MOV.B	#6, W12
0xAA1C	0xB3C54B  	MOV.B	#84, W11
0xAA1E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xAA20	0x07D6B4  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6795 :: 		DeepDischargeVolt    := EEPROM_Read(EE_DeepDischargeVoltEeAddr);
0xAA22	0x2F024A  	MOV	#61476, W10
0xAA24	0x2007FB  	MOV	#127, W11
0xAA26	0x07BD1C  	RCALL	_EEPROM_Read
0xAA28	0x88AC90  	MOV	W0, _DeepDischargeVolt
;GRR3000LManagementPanel.mpas,6796 :: 		ValueDivide(DeepDischargeVolt,255);
0xAA2A	0xB3CFFB  	MOV.B	#255, W11
0xAA2C	0x780500  	MOV	W0, W10
0xAA2E	0x07B080  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6797 :: 		WriteText := Value_Text + 'V';
0xAA30	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xAA32	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAA34	0x070F08  	RCALL	___CS2S
0xAA36	0xB3C562  	MOV.B	#86, W2
0xAA38	0x785802  	MOV.B	W2, [W0++]
0xAA3A	0xEF2004  	CLR	W2
0xAA3C	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6798 :: 		Glcd_Write_Text(WriteText,84 , Row8, Black);
0xAA3E	0xB3C01D  	MOV.B	#1, W13
0xAA40	0xB3C07C  	MOV.B	#7, W12
0xAA42	0xB3C54B  	MOV.B	#84, W11
0xAA44	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xAA46	0x07D6A1  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6801 :: 		end;
L__Battery_Settings2765:
;GRR3000LManagementPanel.mpas,6802 :: 		end else
0xAA48	0x370064  	BRA	L__Battery_Settings2763
L__Battery_Settings2762:
;GRR3000LManagementPanel.mpas,6803 :: 		if (MenuSayac >= 8) then
0xAA4A	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xAA4C	0x784010  	MOV.B	[W0], W0
0xAA4E	0xE10468  	CP.B	W0, #8
0xAA50	0x350060  	BRA LT	L__Battery_Settings2781
L__Battery_Settings5455:
;GRR3000LManagementPanel.mpas,6805 :: 		if (Chng[11] = 1) then   // ekrana sürekli resmi basma
0xAA52	0x212560  	MOV	#lo_addr(_Chng+10), W0
0xAA54	0x784010  	MOV.B	[W0], W0
0xAA56	0xE10461  	CP.B	W0, #1
0xAA58	0x3A005C  	BRA NZ	L__Battery_Settings2784
L__Battery_Settings5456:
;GRR3000LManagementPanel.mpas,6812 :: 		Glcd_Fill(0x00);
0xAA5A	0xEF2014  	CLR	W10
0xAA5C	0x07F737  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6815 :: 		Glcd_Write_Text(Title_BattMenu2,      0, Row1, Black);
0xAA5E	0xB3C01D  	MOV.B	#1, W13
0xAA60	0xEF2018  	CLR	W12
0xAA62	0xEF2016  	CLR	W11
0xAA64	0x2165EA  	MOV	#lo_addr(_Title_BattMenu2), W10
0xAA66	0x07D691  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6816 :: 		Glcd_Write_Text(SubTitle_BFMode,      6, Row2, Black);
0xAA68	0xB3C01D  	MOV.B	#1, W13
0xAA6A	0xB3C01C  	MOV.B	#1, W12
0xAA6C	0xB3C06B  	MOV.B	#6, W11
0xAA6E	0x21676A  	MOV	#lo_addr(_SubTitle_BFMode), W10
0xAA70	0x07D68C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6817 :: 		Glcd_Write_Text(SubTitle_Blimit,      6, Row3, Black);
0xAA72	0xB3C01D  	MOV.B	#1, W13
0xAA74	0xB3C02C  	MOV.B	#2, W12
0xAA76	0xB3C06B  	MOV.B	#6, W11
0xAA78	0x21692A  	MOV	#lo_addr(_SubTitle_Blimit), W10
0xAA7A	0x07D687  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6818 :: 		Glcd_Write_Text(SubTitle_Flimit,      6, Row4, Black);
0xAA7C	0xB3C01D  	MOV.B	#1, W13
0xAA7E	0xB3C03C  	MOV.B	#3, W12
0xAA80	0xB3C06B  	MOV.B	#6, W11
0xAA82	0x21684A  	MOV	#lo_addr(_SubTitle_Flimit), W10
0xAA84	0x07D682  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6819 :: 		Glcd_Write_Text(SubTitle_Back,        6, Row5, Black);
0xAA86	0xB3C01D  	MOV.B	#1, W13
0xAA88	0xB3C04C  	MOV.B	#4, W12
0xAA8A	0xB3C06B  	MOV.B	#6, W11
0xAA8C	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0xAA8E	0x07D67D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6821 :: 		Chng[11] := 2;
0xAA90	0x212561  	MOV	#lo_addr(_Chng+10), W1
0xAA92	0xB3C020  	MOV.B	#2, W0
0xAA94	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6823 :: 		AutoBFMode := EEPROM_Read(EE_AutoBFModeEeAddr);
0xAA96	0x2F026A  	MOV	#61478, W10
0xAA98	0x2007FB  	MOV	#127, W11
0xAA9A	0x07BCE2  	RCALL	_EEPROM_Read
0xAA9C	0x215961  	MOV	#lo_addr(_AutoBFMode), W1
0xAA9E	0xA00011  	BSET	[W1], BitPos(_AutoBFMode+0)
0xAAA0	0xAE0000  	BTSS	W0, #0
0xAAA2	0xA10011  	BCLR	[W1], BitPos(_AutoBFMode+0)
;GRR3000LManagementPanel.mpas,6825 :: 		if (AutoBFMode =0) then Glcd_Write_Text(DisableText, 84, Row2, Black) else
0xAAA4	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xAAA6	0xA70010  	BTSC	[W0], BitPos(_AutoBFMode+0)
0xAAA8	0x370006  	BRA	L__Battery_Settings2787
0xAAAA	0xB3C01D  	MOV.B	#1, W13
0xAAAC	0xB3C01C  	MOV.B	#1, W12
0xAAAE	0xB3C54B  	MOV.B	#84, W11
0xAAB0	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xAAB2	0x07D66B  	RCALL	_Glcd_Write_Text
0xAAB4	0x370008  	BRA	L__Battery_Settings2788
L__Battery_Settings2787:
;GRR3000LManagementPanel.mpas,6826 :: 		if (AutoBFMode =1) then Glcd_Write_Text(EnableText, 84, Row2, Black);
0xAAB6	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xAAB8	0xA60010  	BTSS	[W0], BitPos(_AutoBFMode+0)
0xAABA	0x370005  	BRA	L__Battery_Settings2790
0xAABC	0xB3C01D  	MOV.B	#1, W13
0xAABE	0xB3C01C  	MOV.B	#1, W12
0xAAC0	0xB3C54B  	MOV.B	#84, W11
0xAAC2	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xAAC4	0x07D662  	RCALL	_Glcd_Write_Text
L__Battery_Settings2790:
L__Battery_Settings2788:
;GRR3000LManagementPanel.mpas,6828 :: 		BoostChargeLimit    := EEPROM_Read(EE_BoostChargeLimitEeAddr);
0xAAC6	0x2F028A  	MOV	#61480, W10
0xAAC8	0x2007FB  	MOV	#127, W11
0xAACA	0x07BCCA  	RCALL	_EEPROM_Read
0xAACC	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,6829 :: 		ValueDivide(BoostChargeLimit, 255);
0xAACE	0xB3CFFB  	MOV.B	#255, W11
0xAAD0	0x780500  	MOV	W0, W10
0xAAD2	0x07B02E  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6830 :: 		WriteText := Value_Text + 'A';
0xAAD4	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xAAD6	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAAD8	0x070EB6  	RCALL	___CS2S
0xAADA	0xB3C412  	MOV.B	#65, W2
0xAADC	0x785802  	MOV.B	W2, [W0++]
0xAADE	0xEF2004  	CLR	W2
0xAAE0	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6831 :: 		Glcd_Write_Text(WriteText,84 , Row3, Black);
0xAAE2	0xB3C01D  	MOV.B	#1, W13
0xAAE4	0xB3C02C  	MOV.B	#2, W12
0xAAE6	0xB3C54B  	MOV.B	#84, W11
0xAAE8	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xAAEA	0x07D64F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6833 :: 		FloatChargeLimit    := EEPROM_Read(EE_FloatChargeLimitEeAddr);
0xAAEC	0x2F02AA  	MOV	#61482, W10
0xAAEE	0x2007FB  	MOV	#127, W11
0xAAF0	0x07BCB7  	RCALL	_EEPROM_Read
0xAAF2	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,6834 :: 		ValueDivide(FloatChargeLimit, 255);
0xAAF4	0xB3CFFB  	MOV.B	#255, W11
0xAAF6	0x780500  	MOV	W0, W10
0xAAF8	0x07B01B  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6835 :: 		WriteText := Value_Text + 'A';
0xAAFA	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xAAFC	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAAFE	0x070EA3  	RCALL	___CS2S
0xAB00	0xB3C412  	MOV.B	#65, W2
0xAB02	0x785802  	MOV.B	W2, [W0++]
0xAB04	0xEF2004  	CLR	W2
0xAB06	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6836 :: 		Glcd_Write_Text(WriteText,84 , Row4, Black);
0xAB08	0xB3C01D  	MOV.B	#1, W13
0xAB0A	0xB3C03C  	MOV.B	#3, W12
0xAB0C	0xB3C54B  	MOV.B	#84, W11
0xAB0E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xAB10	0x07D63C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6838 :: 		end;
L__Battery_Settings2784:
;GRR3000LManagementPanel.mpas,6839 :: 		end;
L__Battery_Settings2781:
L__Battery_Settings2763:
;GRR3000LManagementPanel.mpas,6846 :: 		1: begin // akü ah
0xAB12	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xAB14	0x784010  	MOV.B	[W0], W0
0xAB16	0xE10461  	CP.B	W0, #1
0xAB18	0x3A019F  	BRA NZ	L__Battery_Settings2795
L__Battery_Settings5457:
;GRR3000LManagementPanel.mpas,6848 :: 		if (Ok_Button =0) then
0xAB1A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAB1C	0x37019C  	BRA	L__Battery_Settings2797
;GRR3000LManagementPanel.mpas,6850 :: 		while (Ok_Button =0) do
L__Battery_Settings2800:
0xAB1E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAB20	0x370002  	BRA	L__Battery_Settings2801
;GRR3000LManagementPanel.mpas,6852 :: 		asm ClrWDT; end;
0xAB22	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6853 :: 		end;
0xAB24	0x37FFFC  	BRA	L__Battery_Settings2800
L__Battery_Settings2801:
;GRR3000LManagementPanel.mpas,6855 :: 		Chng[1] := 1;
0xAB26	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xAB28	0xB3C010  	MOV.B	#1, W0
0xAB2A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6857 :: 		While (Chng[1] =1) do
L__Battery_Settings2805:
0xAB2C	0x2124C0  	MOV	#lo_addr(_Chng), W0
0xAB2E	0x784010  	MOV.B	[W0], W0
0xAB30	0xE10461  	CP.B	W0, #1
0xAB32	0x3A0191  	BRA NZ	L__Battery_Settings2806
L__Battery_Settings5458:
;GRR3000LManagementPanel.mpas,6860 :: 		asm ClrWDT; end;
0xAB34	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6862 :: 		if (Up_Button =0) then
0xAB36	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xAB38	0x370013  	BRA	L__Battery_Settings2810
;GRR3000LManagementPanel.mpas,6864 :: 		ButonStop       := 0;
0xAB3A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAB3C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6865 :: 		BtCounterNormal := 0;
0xAB3E	0xEF2000  	CLR	W0
0xAB40	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6866 :: 		while (ButonStop = 0) do
L__Battery_Settings2813:
0xAB42	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAB44	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xAB46	0x370002  	BRA	L__Battery_Settings2814
;GRR3000LManagementPanel.mpas,6868 :: 		asm ClrWDT; end;
0xAB48	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6869 :: 		end;
0xAB4A	0x37FFFB  	BRA	L__Battery_Settings2813
L__Battery_Settings2814:
;GRR3000LManagementPanel.mpas,6870 :: 		Inc(BatteryAh);
0xAB4C	0x200011  	MOV	#1, W1
0xAB4E	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xAB50	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6871 :: 		if (BatteryAh >1000) then BatteryAh := 7;  // 7 - 500Ah arasý
0xAB52	0x80AC61  	MOV	_BatteryAh, W1
0xAB54	0x203E80  	MOV	#1000, W0
0xAB56	0xE10800  	CP	W1, W0
0xAB58	0x360002  	BRA LEU	L__Battery_Settings2818
L__Battery_Settings5459:
0xAB5A	0x200070  	MOV	#7, W0
0xAB5C	0x88AC60  	MOV	W0, _BatteryAh
L__Battery_Settings2818:
;GRR3000LManagementPanel.mpas,6872 :: 		end else
0xAB5E	0x370013  	BRA	L__Battery_Settings2811
L__Battery_Settings2810:
;GRR3000LManagementPanel.mpas,6873 :: 		if (Down_Button =0) then
0xAB60	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xAB62	0x370011  	BRA	L__Battery_Settings2821
;GRR3000LManagementPanel.mpas,6875 :: 		ButonStop       := 0;
0xAB64	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAB66	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6876 :: 		BtCounterNormal := 0;
0xAB68	0xEF2000  	CLR	W0
0xAB6A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6877 :: 		while (ButonStop = 0) do
L__Battery_Settings2824:
0xAB6C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAB6E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xAB70	0x370002  	BRA	L__Battery_Settings2825
;GRR3000LManagementPanel.mpas,6879 :: 		asm ClrWDT; end;
0xAB72	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6880 :: 		end;
0xAB74	0x37FFFB  	BRA	L__Battery_Settings2824
L__Battery_Settings2825:
;GRR3000LManagementPanel.mpas,6881 :: 		Dec(BatteryAh);
0xAB76	0x200011  	MOV	#1, W1
0xAB78	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xAB7A	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6882 :: 		if (BatteryAh < 7) then BatteryAh := 1000;
0xAB7C	0x80AC60  	MOV	_BatteryAh, W0
0xAB7E	0xE10067  	CP	W0, #7
0xAB80	0x310002  	BRA GEU	L__Battery_Settings2829
L__Battery_Settings5460:
0xAB82	0x203E80  	MOV	#1000, W0
0xAB84	0x88AC60  	MOV	W0, _BatteryAh
L__Battery_Settings2829:
;GRR3000LManagementPanel.mpas,6883 :: 		end;
L__Battery_Settings2821:
L__Battery_Settings2811:
;GRR3000LManagementPanel.mpas,6887 :: 		WordToStr(BatteryAh, Value_Text);
0xAB86	0x2141DB  	MOV	#lo_addr(_Value_Text), W11
0xAB88	0x80AC6A  	MOV	_BatteryAh, W10
0xAB8A	0x07B363  	RCALL	_WordToStr
;GRR3000LManagementPanel.mpas,6888 :: 		WriteText := Value_Text + 'Ah';
0xAB8C	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xAB8E	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAB90	0x070E5A  	RCALL	___CS2S
0xAB92	0xB3C412  	MOV.B	#65, W2
0xAB94	0x785802  	MOV.B	W2, [W0++]
0xAB96	0xB3C682  	MOV.B	#104, W2
0xAB98	0x785802  	MOV.B	W2, [W0++]
0xAB9A	0xEF2004  	CLR	W2
0xAB9C	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6889 :: 		Glcd_Write_Text(WriteText, 84, Row2, White);
0xAB9E	0xEF201A  	CLR	W13
0xABA0	0xB3C01C  	MOV.B	#1, W12
0xABA2	0xB3C54B  	MOV.B	#84, W11
0xABA4	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xABA6	0x07D5F1  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6891 :: 		if (ChargeMode = Boost) then // þarj modu hýzlý ise
0xABA8	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xABAA	0x784010  	MOV.B	[W0], W0
0xABAC	0xE10461  	CP.B	W0, #1
0xABAE	0x3A004B  	BRA NZ	L__Battery_Settings2832
L__Battery_Settings5461:
;GRR3000LManagementPanel.mpas,6895 :: 		BatteryAmpsSet := BatteryAh*2;
0xABB0	0x80AC60  	MOV	_BatteryAh, W0
0xABB2	0xDD0141  	SL	W0, #1, W2
0xABB4	0x88AC12  	MOV	W2, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6896 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xABB6	0x809781  	MOV	_RedresorAkim, W1
0xABB8	0x2000A0  	MOV	#10, W0
0xABBA	0xB80800  	MUL.UU	W1, W0, W0
0xABBC	0xE11000  	CP	W2, W0
0xABBE	0x360004  	BRA LEU	L__Battery_Settings2835
L__Battery_Settings5462:
0xABC0	0x809781  	MOV	_RedresorAkim, W1
0xABC2	0x2000A0  	MOV	#10, W0
0xABC4	0xB80800  	MUL.UU	W1, W0, W0
0xABC6	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2835:
;GRR3000LManagementPanel.mpas,6900 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xABC8	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xABCA	0xEB0080  	CLR	W1
0xABCC	0x07F72E  	RCALL	__Long2Float
0xABCE	0x200002  	MOV	#0, W2
0xABD0	0x241203  	MOV	#16672, W3
0xABD2	0x07F786  	RCALL	__Mul_FP
0xABD4	0x981710  	MOV	W0, [W14+34]
0xABD6	0x981721  	MOV	W1, [W14+36]
0xABD8	0x80AC60  	MOV	_BatteryAh, W0
0xABDA	0xEB0080  	CLR	W1
0xABDC	0x07F726  	RCALL	__Long2Float
0xABDE	0x980F70  	MOV	W0, [W14+30]
0xABE0	0x981701  	MOV	W1, [W14+32]
0xABE2	0x90101E  	MOV	[W14+34], W0
0xABE4	0x9010AE  	MOV	[W14+36], W1
0xABE6	0xBE9F82  	PUSH.D	W2
0xABE8	0x90097E  	MOV	[W14+30], W2
0xABEA	0x90118E  	MOV	[W14+32], W3
0xABEC	0x07ADFE  	RCALL	__Div_FP
0xABEE	0xBE014F  	POP.D	W2
0xABF0	0x88B660  	MOV	W0, _Temp_RealAku
0xABF2	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,6901 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xABF4	0x200002  	MOV	#0, W2
0xABF6	0x241203  	MOV	#16672, W3
0xABF8	0x07F773  	RCALL	__Mul_FP
0xABFA	0x07AF25  	RCALL	__Float2Longint
0xABFC	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,6902 :: 		ValueDivide(Temp_WordAku, 128);
0xABFE	0xB3C80B  	MOV.B	#128, W11
0xAC00	0x780500  	MOV	W0, W10
0xAC02	0x07AF96  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6903 :: 		ValueDivide(BatteryAmpsSet, 255);
0xAC04	0xB3CFFB  	MOV.B	#255, W11
0xAC06	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xAC08	0x07AF93  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6904 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text+'A';
0xAC0A	0x470070  	ADD	W14, #16, W0
0xAC0C	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xAC0E	0x070E1B  	RCALL	___CS2S
0xAC10	0xB3C252  	MOV.B	#37, W2
0xAC12	0x785802  	MOV.B	W2, [W0++]
0xAC14	0xB3C202  	MOV.B	#32, W2
0xAC16	0x785802  	MOV.B	W2, [W0++]
0xAC18	0xB3C2D2  	MOV.B	#45, W2
0xAC1A	0x785802  	MOV.B	W2, [W0++]
0xAC1C	0xB3C202  	MOV.B	#32, W2
0xAC1E	0x785802  	MOV.B	W2, [W0++]
0xAC20	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAC22	0x070E11  	RCALL	___CS2S
0xAC24	0xB3C412  	MOV.B	#65, W2
0xAC26	0x785802  	MOV.B	W2, [W0++]
0xAC28	0xEF2004  	CLR	W2
0xAC2A	0x785802  	MOV.B	W2, [W0++]
0xAC2C	0x470060  	ADD	W14, #0, W0
0xAC2E	0x4700F0  	ADD	W14, #16, W1
0xAC30	0x070E0A  	RCALL	___CS2S
0xAC32	0x780080  	MOV	W0, W1
0xAC34	0xEF2000  	CLR	W0
0xAC36	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6905 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xAC38	0x470060  	ADD	W14, #0, W0
0xAC3A	0xB3C01D  	MOV.B	#1, W13
0xAC3C	0xB3C02C  	MOV.B	#2, W12
0xAC3E	0xB3C24B  	MOV.B	#36, W11
0xAC40	0x780500  	MOV	W0, W10
0xAC42	0x07D5A3  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6907 :: 		end else
0xAC44	0x37005F  	BRA	L__Battery_Settings2833
L__Battery_Settings2832:
;GRR3000LManagementPanel.mpas,6908 :: 		if ((ChargeMode = Float)or(ChargeMode = Tcomp)or(ChargeMode = Manuel))then // þarj modu hýzlý deðilse
0xAC46	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAC48	0x784010  	MOV.B	[W0], W0
0xAC4A	0xE10462  	CP.B	W0, #2
0xAC4C	0xEF2002  	CLR	W1
0xAC4E	0x3A0001  	BRA NZ	L__Battery_Settings5463
0xAC50	0xEEA002  	COM	W1
L__Battery_Settings5463:
0xAC52	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAC54	0x784010  	MOV.B	[W0], W0
0xAC56	0xE10463  	CP.B	W0, #3
0xAC58	0xEF2000  	CLR	W0
0xAC5A	0x3A0001  	BRA NZ	L__Battery_Settings5464
0xAC5C	0xEEA000  	COM	W0
L__Battery_Settings5464:
0xAC5E	0x708080  	IOR	W1, W0, W1
0xAC60	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAC62	0x784010  	MOV.B	[W0], W0
0xAC64	0xE10464  	CP.B	W0, #4
0xAC66	0xEF2000  	CLR	W0
0xAC68	0x3A0001  	BRA NZ	L__Battery_Settings5465
0xAC6A	0xEEA000  	COM	W0
L__Battery_Settings5465:
0xAC6C	0x708000  	IOR	W1, W0, W0
0xAC6E	0x32004A  	BRA Z	L__Battery_Settings2838
L__Battery_Settings5466:
;GRR3000LManagementPanel.mpas,6911 :: 		BatteryAmpsSet := BatteryAh;
0xAC70	0x80AC60  	MOV	_BatteryAh, W0
0xAC72	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6912 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAC74	0x809781  	MOV	_RedresorAkim, W1
0xAC76	0x2000A0  	MOV	#10, W0
0xAC78	0xB80900  	MUL.UU	W1, W0, W2
0xAC7A	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xAC7C	0xE11010  	CP	W2, [W0]
0xAC7E	0x310004  	BRA GEU	L__Battery_Settings2841
L__Battery_Settings5467:
0xAC80	0x809781  	MOV	_RedresorAkim, W1
0xAC82	0x2000A0  	MOV	#10, W0
0xAC84	0xB80800  	MUL.UU	W1, W0, W0
0xAC86	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2841:
;GRR3000LManagementPanel.mpas,6915 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xAC88	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xAC8A	0xEB0080  	CLR	W1
0xAC8C	0x07F6CE  	RCALL	__Long2Float
0xAC8E	0x200002  	MOV	#0, W2
0xAC90	0x241203  	MOV	#16672, W3
0xAC92	0x07F726  	RCALL	__Mul_FP
0xAC94	0x981710  	MOV	W0, [W14+34]
0xAC96	0x981721  	MOV	W1, [W14+36]
0xAC98	0x80AC60  	MOV	_BatteryAh, W0
0xAC9A	0xEB0080  	CLR	W1
0xAC9C	0x07F6C6  	RCALL	__Long2Float
0xAC9E	0x980F70  	MOV	W0, [W14+30]
0xACA0	0x981701  	MOV	W1, [W14+32]
0xACA2	0x90101E  	MOV	[W14+34], W0
0xACA4	0x9010AE  	MOV	[W14+36], W1
0xACA6	0xBE9F82  	PUSH.D	W2
0xACA8	0x90097E  	MOV	[W14+30], W2
0xACAA	0x90118E  	MOV	[W14+32], W3
0xACAC	0x07AD9E  	RCALL	__Div_FP
0xACAE	0xBE014F  	POP.D	W2
0xACB0	0x88B660  	MOV	W0, _Temp_RealAku
0xACB2	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,6916 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xACB4	0x200002  	MOV	#0, W2
0xACB6	0x241203  	MOV	#16672, W3
0xACB8	0x07F713  	RCALL	__Mul_FP
0xACBA	0x07AEC5  	RCALL	__Float2Longint
0xACBC	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,6917 :: 		ValueDivide(Temp_WordAku, 128);
0xACBE	0xB3C80B  	MOV.B	#128, W11
0xACC0	0x780500  	MOV	W0, W10
0xACC2	0x07AF36  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6918 :: 		ValueDivide(BatteryAmpsSet, 255);
0xACC4	0xB3CFFB  	MOV.B	#255, W11
0xACC6	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xACC8	0x07AF33  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6919 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text+'A';
0xACCA	0x470070  	ADD	W14, #16, W0
0xACCC	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xACCE	0x070DBB  	RCALL	___CS2S
0xACD0	0xB3C252  	MOV.B	#37, W2
0xACD2	0x785802  	MOV.B	W2, [W0++]
0xACD4	0xB3C202  	MOV.B	#32, W2
0xACD6	0x785802  	MOV.B	W2, [W0++]
0xACD8	0xB3C2D2  	MOV.B	#45, W2
0xACDA	0x785802  	MOV.B	W2, [W0++]
0xACDC	0xB3C202  	MOV.B	#32, W2
0xACDE	0x785802  	MOV.B	W2, [W0++]
0xACE0	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xACE2	0x070DB1  	RCALL	___CS2S
0xACE4	0xB3C412  	MOV.B	#65, W2
0xACE6	0x785802  	MOV.B	W2, [W0++]
0xACE8	0xEF2004  	CLR	W2
0xACEA	0x785802  	MOV.B	W2, [W0++]
0xACEC	0x470060  	ADD	W14, #0, W0
0xACEE	0x4700F0  	ADD	W14, #16, W1
0xACF0	0x070DAA  	RCALL	___CS2S
0xACF2	0x780080  	MOV	W0, W1
0xACF4	0xEF2000  	CLR	W0
0xACF6	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6920 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xACF8	0x470060  	ADD	W14, #0, W0
0xACFA	0xB3C01D  	MOV.B	#1, W13
0xACFC	0xB3C02C  	MOV.B	#2, W12
0xACFE	0xB3C24B  	MOV.B	#36, W11
0xAD00	0x780500  	MOV	W0, W10
0xAD02	0x07D543  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6922 :: 		end;
L__Battery_Settings2838:
L__Battery_Settings2833:
;GRR3000LManagementPanel.mpas,6927 :: 		if (Ok_Button =0) then
0xAD04	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAD06	0x3700A6  	BRA	L__Battery_Settings2844
;GRR3000LManagementPanel.mpas,6929 :: 		while (Ok_Button =0) do
L__Battery_Settings2847:
0xAD08	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAD0A	0x370002  	BRA	L__Battery_Settings2848
;GRR3000LManagementPanel.mpas,6931 :: 		asm ClrWDT; end;
0xAD0C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6932 :: 		end;
0xAD0E	0x37FFFC  	BRA	L__Battery_Settings2847
L__Battery_Settings2848:
;GRR3000LManagementPanel.mpas,6934 :: 		EEPROM_Write(EE_BatteryAhEeAddr, BatteryAh);
0xAD10	0x80AC6C  	MOV	_BatteryAh, W12
0xAD12	0x2F012A  	MOV	#61458, W10
0xAD14	0x2007FB  	MOV	#127, W11
0xAD16	0x07B33F  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6935 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2852:
0xAD18	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD1A	0x37FFFE  	BRA	L__Battery_Settings2852
;GRR3000LManagementPanel.mpas,6937 :: 		BoostChargeLimit := BatteryAh *2;
0xAD1C	0x80AC60  	MOV	_BatteryAh, W0
0xAD1E	0xDD0041  	SL	W0, #1, W0
0xAD20	0x88AC80  	MOV	W0, _BoostChargeLimit
;GRR3000LManagementPanel.mpas,6938 :: 		EEPROM_Write(EE_BoostChargeLimitEeAddr, BoostChargeLimit);
0xAD22	0x780600  	MOV	W0, W12
0xAD24	0x2F028A  	MOV	#61480, W10
0xAD26	0x2007FB  	MOV	#127, W11
0xAD28	0x07B336  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6939 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2857:
0xAD2A	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD2C	0x37FFFE  	BRA	L__Battery_Settings2857
;GRR3000LManagementPanel.mpas,6941 :: 		FloatChargeLimit := BatteryAh;
0xAD2E	0x80AC60  	MOV	_BatteryAh, W0
0xAD30	0x88ACA0  	MOV	W0, _FloatChargeLimit
;GRR3000LManagementPanel.mpas,6942 :: 		EEPROM_Write(EE_FloatChargeLimitEeAddr, FloatChargeLimit);
0xAD32	0x80AC6C  	MOV	_BatteryAh, W12
0xAD34	0x2F02AA  	MOV	#61482, W10
0xAD36	0x2007FB  	MOV	#127, W11
0xAD38	0x07B32E  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6943 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2862:
0xAD3A	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD3C	0x37FFFE  	BRA	L__Battery_Settings2862
;GRR3000LManagementPanel.mpas,6946 :: 		if (BatteryAmpsSet > (BatteryAh*2)) then BatteryAmpsSet := RedresorAkim*10; // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAD3E	0x80AC60  	MOV	_BatteryAh, W0
0xAD40	0xDD00C1  	SL	W0, #1, W1
0xAD42	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAD44	0xE10810  	CP	W1, [W0]
0xAD46	0x310004  	BRA GEU	L__Battery_Settings2867
L__Battery_Settings5468:
0xAD48	0x809781  	MOV	_RedresorAkim, W1
0xAD4A	0x2000A0  	MOV	#10, W0
0xAD4C	0xB80800  	MUL.UU	W1, W0, W0
0xAD4E	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2867:
;GRR3000LManagementPanel.mpas,6947 :: 		EEPROM_Write(EE_BatteryAmpsBoostEeAddr, BatteryAmpsSet);
0xAD50	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xAD52	0x2F014A  	MOV	#61460, W10
0xAD54	0x2007FB  	MOV	#127, W11
0xAD56	0x07B31F  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6948 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2870:
0xAD58	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD5A	0x37FFFE  	BRA	L__Battery_Settings2870
;GRR3000LManagementPanel.mpas,6950 :: 		EEPROM_Write(EE_BatteryAmpsFloatEeAddr, BatteryAmpsSet);
0xAD5C	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xAD5E	0x2F016A  	MOV	#61462, W10
0xAD60	0x2007FB  	MOV	#127, W11
0xAD62	0x07B319  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6951 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2875:
0xAD64	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD66	0x37FFFE  	BRA	L__Battery_Settings2875
;GRR3000LManagementPanel.mpas,6953 :: 		EEPROM_Write(EE_BatteryAmpsManuelEeAddr, BatteryAmpsSet);
0xAD68	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xAD6A	0x2F01AA  	MOV	#61466, W10
0xAD6C	0x2007FB  	MOV	#127, W11
0xAD6E	0x07B313  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6954 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2880:
0xAD70	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD72	0x37FFFE  	BRA	L__Battery_Settings2880
;GRR3000LManagementPanel.mpas,6956 :: 		EEPROM_Write(EE_BatteryAmpsTCompEeAddr, BatteryAmpsSet);
0xAD74	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xAD76	0x2F018A  	MOV	#61464, W10
0xAD78	0x2007FB  	MOV	#127, W11
0xAD7A	0x07B30D  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6957 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2885:
0xAD7C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xAD7E	0x37FFFE  	BRA	L__Battery_Settings2885
;GRR3000LManagementPanel.mpas,6959 :: 		Chng[1] := 0;
0xAD80	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xAD82	0xEF2000  	CLR	W0
0xAD84	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6960 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0xAD86	0xB3C01D  	MOV.B	#1, W13
0xAD88	0xB3C01C  	MOV.B	#1, W12
0xAD8A	0xB3C54B  	MOV.B	#84, W11
0xAD8C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xAD8E	0x07D4FD  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6963 :: 		Boost : begin
0xAD90	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAD92	0x784010  	MOV.B	[W0], W0
0xAD94	0xE10461  	CP.B	W0, #1
0xAD96	0x3A0005  	BRA NZ	L__Battery_Settings2892
L__Battery_Settings5469:
;GRR3000LManagementPanel.mpas,6964 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsBoostEeAddr);
0xAD98	0x2F014A  	MOV	#61460, W10
0xAD9A	0x2007FB  	MOV	#127, W11
0xAD9C	0x07BB61  	RCALL	_EEPROM_Read
0xAD9E	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6965 :: 		end;
0xADA0	0x37001B  	BRA	L__Battery_Settings2889
L__Battery_Settings2892:
;GRR3000LManagementPanel.mpas,6967 :: 		Float : begin
0xADA2	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xADA4	0x784010  	MOV.B	[W0], W0
0xADA6	0xE10462  	CP.B	W0, #2
0xADA8	0x3A0005  	BRA NZ	L__Battery_Settings2895
L__Battery_Settings5470:
;GRR3000LManagementPanel.mpas,6968 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsFloatEeAddr);
0xADAA	0x2F016A  	MOV	#61462, W10
0xADAC	0x2007FB  	MOV	#127, W11
0xADAE	0x07BB58  	RCALL	_EEPROM_Read
0xADB0	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6969 :: 		end;
0xADB2	0x370012  	BRA	L__Battery_Settings2889
L__Battery_Settings2895:
;GRR3000LManagementPanel.mpas,6971 :: 		TComp : begin
0xADB4	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xADB6	0x784010  	MOV.B	[W0], W0
0xADB8	0xE10463  	CP.B	W0, #3
0xADBA	0x3A0005  	BRA NZ	L__Battery_Settings2898
L__Battery_Settings5471:
;GRR3000LManagementPanel.mpas,6972 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsTCompEeAddr);
0xADBC	0x2F018A  	MOV	#61464, W10
0xADBE	0x2007FB  	MOV	#127, W11
0xADC0	0x07BB4F  	RCALL	_EEPROM_Read
0xADC2	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6973 :: 		end;
0xADC4	0x370009  	BRA	L__Battery_Settings2889
L__Battery_Settings2898:
;GRR3000LManagementPanel.mpas,6975 :: 		Manuel: begin
0xADC6	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xADC8	0x784010  	MOV.B	[W0], W0
0xADCA	0xE10464  	CP.B	W0, #4
0xADCC	0x3A0005  	BRA NZ	L__Battery_Settings2901
L__Battery_Settings5472:
;GRR3000LManagementPanel.mpas,6976 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsManuelEeAddr);
0xADCE	0x2F01AA  	MOV	#61466, W10
0xADD0	0x2007FB  	MOV	#127, W11
0xADD2	0x07BB46  	RCALL	_EEPROM_Read
0xADD4	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,6977 :: 		end;
0xADD6	0x370000  	BRA	L__Battery_Settings2889
L__Battery_Settings2901:
L__Battery_Settings2889:
;GRR3000LManagementPanel.mpas,6981 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xADD8	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xADDA	0xEB0080  	CLR	W1
0xADDC	0x07F626  	RCALL	__Long2Float
0xADDE	0x200002  	MOV	#0, W2
0xADE0	0x241203  	MOV	#16672, W3
0xADE2	0x07F67E  	RCALL	__Mul_FP
0xADE4	0x981710  	MOV	W0, [W14+34]
0xADE6	0x981721  	MOV	W1, [W14+36]
0xADE8	0x80AC60  	MOV	_BatteryAh, W0
0xADEA	0xEB0080  	CLR	W1
0xADEC	0x07F61E  	RCALL	__Long2Float
0xADEE	0x980F70  	MOV	W0, [W14+30]
0xADF0	0x981701  	MOV	W1, [W14+32]
0xADF2	0x90101E  	MOV	[W14+34], W0
0xADF4	0x9010AE  	MOV	[W14+36], W1
0xADF6	0xBE9F82  	PUSH.D	W2
0xADF8	0x90097E  	MOV	[W14+30], W2
0xADFA	0x90118E  	MOV	[W14+32], W3
0xADFC	0x07ACF6  	RCALL	__Div_FP
0xADFE	0xBE014F  	POP.D	W2
0xAE00	0x88B660  	MOV	W0, _Temp_RealAku
0xAE02	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,6982 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xAE04	0x200002  	MOV	#0, W2
0xAE06	0x241203  	MOV	#16672, W3
0xAE08	0x07F66B  	RCALL	__Mul_FP
0xAE0A	0x07AE1D  	RCALL	__Float2Longint
0xAE0C	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,6983 :: 		ValueDivide(Temp_WordAku, 128);
0xAE0E	0xB3C80B  	MOV.B	#128, W11
0xAE10	0x780500  	MOV	W0, W10
0xAE12	0x07AE8E  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6984 :: 		ValueDivide(BatteryAmpsSet, 255);
0xAE14	0xB3CFFB  	MOV.B	#255, W11
0xAE16	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xAE18	0x07AE8B  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6985 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text+'A';
0xAE1A	0x470070  	ADD	W14, #16, W0
0xAE1C	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xAE1E	0x070D13  	RCALL	___CS2S
0xAE20	0xB3C252  	MOV.B	#37, W2
0xAE22	0x785802  	MOV.B	W2, [W0++]
0xAE24	0xB3C202  	MOV.B	#32, W2
0xAE26	0x785802  	MOV.B	W2, [W0++]
0xAE28	0xB3C2D2  	MOV.B	#45, W2
0xAE2A	0x785802  	MOV.B	W2, [W0++]
0xAE2C	0xB3C202  	MOV.B	#32, W2
0xAE2E	0x785802  	MOV.B	W2, [W0++]
0xAE30	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xAE32	0x070D09  	RCALL	___CS2S
0xAE34	0xB3C412  	MOV.B	#65, W2
0xAE36	0x785802  	MOV.B	W2, [W0++]
0xAE38	0xEF2004  	CLR	W2
0xAE3A	0x785802  	MOV.B	W2, [W0++]
0xAE3C	0x470060  	ADD	W14, #0, W0
0xAE3E	0x4700F0  	ADD	W14, #16, W1
0xAE40	0x070D02  	RCALL	___CS2S
0xAE42	0x780080  	MOV	W0, W1
0xAE44	0xEF2000  	CLR	W0
0xAE46	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,6986 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xAE48	0x470060  	ADD	W14, #0, W0
0xAE4A	0xB3C01D  	MOV.B	#1, W13
0xAE4C	0xB3C02C  	MOV.B	#2, W12
0xAE4E	0xB3C24B  	MOV.B	#36, W11
0xAE50	0x780500  	MOV	W0, W10
0xAE52	0x07D49B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6988 :: 		end;
L__Battery_Settings2844:
;GRR3000LManagementPanel.mpas,6993 :: 		end; // chng[1] while end
0xAE54	0x37FE6B  	BRA	L__Battery_Settings2805
L__Battery_Settings2806:
;GRR3000LManagementPanel.mpas,6996 :: 		end;
L__Battery_Settings2797:
;GRR3000LManagementPanel.mpas,6999 :: 		end;
0xAE56	0x37055C  	BRA	L__Battery_Settings2792
L__Battery_Settings2795:
;GRR3000LManagementPanel.mpas,7001 :: 		2: begin // akü akým
0xAE58	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xAE5A	0x784010  	MOV.B	[W0], W0
0xAE5C	0xE10462  	CP.B	W0, #2
0xAE5E	0x3A0118  	BRA NZ	L__Battery_Settings2904
L__Battery_Settings5473:
;GRR3000LManagementPanel.mpas,7004 :: 		if (Ok_Button =0) then
0xAE60	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAE62	0x370115  	BRA	L__Battery_Settings2906
;GRR3000LManagementPanel.mpas,7006 :: 		while (Ok_Button =0) do
L__Battery_Settings2909:
0xAE64	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xAE66	0x370002  	BRA	L__Battery_Settings2910
;GRR3000LManagementPanel.mpas,7008 :: 		asm ClrWDT; end;
0xAE68	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7009 :: 		end;
0xAE6A	0x37FFFC  	BRA	L__Battery_Settings2909
L__Battery_Settings2910:
;GRR3000LManagementPanel.mpas,7011 :: 		Chng[2] := 1;
0xAE6C	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xAE6E	0xB3C010  	MOV.B	#1, W0
0xAE70	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7013 :: 		While (Chng[2] =1) do
L__Battery_Settings2914:
0xAE72	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0xAE74	0x784010  	MOV.B	[W0], W0
0xAE76	0xE10461  	CP.B	W0, #1
0xAE78	0x3A010A  	BRA NZ	L__Battery_Settings2915
L__Battery_Settings5474:
;GRR3000LManagementPanel.mpas,7015 :: 		asm ClrWDT; end;
0xAE7A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7017 :: 		if (Up_Button =0) then
0xAE7C	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xAE7E	0x37004C  	BRA	L__Battery_Settings2919
;GRR3000LManagementPanel.mpas,7019 :: 		ButonStop       := 0;
0xAE80	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAE82	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7020 :: 		BtCounterNormal := 0;
0xAE84	0xEF2000  	CLR	W0
0xAE86	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7021 :: 		while (ButonStop = 0) do
L__Battery_Settings2922:
0xAE88	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAE8A	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xAE8C	0x370002  	BRA	L__Battery_Settings2923
;GRR3000LManagementPanel.mpas,7023 :: 		asm ClrWDT; end;
0xAE8E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7024 :: 		end;
0xAE90	0x37FFFB  	BRA	L__Battery_Settings2922
L__Battery_Settings2923:
;GRR3000LManagementPanel.mpas,7025 :: 		Inc(BatteryAmpsSet);
0xAE92	0x200011  	MOV	#1, W1
0xAE94	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAE96	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7026 :: 		if ((ChargeMode = Boost)or(ChargeMode = Manuel)) then // þarj modu hýzlýysa veya manuelse
0xAE98	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAE9A	0x784010  	MOV.B	[W0], W0
0xAE9C	0xE10461  	CP.B	W0, #1
0xAE9E	0xEF2002  	CLR	W1
0xAEA0	0x3A0001  	BRA NZ	L__Battery_Settings5475
0xAEA2	0xEEA002  	COM	W1
L__Battery_Settings5475:
0xAEA4	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAEA6	0x784010  	MOV.B	[W0], W0
0xAEA8	0xE10464  	CP.B	W0, #4
0xAEAA	0xEF2000  	CLR	W0
0xAEAC	0x3A0001  	BRA NZ	L__Battery_Settings5476
0xAEAE	0xEEA000  	COM	W0
L__Battery_Settings5476:
0xAEB0	0x708000  	IOR	W1, W0, W0
0xAEB2	0x320013  	BRA Z	L__Battery_Settings2927
L__Battery_Settings5477:
;GRR3000LManagementPanel.mpas,7028 :: 		if (BatteryAmpsSet > (BatteryAh * 2)) then BatteryAmpsSet := (BatteryAh *2); // 0.2C ile
0xAEB4	0x80AC60  	MOV	_BatteryAh, W0
0xAEB6	0xDD00C1  	SL	W0, #1, W1
0xAEB8	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAEBA	0xE10810  	CP	W1, [W0]
0xAEBC	0x310003  	BRA GEU	L__Battery_Settings2930
L__Battery_Settings5478:
0xAEBE	0x80AC60  	MOV	_BatteryAh, W0
0xAEC0	0xDD0041  	SL	W0, #1, W0
0xAEC2	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2930:
;GRR3000LManagementPanel.mpas,7029 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAEC4	0x809781  	MOV	_RedresorAkim, W1
0xAEC6	0x2000A0  	MOV	#10, W0
0xAEC8	0xB80900  	MUL.UU	W1, W0, W2
0xAECA	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAECC	0xE11010  	CP	W2, [W0]
0xAECE	0x310004  	BRA GEU	L__Battery_Settings2933
L__Battery_Settings5479:
0xAED0	0x809781  	MOV	_RedresorAkim, W1
0xAED2	0x2000A0  	MOV	#10, W0
0xAED4	0xB80800  	MUL.UU	W1, W0, W0
0xAED6	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2933:
;GRR3000LManagementPanel.mpas,7030 :: 		end else
0xAED8	0x37001E  	BRA	L__Battery_Settings2928
L__Battery_Settings2927:
;GRR3000LManagementPanel.mpas,7031 :: 		if ((ChargeMode = Float)or(ChargeMode = TComp)) then // þarj normal veya sýcaklýk kompanzasyonsa
0xAEDA	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAEDC	0x784010  	MOV.B	[W0], W0
0xAEDE	0xE10462  	CP.B	W0, #2
0xAEE0	0xEF2002  	CLR	W1
0xAEE2	0x3A0001  	BRA NZ	L__Battery_Settings5480
0xAEE4	0xEEA002  	COM	W1
L__Battery_Settings5480:
0xAEE6	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAEE8	0x784010  	MOV.B	[W0], W0
0xAEEA	0xE10463  	CP.B	W0, #3
0xAEEC	0xEF2000  	CLR	W0
0xAEEE	0x3A0001  	BRA NZ	L__Battery_Settings5481
0xAEF0	0xEEA000  	COM	W0
L__Battery_Settings5481:
0xAEF2	0x708000  	IOR	W1, W0, W0
0xAEF4	0x320010  	BRA Z	L__Battery_Settings2936
L__Battery_Settings5482:
;GRR3000LManagementPanel.mpas,7033 :: 		if (BatteryAmpsSet > (BatteryAh * 1)) then BatteryAmpsSet := (BatteryAh *1); // 0.1C ile
0xAEF6	0x80AC11  	MOV	_BatteryAmpsSet, W1
0xAEF8	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xAEFA	0xE10810  	CP	W1, [W0]
0xAEFC	0x360002  	BRA LEU	L__Battery_Settings2939
L__Battery_Settings5483:
0xAEFE	0x80AC60  	MOV	_BatteryAh, W0
0xAF00	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2939:
;GRR3000LManagementPanel.mpas,7034 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAF02	0x809781  	MOV	_RedresorAkim, W1
0xAF04	0x2000A0  	MOV	#10, W0
0xAF06	0xB80900  	MUL.UU	W1, W0, W2
0xAF08	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAF0A	0xE11010  	CP	W2, [W0]
0xAF0C	0x310004  	BRA GEU	L__Battery_Settings2942
L__Battery_Settings5484:
0xAF0E	0x809781  	MOV	_RedresorAkim, W1
0xAF10	0x2000A0  	MOV	#10, W0
0xAF12	0xB80800  	MUL.UU	W1, W0, W0
0xAF14	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2942:
;GRR3000LManagementPanel.mpas,7035 :: 		end;
L__Battery_Settings2936:
L__Battery_Settings2928:
;GRR3000LManagementPanel.mpas,7036 :: 		end else
0xAF16	0x370047  	BRA	L__Battery_Settings2920
L__Battery_Settings2919:
;GRR3000LManagementPanel.mpas,7037 :: 		if (Down_Button =0) then
0xAF18	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xAF1A	0x370045  	BRA	L__Battery_Settings2945
;GRR3000LManagementPanel.mpas,7039 :: 		ButonStop       := 0;
0xAF1C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAF1E	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7040 :: 		BtCounterNormal := 0;
0xAF20	0xEF2000  	CLR	W0
0xAF22	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7041 :: 		while (ButonStop = 0) do
L__Battery_Settings2948:
0xAF24	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xAF26	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xAF28	0x370002  	BRA	L__Battery_Settings2949
;GRR3000LManagementPanel.mpas,7043 :: 		asm ClrWDT; end;
0xAF2A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7044 :: 		end;
0xAF2C	0x37FFFB  	BRA	L__Battery_Settings2948
L__Battery_Settings2949:
;GRR3000LManagementPanel.mpas,7045 :: 		Dec(BatteryAmpsSet);
0xAF2E	0x200011  	MOV	#1, W1
0xAF30	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAF32	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7046 :: 		if (ChargeMode = Boost) then // þarj modu hýzlýysa
0xAF34	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAF36	0x784010  	MOV.B	[W0], W0
0xAF38	0xE10461  	CP.B	W0, #1
0xAF3A	0x3A0011  	BRA NZ	L__Battery_Settings2953
L__Battery_Settings5485:
;GRR3000LManagementPanel.mpas,7048 :: 		if (BatteryAmpsSet < (BatteryAh * 1)) then BatteryAmpsSet := (BatteryAh *1); // 0.1C ye kadar
0xAF3C	0x80AC11  	MOV	_BatteryAmpsSet, W1
0xAF3E	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xAF40	0xE10810  	CP	W1, [W0]
0xAF42	0x310002  	BRA GEU	L__Battery_Settings2956
L__Battery_Settings5486:
0xAF44	0x80AC60  	MOV	_BatteryAh, W0
0xAF46	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2956:
;GRR3000LManagementPanel.mpas,7049 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAF48	0x809781  	MOV	_RedresorAkim, W1
0xAF4A	0x2000A0  	MOV	#10, W0
0xAF4C	0xB80900  	MUL.UU	W1, W0, W2
0xAF4E	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAF50	0xE11010  	CP	W2, [W0]
0xAF52	0x310004  	BRA GEU	L__Battery_Settings2959
L__Battery_Settings5487:
0xAF54	0x809781  	MOV	_RedresorAkim, W1
0xAF56	0x2000A0  	MOV	#10, W0
0xAF58	0xB80800  	MUL.UU	W1, W0, W0
0xAF5A	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2959:
;GRR3000LManagementPanel.mpas,7050 :: 		end else
0xAF5C	0x370024  	BRA	L__Battery_Settings2954
L__Battery_Settings2953:
;GRR3000LManagementPanel.mpas,7051 :: 		if ((ChargeMode = Float)or(ChargeMode = TComp)or(ChargeMode = Manuel)) then // þarj normal veya sýcaklýk kompanzasyon veya Manuel ise
0xAF5E	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAF60	0x784010  	MOV.B	[W0], W0
0xAF62	0xE10462  	CP.B	W0, #2
0xAF64	0xEF2002  	CLR	W1
0xAF66	0x3A0001  	BRA NZ	L__Battery_Settings5488
0xAF68	0xEEA002  	COM	W1
L__Battery_Settings5488:
0xAF6A	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAF6C	0x784010  	MOV.B	[W0], W0
0xAF6E	0xE10463  	CP.B	W0, #3
0xAF70	0xEF2000  	CLR	W0
0xAF72	0x3A0001  	BRA NZ	L__Battery_Settings5489
0xAF74	0xEEA000  	COM	W0
L__Battery_Settings5489:
0xAF76	0x708080  	IOR	W1, W0, W1
0xAF78	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xAF7A	0x784010  	MOV.B	[W0], W0
0xAF7C	0xE10464  	CP.B	W0, #4
0xAF7E	0xEF2000  	CLR	W0
0xAF80	0x3A0001  	BRA NZ	L__Battery_Settings5490
0xAF82	0xEEA000  	COM	W0
L__Battery_Settings5490:
0xAF84	0x708000  	IOR	W1, W0, W0
0xAF86	0x32000F  	BRA Z	L__Battery_Settings2962
L__Battery_Settings5491:
;GRR3000LManagementPanel.mpas,7053 :: 		if (BatteryAmpsSet < 1) then BatteryAmpsSet := 1; // 0.1A e kadar
0xAF88	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xAF8A	0xE10061  	CP	W0, #1
0xAF8C	0x310002  	BRA GEU	L__Battery_Settings2965
L__Battery_Settings5492:
0xAF8E	0x200010  	MOV	#1, W0
0xAF90	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2965:
;GRR3000LManagementPanel.mpas,7054 :: 		if (BatteryAmpsSet > (RedresorAkim*10)) then BatteryAmpsSet := (RedresorAkim*10); // 06.01.2020 TEÝAÞ isteðiyle akü ah deðeri ayarlanýrken akü þarj akýmý, redresör akýmýnýn üzerine çýkmayacak.
0xAF92	0x809781  	MOV	_RedresorAkim, W1
0xAF94	0x2000A0  	MOV	#10, W0
0xAF96	0xB80900  	MUL.UU	W1, W0, W2
0xAF98	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xAF9A	0xE11010  	CP	W2, [W0]
0xAF9C	0x310004  	BRA GEU	L__Battery_Settings2968
L__Battery_Settings5493:
0xAF9E	0x809781  	MOV	_RedresorAkim, W1
0xAFA0	0x2000A0  	MOV	#10, W0
0xAFA2	0xB80800  	MUL.UU	W1, W0, W0
0xAFA4	0x88AC10  	MOV	W0, _BatteryAmpsSet
L__Battery_Settings2968:
;GRR3000LManagementPanel.mpas,7055 :: 		end;
L__Battery_Settings2962:
L__Battery_Settings2954:
;GRR3000LManagementPanel.mpas,7056 :: 		end;
L__Battery_Settings2945:
L__Battery_Settings2920:
;GRR3000LManagementPanel.mpas,7058 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xAFA6	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xAFA8	0xEB0080  	CLR	W1
0xAFAA	0x07F53F  	RCALL	__Long2Float
0xAFAC	0x200002  	MOV	#0, W2
0xAFAE	0x241203  	MOV	#16672, W3
0xAFB0	0x07F597  	RCALL	__Mul_FP
0xAFB2	0x981710  	MOV	W0, [W14+34]
0xAFB4	0x981721  	MOV	W1, [W14+36]
0xAFB6	0x80AC60  	MOV	_BatteryAh, W0
0xAFB8	0xEB0080  	CLR	W1
0xAFBA	0x07F537  	RCALL	__Long2Float
0xAFBC	0x980F70  	MOV	W0, [W14+30]
0xAFBE	0x981701  	MOV	W1, [W14+32]
0xAFC0	0x90101E  	MOV	[W14+34], W0
0xAFC2	0x9010AE  	MOV	[W14+36], W1
0xAFC4	0xBE9F82  	PUSH.D	W2
0xAFC6	0x90097E  	MOV	[W14+30], W2
0xAFC8	0x90118E  	MOV	[W14+32], W3
0xAFCA	0x07AC0F  	RCALL	__Div_FP
0xAFCC	0xBE014F  	POP.D	W2
0xAFCE	0x88B660  	MOV	W0, _Temp_RealAku
0xAFD0	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,7059 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xAFD2	0x200002  	MOV	#0, W2
0xAFD4	0x241203  	MOV	#16672, W3
0xAFD6	0x07F584  	RCALL	__Mul_FP
0xAFD8	0x07AD36  	RCALL	__Float2Longint
0xAFDA	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,7060 :: 		ValueDivide(Temp_WordAku, 128);
0xAFDC	0xB3C80B  	MOV.B	#128, W11
0xAFDE	0x780500  	MOV	W0, W10
0xAFE0	0x07ADA7  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7061 :: 		ValueDivide(BatteryAmpsSet, 255);
0xAFE2	0xB3CFFB  	MOV.B	#255, W11
0xAFE4	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xAFE6	0x07ADA4  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7062 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text+'A';
0xAFE8	0x470070  	ADD	W14, #16, W0
0xAFEA	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xAFEC	0x070C2C  	RCALL	___CS2S
0xAFEE	0xB3C252  	MOV.B	#37, W2
0xAFF0	0x785802  	MOV.B	W2, [W0++]
0xAFF2	0xB3C202  	MOV.B	#32, W2
0xAFF4	0x785802  	MOV.B	W2, [W0++]
0xAFF6	0xB3C2D2  	MOV.B	#45, W2
0xAFF8	0x785802  	MOV.B	W2, [W0++]
0xAFFA	0xB3C202  	MOV.B	#32, W2
0xAFFC	0x785802  	MOV.B	W2, [W0++]
0xAFFE	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB000	0x070C22  	RCALL	___CS2S
0xB002	0xB3C412  	MOV.B	#65, W2
0xB004	0x785802  	MOV.B	W2, [W0++]
0xB006	0xEF2004  	CLR	W2
0xB008	0x785802  	MOV.B	W2, [W0++]
0xB00A	0x470060  	ADD	W14, #0, W0
0xB00C	0x4700F0  	ADD	W14, #16, W1
0xB00E	0x070C1B  	RCALL	___CS2S
0xB010	0x780080  	MOV	W0, W1
0xB012	0xEF2000  	CLR	W0
0xB014	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7063 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, 0);
0xB016	0x470060  	ADD	W14, #0, W0
0xB018	0xEF201A  	CLR	W13
0xB01A	0xB3C02C  	MOV.B	#2, W12
0xB01C	0xB3C24B  	MOV.B	#36, W11
0xB01E	0x780500  	MOV	W0, W10
0xB020	0x07D3B4  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7066 :: 		if (Ok_Button =0) then
0xB022	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB024	0x370033  	BRA	L__Battery_Settings2971
;GRR3000LManagementPanel.mpas,7068 :: 		while (Ok_Button =0) do
L__Battery_Settings2974:
0xB026	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB028	0x370002  	BRA	L__Battery_Settings2975
;GRR3000LManagementPanel.mpas,7070 :: 		asm ClrWDT; end;
0xB02A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7071 :: 		end;
0xB02C	0x37FFFC  	BRA	L__Battery_Settings2974
L__Battery_Settings2975:
;GRR3000LManagementPanel.mpas,7075 :: 		Boost : begin
0xB02E	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB030	0x784010  	MOV.B	[W0], W0
0xB032	0xE10461  	CP.B	W0, #1
0xB034	0x3A0005  	BRA NZ	L__Battery_Settings2981
L__Battery_Settings5494:
;GRR3000LManagementPanel.mpas,7076 :: 		EEPROM_Write(EE_BatteryAmpsBoostEeAddr, BatteryAmpsSet);
0xB036	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xB038	0x2F014A  	MOV	#61460, W10
0xB03A	0x2007FB  	MOV	#127, W11
0xB03C	0x07B1AC  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7077 :: 		end;
0xB03E	0x37001B  	BRA	L__Battery_Settings2978
L__Battery_Settings2981:
;GRR3000LManagementPanel.mpas,7079 :: 		Float : begin
0xB040	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB042	0x784010  	MOV.B	[W0], W0
0xB044	0xE10462  	CP.B	W0, #2
0xB046	0x3A0005  	BRA NZ	L__Battery_Settings2984
L__Battery_Settings5495:
;GRR3000LManagementPanel.mpas,7080 :: 		EEPROM_Write(EE_BatteryAmpsFloatEeAddr, BatteryAmpsSet);
0xB048	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xB04A	0x2F016A  	MOV	#61462, W10
0xB04C	0x2007FB  	MOV	#127, W11
0xB04E	0x07B1A3  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7081 :: 		end;
0xB050	0x370012  	BRA	L__Battery_Settings2978
L__Battery_Settings2984:
;GRR3000LManagementPanel.mpas,7083 :: 		TComp : begin
0xB052	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB054	0x784010  	MOV.B	[W0], W0
0xB056	0xE10463  	CP.B	W0, #3
0xB058	0x3A0005  	BRA NZ	L__Battery_Settings2987
L__Battery_Settings5496:
;GRR3000LManagementPanel.mpas,7084 :: 		EEPROM_Write(EE_BatteryAmpsTCompEeAddr, BatteryAmpsSet);
0xB05A	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xB05C	0x2F018A  	MOV	#61464, W10
0xB05E	0x2007FB  	MOV	#127, W11
0xB060	0x07B19A  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7085 :: 		end;
0xB062	0x370009  	BRA	L__Battery_Settings2978
L__Battery_Settings2987:
;GRR3000LManagementPanel.mpas,7087 :: 		Manuel: begin
0xB064	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB066	0x784010  	MOV.B	[W0], W0
0xB068	0xE10464  	CP.B	W0, #4
0xB06A	0x3A0005  	BRA NZ	L__Battery_Settings2990
L__Battery_Settings5497:
;GRR3000LManagementPanel.mpas,7088 :: 		EEPROM_Write(EE_BatteryAmpsManuelEeAddr, BatteryAmpsSet);
0xB06C	0x80AC1C  	MOV	_BatteryAmpsSet, W12
0xB06E	0x2F01AA  	MOV	#61466, W10
0xB070	0x2007FB  	MOV	#127, W11
0xB072	0x07B191  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7089 :: 		end;
0xB074	0x370000  	BRA	L__Battery_Settings2978
L__Battery_Settings2990:
L__Battery_Settings2978:
;GRR3000LManagementPanel.mpas,7094 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings2992:
0xB076	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB078	0x37FFFE  	BRA	L__Battery_Settings2992
;GRR3000LManagementPanel.mpas,7096 :: 		Chng[2] := 0;
0xB07A	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xB07C	0xEF2000  	CLR	W0
0xB07E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7097 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xB080	0x470060  	ADD	W14, #0, W0
0xB082	0xB3C01D  	MOV.B	#1, W13
0xB084	0xB3C02C  	MOV.B	#2, W12
0xB086	0xB3C24B  	MOV.B	#36, W11
0xB088	0x780500  	MOV	W0, W10
0xB08A	0x07D37F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7101 :: 		end;
L__Battery_Settings2971:
;GRR3000LManagementPanel.mpas,7106 :: 		end; // chng[2] while end
0xB08C	0x37FEF2  	BRA	L__Battery_Settings2914
L__Battery_Settings2915:
;GRR3000LManagementPanel.mpas,7109 :: 		end;
L__Battery_Settings2906:
;GRR3000LManagementPanel.mpas,7112 :: 		end;
0xB08E	0x370440  	BRA	L__Battery_Settings2792
L__Battery_Settings2904:
;GRR3000LManagementPanel.mpas,7114 :: 		3: begin // þarj modu
0xB090	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB092	0x784010  	MOV.B	[W0], W0
0xB094	0xE10463  	CP.B	W0, #3
0xB096	0x3A00AA  	BRA NZ	L__Battery_Settings2998
L__Battery_Settings5498:
;GRR3000LManagementPanel.mpas,7116 :: 		if (Ok_Button =0) then
0xB098	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB09A	0x3700A7  	BRA	L__Battery_Settings3000
;GRR3000LManagementPanel.mpas,7118 :: 		while (Ok_Button =0) do
L__Battery_Settings3003:
0xB09C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB09E	0x370002  	BRA	L__Battery_Settings3004
;GRR3000LManagementPanel.mpas,7120 :: 		asm ClrWDT; end;
0xB0A0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7121 :: 		end;
0xB0A2	0x37FFFC  	BRA	L__Battery_Settings3003
L__Battery_Settings3004:
;GRR3000LManagementPanel.mpas,7123 :: 		Chng[3] := 1;
0xB0A4	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xB0A6	0xB3C010  	MOV.B	#1, W0
0xB0A8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7125 :: 		While (Chng[3] =1) do
L__Battery_Settings3008:
0xB0AA	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0xB0AC	0x784010  	MOV.B	[W0], W0
0xB0AE	0xE10461  	CP.B	W0, #1
0xB0B0	0x3A009C  	BRA NZ	L__Battery_Settings3009
L__Battery_Settings5499:
;GRR3000LManagementPanel.mpas,7127 :: 		asm ClrWDT; end;
0xB0B2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7129 :: 		if (Up_Button =0) then
0xB0B4	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB0B6	0x37000F  	BRA	L__Battery_Settings3013
;GRR3000LManagementPanel.mpas,7131 :: 		while (Up_Button = 0) do
L__Battery_Settings3016:
0xB0B8	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB0BA	0x370002  	BRA	L__Battery_Settings3017
;GRR3000LManagementPanel.mpas,7133 :: 		asm ClrWDT; end;
0xB0BC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7134 :: 		end;
0xB0BE	0x37FFFC  	BRA	L__Battery_Settings3016
L__Battery_Settings3017:
;GRR3000LManagementPanel.mpas,7135 :: 		Inc(ChargeMode);
0xB0C0	0xB3C011  	MOV.B	#1, W1
0xB0C2	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB0C4	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7136 :: 		if (ChargeMode >4) then ChargeMode := 1;
0xB0C6	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB0C8	0x784010  	MOV.B	[W0], W0
0xB0CA	0xE10464  	CP.B	W0, #4
0xB0CC	0x360003  	BRA LEU	L__Battery_Settings3021
L__Battery_Settings5500:
0xB0CE	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0xB0D0	0xB3C010  	MOV.B	#1, W0
0xB0D2	0x784880  	MOV.B	W0, [W1]
L__Battery_Settings3021:
;GRR3000LManagementPanel.mpas,7137 :: 		end else
0xB0D4	0x370010  	BRA	L__Battery_Settings3014
L__Battery_Settings3013:
;GRR3000LManagementPanel.mpas,7138 :: 		if (Down_Button =0) then
0xB0D6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB0D8	0x37000E  	BRA	L__Battery_Settings3024
;GRR3000LManagementPanel.mpas,7140 :: 		while (Down_Button = 0) do
L__Battery_Settings3027:
0xB0DA	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB0DC	0x370002  	BRA	L__Battery_Settings3028
;GRR3000LManagementPanel.mpas,7142 :: 		asm ClrWDT; end;
0xB0DE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7143 :: 		end;
0xB0E0	0x37FFFC  	BRA	L__Battery_Settings3027
L__Battery_Settings3028:
;GRR3000LManagementPanel.mpas,7144 :: 		Dec(ChargeMode);
0xB0E2	0xB3C011  	MOV.B	#1, W1
0xB0E4	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB0E6	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7145 :: 		if (ChargeMode < 1) then ChargeMode := 4;
0xB0E8	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB0EA	0x784010  	MOV.B	[W0], W0
0xB0EC	0xE10461  	CP.B	W0, #1
0xB0EE	0x310003  	BRA GEU	L__Battery_Settings3032
L__Battery_Settings5501:
0xB0F0	0x211F91  	MOV	#lo_addr(_ChargeMode), W1
0xB0F2	0xB3C040  	MOV.B	#4, W0
0xB0F4	0x784880  	MOV.B	W0, [W1]
L__Battery_Settings3032:
;GRR3000LManagementPanel.mpas,7146 :: 		end;
L__Battery_Settings3024:
L__Battery_Settings3014:
;GRR3000LManagementPanel.mpas,7148 :: 		ChargeModeWrite(ChargeMode,0);
0xB0F6	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB0F8	0xEF2016  	CLR	W11
0xB0FA	0x784510  	MOV.B	[W0], W10
0xB0FC	0x07AB21  	RCALL	_ChargeModeWrite
;GRR3000LManagementPanel.mpas,7151 :: 		if (Ok_Button =0) then
0xB0FE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB100	0x370073  	BRA	L__Battery_Settings3035
;GRR3000LManagementPanel.mpas,7153 :: 		while (Ok_Button =0) do
L__Battery_Settings3038:
0xB102	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB104	0x370002  	BRA	L__Battery_Settings3039
;GRR3000LManagementPanel.mpas,7155 :: 		asm ClrWDT; end;
0xB106	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7156 :: 		end;
0xB108	0x37FFFC  	BRA	L__Battery_Settings3038
L__Battery_Settings3039:
;GRR3000LManagementPanel.mpas,7158 :: 		EEPROM_Write(EE_ChargeModeEeAddr, ChargeMode);
0xB10A	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB10C	0xFB8610  	ZE	[W0], W12
0xB10E	0x2F01CA  	MOV	#61468, W10
0xB110	0x2007FB  	MOV	#127, W11
0xB112	0x07B141  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7159 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3043:
0xB114	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB116	0x37FFFE  	BRA	L__Battery_Settings3043
;GRR3000LManagementPanel.mpas,7161 :: 		Chng[3] := 0;
0xB118	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xB11A	0xEF2000  	CLR	W0
0xB11C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7162 :: 		ChargeModeWrite(ChargeMode,black);
0xB11E	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB120	0xB3C01B  	MOV.B	#1, W11
0xB122	0x784510  	MOV.B	[W0], W10
0xB124	0x07AB0D  	RCALL	_ChargeModeWrite
;GRR3000LManagementPanel.mpas,7165 :: 		Boost : begin
0xB126	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB128	0x784010  	MOV.B	[W0], W0
0xB12A	0xE10461  	CP.B	W0, #1
0xB12C	0x3A0005  	BRA NZ	L__Battery_Settings3050
L__Battery_Settings5502:
;GRR3000LManagementPanel.mpas,7166 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsBoostEeAddr);
0xB12E	0x2F014A  	MOV	#61460, W10
0xB130	0x2007FB  	MOV	#127, W11
0xB132	0x07B996  	RCALL	_EEPROM_Read
0xB134	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,7168 :: 		end;
0xB136	0x37001B  	BRA	L__Battery_Settings3047
L__Battery_Settings3050:
;GRR3000LManagementPanel.mpas,7170 :: 		Float : begin
0xB138	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB13A	0x784010  	MOV.B	[W0], W0
0xB13C	0xE10462  	CP.B	W0, #2
0xB13E	0x3A0005  	BRA NZ	L__Battery_Settings3053
L__Battery_Settings5503:
;GRR3000LManagementPanel.mpas,7171 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsFloatEeAddr);
0xB140	0x2F016A  	MOV	#61462, W10
0xB142	0x2007FB  	MOV	#127, W11
0xB144	0x07B98D  	RCALL	_EEPROM_Read
0xB146	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,7173 :: 		end;
0xB148	0x370012  	BRA	L__Battery_Settings3047
L__Battery_Settings3053:
;GRR3000LManagementPanel.mpas,7175 :: 		TComp : begin
0xB14A	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB14C	0x784010  	MOV.B	[W0], W0
0xB14E	0xE10463  	CP.B	W0, #3
0xB150	0x3A0005  	BRA NZ	L__Battery_Settings3056
L__Battery_Settings5504:
;GRR3000LManagementPanel.mpas,7176 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsTCompEeAddr);
0xB152	0x2F018A  	MOV	#61464, W10
0xB154	0x2007FB  	MOV	#127, W11
0xB156	0x07B984  	RCALL	_EEPROM_Read
0xB158	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,7177 :: 		end;
0xB15A	0x370009  	BRA	L__Battery_Settings3047
L__Battery_Settings3056:
;GRR3000LManagementPanel.mpas,7179 :: 		Manuel: begin
0xB15C	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xB15E	0x784010  	MOV.B	[W0], W0
0xB160	0xE10464  	CP.B	W0, #4
0xB162	0x3A0005  	BRA NZ	L__Battery_Settings3059
L__Battery_Settings5505:
;GRR3000LManagementPanel.mpas,7180 :: 		BatteryAmpsSet := EEPROM_Read(EE_BatteryAmpsManuelEeAddr);
0xB164	0x2F01AA  	MOV	#61466, W10
0xB166	0x2007FB  	MOV	#127, W11
0xB168	0x07B97B  	RCALL	_EEPROM_Read
0xB16A	0x88AC10  	MOV	W0, _BatteryAmpsSet
;GRR3000LManagementPanel.mpas,7182 :: 		end;
0xB16C	0x370000  	BRA	L__Battery_Settings3047
L__Battery_Settings3059:
L__Battery_Settings3047:
;GRR3000LManagementPanel.mpas,7186 :: 		Temp_RealAku  := ((BatteryAmpsSet*10.0) / (BatteryAh*1.0));
0xB16E	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xB170	0xEB0080  	CLR	W1
0xB172	0x07F45B  	RCALL	__Long2Float
0xB174	0x200002  	MOV	#0, W2
0xB176	0x241203  	MOV	#16672, W3
0xB178	0x07F4B3  	RCALL	__Mul_FP
0xB17A	0x981710  	MOV	W0, [W14+34]
0xB17C	0x981721  	MOV	W1, [W14+36]
0xB17E	0x80AC60  	MOV	_BatteryAh, W0
0xB180	0xEB0080  	CLR	W1
0xB182	0x07F453  	RCALL	__Long2Float
0xB184	0x980F70  	MOV	W0, [W14+30]
0xB186	0x981701  	MOV	W1, [W14+32]
0xB188	0x90101E  	MOV	[W14+34], W0
0xB18A	0x9010AE  	MOV	[W14+36], W1
0xB18C	0xBE9F82  	PUSH.D	W2
0xB18E	0x90097E  	MOV	[W14+30], W2
0xB190	0x90118E  	MOV	[W14+32], W3
0xB192	0x07AB2B  	RCALL	__Div_FP
0xB194	0xBE014F  	POP.D	W2
0xB196	0x88B660  	MOV	W0, _Temp_RealAku
0xB198	0x88B671  	MOV	W1, _Temp_RealAku+2
;GRR3000LManagementPanel.mpas,7187 :: 		Temp_WordAku  := Temp_RealAku * 10.0;
0xB19A	0x200002  	MOV	#0, W2
0xB19C	0x241203  	MOV	#16672, W3
0xB19E	0x07F4A0  	RCALL	__Mul_FP
0xB1A0	0x07AC52  	RCALL	__Float2Longint
0xB1A2	0x88B650  	MOV	W0, _Temp_WordAku
;GRR3000LManagementPanel.mpas,7188 :: 		ValueDivide(Temp_WordAku, 128);
0xB1A4	0xB3C80B  	MOV.B	#128, W11
0xB1A6	0x780500  	MOV	W0, W10
0xB1A8	0x07ACC3  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7189 :: 		ValueDivide(BatteryAmpsSet, 255);
0xB1AA	0xB3CFFB  	MOV.B	#255, W11
0xB1AC	0x80AC1A  	MOV	_BatteryAmpsSet, W10
0xB1AE	0x07ACC0  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7190 :: 		AkuAkimText   := ValueText2 + '% - '+ Value_Text;
0xB1B0	0x470070  	ADD	W14, #16, W0
0xB1B2	0x212E41  	MOV	#lo_addr(_ValueText2), W1
0xB1B4	0x070B48  	RCALL	___CS2S
0xB1B6	0xB3C252  	MOV.B	#37, W2
0xB1B8	0x785802  	MOV.B	W2, [W0++]
0xB1BA	0xB3C202  	MOV.B	#32, W2
0xB1BC	0x785802  	MOV.B	W2, [W0++]
0xB1BE	0xB3C2D2  	MOV.B	#45, W2
0xB1C0	0x785802  	MOV.B	W2, [W0++]
0xB1C2	0xB3C202  	MOV.B	#32, W2
0xB1C4	0x785802  	MOV.B	W2, [W0++]
0xB1C6	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB1C8	0x070B3E  	RCALL	___CS2S
0xB1CA	0x780080  	MOV	W0, W1
0xB1CC	0xEF2000  	CLR	W0
0xB1CE	0x785880  	MOV.B	W0, [W1++]
0xB1D0	0x470060  	ADD	W14, #0, W0
0xB1D2	0x4700F0  	ADD	W14, #16, W1
0xB1D4	0x070B38  	RCALL	___CS2S
0xB1D6	0x780080  	MOV	W0, W1
0xB1D8	0xEF2000  	CLR	W0
0xB1DA	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7191 :: 		Glcd_Write_Text(AkuAkimText,36 , Row3, Black);
0xB1DC	0x470060  	ADD	W14, #0, W0
0xB1DE	0xB3C01D  	MOV.B	#1, W13
0xB1E0	0xB3C02C  	MOV.B	#2, W12
0xB1E2	0xB3C24B  	MOV.B	#36, W11
0xB1E4	0x780500  	MOV	W0, W10
0xB1E6	0x07D2D1  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7195 :: 		end;
L__Battery_Settings3035:
;GRR3000LManagementPanel.mpas,7200 :: 		end; // chng[3] while end
0xB1E8	0x37FF60  	BRA	L__Battery_Settings3008
L__Battery_Settings3009:
;GRR3000LManagementPanel.mpas,7203 :: 		end;
L__Battery_Settings3000:
;GRR3000LManagementPanel.mpas,7204 :: 		end;
0xB1EA	0x370392  	BRA	L__Battery_Settings2792
L__Battery_Settings2998:
;GRR3000LManagementPanel.mpas,7206 :: 		4: begin // hýzlý þarj gerilim
0xB1EC	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB1EE	0x784010  	MOV.B	[W0], W0
0xB1F0	0xE10464  	CP.B	W0, #4
0xB1F2	0x3A00B8  	BRA NZ	L__Battery_Settings3062
L__Battery_Settings5506:
;GRR3000LManagementPanel.mpas,7208 :: 		if (Ok_Button =0) then
0xB1F4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB1F6	0x3700B5  	BRA	L__Battery_Settings3064
;GRR3000LManagementPanel.mpas,7210 :: 		while (Ok_Button =0) do
L__Battery_Settings3067:
0xB1F8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB1FA	0x370002  	BRA	L__Battery_Settings3068
;GRR3000LManagementPanel.mpas,7212 :: 		asm ClrWDT; end;
0xB1FC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7213 :: 		end;
0xB1FE	0x37FFFC  	BRA	L__Battery_Settings3067
L__Battery_Settings3068:
;GRR3000LManagementPanel.mpas,7215 :: 		Chng[4] := 1;
0xB200	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xB202	0xB3C010  	MOV.B	#1, W0
0xB204	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7217 :: 		While (Chng[4] =1) do
L__Battery_Settings3072:
0xB206	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0xB208	0x784010  	MOV.B	[W0], W0
0xB20A	0xE10461  	CP.B	W0, #1
0xB20C	0x3A00AA  	BRA NZ	L__Battery_Settings3073
L__Battery_Settings5507:
;GRR3000LManagementPanel.mpas,7220 :: 		asm ClrWDT; end;
0xB20E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7222 :: 		if (Up_Button =0) then
0xB210	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB212	0x370041  	BRA	L__Battery_Settings3077
;GRR3000LManagementPanel.mpas,7224 :: 		ButonStop       := 0;
0xB214	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB216	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7225 :: 		BtCounterNormal := 0;
0xB218	0xEF2000  	CLR	W0
0xB21A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7226 :: 		while (ButonStop = 0) do
L__Battery_Settings3080:
0xB21C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB21E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB220	0x370002  	BRA	L__Battery_Settings3081
;GRR3000LManagementPanel.mpas,7228 :: 		asm ClrWDT; end;
0xB222	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7229 :: 		end;
0xB224	0x37FFFB  	BRA	L__Battery_Settings3080
L__Battery_Settings3081:
;GRR3000LManagementPanel.mpas,7230 :: 		Inc(BoostChargeVoltage);
0xB226	0x200011  	MOV	#1, W1
0xB228	0x215800  	MOV	#lo_addr(_BoostChargeVoltage), W0
0xB22A	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7231 :: 		if (BoostChargeVoltage > ((HucreSayisi*2)*(B_ChargePercentHi * 0.1))) then      // örneðin (24 eleman *2 yani 48V için) (%135 div 10 =13.5) 48*13,5=648 yani 64,8V
0xB22C	0x809FF0  	MOV	_HucreSayisi, W0
0xB22E	0xDD0041  	SL	W0, #1, W0
0xB230	0x980F70  	MOV	W0, [W14+30]
0xB232	0x8097A0  	MOV	_B_ChargePercentHi, W0
0xB234	0xEB0080  	CLR	W1
0xB236	0x07F3F9  	RCALL	__Long2Float
0xB238	0x2CCCD2  	MOV	#52429, W2
0xB23A	0x23DCC3  	MOV	#15820, W3
0xB23C	0x07F451  	RCALL	__Mul_FP
0xB23E	0x90097E  	MOV	[W14+30], W2
0xB240	0x980F70  	MOV	W0, [W14+30]
0xB242	0x981701  	MOV	W1, [W14+32]
0xB244	0x780002  	MOV	W2, W0
0xB246	0xEB0080  	CLR	W1
0xB248	0x07F3F0  	RCALL	__Long2Float
0xB24A	0x90097E  	MOV	[W14+30], W2
0xB24C	0x90118E  	MOV	[W14+32], W3
0xB24E	0x07F448  	RCALL	__Mul_FP
0xB250	0x980F70  	MOV	W0, [W14+30]
0xB252	0x981701  	MOV	W1, [W14+32]
0xB254	0x80AC00  	MOV	_BoostChargeVoltage, W0
0xB256	0xEB0080  	CLR	W1
0xB258	0x07F3E8  	RCALL	__Long2Float
0xB25A	0x90097E  	MOV	[W14+30], W2
0xB25C	0x90118E  	MOV	[W14+32], W3
0xB25E	0x070ADC  	RCALL	__Compare_Ge_Fp
0xB260	0xE00000  	CP0	W0
0xB262	0xEF2000  	CLR	W0
0xB264	0x340001  	BRA LE	L__Battery_Settings5508
0xB266	0xEEA000  	COM	W0
L__Battery_Settings5508:
0xB268	0xE20000  	CP0	W0
0xB26A	0x320014  	BRA Z	L__Battery_Settings3085
L__Battery_Settings5509:
;GRR3000LManagementPanel.mpas,7232 :: 		BoostChargeVoltage := ((HucreSayisi*2)*(B_ChargePercentHi * 0.1));
0xB26C	0x809FF0  	MOV	_HucreSayisi, W0
0xB26E	0xDD0041  	SL	W0, #1, W0
0xB270	0x980F70  	MOV	W0, [W14+30]
0xB272	0x8097A0  	MOV	_B_ChargePercentHi, W0
0xB274	0xEB0080  	CLR	W1
0xB276	0x07F3D9  	RCALL	__Long2Float
0xB278	0x2CCCD2  	MOV	#52429, W2
0xB27A	0x23DCC3  	MOV	#15820, W3
0xB27C	0x07F431  	RCALL	__Mul_FP
0xB27E	0x90097E  	MOV	[W14+30], W2
0xB280	0x980F70  	MOV	W0, [W14+30]
0xB282	0x981701  	MOV	W1, [W14+32]
0xB284	0x780002  	MOV	W2, W0
0xB286	0xEB0080  	CLR	W1
0xB288	0x07F3D0  	RCALL	__Long2Float
0xB28A	0x90097E  	MOV	[W14+30], W2
0xB28C	0x90118E  	MOV	[W14+32], W3
0xB28E	0x07F428  	RCALL	__Mul_FP
0xB290	0x07ABDA  	RCALL	__Float2Longint
0xB292	0x88AC00  	MOV	W0, _BoostChargeVoltage
L__Battery_Settings3085:
;GRR3000LManagementPanel.mpas,7233 :: 		end else
0xB294	0x370042  	BRA	L__Battery_Settings3078
L__Battery_Settings3077:
;GRR3000LManagementPanel.mpas,7234 :: 		if (Down_Button =0) then
0xB296	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB298	0x370040  	BRA	L__Battery_Settings3088
;GRR3000LManagementPanel.mpas,7236 :: 		ButonStop       := 0;
0xB29A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB29C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7237 :: 		BtCounterNormal := 0;
0xB29E	0xEF2000  	CLR	W0
0xB2A0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7238 :: 		while (ButonStop = 0) do
L__Battery_Settings3091:
0xB2A2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB2A4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB2A6	0x370002  	BRA	L__Battery_Settings3092
;GRR3000LManagementPanel.mpas,7240 :: 		asm ClrWDT; end;
0xB2A8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7241 :: 		end;
0xB2AA	0x37FFFB  	BRA	L__Battery_Settings3091
L__Battery_Settings3092:
;GRR3000LManagementPanel.mpas,7242 :: 		Dec(BoostChargeVoltage);
0xB2AC	0x200011  	MOV	#1, W1
0xB2AE	0x215800  	MOV	#lo_addr(_BoostChargeVoltage), W0
0xB2B0	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7243 :: 		if (BoostChargeVoltage < ((HucreSayisi*2)*(B_ChargePercentLo * 0.1))) then      // örneðin (24 eleman *2 yani 48V için) (%115 div 10 =11.5) 48*11,5=552 yani 55,2V
0xB2B2	0x809FF0  	MOV	_HucreSayisi, W0
0xB2B4	0xDD0041  	SL	W0, #1, W0
0xB2B6	0x980F70  	MOV	W0, [W14+30]
0xB2B8	0x809750  	MOV	_B_ChargePercentLo, W0
0xB2BA	0xEB0080  	CLR	W1
0xB2BC	0x07F3B6  	RCALL	__Long2Float
0xB2BE	0x2CCCD2  	MOV	#52429, W2
0xB2C0	0x23DCC3  	MOV	#15820, W3
0xB2C2	0x07F40E  	RCALL	__Mul_FP
0xB2C4	0x90097E  	MOV	[W14+30], W2
0xB2C6	0x980F70  	MOV	W0, [W14+30]
0xB2C8	0x981701  	MOV	W1, [W14+32]
0xB2CA	0x780002  	MOV	W2, W0
0xB2CC	0xEB0080  	CLR	W1
0xB2CE	0x07F3AD  	RCALL	__Long2Float
0xB2D0	0x90097E  	MOV	[W14+30], W2
0xB2D2	0x90118E  	MOV	[W14+32], W3
0xB2D4	0x07F405  	RCALL	__Mul_FP
0xB2D6	0x980F70  	MOV	W0, [W14+30]
0xB2D8	0x981701  	MOV	W1, [W14+32]
0xB2DA	0x80AC00  	MOV	_BoostChargeVoltage, W0
0xB2DC	0xEB0080  	CLR	W1
0xB2DE	0x07F3A5  	RCALL	__Long2Float
0xB2E0	0x90097E  	MOV	[W14+30], W2
0xB2E2	0x90118E  	MOV	[W14+32], W3
0xB2E4	0x070A9E  	RCALL	__Compare_Le_Fp
0xB2E6	0xE00000  	CP0	W0
0xB2E8	0xEF2000  	CLR	W0
0xB2EA	0x3D0001  	BRA GE	L__Battery_Settings5510
0xB2EC	0xEEA000  	COM	W0
L__Battery_Settings5510:
0xB2EE	0xE20000  	CP0	W0
0xB2F0	0x320014  	BRA Z	L__Battery_Settings3096
L__Battery_Settings5511:
;GRR3000LManagementPanel.mpas,7244 :: 		BoostChargeVoltage := ((HucreSayisi*2)*(B_ChargePercentLo * 0.1));
0xB2F2	0x809FF0  	MOV	_HucreSayisi, W0
0xB2F4	0xDD0041  	SL	W0, #1, W0
0xB2F6	0x980F70  	MOV	W0, [W14+30]
0xB2F8	0x809750  	MOV	_B_ChargePercentLo, W0
0xB2FA	0xEB0080  	CLR	W1
0xB2FC	0x07F396  	RCALL	__Long2Float
0xB2FE	0x2CCCD2  	MOV	#52429, W2
0xB300	0x23DCC3  	MOV	#15820, W3
0xB302	0x07F3EE  	RCALL	__Mul_FP
0xB304	0x90097E  	MOV	[W14+30], W2
0xB306	0x980F70  	MOV	W0, [W14+30]
0xB308	0x981701  	MOV	W1, [W14+32]
0xB30A	0x780002  	MOV	W2, W0
0xB30C	0xEB0080  	CLR	W1
0xB30E	0x07F38D  	RCALL	__Long2Float
0xB310	0x90097E  	MOV	[W14+30], W2
0xB312	0x90118E  	MOV	[W14+32], W3
0xB314	0x07F3E5  	RCALL	__Mul_FP
0xB316	0x07AB97  	RCALL	__Float2Longint
0xB318	0x88AC00  	MOV	W0, _BoostChargeVoltage
L__Battery_Settings3096:
;GRR3000LManagementPanel.mpas,7245 :: 		end;
L__Battery_Settings3088:
L__Battery_Settings3078:
;GRR3000LManagementPanel.mpas,7247 :: 		ValueDivide(BoostChargeVoltage, 255);
0xB31A	0xB3CFFB  	MOV.B	#255, W11
0xB31C	0x80AC0A  	MOV	_BoostChargeVoltage, W10
0xB31E	0x07AC08  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7248 :: 		WriteText := Value_Text + 'V';
0xB320	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB322	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB324	0x070A90  	RCALL	___CS2S
0xB326	0xB3C562  	MOV.B	#86, W2
0xB328	0x785802  	MOV.B	W2, [W0++]
0xB32A	0xEF2004  	CLR	W2
0xB32C	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,7249 :: 		Glcd_Write_Text(WriteText,84 , Row5, 0);
0xB32E	0xEF201A  	CLR	W13
0xB330	0xB3C04C  	MOV.B	#4, W12
0xB332	0xB3C54B  	MOV.B	#84, W11
0xB334	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB336	0x07D229  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7251 :: 		if (Ok_Button =0) then
0xB338	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB33A	0x370012  	BRA	L__Battery_Settings3099
;GRR3000LManagementPanel.mpas,7253 :: 		while (Ok_Button =0) do
L__Battery_Settings3102:
0xB33C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB33E	0x370002  	BRA	L__Battery_Settings3103
;GRR3000LManagementPanel.mpas,7255 :: 		asm ClrWDT; end;
0xB340	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7256 :: 		end;
0xB342	0x37FFFC  	BRA	L__Battery_Settings3102
L__Battery_Settings3103:
;GRR3000LManagementPanel.mpas,7258 :: 		EEPROM_Write(EE_BoostChargeVoltEeAddr, BoostChargeVoltage);
0xB344	0x80AC0C  	MOV	_BoostChargeVoltage, W12
0xB346	0x2F01EA  	MOV	#61470, W10
0xB348	0x2007FB  	MOV	#127, W11
0xB34A	0x07B025  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7259 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3107:
0xB34C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB34E	0x37FFFE  	BRA	L__Battery_Settings3107
;GRR3000LManagementPanel.mpas,7261 :: 		Chng[4] := 0;
0xB350	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xB352	0xEF2000  	CLR	W0
0xB354	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7262 :: 		Glcd_Write_Text(WriteText,84 , Row5, Black);
0xB356	0xB3C01D  	MOV.B	#1, W13
0xB358	0xB3C04C  	MOV.B	#4, W12
0xB35A	0xB3C54B  	MOV.B	#84, W11
0xB35C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB35E	0x07D215  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7265 :: 		end;
L__Battery_Settings3099:
;GRR3000LManagementPanel.mpas,7268 :: 		end; // chng[4] while end
0xB360	0x37FF52  	BRA	L__Battery_Settings3072
L__Battery_Settings3073:
;GRR3000LManagementPanel.mpas,7271 :: 		end;
L__Battery_Settings3064:
;GRR3000LManagementPanel.mpas,7272 :: 		end;
0xB362	0x3702D6  	BRA	L__Battery_Settings2792
L__Battery_Settings3062:
;GRR3000LManagementPanel.mpas,7274 :: 		5: begin // normal þarj gerilim
0xB364	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB366	0x784010  	MOV.B	[W0], W0
0xB368	0xE10465  	CP.B	W0, #5
0xB36A	0x3A00B8  	BRA NZ	L__Battery_Settings3113
L__Battery_Settings5512:
;GRR3000LManagementPanel.mpas,7276 :: 		if (Ok_Button =0) then
0xB36C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB36E	0x3700B5  	BRA	L__Battery_Settings3115
;GRR3000LManagementPanel.mpas,7278 :: 		while (Ok_Button =0) do
L__Battery_Settings3118:
0xB370	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB372	0x370002  	BRA	L__Battery_Settings3119
;GRR3000LManagementPanel.mpas,7280 :: 		asm ClrWDT; end;
0xB374	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7281 :: 		end;
0xB376	0x37FFFC  	BRA	L__Battery_Settings3118
L__Battery_Settings3119:
;GRR3000LManagementPanel.mpas,7283 :: 		Chng[5] := 1;
0xB378	0x212501  	MOV	#lo_addr(_Chng+4), W1
0xB37A	0xB3C010  	MOV.B	#1, W0
0xB37C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7285 :: 		While (Chng[5] =1) do
L__Battery_Settings3123:
0xB37E	0x212500  	MOV	#lo_addr(_Chng+4), W0
0xB380	0x784010  	MOV.B	[W0], W0
0xB382	0xE10461  	CP.B	W0, #1
0xB384	0x3A00AA  	BRA NZ	L__Battery_Settings3124
L__Battery_Settings5513:
;GRR3000LManagementPanel.mpas,7288 :: 		asm ClrWDT; end;
0xB386	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7290 :: 		if (Up_Button =0) then
0xB388	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB38A	0x370041  	BRA	L__Battery_Settings3128
;GRR3000LManagementPanel.mpas,7292 :: 		ButonStop       := 0;
0xB38C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB38E	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7293 :: 		BtCounterNormal := 0;
0xB390	0xEF2000  	CLR	W0
0xB392	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7294 :: 		while (ButonStop = 0) do
L__Battery_Settings3131:
0xB394	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB396	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB398	0x370002  	BRA	L__Battery_Settings3132
;GRR3000LManagementPanel.mpas,7296 :: 		asm ClrWDT; end;
0xB39A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7297 :: 		end;
0xB39C	0x37FFFB  	BRA	L__Battery_Settings3131
L__Battery_Settings3132:
;GRR3000LManagementPanel.mpas,7298 :: 		Inc(FloatChargeVoltage);
0xB39E	0x200011  	MOV	#1, W1
0xB3A0	0x215840  	MOV	#lo_addr(_FloatChargeVoltage), W0
0xB3A2	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7299 :: 		if (FloatChargeVoltage > ((HucreSayisi*2)*(F_ChargePercentHi * 0.1))) then      // örneðin (24 eleman *2 yani 48V için) (%135 div 10 =13.5) 48*13,5=648 yani 64,8V
0xB3A4	0x809FF0  	MOV	_HucreSayisi, W0
0xB3A6	0xDD0041  	SL	W0, #1, W0
0xB3A8	0x980F70  	MOV	W0, [W14+30]
0xB3AA	0x809710  	MOV	_F_ChargePercentHi, W0
0xB3AC	0xEB0080  	CLR	W1
0xB3AE	0x07F33D  	RCALL	__Long2Float
0xB3B0	0x2CCCD2  	MOV	#52429, W2
0xB3B2	0x23DCC3  	MOV	#15820, W3
0xB3B4	0x07F395  	RCALL	__Mul_FP
0xB3B6	0x90097E  	MOV	[W14+30], W2
0xB3B8	0x980F70  	MOV	W0, [W14+30]
0xB3BA	0x981701  	MOV	W1, [W14+32]
0xB3BC	0x780002  	MOV	W2, W0
0xB3BE	0xEB0080  	CLR	W1
0xB3C0	0x07F334  	RCALL	__Long2Float
0xB3C2	0x90097E  	MOV	[W14+30], W2
0xB3C4	0x90118E  	MOV	[W14+32], W3
0xB3C6	0x07F38C  	RCALL	__Mul_FP
0xB3C8	0x980F70  	MOV	W0, [W14+30]
0xB3CA	0x981701  	MOV	W1, [W14+32]
0xB3CC	0x80AC20  	MOV	_FloatChargeVoltage, W0
0xB3CE	0xEB0080  	CLR	W1
0xB3D0	0x07F32C  	RCALL	__Long2Float
0xB3D2	0x90097E  	MOV	[W14+30], W2
0xB3D4	0x90118E  	MOV	[W14+32], W3
0xB3D6	0x070A20  	RCALL	__Compare_Ge_Fp
0xB3D8	0xE00000  	CP0	W0
0xB3DA	0xEF2000  	CLR	W0
0xB3DC	0x340001  	BRA LE	L__Battery_Settings5514
0xB3DE	0xEEA000  	COM	W0
L__Battery_Settings5514:
0xB3E0	0xE20000  	CP0	W0
0xB3E2	0x320014  	BRA Z	L__Battery_Settings3136
L__Battery_Settings5515:
;GRR3000LManagementPanel.mpas,7300 :: 		FloatChargeVoltage := ((HucreSayisi*2)*(F_ChargePercentHi * 0.1));
0xB3E4	0x809FF0  	MOV	_HucreSayisi, W0
0xB3E6	0xDD0041  	SL	W0, #1, W0
0xB3E8	0x980F70  	MOV	W0, [W14+30]
0xB3EA	0x809710  	MOV	_F_ChargePercentHi, W0
0xB3EC	0xEB0080  	CLR	W1
0xB3EE	0x07F31D  	RCALL	__Long2Float
0xB3F0	0x2CCCD2  	MOV	#52429, W2
0xB3F2	0x23DCC3  	MOV	#15820, W3
0xB3F4	0x07F375  	RCALL	__Mul_FP
0xB3F6	0x90097E  	MOV	[W14+30], W2
0xB3F8	0x980F70  	MOV	W0, [W14+30]
0xB3FA	0x981701  	MOV	W1, [W14+32]
0xB3FC	0x780002  	MOV	W2, W0
0xB3FE	0xEB0080  	CLR	W1
0xB400	0x07F314  	RCALL	__Long2Float
0xB402	0x90097E  	MOV	[W14+30], W2
0xB404	0x90118E  	MOV	[W14+32], W3
0xB406	0x07F36C  	RCALL	__Mul_FP
0xB408	0x07AB1E  	RCALL	__Float2Longint
0xB40A	0x88AC20  	MOV	W0, _FloatChargeVoltage
L__Battery_Settings3136:
;GRR3000LManagementPanel.mpas,7301 :: 		end else
0xB40C	0x370042  	BRA	L__Battery_Settings3129
L__Battery_Settings3128:
;GRR3000LManagementPanel.mpas,7302 :: 		if (Down_Button =0) then
0xB40E	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB410	0x370040  	BRA	L__Battery_Settings3139
;GRR3000LManagementPanel.mpas,7304 :: 		ButonStop       := 0;
0xB412	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB414	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7305 :: 		BtCounterNormal := 0;
0xB416	0xEF2000  	CLR	W0
0xB418	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7306 :: 		while (ButonStop = 0) do
L__Battery_Settings3142:
0xB41A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB41C	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB41E	0x370002  	BRA	L__Battery_Settings3143
;GRR3000LManagementPanel.mpas,7308 :: 		asm ClrWDT; end;
0xB420	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7309 :: 		end;
0xB422	0x37FFFB  	BRA	L__Battery_Settings3142
L__Battery_Settings3143:
;GRR3000LManagementPanel.mpas,7310 :: 		Dec(FloatChargeVoltage);
0xB424	0x200011  	MOV	#1, W1
0xB426	0x215840  	MOV	#lo_addr(_FloatChargeVoltage), W0
0xB428	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7311 :: 		if (FloatChargeVoltage < ((HucreSayisi*2)*(F_ChargePercentLo * 0.1))) then      // örneðin (24 eleman *2 yani 48V için) (%115 div 10 =11.5) 48*11,5=552 yani 55,2V
0xB42A	0x809FF0  	MOV	_HucreSayisi, W0
0xB42C	0xDD0041  	SL	W0, #1, W0
0xB42E	0x980F70  	MOV	W0, [W14+30]
0xB430	0x809990  	MOV	_F_ChargePercentLo, W0
0xB432	0xEB0080  	CLR	W1
0xB434	0x07F2FA  	RCALL	__Long2Float
0xB436	0x2CCCD2  	MOV	#52429, W2
0xB438	0x23DCC3  	MOV	#15820, W3
0xB43A	0x07F352  	RCALL	__Mul_FP
0xB43C	0x90097E  	MOV	[W14+30], W2
0xB43E	0x980F70  	MOV	W0, [W14+30]
0xB440	0x981701  	MOV	W1, [W14+32]
0xB442	0x780002  	MOV	W2, W0
0xB444	0xEB0080  	CLR	W1
0xB446	0x07F2F1  	RCALL	__Long2Float
0xB448	0x90097E  	MOV	[W14+30], W2
0xB44A	0x90118E  	MOV	[W14+32], W3
0xB44C	0x07F349  	RCALL	__Mul_FP
0xB44E	0x980F70  	MOV	W0, [W14+30]
0xB450	0x981701  	MOV	W1, [W14+32]
0xB452	0x80AC20  	MOV	_FloatChargeVoltage, W0
0xB454	0xEB0080  	CLR	W1
0xB456	0x07F2E9  	RCALL	__Long2Float
0xB458	0x90097E  	MOV	[W14+30], W2
0xB45A	0x90118E  	MOV	[W14+32], W3
0xB45C	0x0709E2  	RCALL	__Compare_Le_Fp
0xB45E	0xE00000  	CP0	W0
0xB460	0xEF2000  	CLR	W0
0xB462	0x3D0001  	BRA GE	L__Battery_Settings5516
0xB464	0xEEA000  	COM	W0
L__Battery_Settings5516:
0xB466	0xE20000  	CP0	W0
0xB468	0x320014  	BRA Z	L__Battery_Settings3147
L__Battery_Settings5517:
;GRR3000LManagementPanel.mpas,7312 :: 		FloatChargeVoltage := ((HucreSayisi*2)*(F_ChargePercentLo * 0.1));
0xB46A	0x809FF0  	MOV	_HucreSayisi, W0
0xB46C	0xDD0041  	SL	W0, #1, W0
0xB46E	0x980F70  	MOV	W0, [W14+30]
0xB470	0x809990  	MOV	_F_ChargePercentLo, W0
0xB472	0xEB0080  	CLR	W1
0xB474	0x07F2DA  	RCALL	__Long2Float
0xB476	0x2CCCD2  	MOV	#52429, W2
0xB478	0x23DCC3  	MOV	#15820, W3
0xB47A	0x07F332  	RCALL	__Mul_FP
0xB47C	0x90097E  	MOV	[W14+30], W2
0xB47E	0x980F70  	MOV	W0, [W14+30]
0xB480	0x981701  	MOV	W1, [W14+32]
0xB482	0x780002  	MOV	W2, W0
0xB484	0xEB0080  	CLR	W1
0xB486	0x07F2D1  	RCALL	__Long2Float
0xB488	0x90097E  	MOV	[W14+30], W2
0xB48A	0x90118E  	MOV	[W14+32], W3
0xB48C	0x07F329  	RCALL	__Mul_FP
0xB48E	0x07AADB  	RCALL	__Float2Longint
0xB490	0x88AC20  	MOV	W0, _FloatChargeVoltage
L__Battery_Settings3147:
;GRR3000LManagementPanel.mpas,7313 :: 		end;
L__Battery_Settings3139:
L__Battery_Settings3129:
;GRR3000LManagementPanel.mpas,7315 :: 		ValueDivide(FloatChargeVoltage, 255);
0xB492	0xB3CFFB  	MOV.B	#255, W11
0xB494	0x80AC2A  	MOV	_FloatChargeVoltage, W10
0xB496	0x07AB4C  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7316 :: 		WriteText := Value_Text + 'V';
0xB498	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB49A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB49C	0x0709D4  	RCALL	___CS2S
0xB49E	0xB3C562  	MOV.B	#86, W2
0xB4A0	0x785802  	MOV.B	W2, [W0++]
0xB4A2	0xEF2004  	CLR	W2
0xB4A4	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,7317 :: 		Glcd_Write_Text(WriteText,84 , Row6, 0);
0xB4A6	0xEF201A  	CLR	W13
0xB4A8	0xB3C05C  	MOV.B	#5, W12
0xB4AA	0xB3C54B  	MOV.B	#84, W11
0xB4AC	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB4AE	0x07D16D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7319 :: 		if (Ok_Button =0) then
0xB4B0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB4B2	0x370012  	BRA	L__Battery_Settings3150
;GRR3000LManagementPanel.mpas,7321 :: 		while (Ok_Button =0) do
L__Battery_Settings3153:
0xB4B4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB4B6	0x370002  	BRA	L__Battery_Settings3154
;GRR3000LManagementPanel.mpas,7323 :: 		asm ClrWDT; end;
0xB4B8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7324 :: 		end;
0xB4BA	0x37FFFC  	BRA	L__Battery_Settings3153
L__Battery_Settings3154:
;GRR3000LManagementPanel.mpas,7326 :: 		EEPROM_Write(EE_FloatChargeVoltEeAddr, FloatChargeVoltage);
0xB4BC	0x80AC2C  	MOV	_FloatChargeVoltage, W12
0xB4BE	0x2F020A  	MOV	#61472, W10
0xB4C0	0x2007FB  	MOV	#127, W11
0xB4C2	0x07AF69  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7327 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3158:
0xB4C4	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB4C6	0x37FFFE  	BRA	L__Battery_Settings3158
;GRR3000LManagementPanel.mpas,7329 :: 		Chng[5] := 0;
0xB4C8	0x212501  	MOV	#lo_addr(_Chng+4), W1
0xB4CA	0xEF2000  	CLR	W0
0xB4CC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7330 :: 		Glcd_Write_Text(WriteText,84 , Row6, Black);
0xB4CE	0xB3C01D  	MOV.B	#1, W13
0xB4D0	0xB3C05C  	MOV.B	#5, W12
0xB4D2	0xB3C54B  	MOV.B	#84, W11
0xB4D4	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB4D6	0x07D159  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7333 :: 		end;
L__Battery_Settings3150:
;GRR3000LManagementPanel.mpas,7337 :: 		end; // chng[5] while end
0xB4D8	0x37FF52  	BRA	L__Battery_Settings3123
L__Battery_Settings3124:
;GRR3000LManagementPanel.mpas,7340 :: 		end;
L__Battery_Settings3115:
;GRR3000LManagementPanel.mpas,7341 :: 		end;
0xB4DA	0x37021A  	BRA	L__Battery_Settings2792
L__Battery_Settings3113:
;GRR3000LManagementPanel.mpas,7343 :: 		6: begin // hýzlý þarj süresi
0xB4DC	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB4DE	0x784010  	MOV.B	[W0], W0
0xB4E0	0xE10466  	CP.B	W0, #6
0xB4E2	0x3A0060  	BRA NZ	L__Battery_Settings3164
L__Battery_Settings5518:
;GRR3000LManagementPanel.mpas,7345 :: 		if (Ok_Button =0) then
0xB4E4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB4E6	0x37005D  	BRA	L__Battery_Settings3166
;GRR3000LManagementPanel.mpas,7347 :: 		while (Ok_Button =0) do
L__Battery_Settings3169:
0xB4E8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB4EA	0x370002  	BRA	L__Battery_Settings3170
;GRR3000LManagementPanel.mpas,7349 :: 		asm ClrWDT; end;
0xB4EC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7350 :: 		end;
0xB4EE	0x37FFFC  	BRA	L__Battery_Settings3169
L__Battery_Settings3170:
;GRR3000LManagementPanel.mpas,7352 :: 		Chng[6] := 1;
0xB4F0	0x212511  	MOV	#lo_addr(_Chng+5), W1
0xB4F2	0xB3C010  	MOV.B	#1, W0
0xB4F4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7354 :: 		While (Chng[6] =1) do
L__Battery_Settings3174:
0xB4F6	0x212510  	MOV	#lo_addr(_Chng+5), W0
0xB4F8	0x784010  	MOV.B	[W0], W0
0xB4FA	0xE10461  	CP.B	W0, #1
0xB4FC	0x3A0052  	BRA NZ	L__Battery_Settings3175
L__Battery_Settings5519:
;GRR3000LManagementPanel.mpas,7356 :: 		asm ClrWDT; end;
0xB4FE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7358 :: 		if (Up_Button =0) then
0xB500	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB502	0x370013  	BRA	L__Battery_Settings3179
;GRR3000LManagementPanel.mpas,7360 :: 		ButonStop       := 0;
0xB504	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB506	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7361 :: 		BtCounterNormal := 0;
0xB508	0xEF2000  	CLR	W0
0xB50A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7362 :: 		while (ButonStop = 0) do
L__Battery_Settings3182:
0xB50C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB50E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB510	0x370002  	BRA	L__Battery_Settings3183
;GRR3000LManagementPanel.mpas,7364 :: 		asm ClrWDT; end;
0xB512	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7365 :: 		end;
0xB514	0x37FFFB  	BRA	L__Battery_Settings3182
L__Battery_Settings3183:
;GRR3000LManagementPanel.mpas,7366 :: 		Inc(BoostChargeTimeSet);
0xB516	0x200011  	MOV	#1, W1
0xB518	0x2158A0  	MOV	#lo_addr(_BoostChargeTimeSet), W0
0xB51A	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7367 :: 		if (BoostChargeTimeSet > 4320) then      // 4320dk 72s
0xB51C	0x80AC51  	MOV	_BoostChargeTimeSet, W1
0xB51E	0x210E00  	MOV	#4320, W0
0xB520	0xE10800  	CP	W1, W0
0xB522	0x360002  	BRA LEU	L__Battery_Settings3187
L__Battery_Settings5520:
;GRR3000LManagementPanel.mpas,7368 :: 		BoostChargeTimeSet := 4320;
0xB524	0x210E00  	MOV	#4320, W0
0xB526	0x88AC50  	MOV	W0, _BoostChargeTimeSet
L__Battery_Settings3187:
;GRR3000LManagementPanel.mpas,7369 :: 		end else
0xB528	0x370013  	BRA	L__Battery_Settings3180
L__Battery_Settings3179:
;GRR3000LManagementPanel.mpas,7370 :: 		if (Down_Button =0) then
0xB52A	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB52C	0x370011  	BRA	L__Battery_Settings3190
;GRR3000LManagementPanel.mpas,7372 :: 		ButonStop       := 0;
0xB52E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB530	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7373 :: 		BtCounterNormal := 0;
0xB532	0xEF2000  	CLR	W0
0xB534	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7374 :: 		while (ButonStop = 0) do
L__Battery_Settings3193:
0xB536	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB538	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB53A	0x370002  	BRA	L__Battery_Settings3194
;GRR3000LManagementPanel.mpas,7376 :: 		asm ClrWDT; end;
0xB53C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7377 :: 		end;
0xB53E	0x37FFFB  	BRA	L__Battery_Settings3193
L__Battery_Settings3194:
;GRR3000LManagementPanel.mpas,7378 :: 		Dec(BoostChargeTimeSet);
0xB540	0x200011  	MOV	#1, W1
0xB542	0x2158A0  	MOV	#lo_addr(_BoostChargeTimeSet), W0
0xB544	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7379 :: 		if (BoostChargeTimeSet < 1) then      // 1dk
0xB546	0x80AC50  	MOV	_BoostChargeTimeSet, W0
0xB548	0xE10061  	CP	W0, #1
0xB54A	0x310002  	BRA GEU	L__Battery_Settings3198
L__Battery_Settings5521:
;GRR3000LManagementPanel.mpas,7380 :: 		BoostChargeTimeSet := 1;
0xB54C	0x200010  	MOV	#1, W0
0xB54E	0x88AC50  	MOV	W0, _BoostChargeTimeSet
L__Battery_Settings3198:
;GRR3000LManagementPanel.mpas,7381 :: 		end;
L__Battery_Settings3190:
L__Battery_Settings3180:
;GRR3000LManagementPanel.mpas,7383 :: 		ValueDivide(BoostChargeTimeSet, 0);
0xB550	0xEF2016  	CLR	W11
0xB552	0x80AC5A  	MOV	_BoostChargeTimeSet, W10
0xB554	0x07AAED  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7384 :: 		WriteText := Value_Text + MinuteText;
0xB556	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB558	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB55A	0x070975  	RCALL	___CS2S
0xB55C	0x216731  	MOV	#lo_addr(_MinuteText), W1
0xB55E	0x070973  	RCALL	___CS2S
0xB560	0x780080  	MOV	W0, W1
0xB562	0xEF2000  	CLR	W0
0xB564	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7385 :: 		Glcd_Write_Text(WriteText,84 , Row7, 0);
0xB566	0xEF201A  	CLR	W13
0xB568	0xB3C06C  	MOV.B	#6, W12
0xB56A	0xB3C54B  	MOV.B	#84, W11
0xB56C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB56E	0x07D10D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7387 :: 		if (Ok_Button =0) then
0xB570	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB572	0x370016  	BRA	L__Battery_Settings3201
;GRR3000LManagementPanel.mpas,7389 :: 		while (Ok_Button =0) do
L__Battery_Settings3204:
0xB574	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB576	0x370002  	BRA	L__Battery_Settings3205
;GRR3000LManagementPanel.mpas,7391 :: 		asm ClrWDT; end;
0xB578	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7392 :: 		end;
0xB57A	0x37FFFC  	BRA	L__Battery_Settings3204
L__Battery_Settings3205:
;GRR3000LManagementPanel.mpas,7394 :: 		EEPROM_Write(EE_BoostChargeTimeEeAddr, BoostChargeTimeSet);
0xB57C	0x80AC5C  	MOV	_BoostChargeTimeSet, W12
0xB57E	0x2F022A  	MOV	#61474, W10
0xB580	0x2007FB  	MOV	#127, W11
0xB582	0x07AF09  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7395 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3209:
0xB584	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB586	0x37FFFE  	BRA	L__Battery_Settings3209
;GRR3000LManagementPanel.mpas,7397 :: 		Chng[6] := 0;
0xB588	0x212511  	MOV	#lo_addr(_Chng+5), W1
0xB58A	0xEF2000  	CLR	W0
0xB58C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7398 :: 		Glcd_Write_Text(WriteText,84 , Row7, Black);
0xB58E	0xB3C01D  	MOV.B	#1, W13
0xB590	0xB3C06C  	MOV.B	#6, W12
0xB592	0xB3C54B  	MOV.B	#84, W11
0xB594	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB596	0x07D0F9  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7400 :: 		BoostChargeTime := BoostChargeTimeSet;
0xB598	0x80AC50  	MOV	_BoostChargeTimeSet, W0
0xB59A	0xEB0080  	CLR	W1
0xB59C	0x88AC30  	MOV	W0, _BoostChargeTime
0xB59E	0x88AC41  	MOV	W1, _BoostChargeTime+2
;GRR3000LManagementPanel.mpas,7404 :: 		end;
L__Battery_Settings3201:
;GRR3000LManagementPanel.mpas,7409 :: 		end; // chng[6] while end
0xB5A0	0x37FFAA  	BRA	L__Battery_Settings3174
L__Battery_Settings3175:
;GRR3000LManagementPanel.mpas,7412 :: 		end;
L__Battery_Settings3166:
;GRR3000LManagementPanel.mpas,7413 :: 		end;
0xB5A2	0x3701B6  	BRA	L__Battery_Settings2792
L__Battery_Settings3164:
;GRR3000LManagementPanel.mpas,7415 :: 		7: begin // deþarj gerilimi
0xB5A4	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB5A6	0x784010  	MOV.B	[W0], W0
0xB5A8	0xE10467  	CP.B	W0, #7
0xB5AA	0x3A0076  	BRA NZ	L__Battery_Settings3215
L__Battery_Settings5522:
;GRR3000LManagementPanel.mpas,7417 :: 		if (Ok_Button =0) then
0xB5AC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB5AE	0x370073  	BRA	L__Battery_Settings3217
;GRR3000LManagementPanel.mpas,7419 :: 		while (Ok_Button =0) do
L__Battery_Settings3220:
0xB5B0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB5B2	0x370002  	BRA	L__Battery_Settings3221
;GRR3000LManagementPanel.mpas,7421 :: 		asm ClrWDT; end;
0xB5B4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7422 :: 		end;
0xB5B6	0x37FFFC  	BRA	L__Battery_Settings3220
L__Battery_Settings3221:
;GRR3000LManagementPanel.mpas,7424 :: 		Chng[7] := 1;
0xB5B8	0x212521  	MOV	#lo_addr(_Chng+6), W1
0xB5BA	0xB3C010  	MOV.B	#1, W0
0xB5BC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7426 :: 		While (Chng[7] =1) do
L__Battery_Settings3225:
0xB5BE	0x212520  	MOV	#lo_addr(_Chng+6), W0
0xB5C0	0x784010  	MOV.B	[W0], W0
0xB5C2	0xE10461  	CP.B	W0, #1
0xB5C4	0x3A0068  	BRA NZ	L__Battery_Settings3226
L__Battery_Settings5523:
;GRR3000LManagementPanel.mpas,7428 :: 		asm ClrWDT; end;
0xB5C6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7430 :: 		if (Up_Button =0) then
0xB5C8	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB5CA	0x370017  	BRA	L__Battery_Settings3230
;GRR3000LManagementPanel.mpas,7432 :: 		ButonStop       := 0;
0xB5CC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB5CE	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7433 :: 		BtCounterNormal := 0;
0xB5D0	0xEF2000  	CLR	W0
0xB5D2	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7434 :: 		while (ButonStop = 0) do
L__Battery_Settings3233:
0xB5D4	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB5D6	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB5D8	0x370002  	BRA	L__Battery_Settings3234
;GRR3000LManagementPanel.mpas,7436 :: 		asm ClrWDT; end;
0xB5DA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7437 :: 		end;
0xB5DC	0x37FFFB  	BRA	L__Battery_Settings3233
L__Battery_Settings3234:
;GRR3000LManagementPanel.mpas,7438 :: 		Inc(DeepDischargeVolt);
0xB5DE	0x200011  	MOV	#1, W1
0xB5E0	0x215920  	MOV	#lo_addr(_DeepDischargeVolt), W0
0xB5E2	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7439 :: 		if (DeepDischargeVolt > (HucreSayisi*20)) then      //
0xB5E4	0x809FF1  	MOV	_HucreSayisi, W1
0xB5E6	0x200140  	MOV	#20, W0
0xB5E8	0xB80900  	MUL.UU	W1, W0, W2
0xB5EA	0x215920  	MOV	#lo_addr(_DeepDischargeVolt), W0
0xB5EC	0xE11010  	CP	W2, [W0]
0xB5EE	0x310004  	BRA GEU	L__Battery_Settings3238
L__Battery_Settings5524:
;GRR3000LManagementPanel.mpas,7440 :: 		DeepDischargeVolt := (HucreSayisi*20);
0xB5F0	0x809FF1  	MOV	_HucreSayisi, W1
0xB5F2	0x200140  	MOV	#20, W0
0xB5F4	0xB80800  	MUL.UU	W1, W0, W0
0xB5F6	0x88AC90  	MOV	W0, _DeepDischargeVolt
L__Battery_Settings3238:
;GRR3000LManagementPanel.mpas,7441 :: 		end else
0xB5F8	0x37002A  	BRA	L__Battery_Settings3231
L__Battery_Settings3230:
;GRR3000LManagementPanel.mpas,7442 :: 		if (Down_Button =0) then
0xB5FA	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB5FC	0x370028  	BRA	L__Battery_Settings3241
;GRR3000LManagementPanel.mpas,7444 :: 		ButonStop       := 0;
0xB5FE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB600	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7445 :: 		BtCounterNormal := 0;
0xB602	0xEF2000  	CLR	W0
0xB604	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7446 :: 		while (ButonStop = 0) do
L__Battery_Settings3244:
0xB606	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB608	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB60A	0x370002  	BRA	L__Battery_Settings3245
;GRR3000LManagementPanel.mpas,7448 :: 		asm ClrWDT; end;
0xB60C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7449 :: 		end;
0xB60E	0x37FFFB  	BRA	L__Battery_Settings3244
L__Battery_Settings3245:
;GRR3000LManagementPanel.mpas,7450 :: 		Dec(DeepDischargeVolt);
0xB610	0x200011  	MOV	#1, W1
0xB612	0x215920  	MOV	#lo_addr(_DeepDischargeVolt), W0
0xB614	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7451 :: 		if (DeepDischargeVolt < (HucreSayisi*17.5)) then
0xB616	0x809FF0  	MOV	_HucreSayisi, W0
0xB618	0xEB0080  	CLR	W1
0xB61A	0x07F207  	RCALL	__Long2Float
0xB61C	0x200002  	MOV	#0, W2
0xB61E	0x2418C3  	MOV	#16780, W3
0xB620	0x07F25F  	RCALL	__Mul_FP
0xB622	0x980F70  	MOV	W0, [W14+30]
0xB624	0x981701  	MOV	W1, [W14+32]
0xB626	0x80AC90  	MOV	_DeepDischargeVolt, W0
0xB628	0xEB0080  	CLR	W1
0xB62A	0x07F1FF  	RCALL	__Long2Float
0xB62C	0x90097E  	MOV	[W14+30], W2
0xB62E	0x90118E  	MOV	[W14+32], W3
0xB630	0x0708F8  	RCALL	__Compare_Le_Fp
0xB632	0xE00000  	CP0	W0
0xB634	0xEF2000  	CLR	W0
0xB636	0x3D0001  	BRA GE	L__Battery_Settings5525
0xB638	0xEEA000  	COM	W0
L__Battery_Settings5525:
0xB63A	0xE20000  	CP0	W0
0xB63C	0x320008  	BRA Z	L__Battery_Settings3249
L__Battery_Settings5526:
;GRR3000LManagementPanel.mpas,7452 :: 		DeepDischargeVolt := (HucreSayisi*17.5);
0xB63E	0x809FF0  	MOV	_HucreSayisi, W0
0xB640	0xEB0080  	CLR	W1
0xB642	0x07F1F3  	RCALL	__Long2Float
0xB644	0x200002  	MOV	#0, W2
0xB646	0x2418C3  	MOV	#16780, W3
0xB648	0x07F24B  	RCALL	__Mul_FP
0xB64A	0x07A9FD  	RCALL	__Float2Longint
0xB64C	0x88AC90  	MOV	W0, _DeepDischargeVolt
L__Battery_Settings3249:
;GRR3000LManagementPanel.mpas,7453 :: 		end;
L__Battery_Settings3241:
L__Battery_Settings3231:
;GRR3000LManagementPanel.mpas,7455 :: 		ValueDivide(DeepDischargeVolt, 255);
0xB64E	0xB3CFFB  	MOV.B	#255, W11
0xB650	0x80AC9A  	MOV	_DeepDischargeVolt, W10
0xB652	0x07AA6E  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7456 :: 		WriteText := Value_Text + 'V';
0xB654	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB656	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB658	0x0708F6  	RCALL	___CS2S
0xB65A	0xB3C562  	MOV.B	#86, W2
0xB65C	0x785802  	MOV.B	W2, [W0++]
0xB65E	0xEF2004  	CLR	W2
0xB660	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,7457 :: 		Glcd_Write_Text(WriteText,84 , Row8, 0);
0xB662	0xEF201A  	CLR	W13
0xB664	0xB3C07C  	MOV.B	#7, W12
0xB666	0xB3C54B  	MOV.B	#84, W11
0xB668	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB66A	0x07D08F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7459 :: 		if (Ok_Button =0) then
0xB66C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB66E	0x370012  	BRA	L__Battery_Settings3252
;GRR3000LManagementPanel.mpas,7461 :: 		while (Ok_Button =0) do
L__Battery_Settings3255:
0xB670	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB672	0x370002  	BRA	L__Battery_Settings3256
;GRR3000LManagementPanel.mpas,7463 :: 		asm ClrWDT; end;
0xB674	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7464 :: 		end;
0xB676	0x37FFFC  	BRA	L__Battery_Settings3255
L__Battery_Settings3256:
;GRR3000LManagementPanel.mpas,7466 :: 		EEPROM_Write(EE_DeepDischargeVoltEeAddr, DeepDischargeVolt);
0xB678	0x80AC9C  	MOV	_DeepDischargeVolt, W12
0xB67A	0x2F024A  	MOV	#61476, W10
0xB67C	0x2007FB  	MOV	#127, W11
0xB67E	0x07AE8B  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7467 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3260:
0xB680	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB682	0x37FFFE  	BRA	L__Battery_Settings3260
;GRR3000LManagementPanel.mpas,7469 :: 		Chng[7] := 0;
0xB684	0x212521  	MOV	#lo_addr(_Chng+6), W1
0xB686	0xEF2000  	CLR	W0
0xB688	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7470 :: 		Glcd_Write_Text(WriteText,84 , Row8, Black);
0xB68A	0xB3C01D  	MOV.B	#1, W13
0xB68C	0xB3C07C  	MOV.B	#7, W12
0xB68E	0xB3C54B  	MOV.B	#84, W11
0xB690	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB692	0x07D07B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7474 :: 		end;
L__Battery_Settings3252:
;GRR3000LManagementPanel.mpas,7479 :: 		end; // chng[7] while end
0xB694	0x37FF94  	BRA	L__Battery_Settings3225
L__Battery_Settings3226:
;GRR3000LManagementPanel.mpas,7482 :: 		end;
L__Battery_Settings3217:
;GRR3000LManagementPanel.mpas,7483 :: 		end;
0xB696	0x37013C  	BRA	L__Battery_Settings2792
L__Battery_Settings3215:
;GRR3000LManagementPanel.mpas,7485 :: 		8: begin // auto BF mode
0xB698	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB69A	0x784010  	MOV.B	[W0], W0
0xB69C	0xE10468  	CP.B	W0, #8
0xB69E	0x3A0067  	BRA NZ	L__Battery_Settings3266
L__Battery_Settings5527:
;GRR3000LManagementPanel.mpas,7487 :: 		if (Ok_Button =0) then
0xB6A0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB6A2	0x370064  	BRA	L__Battery_Settings3268
;GRR3000LManagementPanel.mpas,7489 :: 		while (Ok_Button =0) do
L__Battery_Settings3271:
0xB6A4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB6A6	0x370002  	BRA	L__Battery_Settings3272
;GRR3000LManagementPanel.mpas,7491 :: 		asm ClrWDT; end;
0xB6A8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7492 :: 		end;
0xB6AA	0x37FFFC  	BRA	L__Battery_Settings3271
L__Battery_Settings3272:
;GRR3000LManagementPanel.mpas,7494 :: 		Chng[8] := 1;
0xB6AC	0x212531  	MOV	#lo_addr(_Chng+7), W1
0xB6AE	0xB3C010  	MOV.B	#1, W0
0xB6B0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7496 :: 		While (Chng[8] =1) do
L__Battery_Settings3276:
0xB6B2	0x212530  	MOV	#lo_addr(_Chng+7), W0
0xB6B4	0x784010  	MOV.B	[W0], W0
0xB6B6	0xE10461  	CP.B	W0, #1
0xB6B8	0x3A0059  	BRA NZ	L__Battery_Settings3277
L__Battery_Settings5528:
;GRR3000LManagementPanel.mpas,7498 :: 		asm ClrWDT; end;
0xB6BA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7500 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0xB6BC	0xA90008  	BCLR	W4, #0
0xB6BE	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xB6C0	0xA80008  	BSET	W4, #0
0xB6C2	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xB6C4	0xA80042  	BSET	SR, #0
0xB6C6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB6C8	0xA90042  	BCLR	SR, #0
0xB6CA	0xAE0008  	BTSS	W4, #0
0xB6CC	0xAF0042  	BTSC	SR, #0
0xB6CE	0x370002  	BRA	L__Battery_Settings5529
0xB6D0	0xA90008  	BCLR	W4, #0
0xB6D2	0x370001  	BRA	L__Battery_Settings5532
L__Battery_Settings5529:
0xB6D4	0xA80008  	BSET	W4, #0
L__Battery_Settings5532:
0xB6D6	0xAE0008  	BTSS	W4, #0
0xB6D8	0x370014  	BRA	L__Battery_Settings3281
;GRR3000LManagementPanel.mpas,7503 :: 		while ((Up_Button =0)or(Down_Button =0)) do
L__Battery_Settings3284:
0xB6DA	0xA90008  	BCLR	W4, #0
0xB6DC	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xB6DE	0xA80008  	BSET	W4, #0
0xB6E0	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xB6E2	0xA80042  	BSET	SR, #0
0xB6E4	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB6E6	0xA90042  	BCLR	SR, #0
0xB6E8	0xAE0008  	BTSS	W4, #0
0xB6EA	0xAF0042  	BTSC	SR, #0
0xB6EC	0x370002  	BRA	L__Battery_Settings5533
0xB6EE	0xA90008  	BCLR	W4, #0
0xB6F0	0x370001  	BRA	L__Battery_Settings5536
L__Battery_Settings5533:
0xB6F2	0xA80008  	BSET	W4, #0
L__Battery_Settings5536:
0xB6F4	0xAE0008  	BTSS	W4, #0
0xB6F6	0x370002  	BRA	L__Battery_Settings3285
;GRR3000LManagementPanel.mpas,7505 :: 		asm ClrWDT; end;
0xB6F8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7506 :: 		end;
0xB6FA	0x37FFEF  	BRA	L__Battery_Settings3284
L__Battery_Settings3285:
;GRR3000LManagementPanel.mpas,7508 :: 		AutoBFMode := not AutoBFMode;
0xB6FC	0x215961  	MOV	#lo_addr(_AutoBFMode), W1
0xB6FE	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB700	0xA20010  	BTG	[W0], BitPos(_AutoBFMode+0)
;GRR3000LManagementPanel.mpas,7509 :: 		end;
L__Battery_Settings3281:
;GRR3000LManagementPanel.mpas,7511 :: 		if (AutoBFMode =0) then Glcd_Write_Text(DisableText, 84, Row2, 0) else
0xB702	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB704	0xA70010  	BTSC	[W0], BitPos(_AutoBFMode+0)
0xB706	0x370006  	BRA	L__Battery_Settings3289
0xB708	0xEF201A  	CLR	W13
0xB70A	0xB3C01C  	MOV.B	#1, W12
0xB70C	0xB3C54B  	MOV.B	#84, W11
0xB70E	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xB710	0x07D03C  	RCALL	_Glcd_Write_Text
0xB712	0x370008  	BRA	L__Battery_Settings3290
L__Battery_Settings3289:
;GRR3000LManagementPanel.mpas,7512 :: 		if (AutoBFMode =1) then Glcd_Write_Text(EnableText, 84, Row2, 0);
0xB714	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB716	0xA60010  	BTSS	[W0], BitPos(_AutoBFMode+0)
0xB718	0x370005  	BRA	L__Battery_Settings3292
0xB71A	0xEF201A  	CLR	W13
0xB71C	0xB3C01C  	MOV.B	#1, W12
0xB71E	0xB3C54B  	MOV.B	#84, W11
0xB720	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xB722	0x07D033  	RCALL	_Glcd_Write_Text
L__Battery_Settings3292:
L__Battery_Settings3290:
;GRR3000LManagementPanel.mpas,7514 :: 		if (Ok_Button =0) then
0xB724	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB726	0x370021  	BRA	L__Battery_Settings3295
;GRR3000LManagementPanel.mpas,7516 :: 		while (Ok_Button =0) do
L__Battery_Settings3298:
0xB728	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB72A	0x370002  	BRA	L__Battery_Settings3299
;GRR3000LManagementPanel.mpas,7518 :: 		asm ClrWDT; end;
0xB72C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7519 :: 		end;
0xB72E	0x37FFFC  	BRA	L__Battery_Settings3298
L__Battery_Settings3299:
;GRR3000LManagementPanel.mpas,7521 :: 		EEPROM_Write(EE_AutoBFModeEeAddr, AutoBFMode);
0xB730	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB732	0xEF2018  	CLR	W12
0xB734	0xA70010  	BTSC	[W0], BitPos(_AutoBFMode+0)
0xB736	0xEC2018  	INC	W12
0xB738	0x2F026A  	MOV	#61478, W10
0xB73A	0x2007FB  	MOV	#127, W11
0xB73C	0x07AE2C  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7522 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3303:
0xB73E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB740	0x37FFFE  	BRA	L__Battery_Settings3303
;GRR3000LManagementPanel.mpas,7524 :: 		Chng[8] := 0;
0xB742	0x212531  	MOV	#lo_addr(_Chng+7), W1
0xB744	0xEF2000  	CLR	W0
0xB746	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7525 :: 		if (AutoBFMode =0) then Glcd_Write_Text(DisableText, 84, Row2, Black) else
0xB748	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB74A	0xA70010  	BTSC	[W0], BitPos(_AutoBFMode+0)
0xB74C	0x370006  	BRA	L__Battery_Settings3308
0xB74E	0xB3C01D  	MOV.B	#1, W13
0xB750	0xB3C01C  	MOV.B	#1, W12
0xB752	0xB3C54B  	MOV.B	#84, W11
0xB754	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xB756	0x07D019  	RCALL	_Glcd_Write_Text
0xB758	0x370008  	BRA	L__Battery_Settings3309
L__Battery_Settings3308:
;GRR3000LManagementPanel.mpas,7526 :: 		if (AutoBFMode =1) then Glcd_Write_Text(EnableText, 84, Row2, Black);
0xB75A	0x215960  	MOV	#lo_addr(_AutoBFMode), W0
0xB75C	0xA60010  	BTSS	[W0], BitPos(_AutoBFMode+0)
0xB75E	0x370005  	BRA	L__Battery_Settings3311
0xB760	0xB3C01D  	MOV.B	#1, W13
0xB762	0xB3C01C  	MOV.B	#1, W12
0xB764	0xB3C54B  	MOV.B	#84, W11
0xB766	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xB768	0x07D010  	RCALL	_Glcd_Write_Text
L__Battery_Settings3311:
L__Battery_Settings3309:
;GRR3000LManagementPanel.mpas,7530 :: 		end;
L__Battery_Settings3295:
;GRR3000LManagementPanel.mpas,7534 :: 		end; // chng[8] while end
0xB76A	0x37FFA3  	BRA	L__Battery_Settings3276
L__Battery_Settings3277:
;GRR3000LManagementPanel.mpas,7537 :: 		end;
L__Battery_Settings3268:
;GRR3000LManagementPanel.mpas,7538 :: 		end;
0xB76C	0x3700D1  	BRA	L__Battery_Settings2792
L__Battery_Settings3266:
;GRR3000LManagementPanel.mpas,7540 :: 		9: begin // hýzlý þarj limit
0xB76E	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB770	0x784010  	MOV.B	[W0], W0
0xB772	0xE10469  	CP.B	W0, #9
0xB774	0x3A0060  	BRA NZ	L__Battery_Settings3315
L__Battery_Settings5537:
;GRR3000LManagementPanel.mpas,7542 :: 		if (Ok_Button =0) then
0xB776	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB778	0x37005D  	BRA	L__Battery_Settings3317
;GRR3000LManagementPanel.mpas,7544 :: 		while (Ok_Button =0) do
L__Battery_Settings3320:
0xB77A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB77C	0x370002  	BRA	L__Battery_Settings3321
;GRR3000LManagementPanel.mpas,7546 :: 		asm ClrWDT; end;
0xB77E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7547 :: 		end;
0xB780	0x37FFFC  	BRA	L__Battery_Settings3320
L__Battery_Settings3321:
;GRR3000LManagementPanel.mpas,7549 :: 		Chng[9] := 1;
0xB782	0x212541  	MOV	#lo_addr(_Chng+8), W1
0xB784	0xB3C010  	MOV.B	#1, W0
0xB786	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7551 :: 		While (Chng[9] =1) do
L__Battery_Settings3325:
0xB788	0x212540  	MOV	#lo_addr(_Chng+8), W0
0xB78A	0x784010  	MOV.B	[W0], W0
0xB78C	0xE10461  	CP.B	W0, #1
0xB78E	0x3A0052  	BRA NZ	L__Battery_Settings3326
L__Battery_Settings5538:
;GRR3000LManagementPanel.mpas,7553 :: 		asm ClrWDT; end;
0xB790	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7555 :: 		if (Up_Button =0) then
0xB792	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB794	0x370015  	BRA	L__Battery_Settings3330
;GRR3000LManagementPanel.mpas,7557 :: 		ButonStop       := 0;
0xB796	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB798	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7558 :: 		BtCounterNormal := 0;
0xB79A	0xEF2000  	CLR	W0
0xB79C	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7559 :: 		while (ButonStop = 0) do
L__Battery_Settings3333:
0xB79E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB7A0	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB7A2	0x370002  	BRA	L__Battery_Settings3334
;GRR3000LManagementPanel.mpas,7561 :: 		asm ClrWDT; end;
0xB7A4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7562 :: 		end;
0xB7A6	0x37FFFB  	BRA	L__Battery_Settings3333
L__Battery_Settings3334:
;GRR3000LManagementPanel.mpas,7563 :: 		Inc(BoostChargeLimit);
0xB7A8	0x200011  	MOV	#1, W1
0xB7AA	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xB7AC	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7564 :: 		if (BoostChargeLimit > (BatteryAh * 2)) then BoostChargeLimit := (BatteryAh *2); // 0.2C ile
0xB7AE	0x80AC60  	MOV	_BatteryAh, W0
0xB7B0	0xDD00C1  	SL	W0, #1, W1
0xB7B2	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xB7B4	0xE10810  	CP	W1, [W0]
0xB7B6	0x310003  	BRA GEU	L__Battery_Settings3338
L__Battery_Settings5539:
0xB7B8	0x80AC60  	MOV	_BatteryAh, W0
0xB7BA	0xDD0041  	SL	W0, #1, W0
0xB7BC	0x88AC80  	MOV	W0, _BoostChargeLimit
L__Battery_Settings3338:
;GRR3000LManagementPanel.mpas,7566 :: 		end else
0xB7BE	0x370016  	BRA	L__Battery_Settings3331
L__Battery_Settings3330:
;GRR3000LManagementPanel.mpas,7567 :: 		if (Down_Button =0) then
0xB7C0	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB7C2	0x370014  	BRA	L__Battery_Settings3341
;GRR3000LManagementPanel.mpas,7569 :: 		ButonStop       := 0;
0xB7C4	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB7C6	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7570 :: 		BtCounterNormal := 0;
0xB7C8	0xEF2000  	CLR	W0
0xB7CA	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7571 :: 		while (ButonStop = 0) do
L__Battery_Settings3344:
0xB7CC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB7CE	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB7D0	0x370002  	BRA	L__Battery_Settings3345
;GRR3000LManagementPanel.mpas,7573 :: 		asm ClrWDT; end;
0xB7D2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7574 :: 		end;
0xB7D4	0x37FFFB  	BRA	L__Battery_Settings3344
L__Battery_Settings3345:
;GRR3000LManagementPanel.mpas,7575 :: 		Dec(BoostChargeLimit);
0xB7D6	0x200011  	MOV	#1, W1
0xB7D8	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xB7DA	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7576 :: 		if (BoostChargeLimit < (BatteryAh + 1)) then BoostChargeLimit := (BatteryAh + 1);
0xB7DC	0x80AC60  	MOV	_BatteryAh, W0
0xB7DE	0x4000E1  	ADD	W0, #1, W1
0xB7E0	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xB7E2	0xE10810  	CP	W1, [W0]
0xB7E4	0x360003  	BRA LEU	L__Battery_Settings3349
L__Battery_Settings5540:
0xB7E6	0x80AC61  	MOV	_BatteryAh, W1
0xB7E8	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xB7EA	0x408861  	ADD	W1, #1, [W0]
L__Battery_Settings3349:
;GRR3000LManagementPanel.mpas,7577 :: 		end;
L__Battery_Settings3341:
L__Battery_Settings3331:
;GRR3000LManagementPanel.mpas,7579 :: 		ValueDivide(BoostChargeLimit, 255);
0xB7EC	0xB3CFFB  	MOV.B	#255, W11
0xB7EE	0x80AC8A  	MOV	_BoostChargeLimit, W10
0xB7F0	0x07A99F  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7580 :: 		WriteText := Value_Text + 'A';
0xB7F2	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB7F4	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB7F6	0x070827  	RCALL	___CS2S
0xB7F8	0xB3C412  	MOV.B	#65, W2
0xB7FA	0x785802  	MOV.B	W2, [W0++]
0xB7FC	0xEF2004  	CLR	W2
0xB7FE	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,7581 :: 		Glcd_Write_Text(WriteText,84 , Row3, 0);
0xB800	0xEF201A  	CLR	W13
0xB802	0xB3C02C  	MOV.B	#2, W12
0xB804	0xB3C54B  	MOV.B	#84, W11
0xB806	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB808	0x07CFC0  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7584 :: 		if (Ok_Button =0) then
0xB80A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB80C	0x370012  	BRA	L__Battery_Settings3352
;GRR3000LManagementPanel.mpas,7586 :: 		while (Ok_Button =0) do
L__Battery_Settings3355:
0xB80E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB810	0x370002  	BRA	L__Battery_Settings3356
;GRR3000LManagementPanel.mpas,7588 :: 		asm ClrWDT; end;
0xB812	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7589 :: 		end;
0xB814	0x37FFFC  	BRA	L__Battery_Settings3355
L__Battery_Settings3356:
;GRR3000LManagementPanel.mpas,7592 :: 		EEPROM_Write(EE_BoostChargeLimitEeAddr, BoostChargeLimit);
0xB816	0x80AC8C  	MOV	_BoostChargeLimit, W12
0xB818	0x2F028A  	MOV	#61480, W10
0xB81A	0x2007FB  	MOV	#127, W11
0xB81C	0x07ADBC  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7593 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3360:
0xB81E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB820	0x37FFFE  	BRA	L__Battery_Settings3360
;GRR3000LManagementPanel.mpas,7595 :: 		Chng[9] := 0;
0xB822	0x212541  	MOV	#lo_addr(_Chng+8), W1
0xB824	0xEF2000  	CLR	W0
0xB826	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7596 :: 		Glcd_Write_Text(WriteText,84 , Row3, Black);
0xB828	0xB3C01D  	MOV.B	#1, W13
0xB82A	0xB3C02C  	MOV.B	#2, W12
0xB82C	0xB3C54B  	MOV.B	#84, W11
0xB82E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB830	0x07CFAC  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7599 :: 		end;
L__Battery_Settings3352:
;GRR3000LManagementPanel.mpas,7604 :: 		end; // chng[9] while end
0xB832	0x37FFAA  	BRA	L__Battery_Settings3325
L__Battery_Settings3326:
;GRR3000LManagementPanel.mpas,7607 :: 		end;
L__Battery_Settings3317:
;GRR3000LManagementPanel.mpas,7608 :: 		end;
0xB834	0x37006D  	BRA	L__Battery_Settings2792
L__Battery_Settings3315:
;GRR3000LManagementPanel.mpas,7610 :: 		10: begin // normal þarj limit
0xB836	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB838	0x784010  	MOV.B	[W0], W0
0xB83A	0xE1046A  	CP.B	W0, #10
0xB83C	0x3A005B  	BRA NZ	L__Battery_Settings3366
L__Battery_Settings5541:
;GRR3000LManagementPanel.mpas,7612 :: 		if (Ok_Button =0) then
0xB83E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB840	0x370058  	BRA	L__Battery_Settings3368
;GRR3000LManagementPanel.mpas,7614 :: 		while (Ok_Button =0) do
L__Battery_Settings3371:
0xB842	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB844	0x370002  	BRA	L__Battery_Settings3372
;GRR3000LManagementPanel.mpas,7616 :: 		asm ClrWDT; end;
0xB846	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7617 :: 		end;
0xB848	0x37FFFC  	BRA	L__Battery_Settings3371
L__Battery_Settings3372:
;GRR3000LManagementPanel.mpas,7619 :: 		Chng[10] := 1;
0xB84A	0x212551  	MOV	#lo_addr(_Chng+9), W1
0xB84C	0xB3C010  	MOV.B	#1, W0
0xB84E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7621 :: 		While (Chng[10] =1) do
L__Battery_Settings3376:
0xB850	0x212550  	MOV	#lo_addr(_Chng+9), W0
0xB852	0x784010  	MOV.B	[W0], W0
0xB854	0xE10461  	CP.B	W0, #1
0xB856	0x3A004D  	BRA NZ	L__Battery_Settings3377
L__Battery_Settings5542:
;GRR3000LManagementPanel.mpas,7623 :: 		asm ClrWDT; end;
0xB858	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7625 :: 		if (Up_Button =0) then
0xB85A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xB85C	0x370013  	BRA	L__Battery_Settings3381
;GRR3000LManagementPanel.mpas,7627 :: 		ButonStop       := 0;
0xB85E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB860	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7628 :: 		BtCounterNormal := 0;
0xB862	0xEF2000  	CLR	W0
0xB864	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7629 :: 		while (ButonStop = 0) do
L__Battery_Settings3384:
0xB866	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB868	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB86A	0x370002  	BRA	L__Battery_Settings3385
;GRR3000LManagementPanel.mpas,7631 :: 		asm ClrWDT; end;
0xB86C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7632 :: 		end;
0xB86E	0x37FFFB  	BRA	L__Battery_Settings3384
L__Battery_Settings3385:
;GRR3000LManagementPanel.mpas,7633 :: 		Inc(FloatChargeLimit);
0xB870	0x200011  	MOV	#1, W1
0xB872	0x215940  	MOV	#lo_addr(_FloatChargeLimit), W0
0xB874	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7634 :: 		if (FloatChargeLimit > (BatteryAh)) then FloatChargeLimit := (BatteryAh); // 0.1C ile
0xB876	0x80ACA1  	MOV	_FloatChargeLimit, W1
0xB878	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xB87A	0xE10810  	CP	W1, [W0]
0xB87C	0x360002  	BRA LEU	L__Battery_Settings3389
L__Battery_Settings5543:
0xB87E	0x80AC60  	MOV	_BatteryAh, W0
0xB880	0x88ACA0  	MOV	W0, _FloatChargeLimit
L__Battery_Settings3389:
;GRR3000LManagementPanel.mpas,7636 :: 		end else
0xB882	0x370013  	BRA	L__Battery_Settings3382
L__Battery_Settings3381:
;GRR3000LManagementPanel.mpas,7637 :: 		if (Down_Button =0) then
0xB884	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xB886	0x370011  	BRA	L__Battery_Settings3392
;GRR3000LManagementPanel.mpas,7639 :: 		ButonStop       := 0;
0xB888	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB88A	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,7640 :: 		BtCounterNormal := 0;
0xB88C	0xEF2000  	CLR	W0
0xB88E	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,7641 :: 		while (ButonStop = 0) do
L__Battery_Settings3395:
0xB890	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xB892	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xB894	0x370002  	BRA	L__Battery_Settings3396
;GRR3000LManagementPanel.mpas,7643 :: 		asm ClrWDT; end;
0xB896	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7644 :: 		end;
0xB898	0x37FFFB  	BRA	L__Battery_Settings3395
L__Battery_Settings3396:
;GRR3000LManagementPanel.mpas,7645 :: 		Dec(FloatChargeLimit);
0xB89A	0x200011  	MOV	#1, W1
0xB89C	0x215940  	MOV	#lo_addr(_FloatChargeLimit), W0
0xB89E	0x108810  	SUBR	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7646 :: 		if (FloatChargeLimit < 1) then FloatChargeLimit := 1;
0xB8A0	0x80ACA0  	MOV	_FloatChargeLimit, W0
0xB8A2	0xE10061  	CP	W0, #1
0xB8A4	0x310002  	BRA GEU	L__Battery_Settings3400
L__Battery_Settings5544:
0xB8A6	0x200010  	MOV	#1, W0
0xB8A8	0x88ACA0  	MOV	W0, _FloatChargeLimit
L__Battery_Settings3400:
;GRR3000LManagementPanel.mpas,7647 :: 		end;
L__Battery_Settings3392:
L__Battery_Settings3382:
;GRR3000LManagementPanel.mpas,7649 :: 		ValueDivide(FloatChargeLimit, 255);
0xB8AA	0xB3CFFB  	MOV.B	#255, W11
0xB8AC	0x80ACAA  	MOV	_FloatChargeLimit, W10
0xB8AE	0x07A940  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,7650 :: 		WriteText := Value_Text + 'A';
0xB8B0	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0xB8B2	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0xB8B4	0x0707C8  	RCALL	___CS2S
0xB8B6	0xB3C412  	MOV.B	#65, W2
0xB8B8	0x785802  	MOV.B	W2, [W0++]
0xB8BA	0xEF2004  	CLR	W2
0xB8BC	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,7651 :: 		Glcd_Write_Text(WriteText,84 , Row4, 0);
0xB8BE	0xEF201A  	CLR	W13
0xB8C0	0xB3C03C  	MOV.B	#3, W12
0xB8C2	0xB3C54B  	MOV.B	#84, W11
0xB8C4	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB8C6	0x07CF61  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7654 :: 		if (Ok_Button =0) then
0xB8C8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB8CA	0x370012  	BRA	L__Battery_Settings3403
;GRR3000LManagementPanel.mpas,7656 :: 		while (Ok_Button =0) do
L__Battery_Settings3406:
0xB8CC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB8CE	0x370002  	BRA	L__Battery_Settings3407
;GRR3000LManagementPanel.mpas,7658 :: 		asm ClrWDT; end;
0xB8D0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7659 :: 		end;
0xB8D2	0x37FFFC  	BRA	L__Battery_Settings3406
L__Battery_Settings3407:
;GRR3000LManagementPanel.mpas,7662 :: 		EEPROM_Write(EE_FloatChargeLimitEeAddr, FloatChargeLimit);
0xB8D4	0x80ACAC  	MOV	_FloatChargeLimit, W12
0xB8D6	0x2F02AA  	MOV	#61482, W10
0xB8D8	0x2007FB  	MOV	#127, W11
0xB8DA	0x07AD5D  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7663 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3411:
0xB8DC	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB8DE	0x37FFFE  	BRA	L__Battery_Settings3411
;GRR3000LManagementPanel.mpas,7665 :: 		Chng[10] := 0;
0xB8E0	0x212551  	MOV	#lo_addr(_Chng+9), W1
0xB8E2	0xEF2000  	CLR	W0
0xB8E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7666 :: 		Glcd_Write_Text(WriteText,84 , Row4, Black);
0xB8E6	0xB3C01D  	MOV.B	#1, W13
0xB8E8	0xB3C03C  	MOV.B	#3, W12
0xB8EA	0xB3C54B  	MOV.B	#84, W11
0xB8EC	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0xB8EE	0x07CF4D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7669 :: 		end;
L__Battery_Settings3403:
;GRR3000LManagementPanel.mpas,7674 :: 		end; // chng[10] while end
0xB8F0	0x37FFAF  	BRA	L__Battery_Settings3376
L__Battery_Settings3377:
;GRR3000LManagementPanel.mpas,7677 :: 		end;
L__Battery_Settings3368:
;GRR3000LManagementPanel.mpas,7678 :: 		end;
0xB8F2	0x37000E  	BRA	L__Battery_Settings2792
L__Battery_Settings3366:
;GRR3000LManagementPanel.mpas,7680 :: 		11: begin // geri
0xB8F4	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0xB8F6	0x784010  	MOV.B	[W0], W0
0xB8F8	0xE1046B  	CP.B	W0, #11
0xB8FA	0x3A000A  	BRA NZ	L__Battery_Settings3417
L__Battery_Settings5545:
;GRR3000LManagementPanel.mpas,7682 :: 		if (Ok_Button =0) then
0xB8FC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB8FE	0x370007  	BRA	L__Battery_Settings3419
;GRR3000LManagementPanel.mpas,7684 :: 		while (Ok_Button =0) do
L__Battery_Settings3422:
0xB900	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xB902	0x370002  	BRA	L__Battery_Settings3423
;GRR3000LManagementPanel.mpas,7686 :: 		asm ClrWDT; end;
0xB904	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7687 :: 		end;
0xB906	0x37FFFC  	BRA	L__Battery_Settings3422
L__Battery_Settings3423:
;GRR3000LManagementPanel.mpas,7688 :: 		MenuExit := 1;
0xB908	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xB90A	0xB3C010  	MOV.B	#1, W0
0xB90C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7690 :: 		end;
L__Battery_Settings3419:
;GRR3000LManagementPanel.mpas,7694 :: 		end;
0xB90E	0x370000  	BRA	L__Battery_Settings2792
L__Battery_Settings3417:
L__Battery_Settings2792:
;GRR3000LManagementPanel.mpas,7701 :: 		asm ClrWDT; end;
0xB910	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7704 :: 		end;
0xB912	0x37F77F  	BRA	L__Battery_Settings2749
L__Battery_Settings2750:
;GRR3000LManagementPanel.mpas,7706 :: 		if (FirstStartUpBattMenu = 120) then
0xB914	0x2159E0  	MOV	#lo_addr(_FirstStartUpBattMenu), W0
0xB916	0x784090  	MOV.B	[W0], W1
0xB918	0xB3C780  	MOV.B	#120, W0
0xB91A	0xE10C00  	CP.B	W1, W0
0xB91C	0x3A0009  	BRA NZ	L__Battery_Settings3427
L__Battery_Settings5546:
;GRR3000LManagementPanel.mpas,7708 :: 		FirstStartUpBattMenu := 160; // 160 yaz bir daha bu menüye girmesin
0xB91E	0x2159E1  	MOV	#lo_addr(_FirstStartUpBattMenu), W1
0xB920	0xB3CA00  	MOV.B	#160, W0
0xB922	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7709 :: 		EEPROM_Write(EE_FirstBattMenuEeAddr, FirstStartUpBattMenu);
0xB924	0x200A0C  	MOV	#160, W12
0xB926	0x2F086A  	MOV	#61574, W10
0xB928	0x2007FB  	MOV	#127, W11
0xB92A	0x07AD35  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,7710 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Battery_Settings3430:
0xB92C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0xB92E	0x37FFFE  	BRA	L__Battery_Settings3430
;GRR3000LManagementPanel.mpas,7711 :: 		end;
L__Battery_Settings3427:
;GRR3000LManagementPanel.mpas,7713 :: 		Glcd_Fill(0x00);
0xB930	0xEF2014  	CLR	W10
0xB932	0x07EFCC  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,7714 :: 		MenuSayacValue := 4;
0xB934	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0xB936	0xB3C040  	MOV.B	#4, W0
0xB938	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7717 :: 		end;
L_end_Battery_Settings:
0xB93A	0x7806CF  	POP	W13
0xB93C	0x78064F  	POP	W12
0xB93E	0x7805CF  	POP	W11
0xB940	0x78054F  	POP	W10
0xB942	0xFA8000  	ULNK
0xB944	0x060000  	RETURN
; end of _Battery_Settings
_WordToStr:
0x1252	0xFA0000  	LNK	#0
;__Lib_Conversions.mpas,132 :: 		
;__Lib_Conversions.mpas,133 :: 		
0x1254	0x78008B  	MOV	W11, W1
0x1256	0xB3C200  	MOV.B	#32, W0
0x1258	0x785880  	MOV.B	W0, [W1++]
0x125A	0xB3C200  	MOV.B	#32, W0
0x125C	0x785880  	MOV.B	W0, [W1++]
0x125E	0xB3C200  	MOV.B	#32, W0
0x1260	0x785880  	MOV.B	W0, [W1++]
0x1262	0xB3C200  	MOV.B	#32, W0
0x1264	0x785880  	MOV.B	W0, [W1++]
0x1266	0xB3C300  	MOV.B	#48, W0
0x1268	0x785880  	MOV.B	W0, [W1++]
0x126A	0xEF2000  	CLR	W0
0x126C	0x785880  	MOV.B	W0, [W1++]
;__Lib_Conversions.mpas,134 :: 		
; ptr start address is: 6 (W3)
0x126E	0x4581E4  	ADD	W11, #4, W3
; ptr end address is: 6 (W3)
;__Lib_Conversions.mpas,135 :: 		
L__WordToStr20:
; ptr start address is: 6 (W3)
0x1270	0xE15060  	CP	W10, #0
0x1272	0x32000C  	BRA Z	L__WordToStr21
L__WordToStr234:
;__Lib_Conversions.mpas,137 :: 		
0x1274	0x2000A2  	MOV	#10, W2
0x1276	0x090011  	REPEAT	#17
0x1278	0xD88502  	DIV.U	W10, W2
0x127A	0x200300  	MOV	#48, W0
0x127C	0x408000  	ADD	W1, W0, W0
0x127E	0x784980  	MOV.B	W0, [W3]
;__Lib_Conversions.mpas,138 :: 		
0x1280	0x2000A2  	MOV	#10, W2
0x1282	0x090011  	REPEAT	#17
0x1284	0xD88502  	DIV.U	W10, W2
0x1286	0x780500  	MOV	W0, W10
;__Lib_Conversions.mpas,139 :: 		
0x1288	0xED2006  	DEC	W3
;__Lib_Conversions.mpas,140 :: 		
; ptr end address is: 6 (W3)
0x128A	0x37FFF2  	BRA	L__WordToStr20
L__WordToStr21:
;__Lib_Conversions.mpas,141 :: 		
L_end_WordToStr:
0x128C	0xFA8000  	ULNK
0x128E	0x060000  	RETURN
; end of _WordToStr
_ChargeModeWrite:
;GRR3000LManagementPanel.mpas,6662 :: 		begin
;GRR3000LManagementPanel.mpas,6664 :: 		1: begin
0x0740	0x781F8A  	PUSH	W10
0x0742	0x781F8B  	PUSH	W11
0x0744	0x781F8C  	PUSH	W12
0x0746	0x781F8D  	PUSH	W13
0x0748	0xE15461  	CP.B	W10, #1
0x074A	0x3A0006  	BRA NZ	L__ChargeModeWrite2737
L__ChargeModeWrite5443:
;GRR3000LManagementPanel.mpas,6665 :: 		Glcd_Write_Text(BoostChargeText,84,row4,State);
0x074C	0x78468B  	MOV.B	W11, W13
0x074E	0xB3C03C  	MOV.B	#3, W12
0x0750	0xB3C54B  	MOV.B	#84, W11
0x0752	0x21276A  	MOV	#lo_addr(_BoostChargeText), W10
0x0754	0x07281A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6666 :: 		end;
0x0756	0x370018  	BRA	L__ChargeModeWrite2734
L__ChargeModeWrite2737:
;GRR3000LManagementPanel.mpas,6668 :: 		2: begin
0x0758	0xE15462  	CP.B	W10, #2
0x075A	0x3A0006  	BRA NZ	L__ChargeModeWrite2740
L__ChargeModeWrite5444:
;GRR3000LManagementPanel.mpas,6669 :: 		Glcd_Write_Text(FloatChargeText,84,row4,State);
0x075C	0x78468B  	MOV.B	W11, W13
0x075E	0xB3C03C  	MOV.B	#3, W12
0x0760	0xB3C54B  	MOV.B	#84, W11
0x0762	0x21284A  	MOV	#lo_addr(_FloatChargeText), W10
0x0764	0x072812  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6670 :: 		end;
0x0766	0x370010  	BRA	L__ChargeModeWrite2734
L__ChargeModeWrite2740:
;GRR3000LManagementPanel.mpas,6672 :: 		3: begin
0x0768	0xE15463  	CP.B	W10, #3
0x076A	0x3A0006  	BRA NZ	L__ChargeModeWrite2743
L__ChargeModeWrite5445:
;GRR3000LManagementPanel.mpas,6673 :: 		Glcd_Write_Text(TCompChargeText,84,row4,State);
0x076C	0x78468B  	MOV.B	W11, W13
0x076E	0xB3C03C  	MOV.B	#3, W12
0x0770	0xB3C54B  	MOV.B	#84, W11
0x0772	0x2127DA  	MOV	#lo_addr(_TCompChargeText), W10
0x0774	0x07280A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6674 :: 		end;
0x0776	0x370008  	BRA	L__ChargeModeWrite2734
L__ChargeModeWrite2743:
;GRR3000LManagementPanel.mpas,6676 :: 		4: begin
0x0778	0xE15464  	CP.B	W10, #4
0x077A	0x3A0006  	BRA NZ	L__ChargeModeWrite2746
L__ChargeModeWrite5446:
;GRR3000LManagementPanel.mpas,6677 :: 		Glcd_Write_Text(ManualChargeText,84,row4,State);
0x077C	0x78468B  	MOV.B	W11, W13
0x077E	0xB3C03C  	MOV.B	#3, W12
0x0780	0xB3C54B  	MOV.B	#84, W11
0x0782	0x21229A  	MOV	#lo_addr(_ManualChargeText), W10
0x0784	0x072802  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6678 :: 		end;
0x0786	0x370000  	BRA	L__ChargeModeWrite2734
L__ChargeModeWrite2746:
L__ChargeModeWrite2734:
;GRR3000LManagementPanel.mpas,6680 :: 		end;
L_end_ChargeModeWrite:
0x0788	0x7806CF  	POP	W13
0x078A	0x78064F  	POP	W12
0x078C	0x7805CF  	POP	W11
0x078E	0x78054F  	POP	W10
0x0790	0x060000  	RETURN
; end of _ChargeModeWrite
__Div_FP:
0x07EA	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,1066 :: 		
;__Lib_MathDouble.mpas,1068 :: 		
0x07EC	0x070002  	RCALL	DivFP___divsf3
;__Lib_MathDouble.mpas,1069 :: 		
0x07EE	0x00000004091C  	GOTO	the_end__Div_FP
;__Lib_MathDouble.mpas,1071 :: 		
DivFP___divsf3:
;__Lib_MathDouble.mpas,1072 :: 		
0x07F2	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.mpas,1073 :: 		
0x07F4	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.mpas,1074 :: 		
0x07F6	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.mpas,1075 :: 		
0x07F8	0x07003E  	RCALL	DivFP__funpack2
;__Lib_MathDouble.mpas,1076 :: 		
0x07FA	0x330045  	BRA N	DivFP__fPropagateNaN
;__Lib_MathDouble.mpas,1077 :: 		
0x07FC	0x6C8603  	XOR	W9, W3, W12
;__Lib_MathDouble.mpas,1078 :: 		
0x07FE	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,1079 :: 		
0x0800	0x32002E  	BRA Z	DivFP_aisinfinite
;__Lib_MathDouble.mpas,1080 :: 		
0x0802	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,1081 :: 		
0x0804	0x320033  	BRA Z	DivFP_returnZero
;__Lib_MathDouble.mpas,1082 :: 		
0x0806	0xE15061  	CP	W10, #1
;__Lib_MathDouble.mpas,1083 :: 		
0x0808	0x32002F  	BRA Z	DivFP_aiszero
;__Lib_MathDouble.mpas,1084 :: 		
0x080A	0xE12061  	CP	W4, #1
;__Lib_MathDouble.mpas,1085 :: 		
0x080C	0x320031  	BRA Z	DivFP_returnInf
;__Lib_MathDouble.mpas,1086 :: 		
DivFP_finitenonzero:
;__Lib_MathDouble.mpas,1087 :: 		
0x080E	0x558585  	SUB	W11, W5, W11
;__Lib_MathDouble.mpas,1088 :: 		
0x0810	0xB007EB  	ADD	#126, W11
;__Lib_MathDouble.mpas,1089 :: 		
0x0812	0x200009  	MOV	#0, W9
;__Lib_MathDouble.mpas,1090 :: 		
0x0814	0x200408  	MOV	#64, W8
;__Lib_MathDouble.mpas,1091 :: 		
0x0816	0x370005  	BRA	DivFP_diventry
;__Lib_MathDouble.mpas,1092 :: 		
DivFP_divnext:
;__Lib_MathDouble.mpas,1093 :: 		
0x0818	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.mpas,1094 :: 		
0x081A	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.mpas,1095 :: 		
0x081C	0x31000A  	BRA C	DivFP_divdone
;__Lib_MathDouble.mpas,1096 :: 		
DivFP_divloop:
;__Lib_MathDouble.mpas,1097 :: 		
0x081E	0x430306  	ADD	W6, W6, W6
;__Lib_MathDouble.mpas,1098 :: 		
0x0820	0x4B8387  	ADDC	W7, W7, W7
;__Lib_MathDouble.mpas,1099 :: 		
DivFP_diventry:
;__Lib_MathDouble.mpas,1100 :: 		
0x0822	0x530100  	SUB	W6, W0, W2
;__Lib_MathDouble.mpas,1101 :: 		
0x0824	0x5B8181  	SUBB	W7, W1, W3
;__Lib_MathDouble.mpas,1102 :: 		
0x0826	0x33FFF8  	BRA N	DivFP_divnext
;__Lib_MathDouble.mpas,1103 :: 		
0x0828	0xBE8302  	MOV.D	W2, W6
;__Lib_MathDouble.mpas,1104 :: 		
0x082A	0xA80010  	BSET	W8, #0
;__Lib_MathDouble.mpas,1105 :: 		
0x082C	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.mpas,1106 :: 		
0x082E	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.mpas,1107 :: 		
0x0830	0x39FFF6  	BRA NC	DivFP_divloop
;__Lib_MathDouble.mpas,1108 :: 		
DivFP_divdone:
;__Lib_MathDouble.mpas,1109 :: 		
0x0832	0xDD39C6  	SL	W7, #6, W3
;__Lib_MathDouble.mpas,1110 :: 		
0x0834	0x730183  	IOR	W6, W3, W3
;__Lib_MathDouble.mpas,1111 :: 		
0x0836	0x320001  	BRA Z	DivFP_stickyok
;__Lib_MathDouble.mpas,1112 :: 		
0x0838	0x200013  	MOV	#1, W3
;__Lib_MathDouble.mpas,1113 :: 		
DivFP_stickyok:
;__Lib_MathDouble.mpas,1114 :: 		
0x083A	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,1115 :: 		
0x083C	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,1116 :: 		
0x083E	0xA39809  	BTST.Z	W9, #9
;__Lib_MathDouble.mpas,1117 :: 		
0x0840	0x320005  	BRA Z	DivFP_guardused
;__Lib_MathDouble.mpas,1118 :: 		
0x0842	0xA70008  	BTSC	W8, #0
;__Lib_MathDouble.mpas,1119 :: 		
0x0844	0xA80006  	BSET	W3, #0
;__Lib_MathDouble.mpas,1120 :: 		
0x0846	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,1121 :: 		
0x0848	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,1122 :: 		
0x084A	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,1123 :: 		
DivFP_guardused:
;__Lib_MathDouble.mpas,1124 :: 		
0x084C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,1125 :: 		
0x084E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,1126 :: 		
0x0850	0xEB0100  	CLR	W2
;__Lib_MathDouble.mpas,1127 :: 		
0x0852	0xD28102  	RLC	W2, W2
;__Lib_MathDouble.mpas,1128 :: 		
0x0854	0x070028  	RCALL	DivFP__fpack
;__Lib_MathDouble.mpas,1129 :: 		
DivFP_return0_1:
;__Lib_MathDouble.mpas,1130 :: 		
0x0856	0xA1F001  	BCLR	W1, #15
;__Lib_MathDouble.mpas,1131 :: 		
0x0858	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.mpas,1132 :: 		
0x085A	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.mpas,1133 :: 		
0x085C	0x37001D  	BRA	DivFP__fbopExit
;__Lib_MathDouble.mpas,1134 :: 		
DivFP_aisinfinite:
;__Lib_MathDouble.mpas,1135 :: 		
0x085E	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,1136 :: 		
0x0860	0x32001F  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.mpas,1137 :: 		
DivFP_return8_1:
;__Lib_MathDouble.mpas,1138 :: 		
0x0862	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.mpas,1139 :: 		
DivFP_return2_1:
;__Lib_MathDouble.mpas,1140 :: 		
0x0864	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,1141 :: 		
0x0866	0x37FFF7  	BRA	DivFP_return0_1
;__Lib_MathDouble.mpas,1142 :: 		
DivFP_aiszero:
;__Lib_MathDouble.mpas,1143 :: 		
0x0868	0xE12061  	CP	W4, #1
;__Lib_MathDouble.mpas,1144 :: 		
0x086A	0x32001A  	BRA Z	DivFP__fbopReturnNaN
;__Lib_MathDouble.mpas,1145 :: 		
DivFP_returnZero:
;__Lib_MathDouble.mpas,1146 :: 		
0x086C	0xB80060  	MUL.UU	W0, #0, W0
;__Lib_MathDouble.mpas,1147 :: 		
0x086E	0x37FFF3  	BRA	DivFP_return0_1
;__Lib_MathDouble.mpas,1148 :: 		
DivFP_returnInf:
;__Lib_MathDouble.mpas,1149 :: 		
0x0870	0x200000  	MOV	#0, W0
;__Lib_MathDouble.mpas,1150 :: 		
0x0872	0x27F801  	MOV	#32640, W1
;__Lib_MathDouble.mpas,1151 :: 		
0x0874	0x37FFF0  	BRA	DivFP_return0_1
;__Lib_MathDouble.mpas,1152 :: 		
DivFP__funpack2:
;__Lib_MathDouble.mpas,1153 :: 		
0x0876	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.mpas,1154 :: 		
0x0878	0x07003C  	RCALL	DivFP__funpack
;__Lib_MathDouble.mpas,1155 :: 		
0x087A	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.mpas,1156 :: 		
0x087C	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.mpas,1157 :: 		
0x087E	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,1158 :: 		
0x0880	0x070038  	RCALL	DivFP__funpack
;__Lib_MathDouble.mpas,1159 :: 		
0x0882	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.mpas,1160 :: 		
0x0884	0x060000  	RETURN
;__Lib_MathDouble.mpas,1161 :: 		
DivFP__fPropagateNaN:
;__Lib_MathDouble.mpas,1162 :: 		
0x0886	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,1163 :: 		
0x0888	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,1164 :: 		
0x088A	0x360005  	BRA LEU	DivFP_return0
;__Lib_MathDouble.mpas,1165 :: 		
0x088C	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,1166 :: 		
0x088E	0x360002  	BRA LEU	DivFP_return8
;__Lib_MathDouble.mpas,1167 :: 		
0x0890	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.mpas,1168 :: 		
0x0892	0x3A0001  	BRA NZ	DivFP_return0
;__Lib_MathDouble.mpas,1169 :: 		
DivFP_return8:
;__Lib_MathDouble.mpas,1170 :: 		
0x0894	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.mpas,1171 :: 		
DivFP_return0:
;__Lib_MathDouble.mpas,1172 :: 		
0x0896	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.mpas,1173 :: 		
DivFP__fbopExit:
;__Lib_MathDouble.mpas,1174 :: 		
0x0898	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.mpas,1175 :: 		
0x089A	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.mpas,1176 :: 		
0x089C	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.mpas,1177 :: 		
0x089E	0x060000  	RETURN
;__Lib_MathDouble.mpas,1178 :: 		
DivFP__fbopReturnNaN:
;__Lib_MathDouble.mpas,1179 :: 		
0x08A0	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.mpas,1180 :: 		
0x08A2	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.mpas,1181 :: 		
0x08A4	0x37FFF9  	BRA	DivFP__fbopExit
;__Lib_MathDouble.mpas,1182 :: 		
DivFP__fpack:
;__Lib_MathDouble.mpas,1183 :: 		
0x08A6	0x200081  	MOV	#8, W1
;__Lib_MathDouble.mpas,1184 :: 		
0x08A8	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.mpas,1185 :: 		
0x08AA	0x3D000B  	BRA GE	DivFP_notsubnormal
;__Lib_MathDouble.mpas,1186 :: 		
0x08AC	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.mpas,1187 :: 		
0x08AE	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.mpas,1188 :: 		
0x08B0	0xE10001  	CP	W0, W1
;__Lib_MathDouble.mpas,1189 :: 		
0x08B2	0x34001D  	BRA LE	DivFP_zerosig
;__Lib_MathDouble.mpas,1190 :: 		
DivFP_subnormal:
;__Lib_MathDouble.mpas,1191 :: 		
0x08B4	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,1192 :: 		
0x08B6	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,1193 :: 		
0x08B8	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,1194 :: 		
0x08BA	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,1195 :: 		
0x08BC	0xE80000  	INC	W0, W0
;__Lib_MathDouble.mpas,1196 :: 		
0x08BE	0x3AFFFA  	BRA NZ	DivFP_subnormal
;__Lib_MathDouble.mpas,1197 :: 		
0x08C0	0x200071  	MOV	#7, W1
;__Lib_MathDouble.mpas,1198 :: 		
DivFP_notsubnormal:
;__Lib_MathDouble.mpas,1199 :: 		
0x08C2	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.mpas,1200 :: 		
0x08C4	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.mpas,1201 :: 		
0x08C6	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.mpas,1202 :: 		
0x08C8	0x320009  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.mpas,1203 :: 		
0x08CA	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.mpas,1204 :: 		
0x08CC	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.mpas,1205 :: 		
0x08CE	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.mpas,1206 :: 		
0x08D0	0x320005  	BRA Z	DivFP_packupandgo
;__Lib_MathDouble.mpas,1207 :: 		
0x08D2	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,1208 :: 		
0x08D4	0xE10868  	CP	W1, #8
;__Lib_MathDouble.mpas,1209 :: 		
0x08D6	0x3A0002  	BRA NZ	DivFP_packupandgo
;__Lib_MathDouble.mpas,1210 :: 		
0x08D8	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,1211 :: 		
0x08DA	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,1212 :: 		
DivFP_packupandgo:
;__Lib_MathDouble.mpas,1213 :: 		
0x08DC	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.mpas,1214 :: 		
0x08DE	0xE15802  	CP	W11, W2
;__Lib_MathDouble.mpas,1215 :: 		
0x08E0	0x3D0005  	BRA GE	DivFP_overflow
;__Lib_MathDouble.mpas,1216 :: 		
0x08E2	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.mpas,1217 :: 		
0x08E4	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.mpas,1218 :: 		
0x08E6	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.mpas,1219 :: 		
0x08E8	0x880008  	MOV	W8, W0
;__Lib_MathDouble.mpas,1220 :: 		
0x08EA	0x060000  	RETURN
;__Lib_MathDouble.mpas,1221 :: 		
DivFP_overflow:
;__Lib_MathDouble.mpas,1222 :: 		
0x08EC	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.mpas,1223 :: 		
DivFP_zerosig:
;__Lib_MathDouble.mpas,1224 :: 		
0x08EE	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.mpas,1225 :: 		
0x08F0	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,1226 :: 		
DivFP__funpack:
;__Lib_MathDouble.mpas,1227 :: 		
0x08F2	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.mpas,1228 :: 		
0x08F4	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.mpas,1229 :: 		
0x08F6	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.mpas,1230 :: 		
0x08F8	0x320008  	BRA Z	DivFP_zeroorsub
;__Lib_MathDouble.mpas,1231 :: 		
0x08FA	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.mpas,1232 :: 		
0x08FC	0x320002  	BRA Z	DivFP_nanorinf
;__Lib_MathDouble.mpas,1233 :: 		
DivFP_finitereturn:
;__Lib_MathDouble.mpas,1234 :: 		
0x08FE	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1235 :: 		
0x0900	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1236 :: 		
DivFP_nanorinf:
;__Lib_MathDouble.mpas,1237 :: 		
0x0902	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1238 :: 		
0x0904	0x320001  	BRA Z	DivFP_infinite
;__Lib_MathDouble.mpas,1239 :: 		
0x0906	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.mpas,1240 :: 		
DivFP_infinite:
;__Lib_MathDouble.mpas,1241 :: 		
0x0908	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.mpas,1242 :: 		
DivFP_zeroorsub:
;__Lib_MathDouble.mpas,1243 :: 		
0x090A	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,1244 :: 		
0x090C	0x3A0002  	BRA NZ	DivFP_subnormal2
;__Lib_MathDouble.mpas,1245 :: 		
0x090E	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.mpas,1246 :: 		
DivFP_normalize:
;__Lib_MathDouble.mpas,1247 :: 		
0x0910	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,1248 :: 		
DivFP_subnormal2:
;__Lib_MathDouble.mpas,1249 :: 		
0x0912	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,1250 :: 		
0x0914	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.mpas,1251 :: 		
0x0916	0x3BFFFC  	BRA NN	DivFP_normalize
;__Lib_MathDouble.mpas,1252 :: 		
0x0918	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,1253 :: 		
0x091A	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,1255 :: 		
the_end__Div_FP:
;__Lib_MathDouble.mpas,1258 :: 		
L_end__Div_FP:
0x091C	0xFA8000  	ULNK
0x091E	0x060000  	RETURN
; end of __Div_FP
_AkuTestBakim:
0xB94A	0xFA001C  	LNK	#28
;Battery_Meintenance.mpas,292 :: 		begin
;Battery_Meintenance.mpas,294 :: 		Glcd_Fill(0x00);
0xB94C	0x781F8A  	PUSH	W10
0xB94E	0x781F8B  	PUSH	W11
0xB950	0x781F8C  	PUSH	W12
0xB952	0x781F8D  	PUSH	W13
0xB954	0xEF2014  	CLR	W10
0xB956	0x07EFBA  	RCALL	_Glcd_Fill
;Battery_Meintenance.mpas,297 :: 		clrwdt;
0xB958	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,300 :: 		MenuExit := 0;
0xB95A	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xB95C	0xEF2000  	CLR	W0
0xB95E	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,301 :: 		Chng1         := 0;
0xB960	0x214671  	MOV	#lo_addr(_Chng1), W1
0xB962	0xEF2000  	CLR	W0
0xB964	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,302 :: 		Chng2         := 0;
0xB966	0x214691  	MOV	#lo_addr(_Chng2), W1
0xB968	0xEF2000  	CLR	W0
0xB96A	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,303 :: 		Chng3         := 0;
0xB96C	0x214681  	MOV	#lo_addr(_Chng3), W1
0xB96E	0xEF2000  	CLR	W0
0xB970	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,304 :: 		Chng4         := 0;
0xB972	0x214591  	MOV	#lo_addr(_Chng4), W1
0xB974	0xEF2000  	CLR	W0
0xB976	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,305 :: 		Chng5         := 0;
0xB978	0x213F91  	MOV	#lo_addr(_Chng5), W1
0xB97A	0xEF2000  	CLR	W0
0xB97C	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,306 :: 		Chng6         := 0;
0xB97E	0x213F81  	MOV	#lo_addr(_Chng6), W1
0xB980	0xEF2000  	CLR	W0
0xB982	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,307 :: 		BakimMenuSayac:= 1;
0xB984	0xB3C010  	MOV.B	#1, W0
0xB986	0x984700  	MOV.B	W0, [W14+0]
;Battery_Meintenance.mpas,309 :: 		bytetext      := '   ';
0xB988	0x4700E4  	ADD	W14, #4, W1
0xB98A	0xB3C200  	MOV.B	#32, W0
0xB98C	0x785880  	MOV.B	W0, [W1++]
0xB98E	0xB3C200  	MOV.B	#32, W0
0xB990	0x785880  	MOV.B	W0, [W1++]
0xB992	0xB3C200  	MOV.B	#32, W0
0xB994	0x785880  	MOV.B	W0, [W1++]
0xB996	0xEF2000  	CLR	W0
0xB998	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,310 :: 		HourText      := '  ';
0xB99A	0x4700E8  	ADD	W14, #8, W1
0xB99C	0xB3C200  	MOV.B	#32, W0
0xB99E	0x785880  	MOV.B	W0, [W1++]
0xB9A0	0xB3C200  	MOV.B	#32, W0
0xB9A2	0x785880  	MOV.B	W0, [W1++]
0xB9A4	0xEF2000  	CLR	W0
0xB9A6	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,311 :: 		MinText       := '  ';
0xB9A8	0x4700EB  	ADD	W14, #11, W1
0xB9AA	0xB3C200  	MOV.B	#32, W0
0xB9AC	0x785880  	MOV.B	W0, [W1++]
0xB9AE	0xB3C200  	MOV.B	#32, W0
0xB9B0	0x785880  	MOV.B	W0, [W1++]
0xB9B2	0xEF2000  	CLR	W0
0xB9B4	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,313 :: 		Glcd_Set_Font(@NewFont5x7,5,7,32);
0xB9B6	0x281E81  	MOV	#lo_addr(_NewFont5x7), W1
0xB9B8	0x200020  	MOV	#2, W0
0xB9BA	0xB3C07D  	MOV.B	#7, W13
0xB9BC	0xB3C05C  	MOV.B	#5, W12
0xB9BE	0x780501  	MOV	W1, W10
0xB9C0	0x780580  	MOV	W0, W11
0xB9C2	0x200200  	MOV	#32, W0
0xB9C4	0x781F80  	PUSH	W0
0xB9C6	0x07D078  	RCALL	_Glcd_Set_Font
0xB9C8	0xB1002F  	SUB	#2, W15
;Battery_Meintenance.mpas,315 :: 		NomHucreGerilim     := EEPROM_Read(EE_NomHucreGerilimEeAddr);
0xB9CA	0x2F006A  	MOV	#61446, W10
0xB9CC	0x2007FB  	MOV	#127, W11
0xB9CE	0x07B548  	RCALL	_EEPROM_Read
0xB9D0	0x889FD0  	MOV	W0, _NomHucreGerilim
;Battery_Meintenance.mpas,316 :: 		HucreSayisi         := EEPROM_Read(EE_HucreSayisiEeAddr);
0xB9D2	0x2F004A  	MOV	#61444, W10
0xB9D4	0x2007FB  	MOV	#127, W11
0xB9D6	0x07B544  	RCALL	_EEPROM_Read
0xB9D8	0x889FF0  	MOV	W0, _HucreSayisi
;Battery_Meintenance.mpas,318 :: 		NominalGerilim := (NomHucreGerilim * HucreSayisi) div 10;
0xB9DA	0x213FA1  	MOV	#lo_addr(_NomHucreGerilim), W1
0xB9DC	0xB80211  	MUL.UU	W0, [W1], W4
0xB9DE	0x2000A2  	MOV	#10, W2
0xB9E0	0x090011  	REPEAT	#17
0xB9E2	0xD88202  	DIV.U	W4, W2
0xB9E4	0x980710  	MOV	W0, [W14+2]
;Battery_Meintenance.mpas,320 :: 		ServiceCycle     := EEPROM_Read(EE_ServiceCycleEeAddr);
0xB9E6	0x2F634A  	MOV	#63028, W10
0xB9E8	0x2007FB  	MOV	#127, W11
0xB9EA	0x07B53A  	RCALL	_EEPROM_Read
0xB9EC	0x213D11  	MOV	#lo_addr(_ServiceCycle), W1
0xB9EE	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,321 :: 		QuitVolt         := EEPROM_Read(EE_QuitVoltEeAddr);
0xB9F0	0x2F63EA  	MOV	#63038, W10
0xB9F2	0x2007FB  	MOV	#127, W11
0xB9F4	0x07B535  	RCALL	_EEPROM_Read
0xB9F6	0x889FE0  	MOV	W0, _QuitVolt
;Battery_Meintenance.mpas,322 :: 		QuitTime         := EEPROM_Read(EE_QuitTimeEeAddr);
0xB9F8	0x2F640A  	MOV	#63040, W10
0xB9FA	0x2007FB  	MOV	#127, W11
0xB9FC	0x07B531  	RCALL	_EEPROM_Read
0xB9FE	0x213D41  	MOV	#lo_addr(_QuitTime), W1
0xBA00	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,324 :: 		Bakim_Start_Time := EEPROM_Read(EE_BkmStartTimeEeAddr);
0xBA02	0x2F644A  	MOV	#63044, W10
0xBA04	0x2007FB  	MOV	#127, W11
0xBA06	0x07B52C  	RCALL	_EEPROM_Read
0xBA08	0x889E90  	MOV	W0, _Bakim_Start_Time
;Battery_Meintenance.mpas,325 :: 		Bkm_Status       := EEPROM_Read(EE_BkmStatusEeAddr);
0xBA0A	0x2F646A  	MOV	#63046, W10
0xBA0C	0x2007FB  	MOV	#127, W11
0xBA0E	0x07B528  	RCALL	_EEPROM_Read
0xBA10	0x212A41  	MOV	#lo_addr(_Bkm_Status), W1
0xBA12	0xA0B011  	BSET	[W1], BitPos(_Bkm_Status+0)
0xBA14	0xAE0000  	BTSS	W0, #0
0xBA16	0xA1B011  	BCLR	[W1], BitPos(_Bkm_Status+0)
;Battery_Meintenance.mpas,327 :: 		Glcd_Write_Text(Title_BattServMenu,    0, 0, Black);
0xBA18	0xB3C01D  	MOV.B	#1, W13
0xBA1A	0xEF2018  	CLR	W12
0xBA1C	0xEF2016  	CLR	W11
0xBA1E	0x213E3A  	MOV	#lo_addr(_Title_BattServMenu), W10
0xBA20	0x07CEB4  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,328 :: 		Glcd_Write_Text(Subtitle_Loop,         6, 1, Black);
0xBA22	0xB3C01D  	MOV.B	#1, W13
0xBA24	0xB3C01C  	MOV.B	#1, W12
0xBA26	0xB3C06B  	MOV.B	#6, W11
0xBA28	0x213D5A  	MOV	#lo_addr(_Subtitle_Loop), W10
0xBA2A	0x07CEAF  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,329 :: 		Glcd_Write_Text(Subtitle_MaintOut,     6, 2, Black);
0xBA2C	0xB3C01D  	MOV.B	#1, W13
0xBA2E	0xB3C02C  	MOV.B	#2, W12
0xBA30	0xB3C06B  	MOV.B	#6, W11
0xBA32	0x21400A  	MOV	#lo_addr(_Subtitle_MaintOut), W10
0xBA34	0x07CEAA  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,330 :: 		Glcd_Write_Text(Subtitle_OutTime,      6, 3, Black);
0xBA36	0xB3C01D  	MOV.B	#1, W13
0xBA38	0xB3C03C  	MOV.B	#3, W12
0xBA3A	0xB3C06B  	MOV.B	#6, W11
0xBA3C	0x21431A  	MOV	#lo_addr(_Subtitle_OutTime), W10
0xBA3E	0x07CEA5  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,332 :: 		Glcd_Write_Text(Subtitle_MaintTime,    6, 4, Black);
0xBA40	0xB3C01D  	MOV.B	#1, W13
0xBA42	0xB3C04C  	MOV.B	#4, W12
0xBA44	0xB3C06B  	MOV.B	#6, W11
0xBA46	0x21423A  	MOV	#lo_addr(_Subtitle_MaintTime), W10
0xBA48	0x07CEA0  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,333 :: 		Glcd_Write_Text(Subtitle_Status,       6, 5, Black);
0xBA4A	0xB3C01D  	MOV.B	#1, W13
0xBA4C	0xB3C05C  	MOV.B	#5, W12
0xBA4E	0xB3C06B  	MOV.B	#6, W11
0xBA50	0x2143FA  	MOV	#lo_addr(_Subtitle_Status), W10
0xBA52	0x07CE9B  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,334 :: 		Glcd_Write_Text(SubTitle_Back,         6, 6, Black);
0xBA54	0xB3C01D  	MOV.B	#1, W13
0xBA56	0xB3C06C  	MOV.B	#6, W12
0xBA58	0xB3C06B  	MOV.B	#6, W11
0xBA5A	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0xBA5C	0x07CE96  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,335 :: 		Glcd_Write_Text(app_year,             92, 1, Black);
0xBA5E	0xB3C01D  	MOV.B	#1, W13
0xBA60	0xB3C01C  	MOV.B	#1, W12
0xBA62	0xB3C5CB  	MOV.B	#92, W11
0xBA64	0x2144DA  	MOV	#lo_addr(_App_Year), W10
0xBA66	0x07CE91  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,336 :: 		Glcd_Write_Text(App_Hour,            104, 3, Black);
0xBA68	0xB3C01D  	MOV.B	#1, W13
0xBA6A	0xB3C03C  	MOV.B	#3, W12
0xBA6C	0xB3C68B  	MOV.B	#104, W11
0xBA6E	0x2140FA  	MOV	#lo_addr(_App_Hour), W10
0xBA70	0x07CE8C  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,338 :: 		Bkm_Min   := Bakim_Start_Time mod 100;
0xBA72	0x200642  	MOV	#100, W2
0xBA74	0x809E90  	MOV	_Bakim_Start_Time, W0
0xBA76	0x090011  	REPEAT	#17
0xBA78	0xD88002  	DIV.U	W0, W2
0xBA7A	0x980F51  	MOV	W1, [W14+26]
0xBA7C	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xBA7E	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,339 :: 		Bkm_Hour  := Bakim_Start_Time div 100;
0xBA80	0x200642  	MOV	#100, W2
0xBA82	0x809E90  	MOV	_Bakim_Start_Time, W0
0xBA84	0x090011  	REPEAT	#17
0xBA86	0xD88002  	DIV.U	W0, W2
0xBA88	0x780080  	MOV	W0, W1
0xBA8A	0x980F31  	MOV	W1, [W14+22]
0xBA8C	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xBA8E	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,342 :: 		HourText[1]  := (Bkm_Hour div 10)+48;
0xBA90	0xFB0001  	SE	W1, W0
0xBA92	0x2000A2  	MOV	#10, W2
0xBA94	0x090011  	REPEAT	#17
0xBA96	0xD80002  	DIV.S	W0, W2
0xBA98	0x780100  	MOV	W0, W2
0xBA9A	0xB3C301  	MOV.B	#48, W1
0xBA9C	0x470068  	ADD	W14, #8, W0
0xBA9E	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,343 :: 		HourText[2]  := (Bkm_Hour mod 10)+48;
0xBAA0	0x90083E  	MOV	[W14+22], W0
0xBAA2	0xFB0000  	SE	W0, W0
0xBAA4	0x2000A2  	MOV	#10, W2
0xBAA6	0x090011  	REPEAT	#17
0xBAA8	0xD80002  	DIV.S	W0, W2
0xBAAA	0x780101  	MOV	W1, W2
0xBAAC	0xB3C301  	MOV.B	#48, W1
0xBAAE	0x470069  	ADD	W14, #9, W0
0xBAB0	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,344 :: 		MinText[1]   := (Bkm_Min div 10)+48;
0xBAB2	0x90085E  	MOV	[W14+26], W0
0xBAB4	0xFB0000  	SE	W0, W0
0xBAB6	0x2000A2  	MOV	#10, W2
0xBAB8	0x090011  	REPEAT	#17
0xBABA	0xD80002  	DIV.S	W0, W2
0xBABC	0x780100  	MOV	W0, W2
0xBABE	0xB3C301  	MOV.B	#48, W1
0xBAC0	0x47006B  	ADD	W14, #11, W0
0xBAC2	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,345 :: 		MinText[2]   := (Bkm_Min mod 10)+48;
0xBAC4	0x90085E  	MOV	[W14+26], W0
0xBAC6	0xFB0000  	SE	W0, W0
0xBAC8	0x2000A2  	MOV	#10, W2
0xBACA	0x090011  	REPEAT	#17
0xBACC	0xD80002  	DIV.S	W0, W2
0xBACE	0x780101  	MOV	W1, W2
0xBAD0	0xB3C301  	MOV.B	#48, W1
0xBAD2	0x47006C  	ADD	W14, #12, W0
0xBAD4	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,347 :: 		Glcd_Write_Text(HourText, 92,4,Black);
0xBAD6	0x470068  	ADD	W14, #8, W0
0xBAD8	0xB3C01D  	MOV.B	#1, W13
0xBADA	0xB3C04C  	MOV.B	#4, W12
0xBADC	0xB3C5CB  	MOV.B	#92, W11
0xBADE	0x780500  	MOV	W0, W10
0xBAE0	0x07CE54  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,348 :: 		Glcd_Write_Text(':',104,4,black);
0xBAE2	0x4700EE  	ADD	W14, #14, W1
0xBAE4	0xB3C3A0  	MOV.B	#58, W0
0xBAE6	0x785880  	MOV.B	W0, [W1++]
0xBAE8	0xEF2000  	CLR	W0
0xBAEA	0x785880  	MOV.B	W0, [W1++]
0xBAEC	0x47006E  	ADD	W14, #14, W0
0xBAEE	0xB3C01D  	MOV.B	#1, W13
0xBAF0	0xB3C04C  	MOV.B	#4, W12
0xBAF2	0xB3C68B  	MOV.B	#104, W11
0xBAF4	0x780500  	MOV	W0, W10
0xBAF6	0x07CE49  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,349 :: 		Glcd_Write_Text(MinText, 109,4,Black);
0xBAF8	0x47006B  	ADD	W14, #11, W0
0xBAFA	0xB3C01D  	MOV.B	#1, W13
0xBAFC	0xB3C04C  	MOV.B	#4, W12
0xBAFE	0xB3C6DB  	MOV.B	#109, W11
0xBB00	0x780500  	MOV	W0, W10
0xBB02	0x07CE43  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,351 :: 		ValueDivide(QuitVolt, 255);
0xBB04	0xB3CFFB  	MOV.B	#255, W11
0xBB06	0x809FEA  	MOV	_QuitVolt, W10
0xBB08	0x07A813  	RCALL	_ValueDivide
;Battery_Meintenance.mpas,352 :: 		Glcd_Write_Text(Value_Text,86,2,Black);
0xBB0A	0xB3C01D  	MOV.B	#1, W13
0xBB0C	0xB3C02C  	MOV.B	#2, W12
0xBB0E	0xB3C56B  	MOV.B	#86, W11
0xBB10	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0xBB12	0x07CE3B  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,353 :: 		Glcd_Write_Char('V',116,2,Black);
0xBB14	0xB3C01D  	MOV.B	#1, W13
0xBB16	0xB3C02C  	MOV.B	#2, W12
0xBB18	0xB3C74B  	MOV.B	#116, W11
0xBB1A	0xB3C56A  	MOV.B	#86, W10
0xBB1C	0x07B12B  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,355 :: 		ByteToStr(QuitTime,bytetext);
0xBB1E	0x4700E4  	ADD	W14, #4, W1
0xBB20	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBB22	0x780581  	MOV	W1, W11
0xBB24	0x784510  	MOV.B	[W0], W10
0xBB26	0x07A730  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,356 :: 		Glcd_Write_Text(ByteText,86,3,Black);
0xBB28	0x470064  	ADD	W14, #4, W0
0xBB2A	0xB3C01D  	MOV.B	#1, W13
0xBB2C	0xB3C03C  	MOV.B	#3, W12
0xBB2E	0xB3C56B  	MOV.B	#86, W11
0xBB30	0x780500  	MOV	W0, W10
0xBB32	0x07CE2B  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,366 :: 		if (Bkm_Status = 0) then
0xBB34	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xBB36	0xA7B010  	BTSC	[W0], BitPos(_Bkm_Status+0)
0xBB38	0x370006  	BRA	L__AkuTestBakim64
;Battery_Meintenance.mpas,367 :: 		Glcd_Write_Text(DisableText,86,5,Black) else
0xBB3A	0xB3C01D  	MOV.B	#1, W13
0xBB3C	0xB3C05C  	MOV.B	#5, W12
0xBB3E	0xB3C56B  	MOV.B	#86, W11
0xBB40	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xBB42	0x07CE23  	RCALL	_Glcd_Write_Text
0xBB44	0x370008  	BRA	L__AkuTestBakim65
L__AkuTestBakim64:
;Battery_Meintenance.mpas,368 :: 		if (Bkm_Status = 1) then
0xBB46	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xBB48	0xA6B010  	BTSS	[W0], BitPos(_Bkm_Status+0)
0xBB4A	0x370005  	BRA	L__AkuTestBakim67
;Battery_Meintenance.mpas,369 :: 		Glcd_Write_Text(EnableText,86,5,Black);
0xBB4C	0xB3C01D  	MOV.B	#1, W13
0xBB4E	0xB3C05C  	MOV.B	#5, W12
0xBB50	0xB3C56B  	MOV.B	#86, W11
0xBB52	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xBB54	0x07CE1A  	RCALL	_Glcd_Write_Text
L__AkuTestBakim67:
L__AkuTestBakim65:
;Battery_Meintenance.mpas,372 :: 		While (MenuExit = 0) do
L__AkuTestBakim70:
0xBB56	0x214660  	MOV	#lo_addr(_MenuExit), W0
0xBB58	0x784010  	MOV.B	[W0], W0
0xBB5A	0xE10460  	CP.B	W0, #0
0xBB5C	0x3A0354  	BRA NZ	L__AkuTestBakim71
L__AkuTestBakim390:
;Battery_Meintenance.mpas,376 :: 		clrwdt;
0xBB5E	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,379 :: 		if (Down_Button =0) then
0xBB60	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBB62	0x370012  	BRA	L__AkuTestBakim75
;Battery_Meintenance.mpas,381 :: 		while (Down_Button =0) do
L__AkuTestBakim78:
0xBB64	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBB66	0x370002  	BRA	L__AkuTestBakim79
;Battery_Meintenance.mpas,384 :: 		clrwdt;
0xBB68	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,386 :: 		end;
0xBB6A	0x37FFFC  	BRA	L__AkuTestBakim78
L__AkuTestBakim79:
;Battery_Meintenance.mpas,387 :: 		Glcd_Write_Char(' ', 0, BakimMenuSayac, Black);
0xBB6C	0xB3C01D  	MOV.B	#1, W13
0xBB6E	0x90460E  	MOV.B	[W14+0], W12
0xBB70	0xEF2016  	CLR	W11
0xBB72	0xB3C20A  	MOV.B	#32, W10
0xBB74	0x07B0FF  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,388 :: 		Inc(BakimMenuSayac);
0xBB76	0x470060  	ADD	W14, #0, W0
0xBB78	0xFB8010  	ZE	[W0], W0
0xBB7A	0xEC2000  	INC	W0
0xBB7C	0x984700  	MOV.B	W0, [W14+0]
;Battery_Meintenance.mpas,389 :: 		if (BakimMenuSayac > 6) then BakimMenuSayac := 1;
0xBB7E	0xE10466  	CP.B	W0, #6
0xBB80	0x360002  	BRA LEU	L__AkuTestBakim83
L__AkuTestBakim391:
0xBB82	0xB3C010  	MOV.B	#1, W0
0xBB84	0x984700  	MOV.B	W0, [W14+0]
L__AkuTestBakim83:
;Battery_Meintenance.mpas,390 :: 		end else
0xBB86	0x370013  	BRA	L__AkuTestBakim76
L__AkuTestBakim75:
;Battery_Meintenance.mpas,391 :: 		if (Up_Button =0) then
0xBB88	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBB8A	0x370011  	BRA	L__AkuTestBakim86
;Battery_Meintenance.mpas,393 :: 		while (Up_Button =0) do
L__AkuTestBakim89:
0xBB8C	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBB8E	0x370002  	BRA	L__AkuTestBakim90
;Battery_Meintenance.mpas,396 :: 		clrwdt;
0xBB90	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,398 :: 		end;
0xBB92	0x37FFFC  	BRA	L__AkuTestBakim89
L__AkuTestBakim90:
;Battery_Meintenance.mpas,399 :: 		Glcd_Write_Char(' ', 0, BakimMenuSayac, Black);
0xBB94	0xB3C01D  	MOV.B	#1, W13
0xBB96	0x90460E  	MOV.B	[W14+0], W12
0xBB98	0xEF2016  	CLR	W11
0xBB9A	0xB3C20A  	MOV.B	#32, W10
0xBB9C	0x07B0EB  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,400 :: 		Dec(BakimMenuSayac);
0xBB9E	0x470060  	ADD	W14, #0, W0
0xBBA0	0xFB8010  	ZE	[W0], W0
0xBBA2	0xED2000  	DEC	W0
0xBBA4	0x984700  	MOV.B	W0, [W14+0]
;Battery_Meintenance.mpas,401 :: 		if (BakimMenuSayac < 1) then BakimMenuSayac := 6;
0xBBA6	0xE10461  	CP.B	W0, #1
0xBBA8	0x310002  	BRA GEU	L__AkuTestBakim94
L__AkuTestBakim392:
0xBBAA	0xB3C060  	MOV.B	#6, W0
0xBBAC	0x984700  	MOV.B	W0, [W14+0]
L__AkuTestBakim94:
;Battery_Meintenance.mpas,402 :: 		end;
L__AkuTestBakim86:
L__AkuTestBakim76:
;Battery_Meintenance.mpas,404 :: 		Glcd_Write_Char('>', 0, BakimMenuSayac, Black);
0xBBAE	0xB3C01D  	MOV.B	#1, W13
0xBBB0	0x90460E  	MOV.B	[W14+0], W12
0xBBB2	0xEF2016  	CLR	W11
0xBBB4	0xB3C3EA  	MOV.B	#62, W10
0xBBB6	0x07B0DE  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,406 :: 		Glcd_Set_Font(@NewFont5x7,5,7,32);
0xBBB8	0x281E81  	MOV	#lo_addr(_NewFont5x7), W1
0xBBBA	0x200020  	MOV	#2, W0
0xBBBC	0xB3C07D  	MOV.B	#7, W13
0xBBBE	0xB3C05C  	MOV.B	#5, W12
0xBBC0	0x780501  	MOV	W1, W10
0xBBC2	0x780580  	MOV	W0, W11
0xBBC4	0x200200  	MOV	#32, W0
0xBBC6	0x781F80  	PUSH	W0
0xBBC8	0x07CF77  	RCALL	_Glcd_Set_Font
0xBBCA	0xB1002F  	SUB	#2, W15
;Battery_Meintenance.mpas,409 :: 		1: begin  // bakým döngüsü
0xBBCC	0x90400E  	MOV.B	[W14+0], W0
0xBBCE	0xE10461  	CP.B	W0, #1
0xBBD0	0x3A00CA  	BRA NZ	L__AkuTestBakim99
L__AkuTestBakim393:
;Battery_Meintenance.mpas,411 :: 		asm clrwdt; end;
0xBBD2	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,413 :: 		ByteToStr(ServiceCycle, CycleText);
0xBBD4	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBBD6	0x21263B  	MOV	#lo_addr(_CycleText), W11
0xBBD8	0x784510  	MOV.B	[W0], W10
0xBBDA	0x07A6D6  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,414 :: 		ltrim(CycleText);
0xBBDC	0x21263A  	MOV	#lo_addr(_CycleText), W10
0xBBDE	0x07F36A  	RCALL	_ltrim
;Battery_Meintenance.mpas,415 :: 		Glcd_Write_Text(CycleText,86,1,Black);
0xBBE0	0xB3C01D  	MOV.B	#1, W13
0xBBE2	0xB3C01C  	MOV.B	#1, W12
0xBBE4	0xB3C56B  	MOV.B	#86, W11
0xBBE6	0x21263A  	MOV	#lo_addr(_CycleText), W10
0xBBE8	0x07CDD0  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,417 :: 		if (Ok_Button =0) then
0xBBEA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBBEC	0x3700BB  	BRA	L__AkuTestBakim101
;Battery_Meintenance.mpas,419 :: 		while (Ok_Button =0) do
L__AkuTestBakim104:
0xBBEE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBBF0	0x370002  	BRA	L__AkuTestBakim105
;Battery_Meintenance.mpas,422 :: 		clrwdt;
0xBBF2	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,424 :: 		end;
0xBBF4	0x37FFFC  	BRA	L__AkuTestBakim104
L__AkuTestBakim105:
;Battery_Meintenance.mpas,426 :: 		Chng1 := 1;
0xBBF6	0x214671  	MOV	#lo_addr(_Chng1), W1
0xBBF8	0xB3C010  	MOV.B	#1, W0
0xBBFA	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,427 :: 		While (Chng1 = 1) do
L__AkuTestBakim109:
0xBBFC	0x214670  	MOV	#lo_addr(_Chng1), W0
0xBBFE	0x784010  	MOV.B	[W0], W0
0xBC00	0xE10461  	CP.B	W0, #1
0xBC02	0x3A00B0  	BRA NZ	L__AkuTestBakim110
L__AkuTestBakim394:
;Battery_Meintenance.mpas,430 :: 		clrwdt;
0xBC04	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,433 :: 		if (Up_Button =0) then
0xBC06	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBC08	0x37000F  	BRA	L__AkuTestBakim114
;Battery_Meintenance.mpas,435 :: 		while (Up_Button =0) do
L__AkuTestBakim117:
0xBC0A	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBC0C	0x370002  	BRA	L__AkuTestBakim118
;Battery_Meintenance.mpas,438 :: 		clrwdt;
0xBC0E	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,440 :: 		end;
0xBC10	0x37FFFC  	BRA	L__AkuTestBakim117
L__AkuTestBakim118:
;Battery_Meintenance.mpas,441 :: 		Inc(ServiceCycle);
0xBC12	0xB3C011  	MOV.B	#1, W1
0xBC14	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC16	0x40C810  	ADD.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,442 :: 		if (ServiceCycle > 4) then ServiceCycle := 4;
0xBC18	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC1A	0x784010  	MOV.B	[W0], W0
0xBC1C	0xE10464  	CP.B	W0, #4
0xBC1E	0x360003  	BRA LEU	L__AkuTestBakim122
L__AkuTestBakim395:
0xBC20	0x213D11  	MOV	#lo_addr(_ServiceCycle), W1
0xBC22	0xB3C040  	MOV.B	#4, W0
0xBC24	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim122:
;Battery_Meintenance.mpas,443 :: 		end else
0xBC26	0x370010  	BRA	L__AkuTestBakim115
L__AkuTestBakim114:
;Battery_Meintenance.mpas,444 :: 		if (Down_Button =0) then
0xBC28	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBC2A	0x37000E  	BRA	L__AkuTestBakim125
;Battery_Meintenance.mpas,446 :: 		while (Down_Button =0) do
L__AkuTestBakim128:
0xBC2C	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBC2E	0x370002  	BRA	L__AkuTestBakim129
;Battery_Meintenance.mpas,449 :: 		clrwdt;
0xBC30	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,451 :: 		end;
0xBC32	0x37FFFC  	BRA	L__AkuTestBakim128
L__AkuTestBakim129:
;Battery_Meintenance.mpas,452 :: 		Dec(ServiceCycle);
0xBC34	0xB3C011  	MOV.B	#1, W1
0xBC36	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC38	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,453 :: 		if (ServiceCycle < 1) then ServiceCycle := 1;
0xBC3A	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC3C	0x784010  	MOV.B	[W0], W0
0xBC3E	0xE10461  	CP.B	W0, #1
0xBC40	0x310003  	BRA GEU	L__AkuTestBakim133
L__AkuTestBakim396:
0xBC42	0x213D11  	MOV	#lo_addr(_ServiceCycle), W1
0xBC44	0xB3C010  	MOV.B	#1, W0
0xBC46	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim133:
;Battery_Meintenance.mpas,454 :: 		end;
L__AkuTestBakim125:
L__AkuTestBakim115:
;Battery_Meintenance.mpas,456 :: 		ByteToStr(ServiceCycle, CycleText);
0xBC48	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC4A	0x21263B  	MOV	#lo_addr(_CycleText), W11
0xBC4C	0x784510  	MOV.B	[W0], W10
0xBC4E	0x07A69C  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,457 :: 		ltrim(CycleText);
0xBC50	0x21263A  	MOV	#lo_addr(_CycleText), W10
0xBC52	0x07F330  	RCALL	_ltrim
;Battery_Meintenance.mpas,458 :: 		Glcd_Write_Text(CycleText,86,1,0);
0xBC54	0xEF201A  	CLR	W13
0xBC56	0xB3C01C  	MOV.B	#1, W12
0xBC58	0xB3C56B  	MOV.B	#86, W11
0xBC5A	0x21263A  	MOV	#lo_addr(_CycleText), W10
0xBC5C	0x07CD96  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,459 :: 		Glcd_Write_Text(App_Year,92,1,0);
0xBC5E	0xEF201A  	CLR	W13
0xBC60	0xB3C01C  	MOV.B	#1, W12
0xBC62	0xB3C5CB  	MOV.B	#92, W11
0xBC64	0x2144DA  	MOV	#lo_addr(_App_Year), W10
0xBC66	0x07CD91  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,461 :: 		if (Ok_Button =0) then
0xBC68	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBC6A	0x37007B  	BRA	L__AkuTestBakim136
;Battery_Meintenance.mpas,463 :: 		while (Ok_Button =0) do
L__AkuTestBakim139:
0xBC6C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBC6E	0x370002  	BRA	L__AkuTestBakim140
;Battery_Meintenance.mpas,466 :: 		clrwdt;
0xBC70	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,468 :: 		end;
0xBC72	0x37FFFC  	BRA	L__AkuTestBakim139
L__AkuTestBakim140:
;Battery_Meintenance.mpas,470 :: 		Chng1 := 0;
0xBC74	0x214671  	MOV	#lo_addr(_Chng1), W1
0xBC76	0xEF2000  	CLR	W0
0xBC78	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,471 :: 		EEPROM_Write(EE_ServiceCycleEeAddr, ServiceCycle);
0xBC7A	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0xBC7C	0xFB8610  	ZE	[W0], W12
0xBC7E	0x2F634A  	MOV	#63028, W10
0xBC80	0x2007FB  	MOV	#127, W11
0xBC82	0x07AB89  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,472 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__AkuTestBakim144:
0xBC84	0xBF8760  	MOV	NVMCON, WREG
0xBC86	0xE10061  	CP	W0, #1
0xBC88	0x32FFFD  	BRA Z	L__AkuTestBakim144
L__AkuTestBakim397:
;Battery_Meintenance.mpas,474 :: 		BakimSelect := 1;
0xBC8A	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0xBC8C	0xB3C010  	MOV.B	#1, W0
0xBC8E	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,476 :: 		DateCalculator();
0xBC90	0x07A880  	RCALL	_DateCalculator
;Battery_Meintenance.mpas,478 :: 		Glcd_Write_Text(Title_BattServMenu,    0, 0, Black);
0xBC92	0xB3C01D  	MOV.B	#1, W13
0xBC94	0xEF2018  	CLR	W12
0xBC96	0xEF2016  	CLR	W11
0xBC98	0x213E3A  	MOV	#lo_addr(_Title_BattServMenu), W10
0xBC9A	0x07CD77  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,479 :: 		Glcd_Write_Text(Subtitle_Loop,         6, 1, Black);
0xBC9C	0xB3C01D  	MOV.B	#1, W13
0xBC9E	0xB3C01C  	MOV.B	#1, W12
0xBCA0	0xB3C06B  	MOV.B	#6, W11
0xBCA2	0x213D5A  	MOV	#lo_addr(_Subtitle_Loop), W10
0xBCA4	0x07CD72  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,480 :: 		Glcd_Write_Text(Subtitle_MaintOut,     6, 2, Black);
0xBCA6	0xB3C01D  	MOV.B	#1, W13
0xBCA8	0xB3C02C  	MOV.B	#2, W12
0xBCAA	0xB3C06B  	MOV.B	#6, W11
0xBCAC	0x21400A  	MOV	#lo_addr(_Subtitle_MaintOut), W10
0xBCAE	0x07CD6D  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,481 :: 		Glcd_Write_Text(Subtitle_OutTime,      6, 3, Black);
0xBCB0	0xB3C01D  	MOV.B	#1, W13
0xBCB2	0xB3C03C  	MOV.B	#3, W12
0xBCB4	0xB3C06B  	MOV.B	#6, W11
0xBCB6	0x21431A  	MOV	#lo_addr(_Subtitle_OutTime), W10
0xBCB8	0x07CD68  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,483 :: 		Glcd_Write_Text(Subtitle_MaintTime,    6, 4, Black);
0xBCBA	0xB3C01D  	MOV.B	#1, W13
0xBCBC	0xB3C04C  	MOV.B	#4, W12
0xBCBE	0xB3C06B  	MOV.B	#6, W11
0xBCC0	0x21423A  	MOV	#lo_addr(_Subtitle_MaintTime), W10
0xBCC2	0x07CD63  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,484 :: 		Glcd_Write_Text(Subtitle_Status,       6, 5, Black);
0xBCC4	0xB3C01D  	MOV.B	#1, W13
0xBCC6	0xB3C05C  	MOV.B	#5, W12
0xBCC8	0xB3C06B  	MOV.B	#6, W11
0xBCCA	0x2143FA  	MOV	#lo_addr(_Subtitle_Status), W10
0xBCCC	0x07CD5E  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,485 :: 		Glcd_Write_Text(SubTitle_Back,         6, 6, Black);
0xBCCE	0xB3C01D  	MOV.B	#1, W13
0xBCD0	0xB3C06C  	MOV.B	#6, W12
0xBCD2	0xB3C06B  	MOV.B	#6, W11
0xBCD4	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0xBCD6	0x07CD59  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,486 :: 		Glcd_Write_Text(app_year,             92, 1, Black);
0xBCD8	0xB3C01D  	MOV.B	#1, W13
0xBCDA	0xB3C01C  	MOV.B	#1, W12
0xBCDC	0xB3C5CB  	MOV.B	#92, W11
0xBCDE	0x2144DA  	MOV	#lo_addr(_App_Year), W10
0xBCE0	0x07CD54  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,487 :: 		Glcd_Write_Text(App_Hour,            104, 3, Black);
0xBCE2	0xB3C01D  	MOV.B	#1, W13
0xBCE4	0xB3C03C  	MOV.B	#3, W12
0xBCE6	0xB3C68B  	MOV.B	#104, W11
0xBCE8	0x2140FA  	MOV	#lo_addr(_App_Hour), W10
0xBCEA	0x07CD4F  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,489 :: 		ByteToStr(QuitTime,bytetext);
0xBCEC	0x4700E4  	ADD	W14, #4, W1
0xBCEE	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBCF0	0x780581  	MOV	W1, W11
0xBCF2	0x784510  	MOV.B	[W0], W10
0xBCF4	0x07A649  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,490 :: 		Glcd_Write_Text(bytetext,86,3,Black);
0xBCF6	0x470064  	ADD	W14, #4, W0
0xBCF8	0xB3C01D  	MOV.B	#1, W13
0xBCFA	0xB3C03C  	MOV.B	#3, W12
0xBCFC	0xB3C56B  	MOV.B	#86, W11
0xBCFE	0x780500  	MOV	W0, W10
0xBD00	0x07CD44  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,492 :: 		Glcd_Write_Text(HourText, 92,4,Black);
0xBD02	0x470068  	ADD	W14, #8, W0
0xBD04	0xB3C01D  	MOV.B	#1, W13
0xBD06	0xB3C04C  	MOV.B	#4, W12
0xBD08	0xB3C5CB  	MOV.B	#92, W11
0xBD0A	0x780500  	MOV	W0, W10
0xBD0C	0x07CD3E  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,493 :: 		Glcd_Write_Text(':',104,5,black);
0xBD0E	0x4700EE  	ADD	W14, #14, W1
0xBD10	0xB3C3A0  	MOV.B	#58, W0
0xBD12	0x785880  	MOV.B	W0, [W1++]
0xBD14	0xEF2000  	CLR	W0
0xBD16	0x785880  	MOV.B	W0, [W1++]
0xBD18	0x47006E  	ADD	W14, #14, W0
0xBD1A	0xB3C01D  	MOV.B	#1, W13
0xBD1C	0xB3C05C  	MOV.B	#5, W12
0xBD1E	0xB3C68B  	MOV.B	#104, W11
0xBD20	0x780500  	MOV	W0, W10
0xBD22	0x07CD33  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,494 :: 		Glcd_Write_Text(MinText, 109,4,Black);
0xBD24	0x47006B  	ADD	W14, #11, W0
0xBD26	0xB3C01D  	MOV.B	#1, W13
0xBD28	0xB3C04C  	MOV.B	#4, W12
0xBD2A	0xB3C6DB  	MOV.B	#109, W11
0xBD2C	0x780500  	MOV	W0, W10
0xBD2E	0x07CD2D  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,496 :: 		ValueDivide(QuitVolt, 255);
0xBD30	0xB3CFFB  	MOV.B	#255, W11
0xBD32	0x809FEA  	MOV	_QuitVolt, W10
0xBD34	0x07A6FD  	RCALL	_ValueDivide
;Battery_Meintenance.mpas,497 :: 		Glcd_Write_Text(Value_Text,86,2,Black);
0xBD36	0xB3C01D  	MOV.B	#1, W13
0xBD38	0xB3C02C  	MOV.B	#2, W12
0xBD3A	0xB3C56B  	MOV.B	#86, W11
0xBD3C	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0xBD3E	0x07CD25  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,499 :: 		if (Bkm_Status = 0) then
0xBD40	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xBD42	0xA7B010  	BTSC	[W0], BitPos(_Bkm_Status+0)
0xBD44	0x370006  	BRA	L__AkuTestBakim149
;Battery_Meintenance.mpas,500 :: 		Glcd_Write_Text(DisableText,86,5,Black) else
0xBD46	0xB3C01D  	MOV.B	#1, W13
0xBD48	0xB3C05C  	MOV.B	#5, W12
0xBD4A	0xB3C56B  	MOV.B	#86, W11
0xBD4C	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xBD4E	0x07CD1D  	RCALL	_Glcd_Write_Text
0xBD50	0x370008  	BRA	L__AkuTestBakim150
L__AkuTestBakim149:
;Battery_Meintenance.mpas,501 :: 		if (Bkm_Status = 1) then
0xBD52	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xBD54	0xA6B010  	BTSS	[W0], BitPos(_Bkm_Status+0)
0xBD56	0x370005  	BRA	L__AkuTestBakim152
;Battery_Meintenance.mpas,502 :: 		Glcd_Write_Text(EnableText,86,5,Black);
0xBD58	0xB3C01D  	MOV.B	#1, W13
0xBD5A	0xB3C05C  	MOV.B	#5, W12
0xBD5C	0xB3C56B  	MOV.B	#86, W11
0xBD5E	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xBD60	0x07CD14  	RCALL	_Glcd_Write_Text
L__AkuTestBakim152:
L__AkuTestBakim150:
;Battery_Meintenance.mpas,514 :: 		end;
L__AkuTestBakim136:
;Battery_Meintenance.mpas,515 :: 		end;
0xBD62	0x37FF4C  	BRA	L__AkuTestBakim109
L__AkuTestBakim110:
;Battery_Meintenance.mpas,516 :: 		end;
L__AkuTestBakim101:
;Battery_Meintenance.mpas,517 :: 		end;
0xBD64	0x37024F  	BRA	L__AkuTestBakim96
L__AkuTestBakim99:
;Battery_Meintenance.mpas,519 :: 		2: begin  // bakým çýkýþ gerilimi
0xBD66	0x90400E  	MOV.B	[W14+0], W0
0xBD68	0xE10462  	CP.B	W0, #2
0xBD6A	0x3A007C  	BRA NZ	L__AkuTestBakim156
L__AkuTestBakim398:
;Battery_Meintenance.mpas,521 :: 		asm clrwdt; end;
0xBD6C	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,523 :: 		ValueDivide(QuitVolt, 255);
0xBD6E	0xB3CFFB  	MOV.B	#255, W11
0xBD70	0x809FEA  	MOV	_QuitVolt, W10
0xBD72	0x07A6DE  	RCALL	_ValueDivide
;Battery_Meintenance.mpas,524 :: 		Glcd_Write_Text(Value_Text,86,2,Black);
0xBD74	0xB3C01D  	MOV.B	#1, W13
0xBD76	0xB3C02C  	MOV.B	#2, W12
0xBD78	0xB3C56B  	MOV.B	#86, W11
0xBD7A	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0xBD7C	0x07CD06  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,525 :: 		Glcd_Write_Char('V',116,2,Black);
0xBD7E	0xB3C01D  	MOV.B	#1, W13
0xBD80	0xB3C02C  	MOV.B	#2, W12
0xBD82	0xB3C74B  	MOV.B	#116, W11
0xBD84	0xB3C56A  	MOV.B	#86, W10
0xBD86	0x07AFF6  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,527 :: 		if (Ok_Button =0) then
0xBD88	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBD8A	0x37006B  	BRA	L__AkuTestBakim158
;Battery_Meintenance.mpas,529 :: 		while (Ok_Button =0) do
L__AkuTestBakim161:
0xBD8C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBD8E	0x370002  	BRA	L__AkuTestBakim162
;Battery_Meintenance.mpas,532 :: 		clrwdt;
0xBD90	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,534 :: 		end;
0xBD92	0x37FFFC  	BRA	L__AkuTestBakim161
L__AkuTestBakim162:
;Battery_Meintenance.mpas,536 :: 		Chng2 := 1;
0xBD94	0x214691  	MOV	#lo_addr(_Chng2), W1
0xBD96	0xB3C010  	MOV.B	#1, W0
0xBD98	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,537 :: 		While (Chng2 = 1) do
L__AkuTestBakim166:
0xBD9A	0x214690  	MOV	#lo_addr(_Chng2), W0
0xBD9C	0x784010  	MOV.B	[W0], W0
0xBD9E	0xE10461  	CP.B	W0, #1
0xBDA0	0x3A0060  	BRA NZ	L__AkuTestBakim167
L__AkuTestBakim399:
;Battery_Meintenance.mpas,540 :: 		clrwdt;
0xBDA2	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,543 :: 		if (Up_Button =0) then
0xBDA4	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBDA6	0x370014  	BRA	L__AkuTestBakim171
;Battery_Meintenance.mpas,546 :: 		ClrWDT;
0xBDA8	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,549 :: 		ButonStop       := 0;
0xBDAA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBDAC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,550 :: 		BtCounterNormal := 0;
0xBDAE	0xEF2000  	CLR	W0
0xBDB0	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,551 :: 		while (ButonStop = 0) do
L__AkuTestBakim174:
0xBDB2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBDB4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xBDB6	0x370002  	BRA	L__AkuTestBakim175
;Battery_Meintenance.mpas,553 :: 		asm clrwdt; end;
0xBDB8	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,554 :: 		end;
0xBDBA	0x37FFFB  	BRA	L__AkuTestBakim174
L__AkuTestBakim175:
;Battery_Meintenance.mpas,555 :: 		Inc(QuitVolt);
0xBDBC	0x200011  	MOV	#1, W1
0xBDBE	0x213FC0  	MOV	#lo_addr(_QuitVolt), W0
0xBDC0	0x408810  	ADD	W1, [W0], [W0]
;Battery_Meintenance.mpas,556 :: 		if (QuitVolt > NominalGerilim) then QuitVolt := NominalGerilim;
0xBDC2	0x809FE1  	MOV	_QuitVolt, W1
0xBDC4	0x470062  	ADD	W14, #2, W0
0xBDC6	0xE10810  	CP	W1, [W0]
0xBDC8	0x360002  	BRA LEU	L__AkuTestBakim179
L__AkuTestBakim400:
0xBDCA	0x90001E  	MOV	[W14+2], W0
0xBDCC	0x889FE0  	MOV	W0, _QuitVolt
L__AkuTestBakim179:
;Battery_Meintenance.mpas,558 :: 		end else
0xBDCE	0x37002B  	BRA	L__AkuTestBakim172
L__AkuTestBakim171:
;Battery_Meintenance.mpas,559 :: 		if (Down_Button =0) then
0xBDD0	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBDD2	0x370029  	BRA	L__AkuTestBakim182
;Battery_Meintenance.mpas,562 :: 		ClrWDT;
0xBDD4	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,565 :: 		ButonStop       := 0;
0xBDD6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBDD8	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,566 :: 		BtCounterNormal := 0;
0xBDDA	0xEF2000  	CLR	W0
0xBDDC	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,567 :: 		while (ButonStop = 0) do
L__AkuTestBakim185:
0xBDDE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBDE0	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xBDE2	0x370002  	BRA	L__AkuTestBakim186
;Battery_Meintenance.mpas,569 :: 		asm clrwdt; end;
0xBDE4	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,570 :: 		end;
0xBDE6	0x37FFFB  	BRA	L__AkuTestBakim185
L__AkuTestBakim186:
;Battery_Meintenance.mpas,571 :: 		Dec(QuitVolt);
0xBDE8	0x200011  	MOV	#1, W1
0xBDEA	0x213FC0  	MOV	#lo_addr(_QuitVolt), W0
0xBDEC	0x108810  	SUBR	W1, [W0], [W0]
;Battery_Meintenance.mpas,572 :: 		if (QuitVolt < (NominalGerilim*0.761)) then QuitVolt := (NominalGerilim*0.761);
0xBDEE	0x90001E  	MOV	[W14+2], W0
0xBDF0	0xEB0080  	CLR	W1
0xBDF2	0x07EE1B  	RCALL	__Long2Float
0xBDF4	0x2D0E52  	MOV	#53477, W2
0xBDF6	0x23F423  	MOV	#16194, W3
0xBDF8	0x07EE73  	RCALL	__Mul_FP
0xBDFA	0x980F30  	MOV	W0, [W14+22]
0xBDFC	0x980F41  	MOV	W1, [W14+24]
0xBDFE	0x809FE0  	MOV	_QuitVolt, W0
0xBE00	0xEB0080  	CLR	W1
0xBE02	0x07EE13  	RCALL	__Long2Float
0xBE04	0x90093E  	MOV	[W14+22], W2
0xBE06	0x9009CE  	MOV	[W14+24], W3
0xBE08	0x07050C  	RCALL	__Compare_Le_Fp
0xBE0A	0xE00000  	CP0	W0
0xBE0C	0xEF2000  	CLR	W0
0xBE0E	0x3D0001  	BRA GE	L__AkuTestBakim401
0xBE10	0xEEA000  	COM	W0
L__AkuTestBakim401:
0xBE12	0xE20000  	CP0	W0
0xBE14	0x320008  	BRA Z	L__AkuTestBakim190
L__AkuTestBakim402:
0xBE16	0x90001E  	MOV	[W14+2], W0
0xBE18	0xEB0080  	CLR	W1
0xBE1A	0x07EE07  	RCALL	__Long2Float
0xBE1C	0x2D0E52  	MOV	#53477, W2
0xBE1E	0x23F423  	MOV	#16194, W3
0xBE20	0x07EE5F  	RCALL	__Mul_FP
0xBE22	0x07A611  	RCALL	__Float2Longint
0xBE24	0x889FE0  	MOV	W0, _QuitVolt
L__AkuTestBakim190:
;Battery_Meintenance.mpas,573 :: 		end;
L__AkuTestBakim182:
L__AkuTestBakim172:
;Battery_Meintenance.mpas,575 :: 		ValueDivide(QuitVolt, 255);
0xBE26	0xB3CFFB  	MOV.B	#255, W11
0xBE28	0x809FEA  	MOV	_QuitVolt, W10
0xBE2A	0x07A682  	RCALL	_ValueDivide
;Battery_Meintenance.mpas,576 :: 		Glcd_Write_Text(Value_Text,86,2,0);
0xBE2C	0xEF201A  	CLR	W13
0xBE2E	0xB3C02C  	MOV.B	#2, W12
0xBE30	0xB3C56B  	MOV.B	#86, W11
0xBE32	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0xBE34	0x07CCAA  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,577 :: 		Glcd_Write_Char('V',116,2,0);
0xBE36	0xEF201A  	CLR	W13
0xBE38	0xB3C02C  	MOV.B	#2, W12
0xBE3A	0xB3C74B  	MOV.B	#116, W11
0xBE3C	0xB3C56A  	MOV.B	#86, W10
0xBE3E	0x07AF9A  	RCALL	_Glcd_Write_Char
;Battery_Meintenance.mpas,580 :: 		if (Ok_Button =0) then
0xBE40	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBE42	0x37000E  	BRA	L__AkuTestBakim193
;Battery_Meintenance.mpas,582 :: 		while (Ok_Button =0) do
L__AkuTestBakim196:
0xBE44	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBE46	0x370002  	BRA	L__AkuTestBakim197
;Battery_Meintenance.mpas,585 :: 		clrwdt;
0xBE48	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,587 :: 		end;
0xBE4A	0x37FFFC  	BRA	L__AkuTestBakim196
L__AkuTestBakim197:
;Battery_Meintenance.mpas,589 :: 		Chng2 := 0;
0xBE4C	0x214691  	MOV	#lo_addr(_Chng2), W1
0xBE4E	0xEF2000  	CLR	W0
0xBE50	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,590 :: 		EEPROM_Write(EE_QuitVoltEeAddr, QuitVolt);
0xBE52	0x809FEC  	MOV	_QuitVolt, W12
0xBE54	0x2F63EA  	MOV	#63038, W10
0xBE56	0x2007FB  	MOV	#127, W11
0xBE58	0x07AA9E  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,591 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__AkuTestBakim201:
0xBE5A	0xBF8760  	MOV	NVMCON, WREG
0xBE5C	0xE10061  	CP	W0, #1
0xBE5E	0x32FFFD  	BRA Z	L__AkuTestBakim201
L__AkuTestBakim403:
;Battery_Meintenance.mpas,594 :: 		end;
L__AkuTestBakim193:
;Battery_Meintenance.mpas,595 :: 		end;
0xBE60	0x37FF9C  	BRA	L__AkuTestBakim166
L__AkuTestBakim167:
;Battery_Meintenance.mpas,596 :: 		end;
L__AkuTestBakim158:
;Battery_Meintenance.mpas,601 :: 		end;
0xBE62	0x3701D0  	BRA	L__AkuTestBakim96
L__AkuTestBakim156:
;Battery_Meintenance.mpas,603 :: 		3: begin // bakým çýkýþ saati
0xBE64	0x90400E  	MOV.B	[W14+0], W0
0xBE66	0xE10463  	CP.B	W0, #3
0xBE68	0x3A006F  	BRA NZ	L__AkuTestBakim207
L__AkuTestBakim404:
;Battery_Meintenance.mpas,605 :: 		asm clrwdt; end;
0xBE6A	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,607 :: 		Glcd_Write_Text(App_Hour,104,3,Black);
0xBE6C	0xB3C01D  	MOV.B	#1, W13
0xBE6E	0xB3C03C  	MOV.B	#3, W12
0xBE70	0xB3C68B  	MOV.B	#104, W11
0xBE72	0x2140FA  	MOV	#lo_addr(_App_Hour), W10
0xBE74	0x07CC8A  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,608 :: 		ByteToStr(QuitTime,bytetext);
0xBE76	0x4700E4  	ADD	W14, #4, W1
0xBE78	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBE7A	0x780581  	MOV	W1, W11
0xBE7C	0x784510  	MOV.B	[W0], W10
0xBE7E	0x07A584  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,609 :: 		Glcd_Write_Text(bytetext,86,3,Black);
0xBE80	0x470064  	ADD	W14, #4, W0
0xBE82	0xB3C01D  	MOV.B	#1, W13
0xBE84	0xB3C03C  	MOV.B	#3, W12
0xBE86	0xB3C56B  	MOV.B	#86, W11
0xBE88	0x780500  	MOV	W0, W10
0xBE8A	0x07CC7F  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,611 :: 		if (Ok_Button =0) then
0xBE8C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBE8E	0x37005B  	BRA	L__AkuTestBakim209
;Battery_Meintenance.mpas,614 :: 		while (Ok_Button =0) do
L__AkuTestBakim212:
0xBE90	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBE92	0x370002  	BRA	L__AkuTestBakim213
;Battery_Meintenance.mpas,617 :: 		clrwdt;
0xBE94	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,619 :: 		end;
0xBE96	0x37FFFC  	BRA	L__AkuTestBakim212
L__AkuTestBakim213:
;Battery_Meintenance.mpas,621 :: 		Chng3 := 1;
0xBE98	0x214681  	MOV	#lo_addr(_Chng3), W1
0xBE9A	0xB3C010  	MOV.B	#1, W0
0xBE9C	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,622 :: 		While (Chng3 = 1) do
L__AkuTestBakim217:
0xBE9E	0x214680  	MOV	#lo_addr(_Chng3), W0
0xBEA0	0x784010  	MOV.B	[W0], W0
0xBEA2	0xE10461  	CP.B	W0, #1
0xBEA4	0x3A0050  	BRA NZ	L__AkuTestBakim218
L__AkuTestBakim405:
;Battery_Meintenance.mpas,625 :: 		clrwdt;
0xBEA6	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,628 :: 		if (Up_Button =0) then
0xBEA8	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBEAA	0x370015  	BRA	L__AkuTestBakim222
;Battery_Meintenance.mpas,631 :: 		ClrWDT;
0xBEAC	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,634 :: 		ButonStop       := 0;
0xBEAE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBEB0	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,635 :: 		BtCounterNormal := 0;
0xBEB2	0xEF2000  	CLR	W0
0xBEB4	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,636 :: 		while (ButonStop = 0) do
L__AkuTestBakim225:
0xBEB6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBEB8	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xBEBA	0x370002  	BRA	L__AkuTestBakim226
;Battery_Meintenance.mpas,638 :: 		asm clrwdt; end;
0xBEBC	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,639 :: 		end;
0xBEBE	0x37FFFB  	BRA	L__AkuTestBakim225
L__AkuTestBakim226:
;Battery_Meintenance.mpas,640 :: 		Inc(QuitTime);
0xBEC0	0xB3C011  	MOV.B	#1, W1
0xBEC2	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBEC4	0x40C810  	ADD.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,641 :: 		if (QuitTime > 24) then QuitTime := 24;
0xBEC6	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBEC8	0x784010  	MOV.B	[W0], W0
0xBECA	0xE10478  	CP.B	W0, #24
0xBECC	0x360003  	BRA LEU	L__AkuTestBakim230
L__AkuTestBakim406:
0xBECE	0x213D41  	MOV	#lo_addr(_QuitTime), W1
0xBED0	0xB3C180  	MOV.B	#24, W0
0xBED2	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim230:
;Battery_Meintenance.mpas,643 :: 		end else
0xBED4	0x370016  	BRA	L__AkuTestBakim223
L__AkuTestBakim222:
;Battery_Meintenance.mpas,644 :: 		if (Down_Button =0) then
0xBED6	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xBED8	0x370014  	BRA	L__AkuTestBakim233
;Battery_Meintenance.mpas,647 :: 		ClrWDT;
0xBEDA	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,650 :: 		ButonStop       := 0;
0xBEDC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBEDE	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,651 :: 		BtCounterNormal := 0;
0xBEE0	0xEF2000  	CLR	W0
0xBEE2	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,652 :: 		while (ButonStop = 0) do
L__AkuTestBakim236:
0xBEE4	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBEE6	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xBEE8	0x370002  	BRA	L__AkuTestBakim237
;Battery_Meintenance.mpas,654 :: 		asm clrwdt; end;
0xBEEA	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,655 :: 		end;
0xBEEC	0x37FFFB  	BRA	L__AkuTestBakim236
L__AkuTestBakim237:
;Battery_Meintenance.mpas,656 :: 		Dec(QuitTime);
0xBEEE	0xB3C011  	MOV.B	#1, W1
0xBEF0	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBEF2	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,657 :: 		if (QuitTime < 1) then QuitTime := 1;
0xBEF4	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBEF6	0x784010  	MOV.B	[W0], W0
0xBEF8	0xE10461  	CP.B	W0, #1
0xBEFA	0x310003  	BRA GEU	L__AkuTestBakim241
L__AkuTestBakim407:
0xBEFC	0x213D41  	MOV	#lo_addr(_QuitTime), W1
0xBEFE	0xB3C010  	MOV.B	#1, W0
0xBF00	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim241:
;Battery_Meintenance.mpas,658 :: 		end;
L__AkuTestBakim233:
L__AkuTestBakim223:
;Battery_Meintenance.mpas,660 :: 		ByteToStr(QuitTime,bytetext);
0xBF02	0x4700E4  	ADD	W14, #4, W1
0xBF04	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBF06	0x780581  	MOV	W1, W11
0xBF08	0x784510  	MOV.B	[W0], W10
0xBF0A	0x07A53E  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,661 :: 		Glcd_Write_Text(bytetext,86,3,0);
0xBF0C	0x470064  	ADD	W14, #4, W0
0xBF0E	0xEF201A  	CLR	W13
0xBF10	0xB3C03C  	MOV.B	#3, W12
0xBF12	0xB3C56B  	MOV.B	#86, W11
0xBF14	0x780500  	MOV	W0, W10
0xBF16	0x07CC39  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,662 :: 		Glcd_Write_Text(App_Hour,104,3,0);
0xBF18	0xEF201A  	CLR	W13
0xBF1A	0xB3C03C  	MOV.B	#3, W12
0xBF1C	0xB3C68B  	MOV.B	#104, W11
0xBF1E	0x2140FA  	MOV	#lo_addr(_App_Hour), W10
0xBF20	0x07CC34  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,665 :: 		if (Ok_Button =0) then
0xBF22	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBF24	0x37000F  	BRA	L__AkuTestBakim244
;Battery_Meintenance.mpas,667 :: 		while (Ok_Button =0) do
L__AkuTestBakim247:
0xBF26	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBF28	0x370002  	BRA	L__AkuTestBakim248
;Battery_Meintenance.mpas,670 :: 		clrwdt;
0xBF2A	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,672 :: 		end;
0xBF2C	0x37FFFC  	BRA	L__AkuTestBakim247
L__AkuTestBakim248:
;Battery_Meintenance.mpas,674 :: 		Chng3 := 0;
0xBF2E	0x214681  	MOV	#lo_addr(_Chng3), W1
0xBF30	0xEF2000  	CLR	W0
0xBF32	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,675 :: 		EEPROM_Write(EE_QuitTimeEeAddr, QuitTime);
0xBF34	0x213D40  	MOV	#lo_addr(_QuitTime), W0
0xBF36	0xFB8610  	ZE	[W0], W12
0xBF38	0x2F640A  	MOV	#63040, W10
0xBF3A	0x2007FB  	MOV	#127, W11
0xBF3C	0x07AA2C  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,676 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__AkuTestBakim252:
0xBF3E	0xBF8760  	MOV	NVMCON, WREG
0xBF40	0xE10061  	CP	W0, #1
0xBF42	0x32FFFD  	BRA Z	L__AkuTestBakim252
L__AkuTestBakim408:
;Battery_Meintenance.mpas,679 :: 		end;
L__AkuTestBakim244:
;Battery_Meintenance.mpas,680 :: 		end;
0xBF44	0x37FFAC  	BRA	L__AkuTestBakim217
L__AkuTestBakim218:
;Battery_Meintenance.mpas,681 :: 		end;
L__AkuTestBakim209:
;Battery_Meintenance.mpas,685 :: 		end;
0xBF46	0x37015E  	BRA	L__AkuTestBakim96
L__AkuTestBakim207:
;Battery_Meintenance.mpas,773 :: 		4: begin  // bakým giriþ saati
0xBF48	0x90400E  	MOV.B	[W14+0], W0
0xBF4A	0xE10464  	CP.B	W0, #4
0xBF4C	0x3A00E0  	BRA NZ	L__AkuTestBakim258
L__AkuTestBakim409:
;Battery_Meintenance.mpas,775 :: 		asm clrwdt; end;
0xBF4E	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,777 :: 		HourText[1]  := (Bkm_Hour div 10)+48;
0xBF50	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xBF52	0xFB0010  	SE	[W0], W0
0xBF54	0x2000A2  	MOV	#10, W2
0xBF56	0x090011  	REPEAT	#17
0xBF58	0xD80002  	DIV.S	W0, W2
0xBF5A	0x780100  	MOV	W0, W2
0xBF5C	0xB3C301  	MOV.B	#48, W1
0xBF5E	0x470068  	ADD	W14, #8, W0
0xBF60	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,778 :: 		HourText[2]  := (Bkm_Hour mod 10)+48;
0xBF62	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xBF64	0xFB0010  	SE	[W0], W0
0xBF66	0x2000A2  	MOV	#10, W2
0xBF68	0x090011  	REPEAT	#17
0xBF6A	0xD80002  	DIV.S	W0, W2
0xBF6C	0x780101  	MOV	W1, W2
0xBF6E	0xB3C301  	MOV.B	#48, W1
0xBF70	0x470069  	ADD	W14, #9, W0
0xBF72	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,779 :: 		MinText[1]   := (Bkm_Min div 10)+48;
0xBF74	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xBF76	0xFB0010  	SE	[W0], W0
0xBF78	0x2000A2  	MOV	#10, W2
0xBF7A	0x090011  	REPEAT	#17
0xBF7C	0xD80002  	DIV.S	W0, W2
0xBF7E	0x780100  	MOV	W0, W2
0xBF80	0xB3C301  	MOV.B	#48, W1
0xBF82	0x47006B  	ADD	W14, #11, W0
0xBF84	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,780 :: 		MinText[2]   := (Bkm_Min mod 10)+48;
0xBF86	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xBF88	0xFB0010  	SE	[W0], W0
0xBF8A	0x2000A2  	MOV	#10, W2
0xBF8C	0x090011  	REPEAT	#17
0xBF8E	0xD80002  	DIV.S	W0, W2
0xBF90	0x780101  	MOV	W1, W2
0xBF92	0xB3C301  	MOV.B	#48, W1
0xBF94	0x47006C  	ADD	W14, #12, W0
0xBF96	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,782 :: 		Glcd_Write_Text(HourText, 92,4,Black);
0xBF98	0x470068  	ADD	W14, #8, W0
0xBF9A	0xB3C01D  	MOV.B	#1, W13
0xBF9C	0xB3C04C  	MOV.B	#4, W12
0xBF9E	0xB3C5CB  	MOV.B	#92, W11
0xBFA0	0x780500  	MOV	W0, W10
0xBFA2	0x07CBF3  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,783 :: 		Glcd_Write_Text(':',104,4,black);
0xBFA4	0x4700EE  	ADD	W14, #14, W1
0xBFA6	0xB3C3A0  	MOV.B	#58, W0
0xBFA8	0x785880  	MOV.B	W0, [W1++]
0xBFAA	0xEF2000  	CLR	W0
0xBFAC	0x785880  	MOV.B	W0, [W1++]
0xBFAE	0x47006E  	ADD	W14, #14, W0
0xBFB0	0xB3C01D  	MOV.B	#1, W13
0xBFB2	0xB3C04C  	MOV.B	#4, W12
0xBFB4	0xB3C68B  	MOV.B	#104, W11
0xBFB6	0x780500  	MOV	W0, W10
0xBFB8	0x07CBE8  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,784 :: 		Glcd_Write_Text(MinText, 109,4,Black);
0xBFBA	0x47006B  	ADD	W14, #11, W0
0xBFBC	0xB3C01D  	MOV.B	#1, W13
0xBFBE	0xB3C04C  	MOV.B	#4, W12
0xBFC0	0xB3C6DB  	MOV.B	#109, W11
0xBFC2	0x780500  	MOV	W0, W10
0xBFC4	0x07CBE2  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,786 :: 		if (Ok_Button =0) then
0xBFC6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBFC8	0x3700A1  	BRA	L__AkuTestBakim260
;Battery_Meintenance.mpas,789 :: 		while (Ok_Button =0) do
L__AkuTestBakim263:
0xBFCA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xBFCC	0x370002  	BRA	L__AkuTestBakim264
;Battery_Meintenance.mpas,792 :: 		clrwdt;
0xBFCE	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,794 :: 		end;
0xBFD0	0x37FFFC  	BRA	L__AkuTestBakim263
L__AkuTestBakim264:
;Battery_Meintenance.mpas,796 :: 		Chng5 := 1;
0xBFD2	0x213F91  	MOV	#lo_addr(_Chng5), W1
0xBFD4	0xB3C010  	MOV.B	#1, W0
0xBFD6	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,797 :: 		While (Chng5 = 1) do
L__AkuTestBakim268:
0xBFD8	0x213F90  	MOV	#lo_addr(_Chng5), W0
0xBFDA	0x784010  	MOV.B	[W0], W0
0xBFDC	0xE10461  	CP.B	W0, #1
0xBFDE	0x3A0096  	BRA NZ	L__AkuTestBakim269
L__AkuTestBakim410:
;Battery_Meintenance.mpas,800 :: 		ClrWDT;
0xBFE0	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,803 :: 		if (Up_Button =0) then
0xBFE2	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0xBFE4	0x37001F  	BRA	L__AkuTestBakim273
;Battery_Meintenance.mpas,806 :: 		ButonStop       := 0;
0xBFE6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBFE8	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,807 :: 		BtCounterNormal := 0;
0xBFEA	0xEF2000  	CLR	W0
0xBFEC	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,808 :: 		while (ButonStop = 0) do
L__AkuTestBakim276:
0xBFEE	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xBFF0	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xBFF2	0x370002  	BRA	L__AkuTestBakim277
;Battery_Meintenance.mpas,810 :: 		asm clrwdt; end;
0xBFF4	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,811 :: 		end;
0xBFF6	0x37FFFB  	BRA	L__AkuTestBakim276
L__AkuTestBakim277:
;Battery_Meintenance.mpas,813 :: 		Bkm_Min := Bkm_Min + 15; // 15 dk bir artýr
0xBFF8	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xBFFA	0xFB0010  	SE	[W0], W0
0xBFFC	0x4000EF  	ADD	W0, #15, W1
0xBFFE	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC000	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,814 :: 		if (Bkm_Min > 55) then
0xC002	0xB3C370  	MOV.B	#55, W0
0xC004	0xE10C00  	CP.B	W1, W0
0xC006	0x34000D  	BRA LE	L__AkuTestBakim281
L__AkuTestBakim411:
;Battery_Meintenance.mpas,816 :: 		Bkm_Min := 0;
0xC008	0x2140E1  	MOV	#lo_addr(_Bkm_Min), W1
0xC00A	0xEF2000  	CLR	W0
0xC00C	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,817 :: 		Inc(Bkm_Hour);
0xC00E	0xB3C011  	MOV.B	#1, W1
0xC010	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC012	0x40C810  	ADD.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,818 :: 		if (Bkm_Hour > 23) then Bkm_Hour := 0;
0xC014	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC016	0x784010  	MOV.B	[W0], W0
0xC018	0xE10477  	CP.B	W0, #23
0xC01A	0x340003  	BRA LE	L__AkuTestBakim284
L__AkuTestBakim412:
0xC01C	0x214141  	MOV	#lo_addr(_Bkm_Hour), W1
0xC01E	0xEF2000  	CLR	W0
0xC020	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim284:
;Battery_Meintenance.mpas,819 :: 		end;
L__AkuTestBakim281:
;Battery_Meintenance.mpas,821 :: 		end else
0xC022	0x37001F  	BRA	L__AkuTestBakim274
L__AkuTestBakim273:
;Battery_Meintenance.mpas,822 :: 		if (Down_Button =0) then
0xC024	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xC026	0x37001D  	BRA	L__AkuTestBakim287
;Battery_Meintenance.mpas,825 :: 		ButonStop       := 0;
0xC028	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xC02A	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;Battery_Meintenance.mpas,826 :: 		BtCounterNormal := 0;
0xC02C	0xEF2000  	CLR	W0
0xC02E	0x8891A0  	MOV	W0, _BtCounterNormal
;Battery_Meintenance.mpas,827 :: 		while (ButonStop = 0) do
L__AkuTestBakim290:
0xC030	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xC032	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0xC034	0x370002  	BRA	L__AkuTestBakim291
;Battery_Meintenance.mpas,829 :: 		asm clrwdt; end;
0xC036	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,830 :: 		end;
0xC038	0x37FFFB  	BRA	L__AkuTestBakim290
L__AkuTestBakim291:
;Battery_Meintenance.mpas,831 :: 		Bkm_Min := Bkm_Min - 15; // 15 dk bir azalt
0xC03A	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC03C	0xFB0010  	SE	[W0], W0
0xC03E	0x5000EF  	SUB	W0, #15, W1
0xC040	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC042	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,832 :: 		if (Bkm_Min < 5) then
0xC044	0xE10C65  	CP.B	W1, #5
0xC046	0x3D000D  	BRA GE	L__AkuTestBakim295
L__AkuTestBakim413:
;Battery_Meintenance.mpas,834 :: 		Bkm_Min := 55;
0xC048	0x2140E1  	MOV	#lo_addr(_Bkm_Min), W1
0xC04A	0xB3C370  	MOV.B	#55, W0
0xC04C	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,835 :: 		Dec(Bkm_Hour);
0xC04E	0xB3C011  	MOV.B	#1, W1
0xC050	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC052	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,836 :: 		if (Bkm_Hour < 1) then Bkm_Hour := 23;
0xC054	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC056	0x784010  	MOV.B	[W0], W0
0xC058	0xE10461  	CP.B	W0, #1
0xC05A	0x3D0003  	BRA GE	L__AkuTestBakim298
L__AkuTestBakim414:
0xC05C	0x214141  	MOV	#lo_addr(_Bkm_Hour), W1
0xC05E	0xB3C170  	MOV.B	#23, W0
0xC060	0x784880  	MOV.B	W0, [W1]
L__AkuTestBakim298:
;Battery_Meintenance.mpas,837 :: 		end;
L__AkuTestBakim295:
;Battery_Meintenance.mpas,838 :: 		end;
L__AkuTestBakim287:
L__AkuTestBakim274:
;Battery_Meintenance.mpas,840 :: 		HourText[1]  := (Bkm_Hour div 10)+48;
0xC062	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC064	0xFB0010  	SE	[W0], W0
0xC066	0x2000A2  	MOV	#10, W2
0xC068	0x090011  	REPEAT	#17
0xC06A	0xD80002  	DIV.S	W0, W2
0xC06C	0x780100  	MOV	W0, W2
0xC06E	0xB3C301  	MOV.B	#48, W1
0xC070	0x470068  	ADD	W14, #8, W0
0xC072	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,841 :: 		HourText[2]  := (Bkm_Hour mod 10)+48;
0xC074	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC076	0xFB0010  	SE	[W0], W0
0xC078	0x2000A2  	MOV	#10, W2
0xC07A	0x090011  	REPEAT	#17
0xC07C	0xD80002  	DIV.S	W0, W2
0xC07E	0x780101  	MOV	W1, W2
0xC080	0xB3C301  	MOV.B	#48, W1
0xC082	0x470069  	ADD	W14, #9, W0
0xC084	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,842 :: 		MinText[1]   := (Bkm_Min div 10)+48;
0xC086	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC088	0xFB0010  	SE	[W0], W0
0xC08A	0x2000A2  	MOV	#10, W2
0xC08C	0x090011  	REPEAT	#17
0xC08E	0xD80002  	DIV.S	W0, W2
0xC090	0x780100  	MOV	W0, W2
0xC092	0xB3C301  	MOV.B	#48, W1
0xC094	0x47006B  	ADD	W14, #11, W0
0xC096	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,843 :: 		MinText[2]   := (Bkm_Min mod 10)+48;
0xC098	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC09A	0xFB0010  	SE	[W0], W0
0xC09C	0x2000A2  	MOV	#10, W2
0xC09E	0x090011  	REPEAT	#17
0xC0A0	0xD80002  	DIV.S	W0, W2
0xC0A2	0x780101  	MOV	W1, W2
0xC0A4	0xB3C301  	MOV.B	#48, W1
0xC0A6	0x47006C  	ADD	W14, #12, W0
0xC0A8	0x414801  	ADD.B	W2, W1, [W0]
;Battery_Meintenance.mpas,845 :: 		Glcd_Write_Text(HourText, 92,4,0);
0xC0AA	0x470068  	ADD	W14, #8, W0
0xC0AC	0xEF201A  	CLR	W13
0xC0AE	0xB3C04C  	MOV.B	#4, W12
0xC0B0	0xB3C5CB  	MOV.B	#92, W11
0xC0B2	0x780500  	MOV	W0, W10
0xC0B4	0x07CB6A  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,846 :: 		Glcd_Write_Text(':',104,4,0);
0xC0B6	0x4700EE  	ADD	W14, #14, W1
0xC0B8	0xB3C3A0  	MOV.B	#58, W0
0xC0BA	0x785880  	MOV.B	W0, [W1++]
0xC0BC	0xEF2000  	CLR	W0
0xC0BE	0x785880  	MOV.B	W0, [W1++]
0xC0C0	0x47006E  	ADD	W14, #14, W0
0xC0C2	0xEF201A  	CLR	W13
0xC0C4	0xB3C04C  	MOV.B	#4, W12
0xC0C6	0xB3C68B  	MOV.B	#104, W11
0xC0C8	0x780500  	MOV	W0, W10
0xC0CA	0x07CB5F  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,847 :: 		Glcd_Write_Text(MinText, 109,4,0);
0xC0CC	0x47006B  	ADD	W14, #11, W0
0xC0CE	0xEF201A  	CLR	W13
0xC0D0	0xB3C04C  	MOV.B	#4, W12
0xC0D2	0xB3C6DB  	MOV.B	#109, W11
0xC0D4	0x780500  	MOV	W0, W10
0xC0D6	0x07CB59  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,849 :: 		Bakim_Start_Time := Bkm_Hour * 100;
0xC0D8	0x214140  	MOV	#lo_addr(_Bkm_Hour), W0
0xC0DA	0xFB0090  	SE	[W0], W1
0xC0DC	0x200640  	MOV	#100, W0
0xC0DE	0xB98900  	MUL.SS	W1, W0, W2
0xC0E0	0x889E92  	MOV	W2, _Bakim_Start_Time
;Battery_Meintenance.mpas,850 :: 		Bakim_Start_Time := Bakim_Start_Time + Bkm_Min;
0xC0E2	0x2140E0  	MOV	#lo_addr(_Bkm_Min), W0
0xC0E4	0xFB0090  	SE	[W0], W1
0xC0E6	0x213D20  	MOV	#lo_addr(_Bakim_Start_Time), W0
0xC0E8	0x410801  	ADD	W2, W1, [W0]
;Battery_Meintenance.mpas,854 :: 		if (Ok_Button =0) then
0xC0EA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC0EC	0x37000E  	BRA	L__AkuTestBakim301
;Battery_Meintenance.mpas,857 :: 		while (Ok_Button =0) do
L__AkuTestBakim304:
0xC0EE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC0F0	0x370002  	BRA	L__AkuTestBakim305
;Battery_Meintenance.mpas,860 :: 		clrwdt;
0xC0F2	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,862 :: 		end;
0xC0F4	0x37FFFC  	BRA	L__AkuTestBakim304
L__AkuTestBakim305:
;Battery_Meintenance.mpas,864 :: 		Chng5 := 0;
0xC0F6	0x213F91  	MOV	#lo_addr(_Chng5), W1
0xC0F8	0xEF2000  	CLR	W0
0xC0FA	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,865 :: 		EEPROM_Write(EE_BkmStartTimeEeAddr, Bakim_Start_Time);
0xC0FC	0x809E9C  	MOV	_Bakim_Start_Time, W12
0xC0FE	0x2F644A  	MOV	#63044, W10
0xC100	0x2007FB  	MOV	#127, W11
0xC102	0x07A949  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,866 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__AkuTestBakim309:
0xC104	0xBF8760  	MOV	NVMCON, WREG
0xC106	0xE10061  	CP	W0, #1
0xC108	0x32FFFD  	BRA Z	L__AkuTestBakim309
L__AkuTestBakim415:
;Battery_Meintenance.mpas,868 :: 		end;
L__AkuTestBakim301:
;Battery_Meintenance.mpas,869 :: 		end;
0xC10A	0x37FF66  	BRA	L__AkuTestBakim268
L__AkuTestBakim269:
;Battery_Meintenance.mpas,870 :: 		end;
L__AkuTestBakim260:
;Battery_Meintenance.mpas,876 :: 		end;
0xC10C	0x37007B  	BRA	L__AkuTestBakim96
L__AkuTestBakim258:
;Battery_Meintenance.mpas,878 :: 		5: begin // baþlat/bitir
0xC10E	0x90400E  	MOV.B	[W14+0], W0
0xC110	0xE10465  	CP.B	W0, #5
0xC112	0x3A006A  	BRA NZ	L__AkuTestBakim315
L__AkuTestBakim416:
;Battery_Meintenance.mpas,880 :: 		asm clrwdt; end;
0xC114	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,882 :: 		if (Bkm_Status = 0) then
0xC116	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC118	0xA7B010  	BTSC	[W0], BitPos(_Bkm_Status+0)
0xC11A	0x370006  	BRA	L__AkuTestBakim317
;Battery_Meintenance.mpas,883 :: 		Glcd_Write_Text(DisableText,86,5,Black) else
0xC11C	0xB3C01D  	MOV.B	#1, W13
0xC11E	0xB3C05C  	MOV.B	#5, W12
0xC120	0xB3C56B  	MOV.B	#86, W11
0xC122	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xC124	0x07CB32  	RCALL	_Glcd_Write_Text
0xC126	0x370008  	BRA	L__AkuTestBakim318
L__AkuTestBakim317:
;Battery_Meintenance.mpas,884 :: 		if (Bkm_Status = 1) then
0xC128	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC12A	0xA6B010  	BTSS	[W0], BitPos(_Bkm_Status+0)
0xC12C	0x370005  	BRA	L__AkuTestBakim320
;Battery_Meintenance.mpas,885 :: 		Glcd_Write_Text(EnableText,86,5,Black);
0xC12E	0xB3C01D  	MOV.B	#1, W13
0xC130	0xB3C05C  	MOV.B	#5, W12
0xC132	0xB3C56B  	MOV.B	#86, W11
0xC134	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xC136	0x07CB29  	RCALL	_Glcd_Write_Text
L__AkuTestBakim320:
L__AkuTestBakim318:
;Battery_Meintenance.mpas,888 :: 		clrwdt;
0xC138	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,891 :: 		if (Ok_Button =0) then
0xC13A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC13C	0x370054  	BRA	L__AkuTestBakim323
;Battery_Meintenance.mpas,896 :: 		while (Ok_Button =0) do
L__AkuTestBakim326:
0xC13E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC140	0x370002  	BRA	L__AkuTestBakim327
;Battery_Meintenance.mpas,899 :: 		clrwdt;
0xC142	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,901 :: 		end;
0xC144	0x37FFFC  	BRA	L__AkuTestBakim326
L__AkuTestBakim327:
;Battery_Meintenance.mpas,903 :: 		Chng6 := 1;
0xC146	0x213F81  	MOV	#lo_addr(_Chng6), W1
0xC148	0xB3C010  	MOV.B	#1, W0
0xC14A	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,905 :: 		While (Chng6 = 1) do
L__AkuTestBakim331:
0xC14C	0x213F80  	MOV	#lo_addr(_Chng6), W0
0xC14E	0x784010  	MOV.B	[W0], W0
0xC150	0xE10461  	CP.B	W0, #1
0xC152	0x3A0049  	BRA NZ	L__AkuTestBakim332
L__AkuTestBakim417:
;Battery_Meintenance.mpas,908 :: 		clrwdt;
0xC154	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,910 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0xC156	0xA9000E  	BCLR	W7, #0
0xC158	0xAEA2CF  	BTSS	Up_Button, BitPos(Up_Button+0)
0xC15A	0xA8000E  	BSET	W7, #0
0xC15C	0xAE62D5  	BTSS	Down_Button, BitPos(Down_Button+0)
0xC15E	0xA80042  	BSET	SR, #0
0xC160	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xC162	0xA90042  	BCLR	SR, #0
0xC164	0xAE000E  	BTSS	W7, #0
0xC166	0xAF0042  	BTSC	SR, #0
0xC168	0x370002  	BRA	L__AkuTestBakim418
0xC16A	0xA9000E  	BCLR	W7, #0
0xC16C	0x370001  	BRA	L__AkuTestBakim421
L__AkuTestBakim418:
0xC16E	0xA8000E  	BSET	W7, #0
L__AkuTestBakim421:
0xC170	0xAE000E  	BTSS	W7, #0
0xC172	0x370014  	BRA	L__AkuTestBakim336
;Battery_Meintenance.mpas,912 :: 		while ((Up_Button =0)or(Down_Button =0)) do
L__AkuTestBakim339:
0xC174	0xA9000E  	BCLR	W7, #0
0xC176	0xAEA2CF  	BTSS	Up_Button, BitPos(Up_Button+0)
0xC178	0xA8000E  	BSET	W7, #0
0xC17A	0xAE62D5  	BTSS	Down_Button, BitPos(Down_Button+0)
0xC17C	0xA80042  	BSET	SR, #0
0xC17E	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0xC180	0xA90042  	BCLR	SR, #0
0xC182	0xAE000E  	BTSS	W7, #0
0xC184	0xAF0042  	BTSC	SR, #0
0xC186	0x370002  	BRA	L__AkuTestBakim422
0xC188	0xA9000E  	BCLR	W7, #0
0xC18A	0x370001  	BRA	L__AkuTestBakim425
L__AkuTestBakim422:
0xC18C	0xA8000E  	BSET	W7, #0
L__AkuTestBakim425:
0xC18E	0xAE000E  	BTSS	W7, #0
0xC190	0x370002  	BRA	L__AkuTestBakim340
;Battery_Meintenance.mpas,915 :: 		clrwdt;
0xC192	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,917 :: 		end;
0xC194	0x37FFEF  	BRA	L__AkuTestBakim339
L__AkuTestBakim340:
;Battery_Meintenance.mpas,919 :: 		Bkm_Status := not Bkm_Status ;
0xC196	0x212A41  	MOV	#lo_addr(_Bkm_Status), W1
0xC198	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC19A	0xA2B010  	BTG	[W0], BitPos(_Bkm_Status+0)
;Battery_Meintenance.mpas,921 :: 		end;
L__AkuTestBakim336:
;Battery_Meintenance.mpas,924 :: 		if (Bkm_Status = 0) then
0xC19C	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC19E	0xA7B010  	BTSC	[W0], BitPos(_Bkm_Status+0)
0xC1A0	0x370006  	BRA	L__AkuTestBakim344
;Battery_Meintenance.mpas,925 :: 		Glcd_Write_Text(DisableText,86,5,0) else
0xC1A2	0xEF201A  	CLR	W13
0xC1A4	0xB3C05C  	MOV.B	#5, W12
0xC1A6	0xB3C56B  	MOV.B	#86, W11
0xC1A8	0x21415A  	MOV	#lo_addr(_DisableText), W10
0xC1AA	0x07CAEF  	RCALL	_Glcd_Write_Text
0xC1AC	0x370008  	BRA	L__AkuTestBakim345
L__AkuTestBakim344:
;Battery_Meintenance.mpas,926 :: 		if (Bkm_Status = 1) then
0xC1AE	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC1B0	0xA6B010  	BTSS	[W0], BitPos(_Bkm_Status+0)
0xC1B2	0x370005  	BRA	L__AkuTestBakim347
;Battery_Meintenance.mpas,927 :: 		Glcd_Write_Text(EnableText,86,5,0);
0xC1B4	0xEF201A  	CLR	W13
0xC1B6	0xB3C05C  	MOV.B	#5, W12
0xC1B8	0xB3C56B  	MOV.B	#86, W11
0xC1BA	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0xC1BC	0x07CAE6  	RCALL	_Glcd_Write_Text
L__AkuTestBakim347:
L__AkuTestBakim345:
;Battery_Meintenance.mpas,929 :: 		if (Ok_Button =0) then
0xC1BE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC1C0	0x370011  	BRA	L__AkuTestBakim350
;Battery_Meintenance.mpas,934 :: 		while (Ok_Button=0) do
L__AkuTestBakim353:
0xC1C2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC1C4	0x370002  	BRA	L__AkuTestBakim354
;Battery_Meintenance.mpas,937 :: 		clrwdt;
0xC1C6	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,939 :: 		end;
0xC1C8	0x37FFFC  	BRA	L__AkuTestBakim353
L__AkuTestBakim354:
;Battery_Meintenance.mpas,941 :: 		Chng6 := 0;
0xC1CA	0x213F81  	MOV	#lo_addr(_Chng6), W1
0xC1CC	0xEF2000  	CLR	W0
0xC1CE	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,942 :: 		EEPROM_Write(EE_BkmStatusEeAddr,Bkm_Status);
0xC1D0	0x212A40  	MOV	#lo_addr(_Bkm_Status), W0
0xC1D2	0xEF2018  	CLR	W12
0xC1D4	0xA7B010  	BTSC	[W0], BitPos(_Bkm_Status+0)
0xC1D6	0xEC2018  	INC	W12
0xC1D8	0x2F646A  	MOV	#63046, W10
0xC1DA	0x2007FB  	MOV	#127, W11
0xC1DC	0x07A8DC  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,943 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__AkuTestBakim358:
0xC1DE	0xBF8760  	MOV	NVMCON, WREG
0xC1E0	0xE10061  	CP	W0, #1
0xC1E2	0x32FFFD  	BRA Z	L__AkuTestBakim358
L__AkuTestBakim426:
;Battery_Meintenance.mpas,945 :: 		end;
L__AkuTestBakim350:
;Battery_Meintenance.mpas,947 :: 		end;
0xC1E4	0x37FFB3  	BRA	L__AkuTestBakim331
L__AkuTestBakim332:
;Battery_Meintenance.mpas,949 :: 		end;
L__AkuTestBakim323:
;Battery_Meintenance.mpas,953 :: 		end;
0xC1E6	0x37000E  	BRA	L__AkuTestBakim96
L__AkuTestBakim315:
;Battery_Meintenance.mpas,955 :: 		6: begin // geri
0xC1E8	0x90400E  	MOV.B	[W14+0], W0
0xC1EA	0xE10466  	CP.B	W0, #6
0xC1EC	0x3A000B  	BRA NZ	L__AkuTestBakim364
L__AkuTestBakim427:
;Battery_Meintenance.mpas,958 :: 		clrwdt;
0xC1EE	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,961 :: 		if (Ok_Button =0) then
0xC1F0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC1F2	0x370007  	BRA	L__AkuTestBakim366
;Battery_Meintenance.mpas,965 :: 		while (Ok_Button =0) do
L__AkuTestBakim369:
0xC1F4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0xC1F6	0x370002  	BRA	L__AkuTestBakim370
;Battery_Meintenance.mpas,968 :: 		clrwdt;
0xC1F8	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,970 :: 		end;
0xC1FA	0x37FFFC  	BRA	L__AkuTestBakim369
L__AkuTestBakim370:
;Battery_Meintenance.mpas,972 :: 		MenuExit := 1;
0xC1FC	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xC1FE	0xB3C010  	MOV.B	#1, W0
0xC200	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,974 :: 		end;
L__AkuTestBakim366:
;Battery_Meintenance.mpas,975 :: 		end;
0xC202	0x370000  	BRA	L__AkuTestBakim96
L__AkuTestBakim364:
L__AkuTestBakim96:
;Battery_Meintenance.mpas,979 :: 		end;
0xC204	0x37FCA8  	BRA	L__AkuTestBakim70
L__AkuTestBakim71:
;Battery_Meintenance.mpas,981 :: 		Service1_Date    := EEPROM_Read(EE_Service1EeAddr);
0xC206	0x2F636A  	MOV	#63030, W10
0xC208	0x2007FB  	MOV	#127, W11
0xC20A	0x07B12A  	RCALL	_EEPROM_Read
0xC20C	0x88A2D0  	MOV	W0, _Service1_Date
;Battery_Meintenance.mpas,982 :: 		Pause_Ms(50); asm clrwdt; end;
0xC20E	0x20032A  	MOV	#50, W10
0xC210	0x070E42  	RCALL	_Pause_Ms
0xC212	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,983 :: 		Service2_Date    := EEPROM_Read(EE_Service2EeAddr);
0xC214	0x2F638A  	MOV	#63032, W10
0xC216	0x2007FB  	MOV	#127, W11
0xC218	0x07B123  	RCALL	_EEPROM_Read
0xC21A	0x88A2F0  	MOV	W0, _Service2_Date
;Battery_Meintenance.mpas,984 :: 		Pause_Ms(50); asm clrwdt; end;
0xC21C	0x20032A  	MOV	#50, W10
0xC21E	0x070E3B  	RCALL	_Pause_Ms
0xC220	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,985 :: 		Service3_Date    := EEPROM_Read(EE_Service3EeAddr);
0xC222	0x2F63AA  	MOV	#63034, W10
0xC224	0x2007FB  	MOV	#127, W11
0xC226	0x07B11C  	RCALL	_EEPROM_Read
0xC228	0x88A350  	MOV	W0, _Service3_Date
;Battery_Meintenance.mpas,986 :: 		Pause_Ms(50); asm clrwdt; end;
0xC22A	0x20032A  	MOV	#50, W10
0xC22C	0x070E34  	RCALL	_Pause_Ms
0xC22E	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,987 :: 		Service4_Date    := EEPROM_Read(EE_Service4EeAddr);
0xC230	0x2F63CA  	MOV	#63036, W10
0xC232	0x2007FB  	MOV	#127, W11
0xC234	0x07B115  	RCALL	_EEPROM_Read
0xC236	0x88A370  	MOV	W0, _Service4_Date
;Battery_Meintenance.mpas,988 :: 		Pause_Ms(50); asm clrwdt; end;
0xC238	0x20032A  	MOV	#50, W10
0xC23A	0x070E2D  	RCALL	_Pause_Ms
0xC23C	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,990 :: 		QuitTime_Sec := (QuitTime * 3600000);// çýkýþ zamaný saat olarak // 1ms timer için 1 sýfýr daha atýldý, GAR24-L' de 10ms timer da 1 sýfýr eksik
0xC23E	0x213D42  	MOV	#lo_addr(_QuitTime), W2
0xC240	0x2EE800  	MOV	#61056, W0
0xC242	0x200361  	MOV	#54, W1
0xC244	0xFB8112  	ZE	[W2], W2
0xC246	0xEB0180  	CLR	W3
0xC248	0x07ACA7  	RCALL	__Multiply_32x32
0xC24A	0x889180  	MOV	W0, _QuitTime_Sec
0xC24C	0x889191  	MOV	W1, _QuitTime_Sec+2
;Battery_Meintenance.mpas,992 :: 		Glcd_Fill(0x00);
0xC24E	0xEF2014  	CLR	W10
0xC250	0x07EB3D  	RCALL	_Glcd_Fill
;Battery_Meintenance.mpas,994 :: 		end;
L_end_AkuTestBakim:
0xC252	0x7806CF  	POP	W13
0xC254	0x78064F  	POP	W12
0xC256	0x7805CF  	POP	W11
0xC258	0x78054F  	POP	W10
0xC25A	0xFA8000  	ULNK
0xC25C	0x060000  	RETURN
; end of _AkuTestBakim
_ByteToStr:
0x0988	0xFA0000  	LNK	#0
;__Lib_Conversions.mpas,102 :: 		
;__Lib_Conversions.mpas,103 :: 		
0x098A	0x78008B  	MOV	W11, W1
0x098C	0xB3C200  	MOV.B	#32, W0
0x098E	0x785880  	MOV.B	W0, [W1++]
0x0990	0xB3C200  	MOV.B	#32, W0
0x0992	0x785880  	MOV.B	W0, [W1++]
0x0994	0xB3C300  	MOV.B	#48, W0
0x0996	0x785880  	MOV.B	W0, [W1++]
0x0998	0xEF2000  	CLR	W0
0x099A	0x785880  	MOV.B	W0, [W1++]
;__Lib_Conversions.mpas,104 :: 		
; ptr start address is: 6 (W3)
0x099C	0x4581E2  	ADD	W11, #2, W3
; ptr end address is: 6 (W3)
;__Lib_Conversions.mpas,105 :: 		
L__ByteToStr8:
; ptr start address is: 6 (W3)
0x099E	0xE15460  	CP.B	W10, #0
0x09A0	0x320010  	BRA Z	L__ByteToStr9
L__ByteToStr230:
;__Lib_Conversions.mpas,107 :: 		
0x09A2	0xFB800A  	ZE	W10, W0
0x09A4	0x2000A2  	MOV	#10, W2
0x09A6	0x090011  	REPEAT	#17
0x09A8	0xD88002  	DIV.U	W0, W2
0x09AA	0x780001  	MOV	W1, W0
0x09AC	0xFB8080  	ZE	W0, W1
0x09AE	0x200300  	MOV	#48, W0
0x09B0	0x408000  	ADD	W1, W0, W0
0x09B2	0x784980  	MOV.B	W0, [W3]
;__Lib_Conversions.mpas,108 :: 		
0x09B4	0xFB800A  	ZE	W10, W0
0x09B6	0x2000A2  	MOV	#10, W2
0x09B8	0x090011  	REPEAT	#17
0x09BA	0xD88002  	DIV.U	W0, W2
0x09BC	0x784500  	MOV.B	W0, W10
;__Lib_Conversions.mpas,109 :: 		
0x09BE	0xED2006  	DEC	W3
;__Lib_Conversions.mpas,110 :: 		
; ptr end address is: 6 (W3)
0x09C0	0x37FFEE  	BRA	L__ByteToStr8
L__ByteToStr9:
;__Lib_Conversions.mpas,111 :: 		
L_end_ByteToStr:
0x09C2	0xFA8000  	ULNK
0x09C4	0x060000  	RETURN
; end of _ByteToStr
_DateCalculator:
0x0D92	0xFA0030  	LNK	#48
;Battery_Meintenance.mpas,73 :: 		begin
;Battery_Meintenance.mpas,75 :: 		Glcd_Fill(0x00);
0x0D94	0x781F8A  	PUSH	W10
0x0D96	0x781F8B  	PUSH	W11
0x0D98	0x781F8C  	PUSH	W12
0x0D9A	0x781F8D  	PUSH	W13
0x0D9C	0xEF2014  	CLR	W10
0x0D9E	0x074596  	RCALL	_Glcd_Fill
;Battery_Meintenance.mpas,77 :: 		BakimControlBit  := 0;
0x0DA0	0x212A40  	MOV	#lo_addr(_BakimControlBit), W0
0x0DA2	0xA1A010  	BCLR	[W0], BitPos(_BakimControlBit+0)
;Battery_Meintenance.mpas,78 :: 		Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year);
0x0DA4	0x213C9D  	MOV	#lo_addr(_Day), W13
0x0DA6	0x213CFC  	MOV	#lo_addr(_Seconds), W12
0x0DA8	0x213D0B  	MOV	#lo_addr(_Minutes), W11
0x0DAA	0x213CEA  	MOV	#lo_addr(_Hours), W10
0x0DAC	0x213CB0  	MOV	#lo_addr(_Year), W0
0x0DAE	0x781F80  	PUSH	W0
0x0DB0	0x213CA0  	MOV	#lo_addr(_Month), W0
0x0DB2	0x781F80  	PUSH	W0
0x0DB4	0x213C80  	MOV	#lo_addr(_Week), W0
0x0DB6	0x781F80  	PUSH	W0
0x0DB8	0x07FC4C  	RCALL	_Read_Time
0x0DBA	0xB1006F  	SUB	#6, W15
;Battery_Meintenance.mpas,79 :: 		Seconds  :=  Bcd2Dec16(seconds);
0x0DBC	0x213CF0  	MOV	#lo_addr(_Seconds), W0
0x0DBE	0xFB0510  	SE	[W0], W10
0x0DC0	0x07FC00  	RCALL	_Bcd2Dec16
0x0DC2	0x213CF1  	MOV	#lo_addr(_Seconds), W1
0x0DC4	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,80 :: 		minutes  :=  Bcd2Dec16(minutes);
0x0DC6	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x0DC8	0xFB0510  	SE	[W0], W10
0x0DCA	0x07FBFB  	RCALL	_Bcd2Dec16
0x0DCC	0x213D01  	MOV	#lo_addr(_Minutes), W1
0x0DCE	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,81 :: 		hours    :=  Bcd2Dec16(hours);
0x0DD0	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x0DD2	0xFB0510  	SE	[W0], W10
0x0DD4	0x07FBF6  	RCALL	_Bcd2Dec16
0x0DD6	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x0DD8	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,82 :: 		week     :=  Bcd2Dec16(Week);
0x0DDA	0x213C80  	MOV	#lo_addr(_Week), W0
0x0DDC	0xFB0510  	SE	[W0], W10
0x0DDE	0x07FBF1  	RCALL	_Bcd2Dec16
0x0DE0	0x213C81  	MOV	#lo_addr(_Week), W1
0x0DE2	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,83 :: 		day      :=  Bcd2Dec16(Day);
0x0DE4	0x213C90  	MOV	#lo_addr(_Day), W0
0x0DE6	0xFB0510  	SE	[W0], W10
0x0DE8	0x07FBEC  	RCALL	_Bcd2Dec16
0x0DEA	0x213C91  	MOV	#lo_addr(_Day), W1
0x0DEC	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,84 :: 		month    :=  Bcd2Dec16(Month);
0x0DEE	0x213CA0  	MOV	#lo_addr(_Month), W0
0x0DF0	0xFB0510  	SE	[W0], W10
0x0DF2	0x07FBE7  	RCALL	_Bcd2Dec16
0x0DF4	0x213CA1  	MOV	#lo_addr(_Month), W1
0x0DF6	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,85 :: 		year     :=  Bcd2Dec16(Year);
0x0DF8	0x213CB0  	MOV	#lo_addr(_Year), W0
0x0DFA	0xFB0510  	SE	[W0], W10
0x0DFC	0x07FBE2  	RCALL	_Bcd2Dec16
0x0DFE	0x213CB1  	MOV	#lo_addr(_Year), W1
0x0E00	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,87 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);
0x0E02	0x281E81  	MOV	#lo_addr(_NewFont5x7), W1
0x0E04	0x200020  	MOV	#2, W0
0x0E06	0xB3C07D  	MOV.B	#7, W13
0x0E08	0xB3C05C  	MOV.B	#5, W12
0x0E0A	0x780501  	MOV	W1, W10
0x0E0C	0x780580  	MOV	W0, W11
0x0E0E	0x200200  	MOV	#32, W0
0x0E10	0x781F80  	PUSH	W0
0x0E12	0x072652  	RCALL	_Glcd_Set_Font
0x0E14	0xB1002F  	SUB	#2, W15
;Battery_Meintenance.mpas,88 :: 		DateFullText:= '               ';
0x0E16	0x4700EC  	ADD	W14, #12, W1
0x0E18	0xB3C200  	MOV.B	#32, W0
0x0E1A	0x785880  	MOV.B	W0, [W1++]
0x0E1C	0xB3C200  	MOV.B	#32, W0
0x0E1E	0x785880  	MOV.B	W0, [W1++]
0x0E20	0xB3C200  	MOV.B	#32, W0
0x0E22	0x785880  	MOV.B	W0, [W1++]
0x0E24	0xB3C200  	MOV.B	#32, W0
0x0E26	0x785880  	MOV.B	W0, [W1++]
0x0E28	0xB3C200  	MOV.B	#32, W0
0x0E2A	0x785880  	MOV.B	W0, [W1++]
0x0E2C	0xB3C200  	MOV.B	#32, W0
0x0E2E	0x785880  	MOV.B	W0, [W1++]
0x0E30	0xB3C200  	MOV.B	#32, W0
0x0E32	0x785880  	MOV.B	W0, [W1++]
0x0E34	0xB3C200  	MOV.B	#32, W0
0x0E36	0x785880  	MOV.B	W0, [W1++]
0x0E38	0xB3C200  	MOV.B	#32, W0
0x0E3A	0x785880  	MOV.B	W0, [W1++]
0x0E3C	0xB3C200  	MOV.B	#32, W0
0x0E3E	0x785880  	MOV.B	W0, [W1++]
0x0E40	0xB3C200  	MOV.B	#32, W0
0x0E42	0x785880  	MOV.B	W0, [W1++]
0x0E44	0xB3C200  	MOV.B	#32, W0
0x0E46	0x785880  	MOV.B	W0, [W1++]
0x0E48	0xB3C200  	MOV.B	#32, W0
0x0E4A	0x785880  	MOV.B	W0, [W1++]
0x0E4C	0xB3C200  	MOV.B	#32, W0
0x0E4E	0x785880  	MOV.B	W0, [W1++]
0x0E50	0xB3C200  	MOV.B	#32, W0
0x0E52	0x785880  	MOV.B	W0, [W1++]
0x0E54	0xEF2000  	CLR	W0
0x0E56	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,93 :: 		FarkAy := ((360 div ServiceCycle) div 30); // ayda kaç adet olduðu hesaplanýr
0x0E58	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0x0E5A	0xFB8110  	ZE	[W0], W2
0x0E5C	0x201680  	MOV	#360, W0
0x0E5E	0x090011  	REPEAT	#17
0x0E60	0xD88002  	DIV.U	W0, W2
0x0E62	0x2001E2  	MOV	#30, W2
0x0E64	0x090011  	REPEAT	#17
0x0E66	0xD88002  	DIV.U	W0, W2
0x0E68	0x889E60  	MOV	W0, _FarkAy
;Battery_Meintenance.mpas,95 :: 		DayCalc := 15;// her ayýn 15. günü
0x0E6A	0x214611  	MOV	#lo_addr(_DayCalc), W1
0x0E6C	0xB3C0F0  	MOV.B	#15, W0
0x0E6E	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,97 :: 		ByteToStr(DayCalc, DayText);
0x0E70	0x470068  	ADD	W14, #8, W0
0x0E72	0x780580  	MOV	W0, W11
0x0E74	0xB3C0FA  	MOV.B	#15, W10
0x0E76	0x07FD88  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,98 :: 		ltrim(DayText);
0x0E78	0x470068  	ADD	W14, #8, W0
0x0E7A	0x780500  	MOV	W0, W10
0x0E7C	0x074A1B  	RCALL	_ltrim
;Battery_Meintenance.mpas,100 :: 		if (BakimSelect = 1) then
0x0E7E	0x214600  	MOV	#lo_addr(_BakimSelect), W0
0x0E80	0x784010  	MOV.B	[W0], W0
0x0E82	0xE10461  	CP.B	W0, #1
0x0E84	0x3A0071  	BRA NZ	L__DateCalculator2
L__DateCalculator374:
;Battery_Meintenance.mpas,102 :: 		TempAy := FarkAy + Month;
0x0E86	0x213CA0  	MOV	#lo_addr(_Month), W0
0x0E88	0xFB0090  	SE	[W0], W1
0x0E8A	0x213CC0  	MOV	#lo_addr(_FarkAy), W0
0x0E8C	0x408090  	ADD	W1, [W0], W1
0x0E8E	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0E90	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,104 :: 		if (TempAy > 12) then
0x0E92	0xE10C6C  	CP.B	W1, #12
0x0E94	0x36000B  	BRA LEU	L__DateCalculator5
L__DateCalculator375:
;Battery_Meintenance.mpas,106 :: 		TempAy   := TempAy - 12;
0x0E96	0xB3C0C1  	MOV.B	#12, W1
0x0E98	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0E9A	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,107 :: 		Year_1   := Year + 1;
0x0E9C	0x213CB0  	MOV	#lo_addr(_Year), W0
0x0E9E	0x784090  	MOV.B	[W0], W1
0x0EA0	0x214640  	MOV	#lo_addr(_Year_1), W0
0x0EA2	0x40C861  	ADD.B	W1, #1, [W0]
;Battery_Meintenance.mpas,108 :: 		Month_1  := TempAy;
0x0EA4	0x214631  	MOV	#lo_addr(_Month_1), W1
0x0EA6	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0EA8	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,109 :: 		end else
0x0EAA	0x370006  	BRA	L__DateCalculator6
L__DateCalculator5:
;Battery_Meintenance.mpas,111 :: 		Month_1 := TempAy;
0x0EAC	0x214631  	MOV	#lo_addr(_Month_1), W1
0x0EAE	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0EB0	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,112 :: 		Year_1  := Year;
0x0EB2	0x214641  	MOV	#lo_addr(_Year_1), W1
0x0EB4	0x213CB0  	MOV	#lo_addr(_Year), W0
0x0EB6	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,113 :: 		end;
L__DateCalculator6:
;Battery_Meintenance.mpas,115 :: 		Service1_Date := 100 * Month_1;
0x0EB8	0x200641  	MOV	#100, W1
0x0EBA	0x214630  	MOV	#lo_addr(_Month_1), W0
0x0EBC	0xFB0010  	SE	[W0], W0
0x0EBE	0xB98900  	MUL.SS	W1, W0, W2
0x0EC0	0x88A2D2  	MOV	W2, _Service1_Date
;Battery_Meintenance.mpas,116 :: 		Service1_Date := Service1_Date + Year_1;
0x0EC2	0x214640  	MOV	#lo_addr(_Year_1), W0
0x0EC4	0xFB8010  	ZE	[W0], W0
0x0EC6	0x410000  	ADD	W2, W0, W0
0x0EC8	0x88A2D0  	MOV	W0, _Service1_Date
;Battery_Meintenance.mpas,119 :: 		EEPROM_Write(EE_Service1EeAddr, Service1_Date);
0x0ECA	0x780600  	MOV	W0, W12
0x0ECC	0x2F636A  	MOV	#63030, W10
0x0ECE	0x2007FB  	MOV	#127, W11
0x0ED0	0x070262  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,120 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__DateCalculator8:
0x0ED2	0xBF8760  	MOV	NVMCON, WREG
0x0ED4	0xE10061  	CP	W0, #1
0x0ED6	0x32FFFD  	BRA Z	L__DateCalculator8
L__DateCalculator376:
;Battery_Meintenance.mpas,122 :: 		if (ServiceCycle > 1) then
0x0ED8	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0x0EDA	0x784010  	MOV.B	[W0], W0
0x0EDC	0xE10461  	CP.B	W0, #1
0x0EDE	0x360004  	BRA LEU	L__DateCalculator13
L__DateCalculator377:
;Battery_Meintenance.mpas,123 :: 		BakimSelect := 2 else BakimSelect := 1;
0x0EE0	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x0EE2	0xB3C020  	MOV.B	#2, W0
0x0EE4	0x784880  	MOV.B	W0, [W1]
0x0EE6	0x370003  	BRA	L__DateCalculator14
L__DateCalculator13:
0x0EE8	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x0EEA	0xB3C010  	MOV.B	#1, W0
0x0EEC	0x784880  	MOV.B	W0, [W1]
L__DateCalculator14:
;Battery_Meintenance.mpas,125 :: 		ByteToStr(Month_1,MonthText);
0x0EEE	0x4700E4  	ADD	W14, #4, W1
0x0EF0	0x981771  	MOV	W1, [W14+46]
0x0EF2	0x214630  	MOV	#lo_addr(_Month_1), W0
0x0EF4	0x780581  	MOV	W1, W11
0x0EF6	0x784510  	MOV.B	[W0], W10
0x0EF8	0x07FD47  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,126 :: 		ByteToStr(Year_1,YilText);
0x0EFA	0x4700E0  	ADD	W14, #0, W1
0x0EFC	0x981761  	MOV	W1, [W14+44]
0x0EFE	0x214640  	MOV	#lo_addr(_Year_1), W0
0x0F00	0x780581  	MOV	W1, W11
0x0F02	0x784510  	MOV.B	[W0], W10
0x0F04	0x07FD41  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,127 :: 		ltrim(MonthText);
0x0F06	0x470064  	ADD	W14, #4, W0
0x0F08	0x780500  	MOV	W0, W10
0x0F0A	0x0749D4  	RCALL	_ltrim
;Battery_Meintenance.mpas,128 :: 		ltrim(YilText);
0x0F0C	0x470060  	ADD	W14, #0, W0
0x0F0E	0x780500  	MOV	W0, W10
0x0F10	0x0749D1  	RCALL	_ltrim
;Battery_Meintenance.mpas,130 :: 		DateFullText :=('1-->'+DayText+'.' + MonthText + '.20' + YilText);
0x0F12	0x47007C  	ADD	W14, #28, W0
0x0F14	0xB3C312  	MOV.B	#49, W2
0x0F16	0x785802  	MOV.B	W2, [W0++]
0x0F18	0xB3C2D2  	MOV.B	#45, W2
0x0F1A	0x785802  	MOV.B	W2, [W0++]
0x0F1C	0xB3C2D2  	MOV.B	#45, W2
0x0F1E	0x785802  	MOV.B	W2, [W0++]
0x0F20	0xB3C3E2  	MOV.B	#62, W2
0x0F22	0x785802  	MOV.B	W2, [W0++]
0x0F24	0x4700E8  	ADD	W14, #8, W1
0x0F26	0x075C8F  	RCALL	___CS2S
0x0F28	0xB3C2E2  	MOV.B	#46, W2
0x0F2A	0x785802  	MOV.B	W2, [W0++]
0x0F2C	0x90117E  	MOV	[W14+46], W2
0x0F2E	0x780082  	MOV	W2, W1
0x0F30	0x075C8A  	RCALL	___CS2S
0x0F32	0xB3C2E2  	MOV.B	#46, W2
0x0F34	0x785802  	MOV.B	W2, [W0++]
0x0F36	0xB3C322  	MOV.B	#50, W2
0x0F38	0x785802  	MOV.B	W2, [W0++]
0x0F3A	0xB3C302  	MOV.B	#48, W2
0x0F3C	0x785802  	MOV.B	W2, [W0++]
0x0F3E	0x90116E  	MOV	[W14+44], W2
0x0F40	0x780082  	MOV	W2, W1
0x0F42	0x075C81  	RCALL	___CS2S
0x0F44	0x780080  	MOV	W0, W1
0x0F46	0xEF2000  	CLR	W0
0x0F48	0x785880  	MOV.B	W0, [W1++]
0x0F4A	0x47006C  	ADD	W14, #12, W0
0x0F4C	0x4700FC  	ADD	W14, #28, W1
0x0F4E	0x075C7B  	RCALL	___CS2S
0x0F50	0x780080  	MOV	W0, W1
0x0F52	0xEF2000  	CLR	W0
0x0F54	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,131 :: 		Glcd_Write_Text(DateFullText,10,2,Black);
0x0F56	0x47006C  	ADD	W14, #12, W0
0x0F58	0xB3C01D  	MOV.B	#1, W13
0x0F5A	0xB3C02C  	MOV.B	#2, W12
0x0F5C	0xB3C0AB  	MOV.B	#10, W11
0x0F5E	0x780500  	MOV	W0, W10
0x0F60	0x072414  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,133 :: 		Pause_Ms(500);
0x0F62	0x201F4A  	MOV	#500, W10
0x0F64	0x076798  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,136 :: 		clrwdt;
0x0F66	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,138 :: 		end;
L__DateCalculator2:
;Battery_Meintenance.mpas,140 :: 		if (BakimSelect = 2) then
0x0F68	0x214600  	MOV	#lo_addr(_BakimSelect), W0
0x0F6A	0x784010  	MOV.B	[W0], W0
0x0F6C	0xE10462  	CP.B	W0, #2
0x0F6E	0x3A0071  	BRA NZ	L__DateCalculator16
L__DateCalculator378:
;Battery_Meintenance.mpas,142 :: 		TempAy := FarkAy + Month_1;
0x0F70	0x214630  	MOV	#lo_addr(_Month_1), W0
0x0F72	0xFB0090  	SE	[W0], W1
0x0F74	0x213CC0  	MOV	#lo_addr(_FarkAy), W0
0x0F76	0x408090  	ADD	W1, [W0], W1
0x0F78	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0F7A	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,144 :: 		if (TempAy > 12) then
0x0F7C	0xE10C6C  	CP.B	W1, #12
0x0F7E	0x36000B  	BRA LEU	L__DateCalculator19
L__DateCalculator379:
;Battery_Meintenance.mpas,146 :: 		TempAy   := TempAy - 12;
0x0F80	0xB3C0C1  	MOV.B	#12, W1
0x0F82	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0F84	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,147 :: 		Year_2   := Year_1 + 1;
0x0F86	0x214640  	MOV	#lo_addr(_Year_1), W0
0x0F88	0x784090  	MOV.B	[W0], W1
0x0F8A	0x2145C0  	MOV	#lo_addr(_Year_2), W0
0x0F8C	0x40C861  	ADD.B	W1, #1, [W0]
;Battery_Meintenance.mpas,148 :: 		Month_2  := TempAy;
0x0F8E	0x2145D1  	MOV	#lo_addr(_Month_2), W1
0x0F90	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0F92	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,149 :: 		end else
0x0F94	0x370006  	BRA	L__DateCalculator20
L__DateCalculator19:
;Battery_Meintenance.mpas,151 :: 		Month_2 := TempAy;
0x0F96	0x2145D1  	MOV	#lo_addr(_Month_2), W1
0x0F98	0x214620  	MOV	#lo_addr(_TempAy), W0
0x0F9A	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,152 :: 		Year_2  := Year_1;
0x0F9C	0x2145C1  	MOV	#lo_addr(_Year_2), W1
0x0F9E	0x214640  	MOV	#lo_addr(_Year_1), W0
0x0FA0	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,153 :: 		end;
L__DateCalculator20:
;Battery_Meintenance.mpas,155 :: 		Service2_Date := 100 * Month_2;
0x0FA2	0x200641  	MOV	#100, W1
0x0FA4	0x2145D0  	MOV	#lo_addr(_Month_2), W0
0x0FA6	0xFB0010  	SE	[W0], W0
0x0FA8	0xB98900  	MUL.SS	W1, W0, W2
0x0FAA	0x88A2F2  	MOV	W2, _Service2_Date
;Battery_Meintenance.mpas,156 :: 		Service2_Date := Service2_Date + Year_2;
0x0FAC	0x2145C0  	MOV	#lo_addr(_Year_2), W0
0x0FAE	0xFB8010  	ZE	[W0], W0
0x0FB0	0x410000  	ADD	W2, W0, W0
0x0FB2	0x88A2F0  	MOV	W0, _Service2_Date
;Battery_Meintenance.mpas,158 :: 		EEPROM_Write(EE_Service2EeAddr, Service2_Date);
0x0FB4	0x780600  	MOV	W0, W12
0x0FB6	0x2F638A  	MOV	#63032, W10
0x0FB8	0x2007FB  	MOV	#127, W11
0x0FBA	0x0701ED  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,159 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__DateCalculator22:
0x0FBC	0xBF8760  	MOV	NVMCON, WREG
0x0FBE	0xE10061  	CP	W0, #1
0x0FC0	0x32FFFD  	BRA Z	L__DateCalculator22
L__DateCalculator380:
;Battery_Meintenance.mpas,161 :: 		if (ServiceCycle > 2) then
0x0FC2	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0x0FC4	0x784010  	MOV.B	[W0], W0
0x0FC6	0xE10462  	CP.B	W0, #2
0x0FC8	0x360004  	BRA LEU	L__DateCalculator27
L__DateCalculator381:
;Battery_Meintenance.mpas,162 :: 		BakimSelect := 3 else BakimSelect := 1;
0x0FCA	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x0FCC	0xB3C030  	MOV.B	#3, W0
0x0FCE	0x784880  	MOV.B	W0, [W1]
0x0FD0	0x370003  	BRA	L__DateCalculator28
L__DateCalculator27:
0x0FD2	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x0FD4	0xB3C010  	MOV.B	#1, W0
0x0FD6	0x784880  	MOV.B	W0, [W1]
L__DateCalculator28:
;Battery_Meintenance.mpas,164 :: 		ByteToStr(Month_2,MonthText);
0x0FD8	0x4700E4  	ADD	W14, #4, W1
0x0FDA	0x981771  	MOV	W1, [W14+46]
0x0FDC	0x2145D0  	MOV	#lo_addr(_Month_2), W0
0x0FDE	0x780581  	MOV	W1, W11
0x0FE0	0x784510  	MOV.B	[W0], W10
0x0FE2	0x07FCD2  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,165 :: 		ByteToStr(Year_2,YilText);
0x0FE4	0x4700E0  	ADD	W14, #0, W1
0x0FE6	0x981761  	MOV	W1, [W14+44]
0x0FE8	0x2145C0  	MOV	#lo_addr(_Year_2), W0
0x0FEA	0x780581  	MOV	W1, W11
0x0FEC	0x784510  	MOV.B	[W0], W10
0x0FEE	0x07FCCC  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,166 :: 		ltrim(MonthText);
0x0FF0	0x470064  	ADD	W14, #4, W0
0x0FF2	0x780500  	MOV	W0, W10
0x0FF4	0x07495F  	RCALL	_ltrim
;Battery_Meintenance.mpas,167 :: 		ltrim(YilText);
0x0FF6	0x470060  	ADD	W14, #0, W0
0x0FF8	0x780500  	MOV	W0, W10
0x0FFA	0x07495C  	RCALL	_ltrim
;Battery_Meintenance.mpas,169 :: 		DateFullText :=('2-->'+DayText+'.' + MonthText + '.20' + YilText);
0x0FFC	0x47007C  	ADD	W14, #28, W0
0x0FFE	0xB3C322  	MOV.B	#50, W2
0x1000	0x785802  	MOV.B	W2, [W0++]
0x1002	0xB3C2D2  	MOV.B	#45, W2
0x1004	0x785802  	MOV.B	W2, [W0++]
0x1006	0xB3C2D2  	MOV.B	#45, W2
0x1008	0x785802  	MOV.B	W2, [W0++]
0x100A	0xB3C3E2  	MOV.B	#62, W2
0x100C	0x785802  	MOV.B	W2, [W0++]
0x100E	0x4700E8  	ADD	W14, #8, W1
0x1010	0x075C1A  	RCALL	___CS2S
0x1012	0xB3C2E2  	MOV.B	#46, W2
0x1014	0x785802  	MOV.B	W2, [W0++]
0x1016	0x90117E  	MOV	[W14+46], W2
0x1018	0x780082  	MOV	W2, W1
0x101A	0x075C15  	RCALL	___CS2S
0x101C	0xB3C2E2  	MOV.B	#46, W2
0x101E	0x785802  	MOV.B	W2, [W0++]
0x1020	0xB3C322  	MOV.B	#50, W2
0x1022	0x785802  	MOV.B	W2, [W0++]
0x1024	0xB3C302  	MOV.B	#48, W2
0x1026	0x785802  	MOV.B	W2, [W0++]
0x1028	0x90116E  	MOV	[W14+44], W2
0x102A	0x780082  	MOV	W2, W1
0x102C	0x075C0C  	RCALL	___CS2S
0x102E	0x780080  	MOV	W0, W1
0x1030	0xEF2000  	CLR	W0
0x1032	0x785880  	MOV.B	W0, [W1++]
0x1034	0x47006C  	ADD	W14, #12, W0
0x1036	0x4700FC  	ADD	W14, #28, W1
0x1038	0x075C06  	RCALL	___CS2S
0x103A	0x780080  	MOV	W0, W1
0x103C	0xEF2000  	CLR	W0
0x103E	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,170 :: 		Glcd_Write_Text(DateFullText,10,3,Black);
0x1040	0x47006C  	ADD	W14, #12, W0
0x1042	0xB3C01D  	MOV.B	#1, W13
0x1044	0xB3C03C  	MOV.B	#3, W12
0x1046	0xB3C0AB  	MOV.B	#10, W11
0x1048	0x780500  	MOV	W0, W10
0x104A	0x07239F  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,172 :: 		Pause_Ms(500);
0x104C	0x201F4A  	MOV	#500, W10
0x104E	0x076723  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,175 :: 		clrwdt;
0x1050	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,177 :: 		end;
L__DateCalculator16:
;Battery_Meintenance.mpas,179 :: 		if (BakimSelect = 3) then
0x1052	0x214600  	MOV	#lo_addr(_BakimSelect), W0
0x1054	0x784010  	MOV.B	[W0], W0
0x1056	0xE10463  	CP.B	W0, #3
0x1058	0x3A0071  	BRA NZ	L__DateCalculator30
L__DateCalculator382:
;Battery_Meintenance.mpas,181 :: 		TempAy := FarkAy + Month_2;
0x105A	0x2145D0  	MOV	#lo_addr(_Month_2), W0
0x105C	0xFB0090  	SE	[W0], W1
0x105E	0x213CC0  	MOV	#lo_addr(_FarkAy), W0
0x1060	0x408090  	ADD	W1, [W0], W1
0x1062	0x214620  	MOV	#lo_addr(_TempAy), W0
0x1064	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,183 :: 		if (TempAy > 12) then
0x1066	0xE10C6C  	CP.B	W1, #12
0x1068	0x36000B  	BRA LEU	L__DateCalculator33
L__DateCalculator383:
;Battery_Meintenance.mpas,185 :: 		TempAy   := TempAy - 12;
0x106A	0xB3C0C1  	MOV.B	#12, W1
0x106C	0x214620  	MOV	#lo_addr(_TempAy), W0
0x106E	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,186 :: 		Year_3   := Year_2 + 1;
0x1070	0x2145C0  	MOV	#lo_addr(_Year_2), W0
0x1072	0x784090  	MOV.B	[W0], W1
0x1074	0x214650  	MOV	#lo_addr(_Year_3), W0
0x1076	0x40C861  	ADD.B	W1, #1, [W0]
;Battery_Meintenance.mpas,187 :: 		Month_3  := TempAy;
0x1078	0x2146C1  	MOV	#lo_addr(_Month_3), W1
0x107A	0x214620  	MOV	#lo_addr(_TempAy), W0
0x107C	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,188 :: 		end else
0x107E	0x370006  	BRA	L__DateCalculator34
L__DateCalculator33:
;Battery_Meintenance.mpas,190 :: 		Month_3 := TempAy;
0x1080	0x2146C1  	MOV	#lo_addr(_Month_3), W1
0x1082	0x214620  	MOV	#lo_addr(_TempAy), W0
0x1084	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,191 :: 		Year_3  := Year_2;
0x1086	0x214651  	MOV	#lo_addr(_Year_3), W1
0x1088	0x2145C0  	MOV	#lo_addr(_Year_2), W0
0x108A	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,192 :: 		end;
L__DateCalculator34:
;Battery_Meintenance.mpas,194 :: 		Service3_Date := 100 * Month_3;
0x108C	0x200641  	MOV	#100, W1
0x108E	0x2146C0  	MOV	#lo_addr(_Month_3), W0
0x1090	0xFB0010  	SE	[W0], W0
0x1092	0xB98900  	MUL.SS	W1, W0, W2
0x1094	0x88A352  	MOV	W2, _Service3_Date
;Battery_Meintenance.mpas,195 :: 		Service3_Date := Service3_Date + Year_3;
0x1096	0x214650  	MOV	#lo_addr(_Year_3), W0
0x1098	0xFB8010  	ZE	[W0], W0
0x109A	0x410000  	ADD	W2, W0, W0
0x109C	0x88A350  	MOV	W0, _Service3_Date
;Battery_Meintenance.mpas,197 :: 		EEPROM_Write(EE_Service3EeAddr, Service3_Date);
0x109E	0x780600  	MOV	W0, W12
0x10A0	0x2F63AA  	MOV	#63034, W10
0x10A2	0x2007FB  	MOV	#127, W11
0x10A4	0x070178  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,199 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__DateCalculator36:
0x10A6	0xBF8760  	MOV	NVMCON, WREG
0x10A8	0xE10061  	CP	W0, #1
0x10AA	0x32FFFD  	BRA Z	L__DateCalculator36
L__DateCalculator384:
;Battery_Meintenance.mpas,201 :: 		if (ServiceCycle > 3) then
0x10AC	0x213D10  	MOV	#lo_addr(_ServiceCycle), W0
0x10AE	0x784010  	MOV.B	[W0], W0
0x10B0	0xE10463  	CP.B	W0, #3
0x10B2	0x360004  	BRA LEU	L__DateCalculator41
L__DateCalculator385:
;Battery_Meintenance.mpas,202 :: 		BakimSelect := 4 else BakimSelect := 1;
0x10B4	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x10B6	0xB3C040  	MOV.B	#4, W0
0x10B8	0x784880  	MOV.B	W0, [W1]
0x10BA	0x370003  	BRA	L__DateCalculator42
L__DateCalculator41:
0x10BC	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x10BE	0xB3C010  	MOV.B	#1, W0
0x10C0	0x784880  	MOV.B	W0, [W1]
L__DateCalculator42:
;Battery_Meintenance.mpas,204 :: 		ByteToStr(Month_3,MonthText);
0x10C2	0x4700E4  	ADD	W14, #4, W1
0x10C4	0x981771  	MOV	W1, [W14+46]
0x10C6	0x2146C0  	MOV	#lo_addr(_Month_3), W0
0x10C8	0x780581  	MOV	W1, W11
0x10CA	0x784510  	MOV.B	[W0], W10
0x10CC	0x07FC5D  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,205 :: 		ByteToStr(Year_3,YilText);
0x10CE	0x4700E0  	ADD	W14, #0, W1
0x10D0	0x981761  	MOV	W1, [W14+44]
0x10D2	0x214650  	MOV	#lo_addr(_Year_3), W0
0x10D4	0x780581  	MOV	W1, W11
0x10D6	0x784510  	MOV.B	[W0], W10
0x10D8	0x07FC57  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,206 :: 		ltrim(MonthText);
0x10DA	0x470064  	ADD	W14, #4, W0
0x10DC	0x780500  	MOV	W0, W10
0x10DE	0x0748EA  	RCALL	_ltrim
;Battery_Meintenance.mpas,207 :: 		ltrim(YilText);
0x10E0	0x470060  	ADD	W14, #0, W0
0x10E2	0x780500  	MOV	W0, W10
0x10E4	0x0748E7  	RCALL	_ltrim
;Battery_Meintenance.mpas,209 :: 		DateFullText :=('3-->'+DayText+'.' + MonthText + '.20' + YilText);
0x10E6	0x47007C  	ADD	W14, #28, W0
0x10E8	0xB3C332  	MOV.B	#51, W2
0x10EA	0x785802  	MOV.B	W2, [W0++]
0x10EC	0xB3C2D2  	MOV.B	#45, W2
0x10EE	0x785802  	MOV.B	W2, [W0++]
0x10F0	0xB3C2D2  	MOV.B	#45, W2
0x10F2	0x785802  	MOV.B	W2, [W0++]
0x10F4	0xB3C3E2  	MOV.B	#62, W2
0x10F6	0x785802  	MOV.B	W2, [W0++]
0x10F8	0x4700E8  	ADD	W14, #8, W1
0x10FA	0x075BA5  	RCALL	___CS2S
0x10FC	0xB3C2E2  	MOV.B	#46, W2
0x10FE	0x785802  	MOV.B	W2, [W0++]
0x1100	0x90117E  	MOV	[W14+46], W2
0x1102	0x780082  	MOV	W2, W1
0x1104	0x075BA0  	RCALL	___CS2S
0x1106	0xB3C2E2  	MOV.B	#46, W2
0x1108	0x785802  	MOV.B	W2, [W0++]
0x110A	0xB3C322  	MOV.B	#50, W2
0x110C	0x785802  	MOV.B	W2, [W0++]
0x110E	0xB3C302  	MOV.B	#48, W2
0x1110	0x785802  	MOV.B	W2, [W0++]
0x1112	0x90116E  	MOV	[W14+44], W2
0x1114	0x780082  	MOV	W2, W1
0x1116	0x075B97  	RCALL	___CS2S
0x1118	0x780080  	MOV	W0, W1
0x111A	0xEF2000  	CLR	W0
0x111C	0x785880  	MOV.B	W0, [W1++]
0x111E	0x47006C  	ADD	W14, #12, W0
0x1120	0x4700FC  	ADD	W14, #28, W1
0x1122	0x075B91  	RCALL	___CS2S
0x1124	0x780080  	MOV	W0, W1
0x1126	0xEF2000  	CLR	W0
0x1128	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,210 :: 		Glcd_Write_Text(DateFullText,10,4,Black);
0x112A	0x47006C  	ADD	W14, #12, W0
0x112C	0xB3C01D  	MOV.B	#1, W13
0x112E	0xB3C04C  	MOV.B	#4, W12
0x1130	0xB3C0AB  	MOV.B	#10, W11
0x1132	0x780500  	MOV	W0, W10
0x1134	0x07232A  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,212 :: 		Pause_Ms(500);
0x1136	0x201F4A  	MOV	#500, W10
0x1138	0x0766AE  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,215 :: 		clrwdt;
0x113A	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,217 :: 		end;
L__DateCalculator30:
;Battery_Meintenance.mpas,219 :: 		if (BakimSelect = 4) then
0x113C	0x214600  	MOV	#lo_addr(_BakimSelect), W0
0x113E	0x784010  	MOV.B	[W0], W0
0x1140	0xE10464  	CP.B	W0, #4
0x1142	0x3A0069  	BRA NZ	L__DateCalculator44
L__DateCalculator386:
;Battery_Meintenance.mpas,221 :: 		TempAy := FarkAy + Month_3;
0x1144	0x2146C0  	MOV	#lo_addr(_Month_3), W0
0x1146	0xFB0090  	SE	[W0], W1
0x1148	0x213CC0  	MOV	#lo_addr(_FarkAy), W0
0x114A	0x408090  	ADD	W1, [W0], W1
0x114C	0x214620  	MOV	#lo_addr(_TempAy), W0
0x114E	0x784801  	MOV.B	W1, [W0]
;Battery_Meintenance.mpas,223 :: 		if (TempAy > 12) then
0x1150	0xE10C6C  	CP.B	W1, #12
0x1152	0x36000B  	BRA LEU	L__DateCalculator47
L__DateCalculator387:
;Battery_Meintenance.mpas,225 :: 		TempAy   := TempAy - 12;
0x1154	0xB3C0C1  	MOV.B	#12, W1
0x1156	0x214620  	MOV	#lo_addr(_TempAy), W0
0x1158	0x10C810  	SUBR.B	W1, [W0], [W0]
;Battery_Meintenance.mpas,226 :: 		Year_4   := Year_3 + 1;
0x115A	0x214650  	MOV	#lo_addr(_Year_3), W0
0x115C	0x784090  	MOV.B	[W0], W1
0x115E	0x2146D0  	MOV	#lo_addr(_Year_4), W0
0x1160	0x40C861  	ADD.B	W1, #1, [W0]
;Battery_Meintenance.mpas,227 :: 		Month_4  := TempAy;
0x1162	0x214701  	MOV	#lo_addr(_Month_4), W1
0x1164	0x214620  	MOV	#lo_addr(_TempAy), W0
0x1166	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,228 :: 		end else
0x1168	0x370006  	BRA	L__DateCalculator48
L__DateCalculator47:
;Battery_Meintenance.mpas,230 :: 		Month_4 := TempAy;
0x116A	0x214701  	MOV	#lo_addr(_Month_4), W1
0x116C	0x214620  	MOV	#lo_addr(_TempAy), W0
0x116E	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,231 :: 		Year_4  := Year_3;
0x1170	0x2146D1  	MOV	#lo_addr(_Year_4), W1
0x1172	0x214650  	MOV	#lo_addr(_Year_3), W0
0x1174	0x784890  	MOV.B	[W0], [W1]
;Battery_Meintenance.mpas,232 :: 		end;
L__DateCalculator48:
;Battery_Meintenance.mpas,234 :: 		Service4_Date := 100 * Month_4;
0x1176	0x200641  	MOV	#100, W1
0x1178	0x214700  	MOV	#lo_addr(_Month_4), W0
0x117A	0xFB0010  	SE	[W0], W0
0x117C	0xB98900  	MUL.SS	W1, W0, W2
0x117E	0x88A372  	MOV	W2, _Service4_Date
;Battery_Meintenance.mpas,235 :: 		Service4_Date := Service4_Date + Year_4;
0x1180	0x2146D0  	MOV	#lo_addr(_Year_4), W0
0x1182	0xFB8010  	ZE	[W0], W0
0x1184	0x410000  	ADD	W2, W0, W0
0x1186	0x88A370  	MOV	W0, _Service4_Date
;Battery_Meintenance.mpas,237 :: 		EEPROM_Write(EE_Service4EeAddr, Service4_Date);
0x1188	0x780600  	MOV	W0, W12
0x118A	0x2F63CA  	MOV	#63036, W10
0x118C	0x2007FB  	MOV	#127, W11
0x118E	0x070103  	RCALL	_EEPROM_Write
;Battery_Meintenance.mpas,238 :: 		while (NVMCON = 1) do begin end; // write/erase cycle waiting
L__DateCalculator50:
0x1190	0xBF8760  	MOV	NVMCON, WREG
0x1192	0xE10061  	CP	W0, #1
0x1194	0x32FFFD  	BRA Z	L__DateCalculator50
L__DateCalculator388:
;Battery_Meintenance.mpas,240 :: 		BakimSelect := 1;
0x1196	0x214601  	MOV	#lo_addr(_BakimSelect), W1
0x1198	0xB3C010  	MOV.B	#1, W0
0x119A	0x784880  	MOV.B	W0, [W1]
;Battery_Meintenance.mpas,242 :: 		ByteToStr(Month_4,MonthText);
0x119C	0x4700E4  	ADD	W14, #4, W1
0x119E	0x981771  	MOV	W1, [W14+46]
0x11A0	0x214700  	MOV	#lo_addr(_Month_4), W0
0x11A2	0x780581  	MOV	W1, W11
0x11A4	0x784510  	MOV.B	[W0], W10
0x11A6	0x07FBF0  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,243 :: 		ByteToStr(Year_4,YilText);
0x11A8	0x4700E0  	ADD	W14, #0, W1
0x11AA	0x981761  	MOV	W1, [W14+44]
0x11AC	0x2146D0  	MOV	#lo_addr(_Year_4), W0
0x11AE	0x780581  	MOV	W1, W11
0x11B0	0x784510  	MOV.B	[W0], W10
0x11B2	0x07FBEA  	RCALL	_ByteToStr
;Battery_Meintenance.mpas,244 :: 		ltrim(MonthText);
0x11B4	0x470064  	ADD	W14, #4, W0
0x11B6	0x780500  	MOV	W0, W10
0x11B8	0x07487D  	RCALL	_ltrim
;Battery_Meintenance.mpas,245 :: 		ltrim(YilText);
0x11BA	0x470060  	ADD	W14, #0, W0
0x11BC	0x780500  	MOV	W0, W10
0x11BE	0x07487A  	RCALL	_ltrim
;Battery_Meintenance.mpas,247 :: 		DateFullText :=('4-->'+DayText+'.' + MonthText + '.20' + YilText);
0x11C0	0x47007C  	ADD	W14, #28, W0
0x11C2	0xB3C342  	MOV.B	#52, W2
0x11C4	0x785802  	MOV.B	W2, [W0++]
0x11C6	0xB3C2D2  	MOV.B	#45, W2
0x11C8	0x785802  	MOV.B	W2, [W0++]
0x11CA	0xB3C2D2  	MOV.B	#45, W2
0x11CC	0x785802  	MOV.B	W2, [W0++]
0x11CE	0xB3C3E2  	MOV.B	#62, W2
0x11D0	0x785802  	MOV.B	W2, [W0++]
0x11D2	0x4700E8  	ADD	W14, #8, W1
0x11D4	0x075B38  	RCALL	___CS2S
0x11D6	0xB3C2E2  	MOV.B	#46, W2
0x11D8	0x785802  	MOV.B	W2, [W0++]
0x11DA	0x90117E  	MOV	[W14+46], W2
0x11DC	0x780082  	MOV	W2, W1
0x11DE	0x075B33  	RCALL	___CS2S
0x11E0	0xB3C2E2  	MOV.B	#46, W2
0x11E2	0x785802  	MOV.B	W2, [W0++]
0x11E4	0xB3C322  	MOV.B	#50, W2
0x11E6	0x785802  	MOV.B	W2, [W0++]
0x11E8	0xB3C302  	MOV.B	#48, W2
0x11EA	0x785802  	MOV.B	W2, [W0++]
0x11EC	0x90116E  	MOV	[W14+44], W2
0x11EE	0x780082  	MOV	W2, W1
0x11F0	0x075B2A  	RCALL	___CS2S
0x11F2	0x780080  	MOV	W0, W1
0x11F4	0xEF2000  	CLR	W0
0x11F6	0x785880  	MOV.B	W0, [W1++]
0x11F8	0x47006C  	ADD	W14, #12, W0
0x11FA	0x4700FC  	ADD	W14, #28, W1
0x11FC	0x075B24  	RCALL	___CS2S
0x11FE	0x780080  	MOV	W0, W1
0x1200	0xEF2000  	CLR	W0
0x1202	0x785880  	MOV.B	W0, [W1++]
;Battery_Meintenance.mpas,248 :: 		Glcd_Write_Text(DateFullText,10,5,Black);
0x1204	0x47006C  	ADD	W14, #12, W0
0x1206	0xB3C01D  	MOV.B	#1, W13
0x1208	0xB3C05C  	MOV.B	#5, W12
0x120A	0xB3C0AB  	MOV.B	#10, W11
0x120C	0x780500  	MOV	W0, W10
0x120E	0x0722BD  	RCALL	_Glcd_Write_Text
;Battery_Meintenance.mpas,250 :: 		Pause_Ms(500);
0x1210	0x201F4A  	MOV	#500, W10
0x1212	0x076641  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,253 :: 		clrwdt;
0x1214	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,255 :: 		end;
L__DateCalculator44:
;Battery_Meintenance.mpas,259 :: 		if (Ok_Button =0) then
0x1216	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1218	0x370004  	BRA	L__DateCalculator55
;Battery_Meintenance.mpas,261 :: 		while (Ok_Button =0) do
L__DateCalculator58:
0x121A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x121C	0x370002  	BRA	L__DateCalculator59
;Battery_Meintenance.mpas,264 :: 		clrwdt;
0x121E	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,266 :: 		end;
0x1220	0x37FFFC  	BRA	L__DateCalculator58
L__DateCalculator59:
;Battery_Meintenance.mpas,268 :: 		end;
L__DateCalculator55:
;Battery_Meintenance.mpas,272 :: 		Pause_Ms(1000);
0x1222	0x203E8A  	MOV	#1000, W10
0x1224	0x076638  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,274 :: 		clrwdt;
0x1226	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,277 :: 		Pause_Ms(1000);
0x1228	0x203E8A  	MOV	#1000, W10
0x122A	0x076635  	RCALL	_Pause_Ms
;Battery_Meintenance.mpas,279 :: 		clrwdt;
0x122C	0xFE6000  	CLRWDT
;Battery_Meintenance.mpas,282 :: 		Glcd_Fill(0x00);
0x122E	0xEF2014  	CLR	W10
0x1230	0x07434D  	RCALL	_Glcd_Fill
;Battery_Meintenance.mpas,284 :: 		end;
L_end_DateCalculator:
0x1232	0x7806CF  	POP	W13
0x1234	0x78064F  	POP	W12
0x1236	0x7805CF  	POP	W11
0x1238	0x78054F  	POP	W10
0x123A	0xFA8000  	ULNK
0x123C	0x060000  	RETURN
; end of _DateCalculator
_Read_Time:
0x0652	0xFA0000  	LNK	#0
;GRR3000LManagementPanel.mpas,1597 :: 		begin
0x0654	0x781F8A  	PUSH	W10
; p_week start address is: 6 (W3)
0x0656	0x97B9CE  	MOV	[W14-8], W3
; p_month start address is: 8 (W4)
0x0658	0x97BA3E  	MOV	[W14-10], W4
; p_year start address is: 10 (W5)
0x065A	0x97BAAE  	MOV	[W14-12], W5
;GRR3000LManagementPanel.mpas,1600 :: 		clrwdt;
0x065C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,1603 :: 		I2C1_Start();                   // Issue start signal
0x065E	0x07FFC6  	RCALL	_I2C1_Start
;GRR3000LManagementPanel.mpas,1604 :: 		I2C1_Write(0xD0);           // Address DS1307, see DS1307 datasheet
0x0660	0x781F8A  	PUSH	W10
0x0662	0xB3CD0A  	MOV.B	#208, W10
0x0664	0x07FD8C  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1605 :: 		I2C1_Write(0);                  // Start from address 0
0x0666	0xEF2014  	CLR	W10
0x0668	0x07FD8A  	RCALL	_I2C1_Write
0x066A	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,1606 :: 		I2C1_Restart();                 // Issue repeated start signal
0x066C	0x07FDC9  	RCALL	_I2C1_Restart
;GRR3000LManagementPanel.mpas,1607 :: 		I2C1_Write(0xD0 + 1);       // Address DS1307 for reading R/W=1
0x066E	0x781F8A  	PUSH	W10
0x0670	0xB3CD1A  	MOV.B	#209, W10
0x0672	0x07FD85  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1609 :: 		p_seconds^ := I2C1_Read(0);     // Read seconds byte
0x0674	0xEF2014  	CLR	W10
0x0676	0x07FDCF  	RCALL	_I2C1_Read
0x0678	0x784E00  	MOV.B	W0, [W12]
;GRR3000LManagementPanel.mpas,1610 :: 		p_minutes^ := I2C1_Read(0);     // Read minutes byte
0x067A	0xEF2014  	CLR	W10
0x067C	0x07FDCC  	RCALL	_I2C1_Read
0x067E	0x784D80  	MOV.B	W0, [W11]
;GRR3000LManagementPanel.mpas,1611 :: 		p_hours^   := I2C1_Read(0);       // Read hours byte
0x0680	0xEF2014  	CLR	W10
0x0682	0x07FDC9  	RCALL	_I2C1_Read
0x0684	0x78054F  	POP	W10
0x0686	0x784D00  	MOV.B	W0, [W10]
;GRR3000LManagementPanel.mpas,1612 :: 		p_week^    := I2C1_Read(0);
0x0688	0xEF2014  	CLR	W10
0x068A	0x07FDC5  	RCALL	_I2C1_Read
0x068C	0x784980  	MOV.B	W0, [W3]
; p_week end address is: 6 (W3)
;GRR3000LManagementPanel.mpas,1613 :: 		p_day^     := I2C1_Read(0);
0x068E	0xEF2014  	CLR	W10
0x0690	0x07FDC2  	RCALL	_I2C1_Read
0x0692	0x784E80  	MOV.B	W0, [W13]
;GRR3000LManagementPanel.mpas,1614 :: 		p_month^   := I2C1_Read(0);
0x0694	0xEF2014  	CLR	W10
0x0696	0x07FDBF  	RCALL	_I2C1_Read
0x0698	0x784A00  	MOV.B	W0, [W4]
; p_month end address is: 8 (W4)
;GRR3000LManagementPanel.mpas,1615 :: 		p_year^    := I2C1_Read(1);
0x069A	0x20001A  	MOV	#1, W10
0x069C	0x07FDBC  	RCALL	_I2C1_Read
0x069E	0x784A80  	MOV.B	W0, [W5]
; p_year end address is: 10 (W5)
;GRR3000LManagementPanel.mpas,1617 :: 		I2C1_Stop();                    // Issue stop signal
0x06A0	0x07FD63  	RCALL	_I2C1_Stop
;GRR3000LManagementPanel.mpas,1618 :: 		end;
L_end_Read_Time:
0x06A2	0x78054F  	POP	W10
0x06A4	0xFA8000  	ULNK
0x06A6	0x060000  	RETURN
; end of _Read_Time
_I2C1_Start:
0x05EC	0xFA0002  	LNK	#2
;__Lib_I2C_1_p30.mpas,132 :: 		
;__Lib_I2C_1_p30.mpas,133 :: 		
; j start address is: 4 (W2)
0x05EE	0xEF2004  	CLR	W2
; j end address is: 4 (W2)
L__I2C1_Start20:
;__Lib_I2C_1_p30.mpas,135 :: 		
; j start address is: 4 (W2)
0x05F0	0x07FF6D  	RCALL	_I2C1_Is_Idle
0x05F2	0xE10060  	CP	W0, #0
0x05F4	0x320001  	BRA Z	L__I2C1_Start25
L__I2C1_Start75:
;__Lib_I2C_1_p30.mpas,136 :: 		
0x05F6	0x370005  	BRA	L__I2C1_Start23
L__I2C1_Start25:
;__Lib_I2C_1_p30.mpas,137 :: 		
0x05F8	0x227100  	MOV	#10000, W0
0x05FA	0xE11000  	CP	W2, W0
0x05FC	0x320002  	BRA Z	L__I2C1_Start23
L__I2C1_Start76:
; j start address is: 4 (W2)
0x05FE	0xEC2004  	INC	W2
; j end address is: 4 (W2)
0x0600	0x37FFF7  	BRA	L__I2C1_Start20
L__I2C1_Start23:
;__Lib_I2C_1_p30.mpas,139 :: 		
0x0602	0x227100  	MOV	#10000, W0
0x0604	0xE11000  	CP	W2, W0
0x0606	0x390003  	BRA LTU	L__I2C1_Start28
L__I2C1_Start77:
; j end address is: 4 (W2)
;__Lib_I2C_1_p30.mpas,140 :: 		
0x0608	0x200FF0  	MOV	#255, W0
0x060A	0x980700  	MOV	W0, [W14+0]
0x060C	0x370002  	BRA	L__I2C1_Start29
;__Lib_I2C_1_p30.mpas,141 :: 		
L__I2C1_Start28:
;__Lib_I2C_1_p30.mpas,143 :: 		
0x060E	0xA80206  	BSET	I2CCON, #0
;__Lib_I2C_1_p30.mpas,145 :: 		
0x0610	0x07FDC2  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,146 :: 		
L__I2C1_Start29:
;__Lib_I2C_1_p30.mpas,147 :: 		
0x0612	0x90000E  	MOV	[W14+0], W0
L_end_I2C1_Start:
0x0614	0xFA8000  	ULNK
0x0616	0x060000  	RETURN
; end of _I2C1_Start
__Lib_I2C_1_p30_I2C1_Is_Finished:
0x0196	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,76 :: 		
;__Lib_I2C_1_p30.mpas,77 :: 		
L___Lib_I2C_1_p30_I2C1_Is_Finished3:
0x0198	0xAFC085  	BTSC	IFS0, #14
0x019A	0x370002  	BRA	L___Lib_I2C_1_p30_I2C1_Is_Finished4
;__Lib_I2C_1_p30.mpas,78 :: 		
0x019C	0x000000  	NOP
0x019E	0x37FFFC  	BRA	L___Lib_I2C_1_p30_I2C1_Is_Finished3
L___Lib_I2C_1_p30_I2C1_Is_Finished4:
;__Lib_I2C_1_p30.mpas,79 :: 		
0x01A0	0xA9C085  	BCLR	IFS0, #14
;__Lib_I2C_1_p30.mpas,80 :: 		
L_end_I2C1_Is_Finished:
0x01A2	0xFA8000  	ULNK
0x01A4	0x060000  	RETURN
; end of __Lib_I2C_1_p30_I2C1_Is_Finished
_I2C1_Write:
0x017E	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,170 :: 		
;__Lib_I2C_1_p30.mpas,171 :: 		
0x0180	0xFB800A  	ZE	W10, W0
0x0182	0xB7A202  	MOV	WREG, I2CTRN
;__Lib_I2C_1_p30.mpas,172 :: 		
0x0184	0xAEE208  	BTSS	I2CSTAT, #7
0x0186	0x370002  	BRA	L__I2C1_Write44
;__Lib_I2C_1_p30.mpas,174 :: 		
; Result start address is: 2 (W1)
0x0188	0x200011  	MOV	#1, W1
;__Lib_I2C_1_p30.mpas,175 :: 		
; Result end address is: 2 (W1)
0x018A	0x370002  	BRA	L_end__I2C1_Write
;__Lib_I2C_1_p30.mpas,176 :: 		
L__I2C1_Write44:
;__Lib_I2C_1_p30.mpas,177 :: 		
0x018C	0x070004  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,178 :: 		
; Result start address is: 2 (W1)
0x018E	0xEF2002  	CLR	W1
; Result end address is: 2 (W1)
;__Lib_I2C_1_p30.mpas,179 :: 		
L_end__I2C1_Write:
; Result start address is: 2 (W1)
0x0190	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_I2C1_Write:
0x0192	0xFA8000  	ULNK
0x0194	0x060000  	RETURN
; end of _I2C1_Write
_I2C1_Restart:
0x0200	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,150 :: 		
;__Lib_I2C_1_p30.mpas,151 :: 		
L__I2C1_Restart32:
0x0202	0xBF8206  	MOV	I2CCON, WREG
0x0204	0x60007F  	AND	W0, #31, W0
0x0206	0xE20000  	CP0	W0
0x0208	0x320002  	BRA Z	L__I2C1_Restart33
L__I2C1_Restart79:
;__Lib_I2C_1_p30.mpas,152 :: 		
0x020A	0x000000  	NOP
0x020C	0x37FFFA  	BRA	L__I2C1_Restart32
L__I2C1_Restart33:
;__Lib_I2C_1_p30.mpas,153 :: 		
0x020E	0xA82206  	BSET	I2CCON, #1
;__Lib_I2C_1_p30.mpas,155 :: 		
0x0210	0x07FFC2  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,156 :: 		
L_end_I2C1_Restart:
0x0212	0xFA8000  	ULNK
0x0214	0x060000  	RETURN
; end of _I2C1_Restart
_I2C1_Read:
0x0216	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,183 :: 		
;__Lib_I2C_1_p30.mpas,184 :: 		
L__I2C1_Read48:
0x0218	0xBF8206  	MOV	I2CCON, WREG
0x021A	0x60007F  	AND	W0, #31, W0
0x021C	0xE20000  	CP0	W0
0x021E	0x320002  	BRA Z	L__I2C1_Read49
L__I2C1_Read84:
;__Lib_I2C_1_p30.mpas,185 :: 		
0x0220	0x000000  	NOP
0x0222	0x37FFFA  	BRA	L__I2C1_Read48
L__I2C1_Read49:
;__Lib_I2C_1_p30.mpas,187 :: 		
0x0224	0xA86206  	BSET	I2CCON, #3
;__Lib_I2C_1_p30.mpas,188 :: 		
0x0226	0x07FFB7  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,190 :: 		
L__I2C1_Read53:
0x0228	0xBF8206  	MOV	I2CCON, WREG
0x022A	0x60007F  	AND	W0, #31, W0
0x022C	0xE20000  	CP0	W0
0x022E	0x320002  	BRA Z	L__I2C1_Read54
L__I2C1_Read85:
;__Lib_I2C_1_p30.mpas,191 :: 		
0x0230	0x000000  	NOP
0x0232	0x37FFFA  	BRA	L__I2C1_Read53
L__I2C1_Read54:
;__Lib_I2C_1_p30.mpas,192 :: 		
0x0234	0xE15060  	CP	W10, #0
0x0236	0x320002  	BRA Z	L__I2C1_Read58
L__I2C1_Read86:
;__Lib_I2C_1_p30.mpas,193 :: 		
0x0238	0xA8A206  	BSET	I2CCON, #5
0x023A	0x370001  	BRA	L__I2C1_Read59
;__Lib_I2C_1_p30.mpas,194 :: 		
L__I2C1_Read58:
;__Lib_I2C_1_p30.mpas,195 :: 		
0x023C	0xA9A206  	BCLR	I2CCON, #5
L__I2C1_Read59:
;__Lib_I2C_1_p30.mpas,197 :: 		
0x023E	0xA88206  	BSET	I2CCON, #4
;__Lib_I2C_1_p30.mpas,198 :: 		
0x0240	0x07FFAA  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,200 :: 		
; Result start address is: 2 (W1)
0x0242	0x801001  	MOV	I2CRCV, W1
;__Lib_I2C_1_p30.mpas,201 :: 		
0x0244	0x784001  	MOV.B	W1, W0
; Result end address is: 2 (W1)
L_end_I2C1_Read:
0x0246	0xFA8000  	ULNK
0x0248	0x060000  	RETURN
; end of _I2C1_Read
_I2C1_Stop:
0x0168	0xFA0000  	LNK	#0
;__Lib_I2C_1_p30.mpas,160 :: 		
;__Lib_I2C_1_p30.mpas,161 :: 		
L__I2C1_Stop38:
0x016A	0xBF8206  	MOV	I2CCON, WREG
0x016C	0x60007F  	AND	W0, #31, W0
0x016E	0xE20000  	CP0	W0
0x0170	0x320002  	BRA Z	L__I2C1_Stop39
L__I2C1_Stop81:
;__Lib_I2C_1_p30.mpas,162 :: 		
0x0172	0x000000  	NOP
0x0174	0x37FFFA  	BRA	L__I2C1_Stop38
L__I2C1_Stop39:
;__Lib_I2C_1_p30.mpas,163 :: 		
0x0176	0xA84206  	BSET	I2CCON, #2
;__Lib_I2C_1_p30.mpas,165 :: 		
0x0178	0x07000E  	RCALL	__Lib_I2C_1_p30_I2C1_Is_Finished
;__Lib_I2C_1_p30.mpas,166 :: 		
L_end_I2C1_Stop:
0x017A	0xFA8000  	ULNK
0x017C	0x060000  	RETURN
; end of _I2C1_Stop
_Bcd2Dec16:
0x05C2	0xFA0000  	LNK	#0
;__Lib_Conversions.mpas,528 :: 		
;__Lib_Conversions.mpas,530 :: 		
0x05C4	0xDE50CC  	LSR	W10, #12, W1
0x05C6	0x203E80  	MOV	#1000, W0
0x05C8	0xB80900  	MUL.UU	W1, W0, W2
;__Lib_Conversions.mpas,531 :: 		
0x05CA	0x20F000  	MOV	#3840, W0
0x05CC	0x650000  	AND	W10, W0, W0
0x05CE	0xDE00C8  	LSR	W0, #8, W1
0x05D0	0x200640  	MOV	#100, W0
0x05D2	0xB80800  	MUL.UU	W1, W0, W0
0x05D4	0x410100  	ADD	W2, W0, W2
;__Lib_Conversions.mpas,532 :: 		
0x05D6	0x200F00  	MOV	#240, W0
0x05D8	0x650000  	AND	W10, W0, W0
0x05DA	0xDE00C4  	LSR	W0, #4, W1
0x05DC	0x2000A0  	MOV	#10, W0
0x05DE	0xB80800  	MUL.UU	W1, W0, W0
0x05E0	0x410080  	ADD	W2, W0, W1
;__Lib_Conversions.mpas,533 :: 		
0x05E2	0x65006F  	AND	W10, #15, W0
; Result start address is: 2 (W1)
0x05E4	0x408080  	ADD	W1, W0, W1
;__Lib_Conversions.mpas,534 :: 		
;__Lib_Conversions.mpas,535 :: 		
0x05E6	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Bcd2Dec16:
0x05E8	0xFA8000  	ULNK
0x05EA	0x060000  	RETURN
; end of _Bcd2Dec16
_Leakage_Settings:
;GRR3000LManagementPanel.mpas,4694 :: 		begin
;GRR3000LManagementPanel.mpas,4695 :: 		Glcd_Fill(0x00);
0x4092	0x781F8A  	PUSH	W10
0x4094	0x781F8B  	PUSH	W11
0x4096	0x781F8C  	PUSH	W12
0x4098	0x781F8D  	PUSH	W13
0x409A	0xEF2014  	CLR	W10
0x409C	0x072C17  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,4696 :: 		MenuExit         := 0;
0x409E	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x40A0	0xEF2000  	CLR	W0
0x40A2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4697 :: 		MenuSayacValue   := 1;
0x40A4	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x40A6	0xB3C010  	MOV.B	#1, W0
0x40A8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4698 :: 		Chng[3]          := 2;
0x40AA	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x40AC	0xB3C020  	MOV.B	#2, W0
0x40AE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4706 :: 		Glcd_Write_Text(Title_LeakMenu,     0, Row1, Black);
0x40B0	0xB3C01D  	MOV.B	#1, W13
0x40B2	0xEF2018  	CLR	W12
0x40B4	0xEF2016  	CLR	W11
0x40B6	0x21237A  	MOV	#lo_addr(_Title_LeakMenu), W10
0x40B8	0x070B68  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4707 :: 		Glcd_Write_Text(SubTitle_Pleak,     6, Row2, Black);
0x40BA	0xB3C01D  	MOV.B	#1, W13
0x40BC	0xB3C01C  	MOV.B	#1, W12
0x40BE	0xB3C06B  	MOV.B	#6, W11
0x40C0	0x21267A  	MOV	#lo_addr(_SubTitle_Pleak), W10
0x40C2	0x070B63  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4708 :: 		Glcd_Write_Text(SubTitle_Nleak,     6, Row3, Black);
0x40C4	0xB3C01D  	MOV.B	#1, W13
0x40C6	0xB3C02C  	MOV.B	#2, W12
0x40C8	0xB3C06B  	MOV.B	#6, W11
0x40CA	0x2128CA  	MOV	#lo_addr(_SubTitle_Nleak), W10
0x40CC	0x070B5E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4709 :: 		Glcd_Write_Text(SubTitle_Back,      6, Row4, Black);
0x40CE	0xB3C01D  	MOV.B	#1, W13
0x40D0	0xB3C03C  	MOV.B	#3, W12
0x40D2	0xB3C06B  	MOV.B	#6, W11
0x40D4	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x40D6	0x070B59  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4712 :: 		Leakage_Pos_Set         := EEPROM_Read(EE_LeakagePosEeAddr);
0x40D8	0x2F04EA  	MOV	#61518, W10
0x40DA	0x2007FB  	MOV	#127, W11
0x40DC	0x07F1C1  	RCALL	_EEPROM_Read
0x40DE	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0x40E0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4713 :: 		Leakage_Neg_Set         := EEPROM_Read(EE_LeakageNegEeAddr);
0x40E2	0x2F050A  	MOV	#61520, W10
0x40E4	0x2007FB  	MOV	#127, W11
0x40E6	0x07F1BC  	RCALL	_EEPROM_Read
0x40E8	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0x40EA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4715 :: 		if (Leakage_Pos_Set <1) then
0x40EC	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x40EE	0x784010  	MOV.B	[W0], W0
0x40F0	0xE10461  	CP.B	W0, #1
0x40F2	0x3D0006  	BRA GE	L__Leakage_Settings1625
L__Leakage_Settings5275:
;GRR3000LManagementPanel.mpas,4717 :: 		Glcd_Write_Text(DisableText, 84, Row2, black);
0x40F4	0xB3C01D  	MOV.B	#1, W13
0x40F6	0xB3C01C  	MOV.B	#1, W12
0x40F8	0xB3C54B  	MOV.B	#84, W11
0x40FA	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x40FC	0x070B46  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4718 :: 		end else
0x40FE	0x370020  	BRA	L__Leakage_Settings1626
L__Leakage_Settings1625:
;GRR3000LManagementPanel.mpas,4719 :: 		if (Leakage_Pos_Set >0) then
0x4100	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x4102	0x784010  	MOV.B	[W0], W0
0x4104	0xE10460  	CP.B	W0, #0
0x4106	0x34001C  	BRA LE	L__Leakage_Settings1628
L__Leakage_Settings5276:
;GRR3000LManagementPanel.mpas,4721 :: 		if (KacakSensor =0) then
0x4108	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x410A	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x410C	0x370011  	BRA	L__Leakage_Settings1631
;GRR3000LManagementPanel.mpas,4723 :: 		ValueDivide(Leakage_Pos_Set, 0);
0x410E	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x4110	0xEF2016  	CLR	W11
0x4112	0xFB0510  	SE	[W0], W10
0x4114	0x07E50D  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4724 :: 		WriteText := Value_Text + 'k';
0x4116	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x4118	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x411A	0x074395  	RCALL	___CS2S
0x411C	0xB3C6B2  	MOV.B	#107, W2
0x411E	0x785802  	MOV.B	W2, [W0++]
0x4120	0xEF2004  	CLR	W2
0x4122	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4725 :: 		Glcd_Write_Text(WriteText, 84, Row2, black);
0x4124	0xB3C01D  	MOV.B	#1, W13
0x4126	0xB3C01C  	MOV.B	#1, W12
0x4128	0xB3C54B  	MOV.B	#84, W11
0x412A	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x412C	0x070B2E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4726 :: 		end else
0x412E	0x370008  	BRA	L__Leakage_Settings1632
L__Leakage_Settings1631:
;GRR3000LManagementPanel.mpas,4727 :: 		if (KacakSensor =1) then
0x4130	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4132	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4134	0x370005  	BRA	L__Leakage_Settings1634
;GRR3000LManagementPanel.mpas,4729 :: 		Glcd_Write_Text(EnableText, 84, Row2, black);
0x4136	0xB3C01D  	MOV.B	#1, W13
0x4138	0xB3C01C  	MOV.B	#1, W12
0x413A	0xB3C54B  	MOV.B	#84, W11
0x413C	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x413E	0x070B25  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4730 :: 		end;
L__Leakage_Settings1634:
L__Leakage_Settings1632:
;GRR3000LManagementPanel.mpas,4731 :: 		end;
L__Leakage_Settings1628:
L__Leakage_Settings1626:
;GRR3000LManagementPanel.mpas,4733 :: 		if (Leakage_Neg_Set <1) then
0x4140	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4142	0x784010  	MOV.B	[W0], W0
0x4144	0xE10461  	CP.B	W0, #1
0x4146	0x3D0006  	BRA GE	L__Leakage_Settings1637
L__Leakage_Settings5277:
;GRR3000LManagementPanel.mpas,4735 :: 		Glcd_Write_Text(DisableText, 84, Row3, black);
0x4148	0xB3C01D  	MOV.B	#1, W13
0x414A	0xB3C02C  	MOV.B	#2, W12
0x414C	0xB3C54B  	MOV.B	#84, W11
0x414E	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x4150	0x070B1C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4736 :: 		end else
0x4152	0x370020  	BRA	L__Leakage_Settings1638
L__Leakage_Settings1637:
;GRR3000LManagementPanel.mpas,4737 :: 		if (Leakage_Neg_Set >0) then
0x4154	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4156	0x784010  	MOV.B	[W0], W0
0x4158	0xE10460  	CP.B	W0, #0
0x415A	0x34001C  	BRA LE	L__Leakage_Settings1640
L__Leakage_Settings5278:
;GRR3000LManagementPanel.mpas,4739 :: 		if (KacakSensor =0) then
0x415C	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x415E	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x4160	0x370011  	BRA	L__Leakage_Settings1643
;GRR3000LManagementPanel.mpas,4741 :: 		ValueDivide(Leakage_Neg_Set, 0);
0x4162	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4164	0xEF2016  	CLR	W11
0x4166	0xFB0510  	SE	[W0], W10
0x4168	0x07E4E3  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4742 :: 		WriteText := Value_Text + 'k';
0x416A	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x416C	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x416E	0x07436B  	RCALL	___CS2S
0x4170	0xB3C6B2  	MOV.B	#107, W2
0x4172	0x785802  	MOV.B	W2, [W0++]
0x4174	0xEF2004  	CLR	W2
0x4176	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4743 :: 		Glcd_Write_Text(WriteText, 84, Row3, black);
0x4178	0xB3C01D  	MOV.B	#1, W13
0x417A	0xB3C02C  	MOV.B	#2, W12
0x417C	0xB3C54B  	MOV.B	#84, W11
0x417E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x4180	0x070B04  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4744 :: 		end else
0x4182	0x370008  	BRA	L__Leakage_Settings1644
L__Leakage_Settings1643:
;GRR3000LManagementPanel.mpas,4745 :: 		if (KacakSensor =1) then
0x4184	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4186	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4188	0x370005  	BRA	L__Leakage_Settings1646
;GRR3000LManagementPanel.mpas,4747 :: 		Glcd_Write_Text(EnableText, 84, Row3, black);
0x418A	0xB3C01D  	MOV.B	#1, W13
0x418C	0xB3C02C  	MOV.B	#2, W12
0x418E	0xB3C54B  	MOV.B	#84, W11
0x4190	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x4192	0x070AFB  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4748 :: 		end;
L__Leakage_Settings1646:
L__Leakage_Settings1644:
;GRR3000LManagementPanel.mpas,4749 :: 		end;
L__Leakage_Settings1640:
L__Leakage_Settings1638:
;GRR3000LManagementPanel.mpas,4752 :: 		while (MenuExit = 0) do
L__Leakage_Settings1649:
0x4194	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x4196	0x784010  	MOV.B	[W0], W0
0x4198	0xE10460  	CP.B	W0, #0
0x419A	0x3A0185  	BRA NZ	L__Leakage_Settings1650
L__Leakage_Settings5279:
;GRR3000LManagementPanel.mpas,4755 :: 		MenuSayac := MenuButtonRead(3, 255);  // menu için butonlarý oku 3 satýr menü var
0x419C	0xB3CFFB  	MOV.B	#255, W11
0x419E	0xB3C03A  	MOV.B	#3, W10
0x41A0	0x07E877  	RCALL	_MenuButtonRead
0x41A2	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x41A4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4757 :: 		asm ClrWDT; end;
0x41A6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4760 :: 		1: begin // + kaçak deðeri
0x41A8	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x41AA	0x784010  	MOV.B	[W0], W0
0x41AC	0xE10461  	CP.B	W0, #1
0x41AE	0x3A00B4  	BRA NZ	L__Leakage_Settings1656
L__Leakage_Settings5280:
;GRR3000LManagementPanel.mpas,4761 :: 		if (Ok_Button =0) then
0x41B0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x41B2	0x3700B1  	BRA	L__Leakage_Settings1658
;GRR3000LManagementPanel.mpas,4763 :: 		while (Ok_Button =0) do
L__Leakage_Settings1661:
0x41B4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x41B6	0x370002  	BRA	L__Leakage_Settings1662
;GRR3000LManagementPanel.mpas,4765 :: 		asm ClrWDT; end;
0x41B8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4766 :: 		end;
0x41BA	0x37FFFC  	BRA	L__Leakage_Settings1661
L__Leakage_Settings1662:
;GRR3000LManagementPanel.mpas,4768 :: 		Chng[1] := 1;
0x41BC	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x41BE	0xB3C010  	MOV.B	#1, W0
0x41C0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4770 :: 		While (Chng[1] =1) do
L__Leakage_Settings1666:
0x41C2	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x41C4	0x784010  	MOV.B	[W0], W0
0x41C6	0xE10461  	CP.B	W0, #1
0x41C8	0x3A00A6  	BRA NZ	L__Leakage_Settings1667
L__Leakage_Settings5281:
;GRR3000LManagementPanel.mpas,4773 :: 		asm ClrWDT; end;
0x41CA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4775 :: 		if (Up_Button =0) then
0x41CC	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x41CE	0x37001F  	BRA	L__Leakage_Settings1671
;GRR3000LManagementPanel.mpas,4777 :: 		ButonStop       := 0;
0x41D0	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x41D2	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4778 :: 		BtCounterNormal := 0;
0x41D4	0xEF2000  	CLR	W0
0x41D6	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4779 :: 		while (ButonStop = 0) do
L__Leakage_Settings1674:
0x41D8	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x41DA	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x41DC	0x370002  	BRA	L__Leakage_Settings1675
;GRR3000LManagementPanel.mpas,4781 :: 		asm ClrWDT; end;
0x41DE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4782 :: 		end;
0x41E0	0x37FFFB  	BRA	L__Leakage_Settings1674
L__Leakage_Settings1675:
;GRR3000LManagementPanel.mpas,4783 :: 		if (KacakSensor =0) then
0x41E2	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x41E4	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x41E6	0x37000C  	BRA	L__Leakage_Settings1679
;GRR3000LManagementPanel.mpas,4785 :: 		Inc(Leakage_Pos_Set);
0x41E8	0xB3C011  	MOV.B	#1, W1
0x41EA	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x41EC	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4786 :: 		if (Leakage_Pos_Set > 100) then // 100k ya kadar
0x41EE	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x41F0	0x784090  	MOV.B	[W0], W1
0x41F2	0xB3C640  	MOV.B	#100, W0
0x41F4	0xE10C00  	CP.B	W1, W0
0x41F6	0x340003  	BRA LE	L__Leakage_Settings1682
L__Leakage_Settings5282:
;GRR3000LManagementPanel.mpas,4787 :: 		Leakage_Pos_Set := 100;
0x41F8	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0x41FA	0xB3C640  	MOV.B	#100, W0
0x41FC	0x784880  	MOV.B	W0, [W1]
L__Leakage_Settings1682:
;GRR3000LManagementPanel.mpas,4788 :: 		end else
0x41FE	0x370006  	BRA	L__Leakage_Settings1680
L__Leakage_Settings1679:
;GRR3000LManagementPanel.mpas,4789 :: 		if (KacakSensor =1) then
0x4200	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4202	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4204	0x370003  	BRA	L__Leakage_Settings1685
;GRR3000LManagementPanel.mpas,4791 :: 		Leakage_Pos_Set := 1; // + kaçak algýlama açýk
0x4206	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0x4208	0xB3C010  	MOV.B	#1, W0
0x420A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4792 :: 		end;
L__Leakage_Settings1685:
L__Leakage_Settings1680:
;GRR3000LManagementPanel.mpas,4793 :: 		end else
0x420C	0x37001F  	BRA	L__Leakage_Settings1672
L__Leakage_Settings1671:
;GRR3000LManagementPanel.mpas,4794 :: 		if (Down_Button =0) then
0x420E	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x4210	0x37001D  	BRA	L__Leakage_Settings1688
;GRR3000LManagementPanel.mpas,4796 :: 		ButonStop       := 0;
0x4212	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x4214	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4797 :: 		BtCounterNormal := 0;
0x4216	0xEF2000  	CLR	W0
0x4218	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4798 :: 		while (ButonStop = 0) do
L__Leakage_Settings1691:
0x421A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x421C	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x421E	0x370002  	BRA	L__Leakage_Settings1692
;GRR3000LManagementPanel.mpas,4800 :: 		asm ClrWDT; end;
0x4220	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4801 :: 		end;
0x4222	0x37FFFB  	BRA	L__Leakage_Settings1691
L__Leakage_Settings1692:
;GRR3000LManagementPanel.mpas,4802 :: 		if (KacakSensor =0) then
0x4224	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4226	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x4228	0x37000B  	BRA	L__Leakage_Settings1696
;GRR3000LManagementPanel.mpas,4804 :: 		Dec(Leakage_Pos_Set);
0x422A	0xB3C011  	MOV.B	#1, W1
0x422C	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x422E	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4805 :: 		if (Leakage_Pos_Set < 1) then // 100k ya kadar
0x4230	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x4232	0x784010  	MOV.B	[W0], W0
0x4234	0xE10461  	CP.B	W0, #1
0x4236	0x3D0003  	BRA GE	L__Leakage_Settings1699
L__Leakage_Settings5283:
;GRR3000LManagementPanel.mpas,4806 :: 		Leakage_Pos_Set := 0;
0x4238	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0x423A	0xEF2000  	CLR	W0
0x423C	0x784880  	MOV.B	W0, [W1]
L__Leakage_Settings1699:
;GRR3000LManagementPanel.mpas,4807 :: 		end else
0x423E	0x370006  	BRA	L__Leakage_Settings1697
L__Leakage_Settings1696:
;GRR3000LManagementPanel.mpas,4808 :: 		if (KacakSensor =1) then
0x4240	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4242	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4244	0x370003  	BRA	L__Leakage_Settings1702
;GRR3000LManagementPanel.mpas,4810 :: 		Leakage_Pos_Set := 0; // + kaçak algýlama kapalý
0x4246	0x2128B1  	MOV	#lo_addr(_Leakage_Pos_Set), W1
0x4248	0xEF2000  	CLR	W0
0x424A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4811 :: 		end;
L__Leakage_Settings1702:
L__Leakage_Settings1697:
;GRR3000LManagementPanel.mpas,4812 :: 		end;
L__Leakage_Settings1688:
L__Leakage_Settings1672:
;GRR3000LManagementPanel.mpas,4814 :: 		if (Leakage_Pos_Set <1) then
0x424C	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x424E	0x784010  	MOV.B	[W0], W0
0x4250	0xE10461  	CP.B	W0, #1
0x4252	0x3D0006  	BRA GE	L__Leakage_Settings1705
L__Leakage_Settings5284:
;GRR3000LManagementPanel.mpas,4816 :: 		Glcd_Write_Text(DisableText, 84, Row2, White);
0x4254	0xEF201A  	CLR	W13
0x4256	0xB3C01C  	MOV.B	#1, W12
0x4258	0xB3C54B  	MOV.B	#84, W11
0x425A	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x425C	0x070A96  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4817 :: 		end else
0x425E	0x370020  	BRA	L__Leakage_Settings1706
L__Leakage_Settings1705:
;GRR3000LManagementPanel.mpas,4818 :: 		if (Leakage_Pos_Set >0) then
0x4260	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x4262	0x784010  	MOV.B	[W0], W0
0x4264	0xE10460  	CP.B	W0, #0
0x4266	0x34001C  	BRA LE	L__Leakage_Settings1708
L__Leakage_Settings5285:
;GRR3000LManagementPanel.mpas,4820 :: 		if (KacakSensor =0) then
0x4268	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x426A	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x426C	0x370011  	BRA	L__Leakage_Settings1711
;GRR3000LManagementPanel.mpas,4822 :: 		ValueDivide(Leakage_Pos_Set, 0);
0x426E	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x4270	0xEF2016  	CLR	W11
0x4272	0xFB0510  	SE	[W0], W10
0x4274	0x07E45D  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4823 :: 		WriteText := Value_Text + 'k';
0x4276	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x4278	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x427A	0x0742E5  	RCALL	___CS2S
0x427C	0xB3C6B2  	MOV.B	#107, W2
0x427E	0x785802  	MOV.B	W2, [W0++]
0x4280	0xEF2004  	CLR	W2
0x4282	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4824 :: 		Glcd_Write_Text(WriteText, 84, Row2, White);
0x4284	0xEF201A  	CLR	W13
0x4286	0xB3C01C  	MOV.B	#1, W12
0x4288	0xB3C54B  	MOV.B	#84, W11
0x428A	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x428C	0x070A7E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4825 :: 		end else
0x428E	0x370008  	BRA	L__Leakage_Settings1712
L__Leakage_Settings1711:
;GRR3000LManagementPanel.mpas,4826 :: 		if (KacakSensor =1) then
0x4290	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4292	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4294	0x370005  	BRA	L__Leakage_Settings1714
;GRR3000LManagementPanel.mpas,4828 :: 		Glcd_Write_Text(EnableText, 84, Row2, White);
0x4296	0xEF201A  	CLR	W13
0x4298	0xB3C01C  	MOV.B	#1, W12
0x429A	0xB3C54B  	MOV.B	#84, W11
0x429C	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x429E	0x070A75  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4829 :: 		end;
L__Leakage_Settings1714:
L__Leakage_Settings1712:
;GRR3000LManagementPanel.mpas,4830 :: 		end;
L__Leakage_Settings1708:
L__Leakage_Settings1706:
;GRR3000LManagementPanel.mpas,4832 :: 		if (Ok_Button =0) then
0x42A0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x42A2	0x370038  	BRA	L__Leakage_Settings1717
;GRR3000LManagementPanel.mpas,4834 :: 		while (Ok_Button =0) do
L__Leakage_Settings1720:
0x42A4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x42A6	0x370002  	BRA	L__Leakage_Settings1721
;GRR3000LManagementPanel.mpas,4836 :: 		asm ClrWDT; end;
0x42A8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4837 :: 		end;
0x42AA	0x37FFFC  	BRA	L__Leakage_Settings1720
L__Leakage_Settings1721:
;GRR3000LManagementPanel.mpas,4839 :: 		EEPROM_Write(EE_LeakagePosEeAddr, Leakage_Pos_Set);
0x42AC	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x42AE	0xFB0610  	SE	[W0], W12
0x42B0	0x2F04EA  	MOV	#61518, W10
0x42B2	0x2007FB  	MOV	#127, W11
0x42B4	0x07E870  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4840 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Leakage_Settings1725:
0x42B6	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x42B8	0x37FFFE  	BRA	L__Leakage_Settings1725
;GRR3000LManagementPanel.mpas,4842 :: 		Chng[1] := 0;
0x42BA	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x42BC	0xEF2000  	CLR	W0
0x42BE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4844 :: 		if (Leakage_Pos_Set <1) then
0x42C0	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x42C2	0x784010  	MOV.B	[W0], W0
0x42C4	0xE10461  	CP.B	W0, #1
0x42C6	0x3D0006  	BRA GE	L__Leakage_Settings1730
L__Leakage_Settings5286:
;GRR3000LManagementPanel.mpas,4846 :: 		Glcd_Write_Text(DisableText, 84, Row2, black);
0x42C8	0xB3C01D  	MOV.B	#1, W13
0x42CA	0xB3C01C  	MOV.B	#1, W12
0x42CC	0xB3C54B  	MOV.B	#84, W11
0x42CE	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x42D0	0x070A5C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4847 :: 		end else
0x42D2	0x370020  	BRA	L__Leakage_Settings1731
L__Leakage_Settings1730:
;GRR3000LManagementPanel.mpas,4848 :: 		if (Leakage_Pos_Set >0) then
0x42D4	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x42D6	0x784010  	MOV.B	[W0], W0
0x42D8	0xE10460  	CP.B	W0, #0
0x42DA	0x34001C  	BRA LE	L__Leakage_Settings1733
L__Leakage_Settings5287:
;GRR3000LManagementPanel.mpas,4850 :: 		if (KacakSensor =0) then
0x42DC	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x42DE	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x42E0	0x370011  	BRA	L__Leakage_Settings1736
;GRR3000LManagementPanel.mpas,4852 :: 		ValueDivide(Leakage_Pos_Set, 0);
0x42E2	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0x42E4	0xEF2016  	CLR	W11
0x42E6	0xFB0510  	SE	[W0], W10
0x42E8	0x07E423  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4853 :: 		WriteText := Value_Text + 'k';
0x42EA	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x42EC	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x42EE	0x0742AB  	RCALL	___CS2S
0x42F0	0xB3C6B2  	MOV.B	#107, W2
0x42F2	0x785802  	MOV.B	W2, [W0++]
0x42F4	0xEF2004  	CLR	W2
0x42F6	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4854 :: 		Glcd_Write_Text(WriteText, 84, Row2, black);
0x42F8	0xB3C01D  	MOV.B	#1, W13
0x42FA	0xB3C01C  	MOV.B	#1, W12
0x42FC	0xB3C54B  	MOV.B	#84, W11
0x42FE	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x4300	0x070A44  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4855 :: 		end else
0x4302	0x370008  	BRA	L__Leakage_Settings1737
L__Leakage_Settings1736:
;GRR3000LManagementPanel.mpas,4856 :: 		if (KacakSensor =1) then
0x4304	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4306	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4308	0x370005  	BRA	L__Leakage_Settings1739
;GRR3000LManagementPanel.mpas,4858 :: 		Glcd_Write_Text(EnableText, 84, Row2, black);
0x430A	0xB3C01D  	MOV.B	#1, W13
0x430C	0xB3C01C  	MOV.B	#1, W12
0x430E	0xB3C54B  	MOV.B	#84, W11
0x4310	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x4312	0x070A3B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4859 :: 		end;
L__Leakage_Settings1739:
L__Leakage_Settings1737:
;GRR3000LManagementPanel.mpas,4860 :: 		end;
L__Leakage_Settings1733:
L__Leakage_Settings1731:
;GRR3000LManagementPanel.mpas,4862 :: 		end;
L__Leakage_Settings1717:
;GRR3000LManagementPanel.mpas,4867 :: 		end; // chng[1] while end
0x4314	0x37FF56  	BRA	L__Leakage_Settings1666
L__Leakage_Settings1667:
;GRR3000LManagementPanel.mpas,4869 :: 		end;
L__Leakage_Settings1658:
;GRR3000LManagementPanel.mpas,4870 :: 		end;
0x4316	0x3700C6  	BRA	L__Leakage_Settings1653
L__Leakage_Settings1656:
;GRR3000LManagementPanel.mpas,4872 :: 		2: begin // - kaçak
0x4318	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x431A	0x784010  	MOV.B	[W0], W0
0x431C	0xE10462  	CP.B	W0, #2
0x431E	0x3A00B4  	BRA NZ	L__Leakage_Settings1743
L__Leakage_Settings5288:
;GRR3000LManagementPanel.mpas,4873 :: 		if (Ok_Button =0) then
0x4320	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4322	0x3700B1  	BRA	L__Leakage_Settings1745
;GRR3000LManagementPanel.mpas,4875 :: 		while (Ok_Button =0) do
L__Leakage_Settings1748:
0x4324	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4326	0x370002  	BRA	L__Leakage_Settings1749
;GRR3000LManagementPanel.mpas,4877 :: 		asm ClrWDT; end;
0x4328	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4878 :: 		end;
0x432A	0x37FFFC  	BRA	L__Leakage_Settings1748
L__Leakage_Settings1749:
;GRR3000LManagementPanel.mpas,4880 :: 		Chng[2] := 1;
0x432C	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x432E	0xB3C010  	MOV.B	#1, W0
0x4330	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4882 :: 		While (Chng[2] =1) do
L__Leakage_Settings1753:
0x4332	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x4334	0x784010  	MOV.B	[W0], W0
0x4336	0xE10461  	CP.B	W0, #1
0x4338	0x3A00A6  	BRA NZ	L__Leakage_Settings1754
L__Leakage_Settings5289:
;GRR3000LManagementPanel.mpas,4885 :: 		asm ClrWDT; end;
0x433A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4887 :: 		if (Up_Button =0) then
0x433C	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x433E	0x37001F  	BRA	L__Leakage_Settings1758
;GRR3000LManagementPanel.mpas,4889 :: 		ButonStop       := 0;
0x4340	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x4342	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4890 :: 		BtCounterNormal := 0;
0x4344	0xEF2000  	CLR	W0
0x4346	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4891 :: 		while (ButonStop = 0) do
L__Leakage_Settings1761:
0x4348	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x434A	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x434C	0x370002  	BRA	L__Leakage_Settings1762
;GRR3000LManagementPanel.mpas,4893 :: 		asm ClrWDT; end;
0x434E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4894 :: 		end;
0x4350	0x37FFFB  	BRA	L__Leakage_Settings1761
L__Leakage_Settings1762:
;GRR3000LManagementPanel.mpas,4895 :: 		if (KacakSensor =0) then
0x4352	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4354	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x4356	0x37000C  	BRA	L__Leakage_Settings1766
;GRR3000LManagementPanel.mpas,4897 :: 		Inc(Leakage_Neg_Set);
0x4358	0xB3C011  	MOV.B	#1, W1
0x435A	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x435C	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4898 :: 		if (Leakage_Neg_Set > 100) then // 100k ya kadar
0x435E	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4360	0x784090  	MOV.B	[W0], W1
0x4362	0xB3C640  	MOV.B	#100, W0
0x4364	0xE10C00  	CP.B	W1, W0
0x4366	0x340003  	BRA LE	L__Leakage_Settings1769
L__Leakage_Settings5290:
;GRR3000LManagementPanel.mpas,4899 :: 		Leakage_Neg_Set := 100;
0x4368	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0x436A	0xB3C640  	MOV.B	#100, W0
0x436C	0x784880  	MOV.B	W0, [W1]
L__Leakage_Settings1769:
;GRR3000LManagementPanel.mpas,4900 :: 		end else
0x436E	0x370006  	BRA	L__Leakage_Settings1767
L__Leakage_Settings1766:
;GRR3000LManagementPanel.mpas,4901 :: 		if (KacakSensor =1) then
0x4370	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4372	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4374	0x370003  	BRA	L__Leakage_Settings1772
;GRR3000LManagementPanel.mpas,4903 :: 		Leakage_Neg_Set := 1; // - kaçak algýlama açýk
0x4376	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0x4378	0xB3C010  	MOV.B	#1, W0
0x437A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4904 :: 		end;
L__Leakage_Settings1772:
L__Leakage_Settings1767:
;GRR3000LManagementPanel.mpas,4905 :: 		end else
0x437C	0x37001F  	BRA	L__Leakage_Settings1759
L__Leakage_Settings1758:
;GRR3000LManagementPanel.mpas,4906 :: 		if (Down_Button =0) then
0x437E	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x4380	0x37001D  	BRA	L__Leakage_Settings1775
;GRR3000LManagementPanel.mpas,4908 :: 		ButonStop       := 0;
0x4382	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x4384	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,4909 :: 		BtCounterNormal := 0;
0x4386	0xEF2000  	CLR	W0
0x4388	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,4910 :: 		while (ButonStop = 0) do
L__Leakage_Settings1778:
0x438A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x438C	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x438E	0x370002  	BRA	L__Leakage_Settings1779
;GRR3000LManagementPanel.mpas,4912 :: 		asm ClrWDT; end;
0x4390	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4913 :: 		end;
0x4392	0x37FFFB  	BRA	L__Leakage_Settings1778
L__Leakage_Settings1779:
;GRR3000LManagementPanel.mpas,4914 :: 		if (KacakSensor =0) then
0x4394	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4396	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x4398	0x37000B  	BRA	L__Leakage_Settings1783
;GRR3000LManagementPanel.mpas,4916 :: 		Dec(Leakage_Neg_Set);
0x439A	0xB3C011  	MOV.B	#1, W1
0x439C	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x439E	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,4917 :: 		if (Leakage_Neg_Set < 1) then // 100k ya kadar
0x43A0	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x43A2	0x784010  	MOV.B	[W0], W0
0x43A4	0xE10461  	CP.B	W0, #1
0x43A6	0x3D0003  	BRA GE	L__Leakage_Settings1786
L__Leakage_Settings5291:
;GRR3000LManagementPanel.mpas,4918 :: 		Leakage_Neg_Set := 0;
0x43A8	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0x43AA	0xEF2000  	CLR	W0
0x43AC	0x784880  	MOV.B	W0, [W1]
L__Leakage_Settings1786:
;GRR3000LManagementPanel.mpas,4919 :: 		end else
0x43AE	0x370006  	BRA	L__Leakage_Settings1784
L__Leakage_Settings1783:
;GRR3000LManagementPanel.mpas,4920 :: 		if (KacakSensor =1) then
0x43B0	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x43B2	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x43B4	0x370003  	BRA	L__Leakage_Settings1789
;GRR3000LManagementPanel.mpas,4922 :: 		Leakage_Neg_Set := 0; // - kaçak algýlama kapalý
0x43B6	0x2129A1  	MOV	#lo_addr(_Leakage_Neg_Set), W1
0x43B8	0xEF2000  	CLR	W0
0x43BA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4923 :: 		end;
L__Leakage_Settings1789:
L__Leakage_Settings1784:
;GRR3000LManagementPanel.mpas,4924 :: 		end;
L__Leakage_Settings1775:
L__Leakage_Settings1759:
;GRR3000LManagementPanel.mpas,4926 :: 		if (Leakage_Neg_Set <1) then
0x43BC	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x43BE	0x784010  	MOV.B	[W0], W0
0x43C0	0xE10461  	CP.B	W0, #1
0x43C2	0x3D0006  	BRA GE	L__Leakage_Settings1792
L__Leakage_Settings5292:
;GRR3000LManagementPanel.mpas,4928 :: 		Glcd_Write_Text(DisableText, 84, Row3, White);
0x43C4	0xEF201A  	CLR	W13
0x43C6	0xB3C02C  	MOV.B	#2, W12
0x43C8	0xB3C54B  	MOV.B	#84, W11
0x43CA	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x43CC	0x0709DE  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4929 :: 		end else
0x43CE	0x370020  	BRA	L__Leakage_Settings1793
L__Leakage_Settings1792:
;GRR3000LManagementPanel.mpas,4930 :: 		if (Leakage_Neg_Set >0) then
0x43D0	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x43D2	0x784010  	MOV.B	[W0], W0
0x43D4	0xE10460  	CP.B	W0, #0
0x43D6	0x34001C  	BRA LE	L__Leakage_Settings1795
L__Leakage_Settings5293:
;GRR3000LManagementPanel.mpas,4932 :: 		if (KacakSensor =0) then
0x43D8	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x43DA	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x43DC	0x370011  	BRA	L__Leakage_Settings1798
;GRR3000LManagementPanel.mpas,4934 :: 		ValueDivide(Leakage_Neg_Set, 0);
0x43DE	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x43E0	0xEF2016  	CLR	W11
0x43E2	0xFB0510  	SE	[W0], W10
0x43E4	0x07E3A5  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4935 :: 		WriteText := Value_Text + 'k';
0x43E6	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x43E8	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x43EA	0x07422D  	RCALL	___CS2S
0x43EC	0xB3C6B2  	MOV.B	#107, W2
0x43EE	0x785802  	MOV.B	W2, [W0++]
0x43F0	0xEF2004  	CLR	W2
0x43F2	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4936 :: 		Glcd_Write_Text(WriteText, 84, Row3, White);
0x43F4	0xEF201A  	CLR	W13
0x43F6	0xB3C02C  	MOV.B	#2, W12
0x43F8	0xB3C54B  	MOV.B	#84, W11
0x43FA	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x43FC	0x0709C6  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4937 :: 		end else
0x43FE	0x370008  	BRA	L__Leakage_Settings1799
L__Leakage_Settings1798:
;GRR3000LManagementPanel.mpas,4938 :: 		if (KacakSensor =1) then
0x4400	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4402	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4404	0x370005  	BRA	L__Leakage_Settings1801
;GRR3000LManagementPanel.mpas,4940 :: 		Glcd_Write_Text(EnableText, 84, Row3, White);
0x4406	0xEF201A  	CLR	W13
0x4408	0xB3C02C  	MOV.B	#2, W12
0x440A	0xB3C54B  	MOV.B	#84, W11
0x440C	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x440E	0x0709BD  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4941 :: 		end;
L__Leakage_Settings1801:
L__Leakage_Settings1799:
;GRR3000LManagementPanel.mpas,4942 :: 		end;
L__Leakage_Settings1795:
L__Leakage_Settings1793:
;GRR3000LManagementPanel.mpas,4944 :: 		if (Ok_Button =0) then
0x4410	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4412	0x370038  	BRA	L__Leakage_Settings1804
;GRR3000LManagementPanel.mpas,4946 :: 		while (Ok_Button =0) do
L__Leakage_Settings1807:
0x4414	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4416	0x370002  	BRA	L__Leakage_Settings1808
;GRR3000LManagementPanel.mpas,4948 :: 		asm ClrWDT; end;
0x4418	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4949 :: 		end;
0x441A	0x37FFFC  	BRA	L__Leakage_Settings1807
L__Leakage_Settings1808:
;GRR3000LManagementPanel.mpas,4951 :: 		EEPROM_Write(EE_LeakageNegEeAddr, Leakage_Neg_Set);
0x441C	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x441E	0xFB0610  	SE	[W0], W12
0x4420	0x2F050A  	MOV	#61520, W10
0x4422	0x2007FB  	MOV	#127, W11
0x4424	0x07E7B8  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,4952 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Leakage_Settings1812:
0x4426	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x4428	0x37FFFE  	BRA	L__Leakage_Settings1812
;GRR3000LManagementPanel.mpas,4954 :: 		Chng[2] := 0;
0x442A	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x442C	0xEF2000  	CLR	W0
0x442E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4956 :: 		if (Leakage_Neg_Set <1) then
0x4430	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4432	0x784010  	MOV.B	[W0], W0
0x4434	0xE10461  	CP.B	W0, #1
0x4436	0x3D0006  	BRA GE	L__Leakage_Settings1817
L__Leakage_Settings5294:
;GRR3000LManagementPanel.mpas,4958 :: 		Glcd_Write_Text(DisableText, 84, Row3, black);
0x4438	0xB3C01D  	MOV.B	#1, W13
0x443A	0xB3C02C  	MOV.B	#2, W12
0x443C	0xB3C54B  	MOV.B	#84, W11
0x443E	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x4440	0x0709A4  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4959 :: 		end else
0x4442	0x370020  	BRA	L__Leakage_Settings1818
L__Leakage_Settings1817:
;GRR3000LManagementPanel.mpas,4960 :: 		if (Leakage_Neg_Set >0) then
0x4444	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4446	0x784010  	MOV.B	[W0], W0
0x4448	0xE10460  	CP.B	W0, #0
0x444A	0x34001C  	BRA LE	L__Leakage_Settings1820
L__Leakage_Settings5295:
;GRR3000LManagementPanel.mpas,4962 :: 		if (KacakSensor =0) then
0x444C	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x444E	0xA70010  	BTSC	[W0], BitPos(_KacakSensor+0)
0x4450	0x370011  	BRA	L__Leakage_Settings1823
;GRR3000LManagementPanel.mpas,4964 :: 		ValueDivide(Leakage_Neg_Set, 0);
0x4452	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0x4454	0xEF2016  	CLR	W11
0x4456	0xFB0510  	SE	[W0], W10
0x4458	0x07E36B  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,4965 :: 		WriteText := Value_Text + 'k';
0x445A	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x445C	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x445E	0x0741F3  	RCALL	___CS2S
0x4460	0xB3C6B2  	MOV.B	#107, W2
0x4462	0x785802  	MOV.B	W2, [W0++]
0x4464	0xEF2004  	CLR	W2
0x4466	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,4966 :: 		Glcd_Write_Text(WriteText, 84, Row3, black);
0x4468	0xB3C01D  	MOV.B	#1, W13
0x446A	0xB3C02C  	MOV.B	#2, W12
0x446C	0xB3C54B  	MOV.B	#84, W11
0x446E	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x4470	0x07098C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4967 :: 		end else
0x4472	0x370008  	BRA	L__Leakage_Settings1824
L__Leakage_Settings1823:
;GRR3000LManagementPanel.mpas,4968 :: 		if (KacakSensor =1) then
0x4474	0x212A40  	MOV	#lo_addr(_KacakSensor), W0
0x4476	0xA60010  	BTSS	[W0], BitPos(_KacakSensor+0)
0x4478	0x370005  	BRA	L__Leakage_Settings1826
;GRR3000LManagementPanel.mpas,4970 :: 		Glcd_Write_Text(EnableText, 84, Row3, black);
0x447A	0xB3C01D  	MOV.B	#1, W13
0x447C	0xB3C02C  	MOV.B	#2, W12
0x447E	0xB3C54B  	MOV.B	#84, W11
0x4480	0x2125BA  	MOV	#lo_addr(_EnableText), W10
0x4482	0x070983  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,4971 :: 		end;
L__Leakage_Settings1826:
L__Leakage_Settings1824:
;GRR3000LManagementPanel.mpas,4972 :: 		end;
L__Leakage_Settings1820:
L__Leakage_Settings1818:
;GRR3000LManagementPanel.mpas,4974 :: 		end;
L__Leakage_Settings1804:
;GRR3000LManagementPanel.mpas,4979 :: 		end; // chng[2] while end
0x4484	0x37FF56  	BRA	L__Leakage_Settings1753
L__Leakage_Settings1754:
;GRR3000LManagementPanel.mpas,4981 :: 		end;
L__Leakage_Settings1745:
;GRR3000LManagementPanel.mpas,4982 :: 		end;
0x4486	0x37000E  	BRA	L__Leakage_Settings1653
L__Leakage_Settings1743:
;GRR3000LManagementPanel.mpas,4983 :: 		3: begin // geri
0x4488	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x448A	0x784010  	MOV.B	[W0], W0
0x448C	0xE10463  	CP.B	W0, #3
0x448E	0x3A000A  	BRA NZ	L__Leakage_Settings1830
L__Leakage_Settings5296:
;GRR3000LManagementPanel.mpas,4985 :: 		if (Ok_Button =0) then
0x4490	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4492	0x370007  	BRA	L__Leakage_Settings1832
;GRR3000LManagementPanel.mpas,4987 :: 		while (Ok_Button =0) do
L__Leakage_Settings1835:
0x4494	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4496	0x370002  	BRA	L__Leakage_Settings1836
;GRR3000LManagementPanel.mpas,4989 :: 		asm ClrWDT; end;
0x4498	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,4990 :: 		end;
0x449A	0x37FFFC  	BRA	L__Leakage_Settings1835
L__Leakage_Settings1836:
;GRR3000LManagementPanel.mpas,4991 :: 		MenuExit := 1;
0x449C	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x449E	0xB3C010  	MOV.B	#1, W0
0x44A0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,4993 :: 		end;
L__Leakage_Settings1832:
;GRR3000LManagementPanel.mpas,4997 :: 		end;
0x44A2	0x370000  	BRA	L__Leakage_Settings1653
L__Leakage_Settings1830:
L__Leakage_Settings1653:
;GRR3000LManagementPanel.mpas,5005 :: 		end;
0x44A4	0x37FE77  	BRA	L__Leakage_Settings1649
L__Leakage_Settings1650:
;GRR3000LManagementPanel.mpas,5007 :: 		Glcd_Fill(0x00);
0x44A6	0xEF2014  	CLR	W10
0x44A8	0x072A11  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5008 :: 		MenuSayacValue := 10;
0x44AA	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x44AC	0xB3C0A0  	MOV.B	#10, W0
0x44AE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5010 :: 		end;
L_end_Leakage_Settings:
0x44B0	0x7806CF  	POP	W13
0x44B2	0x78064F  	POP	W12
0x44B4	0x7805CF  	POP	W11
0x44B6	0x78054F  	POP	W10
0x44B8	0x060000  	RETURN
; end of _Leakage_Settings
_Temperature_Settings:
0x3C50	0xFA000E  	LNK	#14
;GRR3000LManagementPanel.mpas,5862 :: 		begin
;GRR3000LManagementPanel.mpas,5863 :: 		Glcd_Fill(0x00);
0x3C52	0x781F8A  	PUSH	W10
0x3C54	0x781F8B  	PUSH	W11
0x3C56	0x781F8C  	PUSH	W12
0x3C58	0x781F8D  	PUSH	W13
0x3C5A	0xEF2014  	CLR	W10
0x3C5C	0x072E37  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5864 :: 		MenuExit        := 0;
0x3C5E	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x3C60	0xEF2000  	CLR	W0
0x3C62	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5865 :: 		MenuSayacValue  := 1;
0x3C64	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x3C66	0xB3C010  	MOV.B	#1, W0
0x3C68	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5866 :: 		Chng[5]         := 2;
0x3C6A	0x212501  	MOV	#lo_addr(_Chng+4), W1
0x3C6C	0xB3C020  	MOV.B	#2, W0
0x3C6E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5877 :: 		Glcd_Write_Text(Title_TempMenu,     0, Row1, Black);
0x3C70	0xB3C01D  	MOV.B	#1, W13
0x3C72	0xEF2018  	CLR	W12
0x3C74	0xEF2016  	CLR	W11
0x3C76	0x211B2A  	MOV	#lo_addr(_Title_TempMenu), W10
0x3C78	0x070D88  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5878 :: 		Glcd_Write_Text(SubTitle_TempAlarm, 6, Row2, Black);
0x3C7A	0xB3C01D  	MOV.B	#1, W13
0x3C7C	0xB3C01C  	MOV.B	#1, W12
0x3C7E	0xB3C06B  	MOV.B	#6, W11
0x3C80	0x211D5A  	MOV	#lo_addr(_SubTitle_TempAlarm), W10
0x3C82	0x070D83  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5879 :: 		Glcd_Write_Text(SubTitle_FanOn,     6, Row3, Black);
0x3C84	0xB3C01D  	MOV.B	#1, W13
0x3C86	0xB3C02C  	MOV.B	#2, W12
0x3C88	0xB3C06B  	MOV.B	#6, W11
0x3C8A	0x211C7A  	MOV	#lo_addr(_SubTitle_FanOn), W10
0x3C8C	0x070D7E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5880 :: 		Glcd_Write_Text(SubTitle_FanOff,    6, Row4, Black);
0x3C8E	0xB3C01D  	MOV.B	#1, W13
0x3C90	0xB3C03C  	MOV.B	#3, W12
0x3C92	0xB3C06B  	MOV.B	#6, W11
0x3C94	0x21202A  	MOV	#lo_addr(_SubTitle_FanOff), W10
0x3C96	0x070D79  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5881 :: 		Glcd_Write_Text(SubTitle_Back,      6, Row5, Black);
0x3C98	0xB3C01D  	MOV.B	#1, W13
0x3C9A	0xB3C04C  	MOV.B	#4, W12
0x3C9C	0xB3C06B  	MOV.B	#6, W11
0x3C9E	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x3CA0	0x070D74  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5882 :: 		Glcd_Write_Text(SubTitle_TempComp,  0, Row7, Black);
0x3CA2	0xB3C01D  	MOV.B	#1, W13
0x3CA4	0xB3C06C  	MOV.B	#6, W12
0x3CA6	0xEF2016  	CLR	W11
0x3CA8	0x21211A  	MOV	#lo_addr(_SubTitle_TempComp), W10
0x3CAA	0x070D6F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5883 :: 		Glcd_Write_Text('Ext. Sensor,',     6, Row8, Black);
0x3CAC	0x4700E0  	ADD	W14, #0, W1
0x3CAE	0xB3C450  	MOV.B	#69, W0
0x3CB0	0x785880  	MOV.B	W0, [W1++]
0x3CB2	0xB3C780  	MOV.B	#120, W0
0x3CB4	0x785880  	MOV.B	W0, [W1++]
0x3CB6	0xB3C740  	MOV.B	#116, W0
0x3CB8	0x785880  	MOV.B	W0, [W1++]
0x3CBA	0xB3C2E0  	MOV.B	#46, W0
0x3CBC	0x785880  	MOV.B	W0, [W1++]
0x3CBE	0xB3C200  	MOV.B	#32, W0
0x3CC0	0x785880  	MOV.B	W0, [W1++]
0x3CC2	0xB3C530  	MOV.B	#83, W0
0x3CC4	0x785880  	MOV.B	W0, [W1++]
0x3CC6	0xB3C650  	MOV.B	#101, W0
0x3CC8	0x785880  	MOV.B	W0, [W1++]
0x3CCA	0xB3C6E0  	MOV.B	#110, W0
0x3CCC	0x785880  	MOV.B	W0, [W1++]
0x3CCE	0xB3C730  	MOV.B	#115, W0
0x3CD0	0x785880  	MOV.B	W0, [W1++]
0x3CD2	0xB3C6F0  	MOV.B	#111, W0
0x3CD4	0x785880  	MOV.B	W0, [W1++]
0x3CD6	0xB3C720  	MOV.B	#114, W0
0x3CD8	0x785880  	MOV.B	W0, [W1++]
0x3CDA	0xB3C2C0  	MOV.B	#44, W0
0x3CDC	0x785880  	MOV.B	W0, [W1++]
0x3CDE	0xEF2000  	CLR	W0
0x3CE0	0x785880  	MOV.B	W0, [W1++]
0x3CE2	0x470060  	ADD	W14, #0, W0
0x3CE4	0xB3C01D  	MOV.B	#1, W13
0x3CE6	0xB3C07C  	MOV.B	#7, W12
0x3CE8	0xB3C06B  	MOV.B	#6, W11
0x3CEA	0x780500  	MOV	W0, W10
0x3CEC	0x070D4E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5885 :: 		TempFanOffSet         := EEPROM_Read(EE_TempFanOffSetEeAddr);
0x3CEE	0x2F044A  	MOV	#61508, W10
0x3CF0	0x2007FB  	MOV	#127, W11
0x3CF2	0x07F3B6  	RCALL	_EEPROM_Read
0x3CF4	0x212101  	MOV	#lo_addr(_TempFanOffSet), W1
0x3CF6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5886 :: 		ValueDivide(TempFanOffSet, 0);
0x3CF8	0xEF2016  	CLR	W11
0x3CFA	0xFB8500  	ZE	W0, W10
0x3CFC	0x07E719  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5887 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3CFE	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3D00	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3D02	0x0745A1  	RCALL	___CS2S
0x3D04	0xB3C5E2  	MOV.B	#94, W2
0x3D06	0x785802  	MOV.B	W2, [W0++]
0x3D08	0xEF2004  	CLR	W2
0x3D0A	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,5888 :: 		Glcd_Write_Text(WriteText,84 , Row4, Black);
0x3D0C	0xB3C01D  	MOV.B	#1, W13
0x3D0E	0xB3C03C  	MOV.B	#3, W12
0x3D10	0xB3C54B  	MOV.B	#84, W11
0x3D12	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3D14	0x070D3A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5890 :: 		TempFanOnSet          := EEPROM_Read(EE_TempFanOnSetEeAddr);
0x3D16	0x2F042A  	MOV	#61506, W10
0x3D18	0x2007FB  	MOV	#127, W11
0x3D1A	0x07F3A2  	RCALL	_EEPROM_Read
0x3D1C	0x212271  	MOV	#lo_addr(_TempFanOnSet), W1
0x3D1E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5891 :: 		ValueDivide(TempFanOnSet, 0);
0x3D20	0xEF2016  	CLR	W11
0x3D22	0xFB8500  	ZE	W0, W10
0x3D24	0x07E705  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5892 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3D26	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3D28	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3D2A	0x07458D  	RCALL	___CS2S
0x3D2C	0xB3C5E2  	MOV.B	#94, W2
0x3D2E	0x785802  	MOV.B	W2, [W0++]
0x3D30	0xEF2004  	CLR	W2
0x3D32	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,5893 :: 		Glcd_Write_Text(WriteText,84 , Row3, Black);
0x3D34	0xB3C01D  	MOV.B	#1, W13
0x3D36	0xB3C02C  	MOV.B	#2, W12
0x3D38	0xB3C54B  	MOV.B	#84, W11
0x3D3A	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3D3C	0x070D26  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5895 :: 		TempAlarmSet          := EEPROM_Read(EE_TempAlarmSetEeAddr);
0x3D3E	0x2F040A  	MOV	#61504, W10
0x3D40	0x2007FB  	MOV	#127, W11
0x3D42	0x07F38E  	RCALL	_EEPROM_Read
0x3D44	0x212281  	MOV	#lo_addr(_TempAlarmSet), W1
0x3D46	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5896 :: 		ValueDivide(TempAlarmSet, 0);
0x3D48	0xEF2016  	CLR	W11
0x3D4A	0xFB8500  	ZE	W0, W10
0x3D4C	0x07E6F1  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5897 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3D4E	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3D50	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3D52	0x074579  	RCALL	___CS2S
0x3D54	0xB3C5E2  	MOV.B	#94, W2
0x3D56	0x785802  	MOV.B	W2, [W0++]
0x3D58	0xEF2004  	CLR	W2
0x3D5A	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,5898 :: 		Glcd_Write_Text(WriteText,84 , Row2, Black);
0x3D5C	0xB3C01D  	MOV.B	#1, W13
0x3D5E	0xB3C01C  	MOV.B	#1, W12
0x3D60	0xB3C54B  	MOV.B	#84, W11
0x3D62	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3D64	0x070D12  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5901 :: 		While (MenuExit =0) do
L__Temperature_Settings2333:
0x3D66	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x3D68	0x784010  	MOV.B	[W0], W0
0x3D6A	0xE10460  	CP.B	W0, #0
0x3D6C	0x3A0187  	BRA NZ	L__Temperature_Settings2334
L__Temperature_Settings5396:
;GRR3000LManagementPanel.mpas,5904 :: 		TempCompansation_Measurement;
0x3D6E	0x07E62B  	RCALL	_TempCompansation_Measurement
;GRR3000LManagementPanel.mpas,5906 :: 		MenuSayac := MenuButtonRead(4, 255);  // menu için butonlarý oku 5 satýr menü var
0x3D70	0xB3CFFB  	MOV.B	#255, W11
0x3D72	0xB3C04A  	MOV.B	#4, W10
0x3D74	0x07EA8D  	RCALL	_MenuButtonRead
0x3D76	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x3D78	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5908 :: 		if ((TempComp > 0)and(TempComp < 100)) then
0x3D7A	0x211E30  	MOV	#lo_addr(_TempComp), W0
0x3D7C	0x784010  	MOV.B	[W0], W0
0x3D7E	0xE10460  	CP.B	W0, #0
0x3D80	0xEF2004  	CLR	W2
0x3D82	0x340001  	BRA LE	L__Temperature_Settings5397
0x3D84	0xEEA004  	COM	W2
L__Temperature_Settings5397:
0x3D86	0x211E30  	MOV	#lo_addr(_TempComp), W0
0x3D88	0x784090  	MOV.B	[W0], W1
0x3D8A	0xB3C640  	MOV.B	#100, W0
0x3D8C	0xE10C00  	CP.B	W1, W0
0x3D8E	0xEF2000  	CLR	W0
0x3D90	0x3D0001  	BRA GE	L__Temperature_Settings5398
0x3D92	0xEEA000  	COM	W0
L__Temperature_Settings5398:
0x3D94	0x610000  	AND	W2, W0, W0
0x3D96	0x320011  	BRA Z	L__Temperature_Settings2338
L__Temperature_Settings5399:
;GRR3000LManagementPanel.mpas,5910 :: 		ValueDivide(TempComp, 0);
0x3D98	0x211E30  	MOV	#lo_addr(_TempComp), W0
0x3D9A	0xEF2016  	CLR	W11
0x3D9C	0xFB0510  	SE	[W0], W10
0x3D9E	0x07E6C8  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5911 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3DA0	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3DA2	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3DA4	0x074550  	RCALL	___CS2S
0x3DA6	0xB3C5E2  	MOV.B	#94, W2
0x3DA8	0x785802  	MOV.B	W2, [W0++]
0x3DAA	0xEF2004  	CLR	W2
0x3DAC	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,5912 :: 		Glcd_Write_Text(WriteText,82,Row8,Black);
0x3DAE	0xB3C01D  	MOV.B	#1, W13
0x3DB0	0xB3C07C  	MOV.B	#7, W12
0x3DB2	0xB3C52B  	MOV.B	#82, W11
0x3DB4	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3DB6	0x070CE9  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5913 :: 		end else
0x3DB8	0x370022  	BRA	L__Temperature_Settings2339
L__Temperature_Settings2338:
;GRR3000LManagementPanel.mpas,5914 :: 		if ((TempComp < 0)or(TempComp > 100)) then
0x3DBA	0x211E30  	MOV	#lo_addr(_TempComp), W0
0x3DBC	0x784010  	MOV.B	[W0], W0
0x3DBE	0xE10460  	CP.B	W0, #0
0x3DC0	0xEF2004  	CLR	W2
0x3DC2	0x3D0001  	BRA GE	L__Temperature_Settings5400
0x3DC4	0xEEA004  	COM	W2
L__Temperature_Settings5400:
0x3DC6	0x211E30  	MOV	#lo_addr(_TempComp), W0
0x3DC8	0x784090  	MOV.B	[W0], W1
0x3DCA	0xB3C640  	MOV.B	#100, W0
0x3DCC	0xE10C00  	CP.B	W1, W0
0x3DCE	0xEF2000  	CLR	W0
0x3DD0	0x340001  	BRA LE	L__Temperature_Settings5401
0x3DD2	0xEEA000  	COM	W0
L__Temperature_Settings5401:
0x3DD4	0x710000  	IOR	W2, W0, W0
0x3DD6	0x320013  	BRA Z	L__Temperature_Settings2341
L__Temperature_Settings5402:
;GRR3000LManagementPanel.mpas,5916 :: 		Glcd_Write_Text('-----',82,Row8,Black);
0x3DD8	0x4700E0  	ADD	W14, #0, W1
0x3DDA	0xB3C2D0  	MOV.B	#45, W0
0x3DDC	0x785880  	MOV.B	W0, [W1++]
0x3DDE	0xB3C2D0  	MOV.B	#45, W0
0x3DE0	0x785880  	MOV.B	W0, [W1++]
0x3DE2	0xB3C2D0  	MOV.B	#45, W0
0x3DE4	0x785880  	MOV.B	W0, [W1++]
0x3DE6	0xB3C2D0  	MOV.B	#45, W0
0x3DE8	0x785880  	MOV.B	W0, [W1++]
0x3DEA	0xB3C2D0  	MOV.B	#45, W0
0x3DEC	0x785880  	MOV.B	W0, [W1++]
0x3DEE	0xEF2000  	CLR	W0
0x3DF0	0x785880  	MOV.B	W0, [W1++]
0x3DF2	0x470060  	ADD	W14, #0, W0
0x3DF4	0xB3C01D  	MOV.B	#1, W13
0x3DF6	0xB3C07C  	MOV.B	#7, W12
0x3DF8	0xB3C52B  	MOV.B	#82, W11
0x3DFA	0x780500  	MOV	W0, W10
0x3DFC	0x070CC6  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5917 :: 		end;
L__Temperature_Settings2341:
L__Temperature_Settings2339:
;GRR3000LManagementPanel.mpas,5919 :: 		asm ClrWDT; end;
0x3DFE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5922 :: 		1: begin // temp. alarm value
0x3E00	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3E02	0x784010  	MOV.B	[W0], W0
0x3E04	0xE10461  	CP.B	W0, #1
0x3E06	0x3A0061  	BRA NZ	L__Temperature_Settings2346
L__Temperature_Settings5403:
;GRR3000LManagementPanel.mpas,5923 :: 		if (Ok_Button =0) then
0x3E08	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3E0A	0x37005E  	BRA	L__Temperature_Settings2348
;GRR3000LManagementPanel.mpas,5925 :: 		while (Ok_Button =0) do
L__Temperature_Settings2351:
0x3E0C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3E0E	0x370002  	BRA	L__Temperature_Settings2352
;GRR3000LManagementPanel.mpas,5927 :: 		asm ClrWDT; end;
0x3E10	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5928 :: 		end;
0x3E12	0x37FFFC  	BRA	L__Temperature_Settings2351
L__Temperature_Settings2352:
;GRR3000LManagementPanel.mpas,5930 :: 		Chng[1] := 1;
0x3E14	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x3E16	0xB3C010  	MOV.B	#1, W0
0x3E18	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5932 :: 		While (Chng[1] =1) do
L__Temperature_Settings2356:
0x3E1A	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x3E1C	0x784010  	MOV.B	[W0], W0
0x3E1E	0xE10461  	CP.B	W0, #1
0x3E20	0x3A0053  	BRA NZ	L__Temperature_Settings2357
L__Temperature_Settings5404:
;GRR3000LManagementPanel.mpas,5935 :: 		asm ClrWDT; end;
0x3E22	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5937 :: 		if (Up_Button =0) then
0x3E24	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x3E26	0x370015  	BRA	L__Temperature_Settings2361
;GRR3000LManagementPanel.mpas,5939 :: 		ButonStop       := 0;
0x3E28	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3E2A	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5940 :: 		BtCounterNormal := 0;
0x3E2C	0xEF2000  	CLR	W0
0x3E2E	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5941 :: 		while (ButonStop = 0) do
L__Temperature_Settings2364:
0x3E30	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3E32	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3E34	0x370002  	BRA	L__Temperature_Settings2365
;GRR3000LManagementPanel.mpas,5943 :: 		asm ClrWDT; end;
0x3E36	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5944 :: 		end;
0x3E38	0x37FFFB  	BRA	L__Temperature_Settings2364
L__Temperature_Settings2365:
;GRR3000LManagementPanel.mpas,5945 :: 		Inc(TempAlarmSet);
0x3E3A	0xB3C011  	MOV.B	#1, W1
0x3E3C	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3E3E	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5946 :: 		if (TempAlarmSet > 99) then
0x3E40	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3E42	0x784090  	MOV.B	[W0], W1
0x3E44	0xB3C630  	MOV.B	#99, W0
0x3E46	0xE10C00  	CP.B	W1, W0
0x3E48	0x360003  	BRA LEU	L__Temperature_Settings2369
L__Temperature_Settings5405:
;GRR3000LManagementPanel.mpas,5947 :: 		TempAlarmSet := 99;
0x3E4A	0x212281  	MOV	#lo_addr(_TempAlarmSet), W1
0x3E4C	0xB3C630  	MOV.B	#99, W0
0x3E4E	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2369:
;GRR3000LManagementPanel.mpas,5948 :: 		end else
0x3E50	0x370015  	BRA	L__Temperature_Settings2362
L__Temperature_Settings2361:
;GRR3000LManagementPanel.mpas,5949 :: 		if (Down_Button =0) then
0x3E52	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3E54	0x370013  	BRA	L__Temperature_Settings2372
;GRR3000LManagementPanel.mpas,5951 :: 		ButonStop       := 0;
0x3E56	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3E58	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5952 :: 		BtCounterNormal := 0;
0x3E5A	0xEF2000  	CLR	W0
0x3E5C	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5953 :: 		while (ButonStop = 0) do
L__Temperature_Settings2375:
0x3E5E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3E60	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3E62	0x370002  	BRA	L__Temperature_Settings2376
;GRR3000LManagementPanel.mpas,5955 :: 		asm ClrWDT; end;
0x3E64	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5956 :: 		end;
0x3E66	0x37FFFB  	BRA	L__Temperature_Settings2375
L__Temperature_Settings2376:
;GRR3000LManagementPanel.mpas,5957 :: 		Dec(TempAlarmSet);
0x3E68	0xB3C011  	MOV.B	#1, W1
0x3E6A	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3E6C	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5958 :: 		if (TempAlarmSet < 5) then
0x3E6E	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3E70	0x784010  	MOV.B	[W0], W0
0x3E72	0xE10465  	CP.B	W0, #5
0x3E74	0x310003  	BRA GEU	L__Temperature_Settings2380
L__Temperature_Settings5406:
;GRR3000LManagementPanel.mpas,5959 :: 		TempAlarmSet := 5;
0x3E76	0x212281  	MOV	#lo_addr(_TempAlarmSet), W1
0x3E78	0xB3C050  	MOV.B	#5, W0
0x3E7A	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2380:
;GRR3000LManagementPanel.mpas,5960 :: 		end;
L__Temperature_Settings2372:
L__Temperature_Settings2362:
;GRR3000LManagementPanel.mpas,5962 :: 		ValueDivide(TempAlarmSet, 0);
0x3E7C	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3E7E	0xEF2016  	CLR	W11
0x3E80	0xFB8510  	ZE	[W0], W10
0x3E82	0x07E656  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5963 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3E84	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3E86	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3E88	0x0744DE  	RCALL	___CS2S
0x3E8A	0xB3C5E2  	MOV.B	#94, W2
0x3E8C	0x785802  	MOV.B	W2, [W0++]
0x3E8E	0xEF2004  	CLR	W2
0x3E90	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,5964 :: 		Glcd_Write_Text(WriteText, 84, Row2, White);
0x3E92	0xEF201A  	CLR	W13
0x3E94	0xB3C01C  	MOV.B	#1, W12
0x3E96	0xB3C54B  	MOV.B	#84, W11
0x3E98	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3E9A	0x070C77  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5966 :: 		if (Ok_Button =0) then
0x3E9C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3E9E	0x370013  	BRA	L__Temperature_Settings2383
;GRR3000LManagementPanel.mpas,5968 :: 		while (Ok_Button =0) do
L__Temperature_Settings2386:
0x3EA0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3EA2	0x370002  	BRA	L__Temperature_Settings2387
;GRR3000LManagementPanel.mpas,5970 :: 		asm ClrWDT; end;
0x3EA4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5971 :: 		end;
0x3EA6	0x37FFFC  	BRA	L__Temperature_Settings2386
L__Temperature_Settings2387:
;GRR3000LManagementPanel.mpas,5973 :: 		EEPROM_Write(EE_TempAlarmSetEeAddr, TempAlarmSet);
0x3EA8	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0x3EAA	0xFB8610  	ZE	[W0], W12
0x3EAC	0x2F040A  	MOV	#61504, W10
0x3EAE	0x2007FB  	MOV	#127, W11
0x3EB0	0x07EA72  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,5974 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Temperature_Settings2391:
0x3EB2	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3EB4	0x37FFFE  	BRA	L__Temperature_Settings2391
;GRR3000LManagementPanel.mpas,5976 :: 		Chng[1] := 0;
0x3EB6	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x3EB8	0xEF2000  	CLR	W0
0x3EBA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5977 :: 		Glcd_Write_Text(WriteText, 84, Row2, Black);
0x3EBC	0xB3C01D  	MOV.B	#1, W13
0x3EBE	0xB3C01C  	MOV.B	#1, W12
0x3EC0	0xB3C54B  	MOV.B	#84, W11
0x3EC2	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3EC4	0x070C62  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5979 :: 		end;
L__Temperature_Settings2383:
;GRR3000LManagementPanel.mpas,5984 :: 		end; // chng[1] while end
0x3EC6	0x37FFA9  	BRA	L__Temperature_Settings2356
L__Temperature_Settings2357:
;GRR3000LManagementPanel.mpas,5986 :: 		end;
L__Temperature_Settings2348:
;GRR3000LManagementPanel.mpas,5987 :: 		end;
0x3EC8	0x3700D8  	BRA	L__Temperature_Settings2343
L__Temperature_Settings2346:
;GRR3000LManagementPanel.mpas,5989 :: 		2: begin   // fan on value
0x3ECA	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3ECC	0x784010  	MOV.B	[W0], W0
0x3ECE	0xE10462  	CP.B	W0, #2
0x3ED0	0x3A0061  	BRA NZ	L__Temperature_Settings2397
L__Temperature_Settings5407:
;GRR3000LManagementPanel.mpas,5990 :: 		if (Ok_Button =0) then
0x3ED2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3ED4	0x37005E  	BRA	L__Temperature_Settings2399
;GRR3000LManagementPanel.mpas,5992 :: 		while (Ok_Button =0) do
L__Temperature_Settings2402:
0x3ED6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3ED8	0x370002  	BRA	L__Temperature_Settings2403
;GRR3000LManagementPanel.mpas,5994 :: 		asm ClrWDT; end;
0x3EDA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5995 :: 		end;
0x3EDC	0x37FFFC  	BRA	L__Temperature_Settings2402
L__Temperature_Settings2403:
;GRR3000LManagementPanel.mpas,5997 :: 		Chng[2] := 1;
0x3EDE	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x3EE0	0xB3C010  	MOV.B	#1, W0
0x3EE2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5999 :: 		While (Chng[2] =1) do
L__Temperature_Settings2407:
0x3EE4	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x3EE6	0x784010  	MOV.B	[W0], W0
0x3EE8	0xE10461  	CP.B	W0, #1
0x3EEA	0x3A0053  	BRA NZ	L__Temperature_Settings2408
L__Temperature_Settings5408:
;GRR3000LManagementPanel.mpas,6002 :: 		asm ClrWDT; end;
0x3EEC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6004 :: 		if (Up_Button =0) then
0x3EEE	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x3EF0	0x370015  	BRA	L__Temperature_Settings2412
;GRR3000LManagementPanel.mpas,6006 :: 		ButonStop       := 0;
0x3EF2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3EF4	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6007 :: 		BtCounterNormal := 0;
0x3EF6	0xEF2000  	CLR	W0
0x3EF8	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6008 :: 		while (ButonStop = 0) do
L__Temperature_Settings2415:
0x3EFA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3EFC	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3EFE	0x370002  	BRA	L__Temperature_Settings2416
;GRR3000LManagementPanel.mpas,6010 :: 		asm ClrWDT; end;
0x3F00	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6011 :: 		end;
0x3F02	0x37FFFB  	BRA	L__Temperature_Settings2415
L__Temperature_Settings2416:
;GRR3000LManagementPanel.mpas,6012 :: 		Inc(TempFanOnSet);
0x3F04	0xB3C011  	MOV.B	#1, W1
0x3F06	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F08	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6013 :: 		if (TempFanOnSet > 99) then
0x3F0A	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F0C	0x784090  	MOV.B	[W0], W1
0x3F0E	0xB3C630  	MOV.B	#99, W0
0x3F10	0xE10C00  	CP.B	W1, W0
0x3F12	0x360003  	BRA LEU	L__Temperature_Settings2420
L__Temperature_Settings5409:
;GRR3000LManagementPanel.mpas,6014 :: 		TempFanOnSet := 99;
0x3F14	0x212271  	MOV	#lo_addr(_TempFanOnSet), W1
0x3F16	0xB3C630  	MOV.B	#99, W0
0x3F18	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2420:
;GRR3000LManagementPanel.mpas,6015 :: 		end else
0x3F1A	0x370015  	BRA	L__Temperature_Settings2413
L__Temperature_Settings2412:
;GRR3000LManagementPanel.mpas,6016 :: 		if (Down_Button =0) then
0x3F1C	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3F1E	0x370013  	BRA	L__Temperature_Settings2423
;GRR3000LManagementPanel.mpas,6018 :: 		ButonStop       := 0;
0x3F20	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3F22	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6019 :: 		BtCounterNormal := 0;
0x3F24	0xEF2000  	CLR	W0
0x3F26	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6020 :: 		while (ButonStop = 0) do
L__Temperature_Settings2426:
0x3F28	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3F2A	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3F2C	0x370002  	BRA	L__Temperature_Settings2427
;GRR3000LManagementPanel.mpas,6022 :: 		asm ClrWDT; end;
0x3F2E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6023 :: 		end;
0x3F30	0x37FFFB  	BRA	L__Temperature_Settings2426
L__Temperature_Settings2427:
;GRR3000LManagementPanel.mpas,6024 :: 		Dec(TempFanOnSet);
0x3F32	0xB3C011  	MOV.B	#1, W1
0x3F34	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F36	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6025 :: 		if (TempFanOnSet < 5) then
0x3F38	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F3A	0x784010  	MOV.B	[W0], W0
0x3F3C	0xE10465  	CP.B	W0, #5
0x3F3E	0x310003  	BRA GEU	L__Temperature_Settings2431
L__Temperature_Settings5410:
;GRR3000LManagementPanel.mpas,6026 :: 		TempFanOnSet := 5;
0x3F40	0x212271  	MOV	#lo_addr(_TempFanOnSet), W1
0x3F42	0xB3C050  	MOV.B	#5, W0
0x3F44	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2431:
;GRR3000LManagementPanel.mpas,6027 :: 		end;
L__Temperature_Settings2423:
L__Temperature_Settings2413:
;GRR3000LManagementPanel.mpas,6029 :: 		ValueDivide(TempFanOnSet, 0);
0x3F46	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F48	0xEF2016  	CLR	W11
0x3F4A	0xFB8510  	ZE	[W0], W10
0x3F4C	0x07E5F1  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6030 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x3F4E	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x3F50	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x3F52	0x074479  	RCALL	___CS2S
0x3F54	0xB3C5E2  	MOV.B	#94, W2
0x3F56	0x785802  	MOV.B	W2, [W0++]
0x3F58	0xEF2004  	CLR	W2
0x3F5A	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6031 :: 		Glcd_Write_Text(WriteText, 84, Row3, White);
0x3F5C	0xEF201A  	CLR	W13
0x3F5E	0xB3C02C  	MOV.B	#2, W12
0x3F60	0xB3C54B  	MOV.B	#84, W11
0x3F62	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3F64	0x070C12  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6033 :: 		if (Ok_Button =0) then
0x3F66	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3F68	0x370013  	BRA	L__Temperature_Settings2434
;GRR3000LManagementPanel.mpas,6035 :: 		while (Ok_Button =0) do
L__Temperature_Settings2437:
0x3F6A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3F6C	0x370002  	BRA	L__Temperature_Settings2438
;GRR3000LManagementPanel.mpas,6037 :: 		asm ClrWDT; end;
0x3F6E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6038 :: 		end;
0x3F70	0x37FFFC  	BRA	L__Temperature_Settings2437
L__Temperature_Settings2438:
;GRR3000LManagementPanel.mpas,6040 :: 		EEPROM_Write(EE_TempFanOnSetEeAddr, TempFanOnSet);
0x3F72	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0x3F74	0xFB8610  	ZE	[W0], W12
0x3F76	0x2F042A  	MOV	#61506, W10
0x3F78	0x2007FB  	MOV	#127, W11
0x3F7A	0x07EA0D  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6041 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Temperature_Settings2442:
0x3F7C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3F7E	0x37FFFE  	BRA	L__Temperature_Settings2442
;GRR3000LManagementPanel.mpas,6043 :: 		Chng[2] := 0;
0x3F80	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x3F82	0xEF2000  	CLR	W0
0x3F84	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6044 :: 		Glcd_Write_Text(WriteText, 84, Row3, Black);
0x3F86	0xB3C01D  	MOV.B	#1, W13
0x3F88	0xB3C02C  	MOV.B	#2, W12
0x3F8A	0xB3C54B  	MOV.B	#84, W11
0x3F8C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x3F8E	0x070BFD  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6046 :: 		end;
L__Temperature_Settings2434:
;GRR3000LManagementPanel.mpas,6051 :: 		end; // chng[2] while end
0x3F90	0x37FFA9  	BRA	L__Temperature_Settings2407
L__Temperature_Settings2408:
;GRR3000LManagementPanel.mpas,6053 :: 		end;
L__Temperature_Settings2399:
;GRR3000LManagementPanel.mpas,6054 :: 		end;
0x3F92	0x370073  	BRA	L__Temperature_Settings2343
L__Temperature_Settings2397:
;GRR3000LManagementPanel.mpas,6056 :: 		3: begin   // fan off value
0x3F94	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3F96	0x784010  	MOV.B	[W0], W0
0x3F98	0xE10463  	CP.B	W0, #3
0x3F9A	0x3A0061  	BRA NZ	L__Temperature_Settings2448
L__Temperature_Settings5411:
;GRR3000LManagementPanel.mpas,6057 :: 		if (Ok_Button =0) then
0x3F9C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3F9E	0x37005E  	BRA	L__Temperature_Settings2450
;GRR3000LManagementPanel.mpas,6059 :: 		while (Ok_Button =0) do
L__Temperature_Settings2453:
0x3FA0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3FA2	0x370002  	BRA	L__Temperature_Settings2454
;GRR3000LManagementPanel.mpas,6061 :: 		asm ClrWDT; end;
0x3FA4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6062 :: 		end;
0x3FA6	0x37FFFC  	BRA	L__Temperature_Settings2453
L__Temperature_Settings2454:
;GRR3000LManagementPanel.mpas,6064 :: 		Chng[3] := 1;
0x3FA8	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x3FAA	0xB3C010  	MOV.B	#1, W0
0x3FAC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6066 :: 		While (Chng[3] =1) do
L__Temperature_Settings2458:
0x3FAE	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0x3FB0	0x784010  	MOV.B	[W0], W0
0x3FB2	0xE10461  	CP.B	W0, #1
0x3FB4	0x3A0053  	BRA NZ	L__Temperature_Settings2459
L__Temperature_Settings5412:
;GRR3000LManagementPanel.mpas,6069 :: 		asm ClrWDT; end;
0x3FB6	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6071 :: 		if (Up_Button =0) then
0x3FB8	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x3FBA	0x370015  	BRA	L__Temperature_Settings2463
;GRR3000LManagementPanel.mpas,6073 :: 		ButonStop       := 0;
0x3FBC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3FBE	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6074 :: 		BtCounterNormal := 0;
0x3FC0	0xEF2000  	CLR	W0
0x3FC2	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6075 :: 		while (ButonStop = 0) do
L__Temperature_Settings2466:
0x3FC4	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3FC6	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3FC8	0x370002  	BRA	L__Temperature_Settings2467
;GRR3000LManagementPanel.mpas,6077 :: 		asm ClrWDT; end;
0x3FCA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6078 :: 		end;
0x3FCC	0x37FFFB  	BRA	L__Temperature_Settings2466
L__Temperature_Settings2467:
;GRR3000LManagementPanel.mpas,6079 :: 		Inc(TempFanOffSet);
0x3FCE	0xB3C011  	MOV.B	#1, W1
0x3FD0	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x3FD2	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6080 :: 		if (TempFanOffSet > 99) then
0x3FD4	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x3FD6	0x784090  	MOV.B	[W0], W1
0x3FD8	0xB3C630  	MOV.B	#99, W0
0x3FDA	0xE10C00  	CP.B	W1, W0
0x3FDC	0x360003  	BRA LEU	L__Temperature_Settings2471
L__Temperature_Settings5413:
;GRR3000LManagementPanel.mpas,6081 :: 		TempFanOffSet := 99;
0x3FDE	0x212101  	MOV	#lo_addr(_TempFanOffSet), W1
0x3FE0	0xB3C630  	MOV.B	#99, W0
0x3FE2	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2471:
;GRR3000LManagementPanel.mpas,6082 :: 		end else
0x3FE4	0x370015  	BRA	L__Temperature_Settings2464
L__Temperature_Settings2463:
;GRR3000LManagementPanel.mpas,6083 :: 		if (Down_Button =0) then
0x3FE6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3FE8	0x370013  	BRA	L__Temperature_Settings2474
;GRR3000LManagementPanel.mpas,6085 :: 		ButonStop       := 0;
0x3FEA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3FEC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,6086 :: 		BtCounterNormal := 0;
0x3FEE	0xEF2000  	CLR	W0
0x3FF0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,6087 :: 		while (ButonStop = 0) do
L__Temperature_Settings2477:
0x3FF2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3FF4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3FF6	0x370002  	BRA	L__Temperature_Settings2478
;GRR3000LManagementPanel.mpas,6089 :: 		asm ClrWDT; end;
0x3FF8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6090 :: 		end;
0x3FFA	0x37FFFB  	BRA	L__Temperature_Settings2477
L__Temperature_Settings2478:
;GRR3000LManagementPanel.mpas,6091 :: 		Dec(TempFanOffSet);
0x3FFC	0xB3C011  	MOV.B	#1, W1
0x3FFE	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x4000	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,6092 :: 		if (TempFanOffSet < 5) then
0x4002	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x4004	0x784010  	MOV.B	[W0], W0
0x4006	0xE10465  	CP.B	W0, #5
0x4008	0x310003  	BRA GEU	L__Temperature_Settings2482
L__Temperature_Settings5414:
;GRR3000LManagementPanel.mpas,6093 :: 		TempFanOffSet := 5;
0x400A	0x212101  	MOV	#lo_addr(_TempFanOffSet), W1
0x400C	0xB3C050  	MOV.B	#5, W0
0x400E	0x784880  	MOV.B	W0, [W1]
L__Temperature_Settings2482:
;GRR3000LManagementPanel.mpas,6094 :: 		end;
L__Temperature_Settings2474:
L__Temperature_Settings2464:
;GRR3000LManagementPanel.mpas,6096 :: 		ValueDivide(TempFanOffSet, 0);
0x4010	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x4012	0xEF2016  	CLR	W11
0x4014	0xFB8510  	ZE	[W0], W10
0x4016	0x07E58C  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,6097 :: 		WriteText := Value_Text + '^'; // derece iþareti eklendi
0x4018	0x2129B0  	MOV	#lo_addr(_WriteText), W0
0x401A	0x2141D1  	MOV	#lo_addr(_Value_Text), W1
0x401C	0x074414  	RCALL	___CS2S
0x401E	0xB3C5E2  	MOV.B	#94, W2
0x4020	0x785802  	MOV.B	W2, [W0++]
0x4022	0xEF2004  	CLR	W2
0x4024	0x785802  	MOV.B	W2, [W0++]
;GRR3000LManagementPanel.mpas,6098 :: 		Glcd_Write_Text(WriteText, 84, Row4, White);
0x4026	0xEF201A  	CLR	W13
0x4028	0xB3C03C  	MOV.B	#3, W12
0x402A	0xB3C54B  	MOV.B	#84, W11
0x402C	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x402E	0x070BAD  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6100 :: 		if (Ok_Button =0) then
0x4030	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4032	0x370013  	BRA	L__Temperature_Settings2485
;GRR3000LManagementPanel.mpas,6102 :: 		while (Ok_Button =0) do
L__Temperature_Settings2488:
0x4034	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4036	0x370002  	BRA	L__Temperature_Settings2489
;GRR3000LManagementPanel.mpas,6104 :: 		asm ClrWDT; end;
0x4038	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6105 :: 		end;
0x403A	0x37FFFC  	BRA	L__Temperature_Settings2488
L__Temperature_Settings2489:
;GRR3000LManagementPanel.mpas,6107 :: 		EEPROM_Write(EE_TempFanOffSetEeAddr, TempFanOffSet);
0x403C	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0x403E	0xFB8610  	ZE	[W0], W12
0x4040	0x2F044A  	MOV	#61508, W10
0x4042	0x2007FB  	MOV	#127, W11
0x4044	0x07E9A8  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,6108 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Temperature_Settings2493:
0x4046	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x4048	0x37FFFE  	BRA	L__Temperature_Settings2493
;GRR3000LManagementPanel.mpas,6110 :: 		Chng[3] := 0;
0x404A	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x404C	0xEF2000  	CLR	W0
0x404E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6111 :: 		Glcd_Write_Text(WriteText, 84, Row4, Black);
0x4050	0xB3C01D  	MOV.B	#1, W13
0x4052	0xB3C03C  	MOV.B	#3, W12
0x4054	0xB3C54B  	MOV.B	#84, W11
0x4056	0x2129BA  	MOV	#lo_addr(_WriteText), W10
0x4058	0x070B98  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,6113 :: 		end;
L__Temperature_Settings2485:
;GRR3000LManagementPanel.mpas,6118 :: 		end; // chng[3] while end
0x405A	0x37FFA9  	BRA	L__Temperature_Settings2458
L__Temperature_Settings2459:
;GRR3000LManagementPanel.mpas,6120 :: 		end;
L__Temperature_Settings2450:
;GRR3000LManagementPanel.mpas,6121 :: 		end;
0x405C	0x37000E  	BRA	L__Temperature_Settings2343
L__Temperature_Settings2448:
;GRR3000LManagementPanel.mpas,6192 :: 		4: begin // geri
0x405E	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x4060	0x784010  	MOV.B	[W0], W0
0x4062	0xE10464  	CP.B	W0, #4
0x4064	0x3A000A  	BRA NZ	L__Temperature_Settings2499
L__Temperature_Settings5415:
;GRR3000LManagementPanel.mpas,6194 :: 		if (Ok_Button =0) then
0x4066	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4068	0x370007  	BRA	L__Temperature_Settings2501
;GRR3000LManagementPanel.mpas,6196 :: 		while (Ok_Button =0) do
L__Temperature_Settings2504:
0x406A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x406C	0x370002  	BRA	L__Temperature_Settings2505
;GRR3000LManagementPanel.mpas,6198 :: 		asm ClrWDT; end;
0x406E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,6199 :: 		end;
0x4070	0x37FFFC  	BRA	L__Temperature_Settings2504
L__Temperature_Settings2505:
;GRR3000LManagementPanel.mpas,6200 :: 		MenuExit := 1;
0x4072	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x4074	0xB3C010  	MOV.B	#1, W0
0x4076	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6202 :: 		end;
L__Temperature_Settings2501:
;GRR3000LManagementPanel.mpas,6206 :: 		end;
0x4078	0x370000  	BRA	L__Temperature_Settings2343
L__Temperature_Settings2499:
L__Temperature_Settings2343:
;GRR3000LManagementPanel.mpas,6211 :: 		end;
0x407A	0x37FE75  	BRA	L__Temperature_Settings2333
L__Temperature_Settings2334:
;GRR3000LManagementPanel.mpas,6213 :: 		Glcd_Fill(0x00);
0x407C	0xEF2014  	CLR	W10
0x407E	0x072C26  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,6214 :: 		MenuSayacValue := 6;
0x4080	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x4082	0xB3C060  	MOV.B	#6, W0
0x4084	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,6216 :: 		end;
L_end_Temperature_Settings:
0x4086	0x7806CF  	POP	W13
0x4088	0x78064F  	POP	W12
0x408A	0x7805CF  	POP	W11
0x408C	0x78054F  	POP	W10
0x408E	0xFA8000  	ULNK
0x4090	0x060000  	RETURN
; end of _Temperature_Settings
_TempCompansation_Measurement:
0x09C6	0xFA0004  	LNK	#4
;GRR3000LManagementPanel.mpas,1414 :: 		begin
;GRR3000LManagementPanel.mpas,1420 :: 		TempCompRAW     := AnalogRead(14,Adc_Sample);
0x09C8	0x781F8A  	PUSH	W10
0x09CA	0x781F8B  	PUSH	W11
0x09CC	0x20019B  	MOV	#25, W11
0x09CE	0xB3C0EA  	MOV.B	#14, W10
0x09D0	0x07FDA3  	RCALL	_AnalogRead
;GRR3000LManagementPanel.mpas,1424 :: 		TempRawReal := (TempCompRAW/0.817);
0x09D2	0xEB0080  	CLR	W1
0x09D4	0x07482A  	RCALL	__Long2Float
0x09D6	0x226E92  	MOV	#9961, W2
0x09D8	0x23F513  	MOV	#16209, W3
0x09DA	0x07FF07  	RCALL	__Div_FP
;GRR3000LManagementPanel.mpas,1425 :: 		TempComp    := TempRawReal / 10;
0x09DC	0x200002  	MOV	#0, W2
0x09DE	0x241203  	MOV	#16672, W3
0x09E0	0x07FF04  	RCALL	__Div_FP
0x09E2	0x070031  	RCALL	__Float2Longint
0x09E4	0x211E31  	MOV	#lo_addr(_TempComp), W1
0x09E6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1427 :: 		if (ChargeMode = TComp) then // þarj modu sýcaklýk komp. ise
0x09E8	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0x09EA	0x784010  	MOV.B	[W0], W0
0x09EC	0xE10463  	CP.B	W0, #3
0x09EE	0x3A0027  	BRA NZ	L__TempCompansation_Measurement61
L__TempCompansation_Measurement4880:
;GRR3000LManagementPanel.mpas,1429 :: 		TCompV        := ((TempComp - 20.0)*0.003);
0x09F0	0x211E32  	MOV	#lo_addr(_TempComp), W2
0x09F2	0xFB0012  	SE	[W2], W0
0x09F4	0xDE80CF  	ASR	W0, #15, W1
0x09F6	0xEB8100  	SETM	W2
0x09F8	0x074818  	RCALL	__Long2Float
0x09FA	0x200002  	MOV	#0, W2
0x09FC	0x241A03  	MOV	#16800, W3
0x09FE	0x07FD61  	RCALL	__Sub_FP
0x0A00	0x29BA62  	MOV	#39846, W2
0x0A02	0x23B443  	MOV	#15172, W3
0x0A04	0x07486D  	RCALL	__Mul_FP
0x0A06	0x888FF0  	MOV	W0, _TCompV
0x0A08	0x889001  	MOV	W1, _TCompV+2
;GRR3000LManagementPanel.mpas,1430 :: 		Tcomp2        := NomHucreGerilim / 100.0;
0x0A0A	0x809FD0  	MOV	_NomHucreGerilim, W0
0x0A0C	0xEB0080  	CLR	W1
0x0A0E	0x07480D  	RCALL	__Long2Float
0x0A10	0x200002  	MOV	#0, W2
0x0A12	0x242C83  	MOV	#17096, W3
0x0A14	0x07FEEA  	RCALL	__Div_FP
0x0A16	0x888FD0  	MOV	W0, _Tcomp2
0x0A18	0x888FE1  	MOV	W1, _Tcomp2+2
;GRR3000LManagementPanel.mpas,1431 :: 		Tcomp2        := (HucreSayisi*(Tcomp2-TCompV))*10.0;
0x0A1A	0x808FF2  	MOV	_TCompV, W2
0x0A1C	0x809003  	MOV	_TCompV+2, W3
0x0A1E	0x07FD51  	RCALL	__Sub_FP
0x0A20	0x980700  	MOV	W0, [W14+0]
0x0A22	0x980711  	MOV	W1, [W14+2]
0x0A24	0x809FF0  	MOV	_HucreSayisi, W0
0x0A26	0xEB0080  	CLR	W1
0x0A28	0x074800  	RCALL	__Long2Float
0x0A2A	0x90010E  	MOV	[W14+0], W2
0x0A2C	0x90019E  	MOV	[W14+2], W3
0x0A2E	0x074858  	RCALL	__Mul_FP
0x0A30	0x200002  	MOV	#0, W2
0x0A32	0x241203  	MOV	#16672, W3
0x0A34	0x074855  	RCALL	__Mul_FP
0x0A36	0x888FD0  	MOV	W0, _Tcomp2
0x0A38	0x888FE1  	MOV	W1, _Tcomp2+2
;GRR3000LManagementPanel.mpas,1432 :: 		TempComp_Volt := Tcomp2;
0x0A3A	0x070005  	RCALL	__Float2Longint
0x0A3C	0x888D80  	MOV	W0, _TempComp_Volt
;GRR3000LManagementPanel.mpas,1433 :: 		end;
L__TempCompansation_Measurement61:
;GRR3000LManagementPanel.mpas,1437 :: 		end;
L_end_TempCompansation_Measurement:
0x0A3E	0x7805CF  	POP	W11
0x0A40	0x78054F  	POP	W10
0x0A42	0xFA8000  	ULNK
0x0A44	0x060000  	RETURN
; end of _TempCompansation_Measurement
_AnalogRead:
;GRR3000LManagementPanel.mpas,1212 :: 		begin
;GRR3000LManagementPanel.mpas,1213 :: 		ADC_Ham    := 0;
; ADC_Ham start address is: 6 (W3)
0x0518	0xEF2006  	CLR	W3
0x051A	0xEF2008  	CLR	W4
;GRR3000LManagementPanel.mpas,1216 :: 		for TempSample := 1 to _Sample do
; TempSample start address is: 4 (W2)
0x051C	0x200012  	MOV	#1, W2
; ADC_Ham end address is: 6 (W3)
; TempSample end address is: 4 (W2)
L__AnalogRead5:
; TempSample start address is: 4 (W2)
; ADC_Ham start address is: 6 (W3)
0x051E	0xE1100B  	CP	W2, W11
0x0520	0x3E0011  	BRA GTU	L__AnalogRead4857
L__AnalogRead4861:
;GRR3000LManagementPanel.mpas,1220 :: 		clrwdt;
0x0522	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,1223 :: 		ADC_Ham := (ADC_Ham + ADC1_Read(Channel));
0x0524	0xFB850A  	ZE	W10, W10
0x0526	0x07FE91  	RCALL	_ADC1_Read
0x0528	0xEB0080  	CLR	W1
; ADC_Ham start address is: 0 (W0)
0x052A	0x418000  	ADD	W3, W0, W0
0x052C	0x4A0081  	ADDC	W4, W1, W1
; ADC_Ham end address is: 6 (W3)
;GRR3000LManagementPanel.mpas,1224 :: 		Delay_us(10);
0x052E	0x200647  	MOV	#100, W7
L__AnalogRead10:
0x0530	0xED200E  	DEC	W7
0x0532	0x3AFFFE  	BRA NZ	L__AnalogRead10
;GRR3000LManagementPanel.mpas,1226 :: 		end;
0x0534	0xE1100B  	CP	W2, W11
0x0536	0x320004  	BRA Z	L__AnalogRead4856
L__AnalogRead4862:
; TempSample start address is: 4 (W2)
0x0538	0xEC2004  	INC	W2
; TempSample end address is: 4 (W2)
0x053A	0x780180  	MOV	W0, W3
0x053C	0x780201  	MOV	W1, W4
; ADC_Ham end address is: 0 (W0)
; TempSample end address is: 4 (W2)
0x053E	0x37FFEF  	BRA	L__AnalogRead5
L__AnalogRead4856:
0x0540	0xBE0100  	MOV.D	W0, W2
0x0542	0x370002  	BRA	L__AnalogRead9
L__AnalogRead4857:
;GRR3000LManagementPanel.mpas,1216 :: 		for TempSample := 1 to _Sample do
0x0544	0x780103  	MOV	W3, W2
0x0546	0x780184  	MOV	W4, W3
;GRR3000LManagementPanel.mpas,1226 :: 		end;
L__AnalogRead9:
;GRR3000LManagementPanel.mpas,1228 :: 		Result := ADC_Ham div _Sample;
; ADC_Ham start address is: 4 (W2)
0x0548	0xBE9F8A  	PUSH.D	W10
; ADC_Ham end address is: 4 (W2)
0x054A	0xBE0002  	MOV.D	W2, W0
0x054C	0x78010B  	MOV	W11, W2
0x054E	0xEB0180  	CLR	W3
0x0550	0xEB8200  	SETM	W4
0x0552	0x070AD6  	RCALL	__Divide_32x32
0x0554	0xBE054F  	POP.D	W10
; Result start address is: 2 (W1)
0x0556	0x780080  	MOV	W0, W1
;GRR3000LManagementPanel.mpas,1230 :: 		end;
0x0558	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_AnalogRead:
0x055A	0x060000  	RETURN
; end of _AnalogRead
_ADC1_Read:
0x024A	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.mpas,99 :: 		
;__Lib_ADC_1_p24FJ_p30.mpas,100 :: 		
0x024C	0x07FF65  	RCALL	_ADC1_Init
;__Lib_ADC_1_p24FJ_p30.mpas,101 :: 		
0x024E	0x07FF7B  	RCALL	_ADC1_Get_Sample
; Result start address is: 2 (W1)
0x0250	0x780080  	MOV	W0, W1
;__Lib_ADC_1_p24FJ_p30.mpas,102 :: 		
0x0252	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_ADC1_Read:
0x0254	0xFA8000  	ULNK
0x0256	0x060000  	RETURN
; end of _ADC1_Read
_ADC1_Init:
0x0118	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.mpas,57 :: 		
;__Lib_ADC_1_p24FJ_p30.mpas,58 :: 		
0x011A	0x201460  	MOV	#lo_addr(_ADC1_Get_Sample), W0
0x011C	0x888880  	MOV	W0, _ADC_Get_Sample_Ptr
;__Lib_ADC_1_p24FJ_p30.mpas,60 :: 		
0x011E	0x200E00  	MOV	#224, W0
0x0120	0xB7A2A0  	MOV	WREG, ADCON1
;__Lib_ADC_1_p24FJ_p30.mpas,61 :: 		
0x0122	0xEF22A2  	CLR	ADCON2
;__Lib_ADC_1_p24FJ_p30.mpas,63 :: 		
0x0124	0x21F3F0  	MOV	#7999, W0
0x0126	0xB7A2A4  	MOV	WREG, ADCON3
;__Lib_ADC_1_p24FJ_p30.mpas,64 :: 		
0x0128	0xEF22AA  	CLR	ADCSSL
;__Lib_ADC_1_p24FJ_p30.mpas,65 :: 		
0x012A	0xA8E2A1  	BSET	ADCON1, #15
;__Lib_ADC_1_p24FJ_p30.mpas,66 :: 		
L_end_ADC1_Init:
0x012C	0xFA8000  	ULNK
0x012E	0x060000  	RETURN
; end of _ADC1_Init
_ADC1_Get_Sample:
0x0146	0xFA0000  	LNK	#0
;__Lib_ADC_1_p24FJ_p30.mpas,81 :: 		
;__Lib_ADC_1_p24FJ_p30.mpas,82 :: 		
; ChMask start address is: 2 (W1)
0x0148	0x200011  	MOV	#1, W1
;__Lib_ADC_1_p24FJ_p30.mpas,83 :: 		
0x014A	0xDD080A  	SL	W1, W10, W0
; ChMask end address is: 2 (W1)
;__Lib_ADC_1_p24FJ_p30.mpas,85 :: 		
0x014C	0xEA8080  	COM	W0, W1
0x014E	0x202A80  	MOV	#lo_addr(ADPCFG), W0
0x0150	0x608810  	AND	W1, [W0], [W0]
;__Lib_ADC_1_p24FJ_p30.mpas,87 :: 		
0x0152	0x88153A  	MOV	W10, ADCHS
;__Lib_ADC_1_p24FJ_p30.mpas,89 :: 		
0x0154	0xA822A0  	BSET	ADCON1, #1
;__Lib_ADC_1_p24FJ_p30.mpas,91 :: 		
L__ADC1_Get_Sample4:
0x0156	0xAF02A0  	BTSC	ADCON1, #0
0x0158	0x370002  	BRA	L__ADC1_Get_Sample5
;__Lib_ADC_1_p24FJ_p30.mpas,92 :: 		
0x015A	0x000000  	NOP
0x015C	0x37FFFC  	BRA	L__ADC1_Get_Sample4
L__ADC1_Get_Sample5:
;__Lib_ADC_1_p24FJ_p30.mpas,93 :: 		
0x015E	0xA902A0  	BCLR	ADCON1, #0
;__Lib_ADC_1_p24FJ_p30.mpas,95 :: 		
; Result start address is: 2 (W1)
0x0160	0x801401  	MOV	ADCBUF0, W1
;__Lib_ADC_1_p24FJ_p30.mpas,96 :: 		
0x0162	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_ADC1_Get_Sample:
0x0164	0xFA8000  	ULNK
0x0166	0x060000  	RETURN
; end of _ADC1_Get_Sample
__Sub_FP:
0x04C2	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,844 :: 		
;__Lib_MathDouble.mpas,846 :: 		
0x04C4	0xAAE007  	BTG	W3, #15
;__Lib_MathDouble.mpas,848 :: 		
0x04C6	0x07FEC8  	RCALL	__AddSub_FP
;__Lib_MathDouble.mpas,849 :: 		
L_end__Sub_FP:
0x04C8	0xFA8000  	ULNK
0x04CA	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x0258	0xFA0000  	LNK	#0
;__Lib_MathDouble.mpas,597 :: 		
;__Lib_MathDouble.mpas,599 :: 		
0x025A	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.mpas,600 :: 		
0x025C	0x0000000403C0  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.mpas,602 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.mpas,603 :: 		
0x0260	0xBE9F88  	MOV.D	W8, [W15++]
;__Lib_MathDouble.mpas,604 :: 		
0x0262	0xBE9F8A  	MOV.D	W10, [W15++]
;__Lib_MathDouble.mpas,605 :: 		
0x0264	0x781F8C  	MOV	W12, [W15++]
;__Lib_MathDouble.mpas,606 :: 		
0x0266	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.mpas,607 :: 		
0x0268	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.mpas,608 :: 		
0x026A	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,609 :: 		
0x026C	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.mpas,610 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.mpas,611 :: 		
0x026E	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,612 :: 		
0x0270	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.mpas,613 :: 		
0x0272	0x6C8203  	XOR	W9, W3, W4
;__Lib_MathDouble.mpas,614 :: 		
0x0274	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.mpas,615 :: 		
0x0276	0xD00509  	SL	W9, W10
;__Lib_MathDouble.mpas,616 :: 		
0x0278	0xD00603  	SL	W3, W12
;__Lib_MathDouble.mpas,617 :: 		
0x027A	0x540F82  	SUB	W8, W2, [W15]
;__Lib_MathDouble.mpas,618 :: 		
0x027C	0x5D060C  	SUBB	W10, W12, W12
;__Lib_MathDouble.mpas,619 :: 		
0x027E	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.mpas,620 :: 		
0x0280	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.mpas,621 :: 		
0x0282	0x880039  	MOV	W9, W3
;__Lib_MathDouble.mpas,622 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.mpas,623 :: 		
0x0284	0x8800C3  	MOV	W3, W12
;__Lib_MathDouble.mpas,624 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.mpas,625 :: 		
0x0286	0x558285  	SUB	W11, W5, W5
;__Lib_MathDouble.mpas,626 :: 		
0x0288	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.mpas,627 :: 		
0x028A	0xFD0300  	EXCH	W0, W6
;__Lib_MathDouble.mpas,628 :: 		
0x028C	0xFD0381  	EXCH	W1, W7
;__Lib_MathDouble.mpas,629 :: 		
0x028E	0xEA0285  	NEG	W5, W5
;__Lib_MathDouble.mpas,630 :: 		
0x0290	0x42858B  	ADD	W5, W11, W11
;__Lib_MathDouble.mpas,631 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.mpas,632 :: 		
0x0292	0x720F84  	IOR	W4, W4, [W15]
;__Lib_MathDouble.mpas,633 :: 		
0x0294	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.mpas,634 :: 		
0x0296	0x100060  	SUBR	W0, #0, W0
;__Lib_MathDouble.mpas,635 :: 		
0x0298	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_MathDouble.mpas,636 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.mpas,637 :: 		
0x029A	0xB81160  	MUL.UU	W2, #0, W2
;__Lib_MathDouble.mpas,638 :: 		
0x029C	0xEB0500  	CLR	W10
;__Lib_MathDouble.mpas,639 :: 		
0x029E	0xE1287A  	CP	W5, #26
;__Lib_MathDouble.mpas,640 :: 		
0x02A0	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.mpas,641 :: 		
0x02A2	0x880006  	MOV	W6, W0
;__Lib_MathDouble.mpas,642 :: 		
0x02A4	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.mpas,643 :: 		
0x02A6	0xB207F7  	AND	#127, W7
;__Lib_MathDouble.mpas,644 :: 		
0x02A8	0x758087  	IOR	W11, W7, W1
;__Lib_MathDouble.mpas,645 :: 		
0x02AA	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.mpas,646 :: 		
AddSubFP_align:
;__Lib_MathDouble.mpas,647 :: 		
0x02AC	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,648 :: 		
0x02AE	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.mpas,649 :: 		
0x02B0	0x600561  	AND	W0, #1, W10
;__Lib_MathDouble.mpas,650 :: 		
0x02B2	0xD18081  	ASR	W1, W1
;__Lib_MathDouble.mpas,651 :: 		
0x02B4	0xD38000  	RRC	W0, W0
;__Lib_MathDouble.mpas,652 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.mpas,653 :: 		
0x02B6	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,654 :: 		
0x02B8	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.mpas,655 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.mpas,656 :: 		
0x02BA	0x400406  	ADD	W0, W6, W8
;__Lib_MathDouble.mpas,657 :: 		
0x02BC	0x488487  	ADDC	W1, W7, W9
;__Lib_MathDouble.mpas,658 :: 		
0x02BE	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.mpas,659 :: 		
0x02C0	0x140460  	SUBR	W8, #0, W8
;__Lib_MathDouble.mpas,660 :: 		
0x02C2	0x1C84E0  	SUBBR	W9, #0, W9
;__Lib_MathDouble.mpas,661 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.mpas,662 :: 		
0x02C4	0xA38809  	BTST.Z	W9, #8
;__Lib_MathDouble.mpas,663 :: 		
0x02C6	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.mpas,664 :: 		
0x02C8	0x71818A  	IOR	W3, W10, W3
;__Lib_MathDouble.mpas,665 :: 		
0x02CA	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,666 :: 		
0x02CC	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,667 :: 		
0x02CE	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,668 :: 		
0x02D0	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,669 :: 		
0x02D2	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,670 :: 		
0x02D4	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.mpas,671 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.mpas,672 :: 		
0x02D6	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.mpas,673 :: 		
0x02D8	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.mpas,674 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.mpas,675 :: 		
0x02DA	0xE20016  	CP0	W11
;__Lib_MathDouble.mpas,676 :: 		
0x02DC	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.mpas,677 :: 		
0x02DE	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.mpas,678 :: 		
0x02E0	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.mpas,679 :: 		
0x02E2	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.mpas,680 :: 		
0x02E4	0x74440A  	IOR.B	W8, W10, W8
;__Lib_MathDouble.mpas,681 :: 		
0x02E6	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.mpas,682 :: 		
0x02E8	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.mpas,683 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.mpas,684 :: 		
0x02EA	0xE20016  	CP0	W11
;__Lib_MathDouble.mpas,685 :: 		
0x02EC	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.mpas,686 :: 		
0x02EE	0xE9058B  	DEC	W11, W11
;__Lib_MathDouble.mpas,687 :: 		
0x02F0	0x440408  	ADD	W8, W8, W8
;__Lib_MathDouble.mpas,688 :: 		
0x02F2	0x4C8489  	ADDC	W9, W9, W9
;__Lib_MathDouble.mpas,689 :: 		
0x02F4	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.mpas,690 :: 		
0x02F6	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.mpas,691 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.mpas,692 :: 		
0x02F8	0xA37809  	BTST.Z	W9, #7
;__Lib_MathDouble.mpas,693 :: 		
0x02FA	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.mpas,694 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.mpas,695 :: 		
0x02FC	0xEB0100  	CLR	W2
;__Lib_MathDouble.mpas,696 :: 		
0x02FE	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.mpas,697 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.mpas,698 :: 		
0x0300	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,699 :: 		
0x0302	0x88002A  	MOV	W10, W2
;__Lib_MathDouble.mpas,700 :: 		
AddSubFP_round:
;__Lib_MathDouble.mpas,701 :: 		
0x0304	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.mpas,702 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.mpas,703 :: 		
0x0306	0xA7F00C  	BTSC	W12, #15
;__Lib_MathDouble.mpas,704 :: 		
0x0308	0xA8E003  	BSET	W1, #15
;__Lib_MathDouble.mpas,705 :: 		
0x030A	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.mpas,706 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.mpas,707 :: 		
0x030C	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,708 :: 		
0x030E	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.mpas,709 :: 		
0x0310	0x6C8F83  	XOR	W9, W3, [W15]
;__Lib_MathDouble.mpas,710 :: 		
0x0312	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.mpas,711 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.mpas,712 :: 		
0x0314	0xBE8108  	MOV.D	W8, W2
;__Lib_MathDouble.mpas,713 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.mpas,714 :: 		
0x0316	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,715 :: 		
0x0318	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.mpas,716 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.mpas,717 :: 		
0x031A	0xBE8400  	MOV.D	W0, W8
;__Lib_MathDouble.mpas,718 :: 		
0x031C	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.mpas,719 :: 		
0x031E	0xBE8300  	MOV.D	W0, W6
;__Lib_MathDouble.mpas,720 :: 		
0x0320	0xBE8504  	MOV.D	W4, W10
;__Lib_MathDouble.mpas,721 :: 		
0x0322	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,722 :: 		
0x0324	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.mpas,723 :: 		
0x0326	0x754F84  	IOR.B	W10, W4, [W15]
;__Lib_MathDouble.mpas,724 :: 		
0x0328	0x060000  	RETURN
;__Lib_MathDouble.mpas,725 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.mpas,726 :: 		
0x032A	0xBE8002  	MOV.D	W2, W0
;__Lib_MathDouble.mpas,727 :: 		
0x032C	0xE15064  	CP	W10, #4
;__Lib_MathDouble.mpas,728 :: 		
0x032E	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.mpas,729 :: 		
0x0330	0xE12064  	CP	W4, #4
;__Lib_MathDouble.mpas,730 :: 		
0x0332	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.mpas,731 :: 		
0x0334	0xA36809  	BTST.Z	W9, #6
;__Lib_MathDouble.mpas,732 :: 		
0x0336	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.mpas,733 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.mpas,734 :: 		
0x0338	0xBE8008  	MOV.D	W8, W0
;__Lib_MathDouble.mpas,735 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.mpas,736 :: 		
0x033A	0xA8C002  	BSET	W1, #6
;__Lib_MathDouble.mpas,737 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.mpas,738 :: 		
0x033C	0x78064F  	MOV	[--W15], W12
;__Lib_MathDouble.mpas,739 :: 		
0x033E	0xBE054F  	MOV.D	[--W15], W10
;__Lib_MathDouble.mpas,740 :: 		
0x0340	0xBE044F  	MOV.D	[--W15], W8
;__Lib_MathDouble.mpas,741 :: 		
0x0342	0x060000  	RETURN
;__Lib_MathDouble.mpas,742 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.mpas,743 :: 		
0x0344	0x2FFFF0  	MOV	#65535, W0
;__Lib_MathDouble.mpas,744 :: 		
0x0346	0x27FFF1  	MOV	#32767, W1
;__Lib_MathDouble.mpas,745 :: 		
0x0348	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.mpas,746 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.mpas,747 :: 		
0x034A	0x200081  	MOV	#8, W1
;__Lib_MathDouble.mpas,748 :: 		
0x034C	0x558061  	SUB	W11, #1, W0
;__Lib_MathDouble.mpas,749 :: 		
0x034E	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.mpas,750 :: 		
0x0350	0x20000B  	MOV	#0, W11
;__Lib_MathDouble.mpas,751 :: 		
0x0352	0x2FFE61  	MOV	#65510, W1
;__Lib_MathDouble.mpas,752 :: 		
0x0354	0xE10001  	CP	W0, W1
;__Lib_MathDouble.mpas,753 :: 		
0x0356	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.mpas,754 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.mpas,755 :: 		
0x0358	0x718182  	IOR	W3, W2, W3
;__Lib_MathDouble.mpas,756 :: 		
0x035A	0x640161  	AND	W8, #1, W2
;__Lib_MathDouble.mpas,757 :: 		
0x035C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,758 :: 		
0x035E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,759 :: 		
0x0360	0xE80000  	INC	W0, W0
;__Lib_MathDouble.mpas,760 :: 		
0x0362	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.mpas,761 :: 		
0x0364	0x200071  	MOV	#7, W1
;__Lib_MathDouble.mpas,762 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.mpas,763 :: 		
0x0366	0x640061  	AND	W8, #1, W0
;__Lib_MathDouble.mpas,764 :: 		
0x0368	0x700003  	IOR	W0, W3, W0
;__Lib_MathDouble.mpas,765 :: 		
0x036A	0x600002  	AND	W0, W2, W0
;__Lib_MathDouble.mpas,766 :: 		
0x036C	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.mpas,767 :: 		
0x036E	0x440461  	ADD	W8, #1, W8
;__Lib_MathDouble.mpas,768 :: 		
0x0370	0x4C84E0  	ADDC	W9, #0, W9
;__Lib_MathDouble.mpas,769 :: 		
0x0372	0xA58809  	BTST.Z	W9, W1
;__Lib_MathDouble.mpas,770 :: 		
0x0374	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.mpas,771 :: 		
0x0376	0xE8058B  	INC	W11, W11
;__Lib_MathDouble.mpas,772 :: 		
0x0378	0xE10868  	CP	W1, #8
;__Lib_MathDouble.mpas,773 :: 		
0x037A	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.mpas,774 :: 		
0x037C	0xD10489  	LSR	W9, W9
;__Lib_MathDouble.mpas,775 :: 		
0x037E	0xD38408  	RRC	W8, W8
;__Lib_MathDouble.mpas,776 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.mpas,777 :: 		
0x0380	0x200FF2  	MOV	#255, W2
;__Lib_MathDouble.mpas,778 :: 		
0x0382	0xE15802  	CP	W11, W2
;__Lib_MathDouble.mpas,779 :: 		
0x0384	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.mpas,780 :: 		
0x0386	0xDD5DC7  	SL	W11, #7, W11
;__Lib_MathDouble.mpas,781 :: 		
0x0388	0xB207F9  	AND	#127, W9
;__Lib_MathDouble.mpas,782 :: 		
0x038A	0x758089  	IOR	W11, W9, W1
;__Lib_MathDouble.mpas,783 :: 		
0x038C	0x880008  	MOV	W8, W0
;__Lib_MathDouble.mpas,784 :: 		
0x038E	0x060000  	RETURN
;__Lib_MathDouble.mpas,785 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.mpas,786 :: 		
0x0390	0x27F80B  	MOV	#32640, W11
;__Lib_MathDouble.mpas,787 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.mpas,788 :: 		
0x0392	0x88001B  	MOV	W11, W1
;__Lib_MathDouble.mpas,789 :: 		
0x0394	0x050000  	RETLW	#0, W0
;__Lib_MathDouble.mpas,790 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.mpas,791 :: 		
0x0396	0xDE0AC7  	LSR	W1, #7, W5
;__Lib_MathDouble.mpas,792 :: 		
0x0398	0xB207F1  	AND	#127, W1
;__Lib_MathDouble.mpas,793 :: 		
0x039A	0xB20FF5  	AND	#255, W5
;__Lib_MathDouble.mpas,794 :: 		
0x039C	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.mpas,795 :: 		
0x039E	0x42CFE1  	ADD.B	W5, #1, [W15]
;__Lib_MathDouble.mpas,796 :: 		
0x03A0	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.mpas,797 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.mpas,798 :: 		
0x03A2	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,799 :: 		
0x03A4	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,800 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.mpas,801 :: 		
0x03A6	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,802 :: 		
0x03A8	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.mpas,803 :: 		
0x03AA	0x050804  	RETLW	#128, W4
;__Lib_MathDouble.mpas,804 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.mpas,805 :: 		
0x03AC	0x050044  	RETLW	#4, W4
;__Lib_MathDouble.mpas,806 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.mpas,807 :: 		
0x03AE	0x700F81  	IOR	W0, W1, [W15]
;__Lib_MathDouble.mpas,808 :: 		
0x03B0	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.mpas,809 :: 		
0x03B2	0x050014  	RETLW	#1, W4
;__Lib_MathDouble.mpas,810 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.mpas,811 :: 		
0x03B4	0xE90285  	DEC	W5, W5
;__Lib_MathDouble.mpas,812 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.mpas,813 :: 		
0x03B6	0x400000  	ADD	W0, W0, W0
;__Lib_MathDouble.mpas,814 :: 		
0x03B8	0x48C081  	ADDC.B	W1, W1, W1
;__Lib_MathDouble.mpas,815 :: 		
0x03BA	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.mpas,816 :: 		
0x03BC	0xA8E002  	BSET	W1, #7
;__Lib_MathDouble.mpas,817 :: 		
0x03BE	0x050024  	RETLW	#2, W4
;__Lib_MathDouble.mpas,819 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.mpas,822 :: 		
L_end__AddSub_FP:
0x03C0	0xFA8000  	ULNK
0x03C2	0x060000  	RETURN
; end of __AddSub_FP
_Clock_Settings:
0x24CC	0xFA0018  	LNK	#24
;GRR3000LManagementPanel.mpas,5018 :: 		begin
;GRR3000LManagementPanel.mpas,5019 :: 		Glcd_Fill(0x00);
0x24CE	0x781F8A  	PUSH	W10
0x24D0	0x781F8B  	PUSH	W11
0x24D2	0x781F8C  	PUSH	W12
0x24D4	0x781F8D  	PUSH	W13
0x24D6	0xEF2014  	CLR	W10
0x24D8	0x0739F9  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5020 :: 		MenuExit        := 0;
0x24DA	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x24DC	0xEF2000  	CLR	W0
0x24DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5021 :: 		MenuSayacValue  := 1;
0x24E0	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x24E2	0xB3C010  	MOV.B	#1, W0
0x24E4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5022 :: 		Chng[6]         := 2;
0x24E6	0x212511  	MOV	#lo_addr(_Chng+5), W1
0x24E8	0xB3C020  	MOV.B	#2, W0
0x24EA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5025 :: 		HourText        := '  ';
0x24EC	0x4700E0  	ADD	W14, #0, W1
0x24EE	0xB3C200  	MOV.B	#32, W0
0x24F0	0x785880  	MOV.B	W0, [W1++]
0x24F2	0xB3C200  	MOV.B	#32, W0
0x24F4	0x785880  	MOV.B	W0, [W1++]
0x24F6	0xEF2000  	CLR	W0
0x24F8	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,5026 :: 		MinText         := '  ';
0x24FA	0x4700E3  	ADD	W14, #3, W1
0x24FC	0xB3C200  	MOV.B	#32, W0
0x24FE	0x785880  	MOV.B	W0, [W1++]
0x2500	0xB3C200  	MOV.B	#32, W0
0x2502	0x785880  	MOV.B	W0, [W1++]
0x2504	0xEF2000  	CLR	W0
0x2506	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,5027 :: 		DayText         := '  ';
0x2508	0x4700E6  	ADD	W14, #6, W1
0x250A	0xB3C200  	MOV.B	#32, W0
0x250C	0x785880  	MOV.B	W0, [W1++]
0x250E	0xB3C200  	MOV.B	#32, W0
0x2510	0x785880  	MOV.B	W0, [W1++]
0x2512	0xEF2000  	CLR	W0
0x2514	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,5028 :: 		MonthText       := '  ';
0x2516	0x4700E9  	ADD	W14, #9, W1
0x2518	0xB3C200  	MOV.B	#32, W0
0x251A	0x785880  	MOV.B	W0, [W1++]
0x251C	0xB3C200  	MOV.B	#32, W0
0x251E	0x785880  	MOV.B	W0, [W1++]
0x2520	0xEF2000  	CLR	W0
0x2522	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,5029 :: 		YearText        := '    ';
0x2524	0x4700EC  	ADD	W14, #12, W1
0x2526	0xB3C200  	MOV.B	#32, W0
0x2528	0x785880  	MOV.B	W0, [W1++]
0x252A	0xB3C200  	MOV.B	#32, W0
0x252C	0x785880  	MOV.B	W0, [W1++]
0x252E	0xB3C200  	MOV.B	#32, W0
0x2530	0x785880  	MOV.B	W0, [W1++]
0x2532	0xB3C200  	MOV.B	#32, W0
0x2534	0x785880  	MOV.B	W0, [W1++]
0x2536	0xEF2000  	CLR	W0
0x2538	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,5030 :: 		SaveBit         := 0; // menüden çýkarken sürekli saati ayarlama deðiþiklik yapýlmýþsa ayarla
0x253A	0x470074  	ADD	W14, #20, W0
0x253C	0xA10010  	BCLR	[W0], #0
;GRR3000LManagementPanel.mpas,5037 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0x253E	0xB3C07D  	MOV.B	#7, W13
0x2540	0xB3C05C  	MOV.B	#5, W12
0x2542	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0x2544	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0x2546	0x200200  	MOV	#32, W0
0x2548	0x781F80  	PUSH	W0
0x254A	0x071AB6  	RCALL	_Glcd_Set_Font
0x254C	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,5039 :: 		Glcd_Write_Text(Title_ClockMenu,     0, Row1, Black);
0x254E	0xB3C01D  	MOV.B	#1, W13
0x2550	0xEF2018  	CLR	W12
0x2552	0xEF2016  	CLR	W11
0x2554	0x211E4A  	MOV	#lo_addr(_Title_ClockMenu), W10
0x2556	0x071919  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5040 :: 		Glcd_Write_Text(SubTitle_Back,       6, Row8, Black);
0x2558	0xB3C01D  	MOV.B	#1, W13
0x255A	0xB3C07C  	MOV.B	#7, W12
0x255C	0xB3C06B  	MOV.B	#6, W11
0x255E	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x2560	0x071914  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5041 :: 		Glcd_Write_Char(':', 63, Row4, Black);
0x2562	0xB3C01D  	MOV.B	#1, W13
0x2564	0xB3C03C  	MOV.B	#3, W12
0x2566	0xB3C3FB  	MOV.B	#63, W11
0x2568	0xB3C3AA  	MOV.B	#58, W10
0x256A	0x07FC04  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5042 :: 		Glcd_Write_Char('.', 48, Row6, Black);
0x256C	0xB3C01D  	MOV.B	#1, W13
0x256E	0xB3C05C  	MOV.B	#5, W12
0x2570	0xB3C30B  	MOV.B	#48, W11
0x2572	0xB3C2EA  	MOV.B	#46, W10
0x2574	0x07FBFF  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5043 :: 		Glcd_Write_Char('.', 66, Row6, Black);
0x2576	0xB3C01D  	MOV.B	#1, W13
0x2578	0xB3C05C  	MOV.B	#5, W12
0x257A	0xB3C42B  	MOV.B	#66, W11
0x257C	0xB3C2EA  	MOV.B	#46, W10
0x257E	0x07FBFA  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5049 :: 		Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year);
0x2580	0x213C9D  	MOV	#lo_addr(_Day), W13
0x2582	0x213CFC  	MOV	#lo_addr(_Seconds), W12
0x2584	0x213D0B  	MOV	#lo_addr(_Minutes), W11
0x2586	0x213CEA  	MOV	#lo_addr(_Hours), W10
0x2588	0x213CB0  	MOV	#lo_addr(_Year), W0
0x258A	0x781F80  	PUSH	W0
0x258C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x258E	0x781F80  	PUSH	W0
0x2590	0x213C80  	MOV	#lo_addr(_Week), W0
0x2592	0x781F80  	PUSH	W0
0x2594	0x07F05E  	RCALL	_Read_Time
0x2596	0xB1006F  	SUB	#6, W15
;GRR3000LManagementPanel.mpas,5051 :: 		Seconds  :=  Bcd2Dec16(seconds);
0x2598	0x213CF0  	MOV	#lo_addr(_Seconds), W0
0x259A	0xFB0510  	SE	[W0], W10
0x259C	0x07F012  	RCALL	_Bcd2Dec16
0x259E	0x213CF1  	MOV	#lo_addr(_Seconds), W1
0x25A0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5052 :: 		minutes  :=  Bcd2Dec16(minutes);
0x25A2	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x25A4	0xFB0510  	SE	[W0], W10
0x25A6	0x07F00D  	RCALL	_Bcd2Dec16
0x25A8	0x213D01  	MOV	#lo_addr(_Minutes), W1
0x25AA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5053 :: 		hours    :=  Bcd2Dec16(hours);
0x25AC	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x25AE	0xFB0510  	SE	[W0], W10
0x25B0	0x07F008  	RCALL	_Bcd2Dec16
0x25B2	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x25B4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5054 :: 		week     :=  Bcd2Dec16(Week);
0x25B6	0x213C80  	MOV	#lo_addr(_Week), W0
0x25B8	0xFB0510  	SE	[W0], W10
0x25BA	0x07F003  	RCALL	_Bcd2Dec16
0x25BC	0x213C81  	MOV	#lo_addr(_Week), W1
0x25BE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5055 :: 		day      :=  Bcd2Dec16(Day);
0x25C0	0x213C90  	MOV	#lo_addr(_Day), W0
0x25C2	0xFB0510  	SE	[W0], W10
0x25C4	0x07EFFE  	RCALL	_Bcd2Dec16
0x25C6	0x213C91  	MOV	#lo_addr(_Day), W1
0x25C8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5056 :: 		month    :=  Bcd2Dec16(Month);
0x25CA	0x213CA0  	MOV	#lo_addr(_Month), W0
0x25CC	0xFB0510  	SE	[W0], W10
0x25CE	0x07EFF9  	RCALL	_Bcd2Dec16
0x25D0	0x213CA1  	MOV	#lo_addr(_Month), W1
0x25D2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5057 :: 		year     :=  Bcd2Dec16(Year);
0x25D4	0x213CB0  	MOV	#lo_addr(_Year), W0
0x25D6	0xFB0510  	SE	[W0], W10
0x25D8	0x07EFF4  	RCALL	_Bcd2Dec16
0x25DA	0x980F30  	MOV	W0, [W14+22]
0x25DC	0x213CB1  	MOV	#lo_addr(_Year), W1
0x25DE	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5067 :: 		HourText[1]  := (Hours div 10)+48;
0x25E0	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x25E2	0xFB0010  	SE	[W0], W0
0x25E4	0x2000A2  	MOV	#10, W2
0x25E6	0x090011  	REPEAT	#17
0x25E8	0xD80002  	DIV.S	W0, W2
0x25EA	0x780100  	MOV	W0, W2
0x25EC	0xB3C301  	MOV.B	#48, W1
0x25EE	0x470060  	ADD	W14, #0, W0
0x25F0	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5068 :: 		HourText[2]  := (hours mod 10)+48;
0x25F2	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x25F4	0xFB0010  	SE	[W0], W0
0x25F6	0x2000A2  	MOV	#10, W2
0x25F8	0x090011  	REPEAT	#17
0x25FA	0xD80002  	DIV.S	W0, W2
0x25FC	0x780101  	MOV	W1, W2
0x25FE	0xB3C301  	MOV.B	#48, W1
0x2600	0x470061  	ADD	W14, #1, W0
0x2602	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5070 :: 		MinText[1]  := (Minutes div 10)+48;
0x2604	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2606	0xFB0010  	SE	[W0], W0
0x2608	0x2000A2  	MOV	#10, W2
0x260A	0x090011  	REPEAT	#17
0x260C	0xD80002  	DIV.S	W0, W2
0x260E	0x780100  	MOV	W0, W2
0x2610	0xB3C301  	MOV.B	#48, W1
0x2612	0x470063  	ADD	W14, #3, W0
0x2614	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5071 :: 		MinText[2]  := (Minutes mod 10)+48;
0x2616	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2618	0xFB0010  	SE	[W0], W0
0x261A	0x2000A2  	MOV	#10, W2
0x261C	0x090011  	REPEAT	#17
0x261E	0xD80002  	DIV.S	W0, W2
0x2620	0x780101  	MOV	W1, W2
0x2622	0xB3C301  	MOV.B	#48, W1
0x2624	0x470064  	ADD	W14, #4, W0
0x2626	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5074 :: 		DayText[1]   := (day div 10)+48;
0x2628	0x213C90  	MOV	#lo_addr(_Day), W0
0x262A	0xFB0010  	SE	[W0], W0
0x262C	0x2000A2  	MOV	#10, W2
0x262E	0x090011  	REPEAT	#17
0x2630	0xD80002  	DIV.S	W0, W2
0x2632	0x780100  	MOV	W0, W2
0x2634	0xB3C301  	MOV.B	#48, W1
0x2636	0x470066  	ADD	W14, #6, W0
0x2638	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5075 :: 		DayText[2]   := (day mod 10)+48;
0x263A	0x213C90  	MOV	#lo_addr(_Day), W0
0x263C	0xFB0010  	SE	[W0], W0
0x263E	0x2000A2  	MOV	#10, W2
0x2640	0x090011  	REPEAT	#17
0x2642	0xD80002  	DIV.S	W0, W2
0x2644	0x780101  	MOV	W1, W2
0x2646	0xB3C301  	MOV.B	#48, W1
0x2648	0x470067  	ADD	W14, #7, W0
0x264A	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5077 :: 		MonthText[1]   := (Month div 10)+48;
0x264C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x264E	0xFB0010  	SE	[W0], W0
0x2650	0x2000A2  	MOV	#10, W2
0x2652	0x090011  	REPEAT	#17
0x2654	0xD80002  	DIV.S	W0, W2
0x2656	0x780100  	MOV	W0, W2
0x2658	0xB3C301  	MOV.B	#48, W1
0x265A	0x470069  	ADD	W14, #9, W0
0x265C	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5078 :: 		MonthText[2]   := (Month mod 10)+48;
0x265E	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2660	0xFB0010  	SE	[W0], W0
0x2662	0x2000A2  	MOV	#10, W2
0x2664	0x090011  	REPEAT	#17
0x2666	0xD80002  	DIV.S	W0, W2
0x2668	0x780101  	MOV	W1, W2
0x266A	0xB3C301  	MOV.B	#48, W1
0x266C	0x47006A  	ADD	W14, #10, W0
0x266E	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5080 :: 		YearText[1]   := '2';
0x2670	0xB3C320  	MOV.B	#50, W0
0x2672	0x984F40  	MOV.B	W0, [W14+12]
;GRR3000LManagementPanel.mpas,5081 :: 		YearText[2]   := '0';
0x2674	0xB3C300  	MOV.B	#48, W0
0x2676	0x984F50  	MOV.B	W0, [W14+13]
;GRR3000LManagementPanel.mpas,5082 :: 		YearText[3]   := (Year div 10)+48;
0x2678	0x90083E  	MOV	[W14+22], W0
0x267A	0xFB0000  	SE	W0, W0
0x267C	0x2000A2  	MOV	#10, W2
0x267E	0x090011  	REPEAT	#17
0x2680	0xD80002  	DIV.S	W0, W2
0x2682	0x780100  	MOV	W0, W2
0x2684	0xB3C301  	MOV.B	#48, W1
0x2686	0x47006E  	ADD	W14, #14, W0
0x2688	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5083 :: 		YearText[4]   := (Year mod 10)+48;
0x268A	0x90083E  	MOV	[W14+22], W0
0x268C	0xFB0000  	SE	W0, W0
0x268E	0x2000A2  	MOV	#10, W2
0x2690	0x090011  	REPEAT	#17
0x2692	0xD80002  	DIV.S	W0, W2
0x2694	0x780101  	MOV	W1, W2
0x2696	0xB3C301  	MOV.B	#48, W1
0x2698	0x47006F  	ADD	W14, #15, W0
0x269A	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5085 :: 		Glcd_Write_Text(HourText,51,row4,Black);
0x269C	0x470060  	ADD	W14, #0, W0
0x269E	0xB3C01D  	MOV.B	#1, W13
0x26A0	0xB3C03C  	MOV.B	#3, W12
0x26A2	0xB3C33B  	MOV.B	#51, W11
0x26A4	0x780500  	MOV	W0, W10
0x26A6	0x071871  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5086 :: 		Glcd_Write_Text(MinText,69,row4,Black);
0x26A8	0x470063  	ADD	W14, #3, W0
0x26AA	0xB3C01D  	MOV.B	#1, W13
0x26AC	0xB3C03C  	MOV.B	#3, W12
0x26AE	0xB3C45B  	MOV.B	#69, W11
0x26B0	0x780500  	MOV	W0, W10
0x26B2	0x07186B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5088 :: 		Glcd_Write_Text(DayText,36,row6,Black);
0x26B4	0x470066  	ADD	W14, #6, W0
0x26B6	0xB3C01D  	MOV.B	#1, W13
0x26B8	0xB3C05C  	MOV.B	#5, W12
0x26BA	0xB3C24B  	MOV.B	#36, W11
0x26BC	0x780500  	MOV	W0, W10
0x26BE	0x071865  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5089 :: 		Glcd_Write_Text(MonthText,54,row6,Black);
0x26C0	0x470069  	ADD	W14, #9, W0
0x26C2	0xB3C01D  	MOV.B	#1, W13
0x26C4	0xB3C05C  	MOV.B	#5, W12
0x26C6	0xB3C36B  	MOV.B	#54, W11
0x26C8	0x780500  	MOV	W0, W10
0x26CA	0x07185F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5090 :: 		Glcd_Write_Text(YearText,72,row6,Black);
0x26CC	0x47006C  	ADD	W14, #12, W0
0x26CE	0xB3C01D  	MOV.B	#1, W13
0x26D0	0xB3C05C  	MOV.B	#5, W12
0x26D2	0xB3C48B  	MOV.B	#72, W11
0x26D4	0x780500  	MOV	W0, W10
0x26D6	0x071859  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5094 :: 		While (MenuExit =0) do
L__Clock_Settings1841:
0x26D8	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x26DA	0x784010  	MOV.B	[W0], W0
0x26DC	0xE10460  	CP.B	W0, #0
0x26DE	0x3A03A2  	BRA NZ	L__Clock_Settings1842
L__Clock_Settings5298:
;GRR3000LManagementPanel.mpas,5098 :: 		MenuSayac := MenuButtonRead(6, 0);  // menu için butonlarý oku 6 satýr menü var
0x26E0	0xEF2016  	CLR	W11
0x26E2	0xB3C06A  	MOV.B	#6, W10
0x26E4	0x07F5D5  	RCALL	_MenuButtonRead
0x26E6	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x26E8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5099 :: 		asm ClrWDT; end;
0x26EA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5102 :: 		1: begin  // saat ayarý
0x26EC	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x26EE	0x784010  	MOV.B	[W0], W0
0x26F0	0xE10461  	CP.B	W0, #1
0x26F2	0x3A0079  	BRA NZ	L__Clock_Settings1848
L__Clock_Settings5299:
;GRR3000LManagementPanel.mpas,5110 :: 		Glcd_Write_Char('*', 54, Row5, Black); // saat
0x26F4	0xB3C01D  	MOV.B	#1, W13
0x26F6	0xB3C04C  	MOV.B	#4, W12
0x26F8	0xB3C36B  	MOV.B	#54, W11
0x26FA	0xB3C2AA  	MOV.B	#42, W10
0x26FC	0x07FB3B  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5111 :: 		Glcd_Write_Char(' ', 72, Row5, Black); // dakika
0x26FE	0xB3C01D  	MOV.B	#1, W13
0x2700	0xB3C04C  	MOV.B	#4, W12
0x2702	0xB3C48B  	MOV.B	#72, W11
0x2704	0xB3C20A  	MOV.B	#32, W10
0x2706	0x07FB36  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5112 :: 		Glcd_Write_Text(' ', 0,  row8, Black);
0x2708	0x4700F1  	ADD	W14, #17, W1
0x270A	0xB3C200  	MOV.B	#32, W0
0x270C	0x785880  	MOV.B	W0, [W1++]
0x270E	0xEF2000  	CLR	W0
0x2710	0x785880  	MOV.B	W0, [W1++]
0x2712	0x470071  	ADD	W14, #17, W0
0x2714	0xB3C01D  	MOV.B	#1, W13
0x2716	0xB3C07C  	MOV.B	#7, W12
0x2718	0xEF2016  	CLR	W11
0x271A	0x780500  	MOV	W0, W10
0x271C	0x071836  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5114 :: 		if (Ok_Button =0) then
0x271E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2720	0x370061  	BRA	L__Clock_Settings1850
;GRR3000LManagementPanel.mpas,5116 :: 		while (Ok_Button =0) do
L__Clock_Settings1853:
0x2722	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2724	0x370002  	BRA	L__Clock_Settings1854
;GRR3000LManagementPanel.mpas,5118 :: 		asm ClrWDT; end;
0x2726	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5119 :: 		end;
0x2728	0x37FFFC  	BRA	L__Clock_Settings1853
L__Clock_Settings1854:
;GRR3000LManagementPanel.mpas,5121 :: 		Chng[1] := 1;
0x272A	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x272C	0xB3C010  	MOV.B	#1, W0
0x272E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5123 :: 		While (Chng[1] =1) do
L__Clock_Settings1858:
0x2730	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x2732	0x784010  	MOV.B	[W0], W0
0x2734	0xE10461  	CP.B	W0, #1
0x2736	0x3A0056  	BRA NZ	L__Clock_Settings1859
L__Clock_Settings5300:
;GRR3000LManagementPanel.mpas,5126 :: 		asm ClrWDT; end;
0x2738	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5128 :: 		if (Up_Button =0) then
0x273A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x273C	0x370014  	BRA	L__Clock_Settings1863
;GRR3000LManagementPanel.mpas,5130 :: 		ButonStop       := 0;
0x273E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2740	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5131 :: 		BtCounterNormal := 0;
0x2742	0xEF2000  	CLR	W0
0x2744	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5132 :: 		while (ButonStop = 0) do
L__Clock_Settings1866:
0x2746	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2748	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x274A	0x370002  	BRA	L__Clock_Settings1867
;GRR3000LManagementPanel.mpas,5134 :: 		asm ClrWDT; end;
0x274C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5135 :: 		end;
0x274E	0x37FFFB  	BRA	L__Clock_Settings1866
L__Clock_Settings1867:
;GRR3000LManagementPanel.mpas,5136 :: 		Inc(Hours);
0x2750	0xB3C011  	MOV.B	#1, W1
0x2752	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2754	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5137 :: 		if (Hours > 23) then
0x2756	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2758	0x784010  	MOV.B	[W0], W0
0x275A	0xE10477  	CP.B	W0, #23
0x275C	0x340003  	BRA LE	L__Clock_Settings1871
L__Clock_Settings5301:
;GRR3000LManagementPanel.mpas,5138 :: 		Hours := 0;
0x275E	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x2760	0xEF2000  	CLR	W0
0x2762	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1871:
;GRR3000LManagementPanel.mpas,5139 :: 		end else
0x2764	0x370015  	BRA	L__Clock_Settings1864
L__Clock_Settings1863:
;GRR3000LManagementPanel.mpas,5140 :: 		if (Down_Button =0) then
0x2766	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x2768	0x370013  	BRA	L__Clock_Settings1874
;GRR3000LManagementPanel.mpas,5142 :: 		ButonStop       := 0;
0x276A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x276C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5143 :: 		BtCounterNormal := 0;
0x276E	0xEF2000  	CLR	W0
0x2770	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5144 :: 		while (ButonStop = 0) do
L__Clock_Settings1877:
0x2772	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2774	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2776	0x370002  	BRA	L__Clock_Settings1878
;GRR3000LManagementPanel.mpas,5146 :: 		asm ClrWDT; end;
0x2778	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5147 :: 		end;
0x277A	0x37FFFB  	BRA	L__Clock_Settings1877
L__Clock_Settings1878:
;GRR3000LManagementPanel.mpas,5148 :: 		Dec(Hours);
0x277C	0xB3C011  	MOV.B	#1, W1
0x277E	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2780	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5149 :: 		if (Hours < 0) then
0x2782	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2784	0x784010  	MOV.B	[W0], W0
0x2786	0xE10460  	CP.B	W0, #0
0x2788	0x3D0003  	BRA GE	L__Clock_Settings1882
L__Clock_Settings5302:
;GRR3000LManagementPanel.mpas,5150 :: 		Hours := 23;
0x278A	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x278C	0xB3C170  	MOV.B	#23, W0
0x278E	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1882:
;GRR3000LManagementPanel.mpas,5151 :: 		end;
L__Clock_Settings1874:
L__Clock_Settings1864:
;GRR3000LManagementPanel.mpas,5153 :: 		HourText[1]  := (Hours div 10)+48;
0x2790	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2792	0xFB0010  	SE	[W0], W0
0x2794	0x2000A2  	MOV	#10, W2
0x2796	0x090011  	REPEAT	#17
0x2798	0xD80002  	DIV.S	W0, W2
0x279A	0x780100  	MOV	W0, W2
0x279C	0xB3C301  	MOV.B	#48, W1
0x279E	0x470060  	ADD	W14, #0, W0
0x27A0	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5154 :: 		HourText[2]  := (Hours mod 10)+48;
0x27A2	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x27A4	0xFB0010  	SE	[W0], W0
0x27A6	0x2000A2  	MOV	#10, W2
0x27A8	0x090011  	REPEAT	#17
0x27AA	0xD80002  	DIV.S	W0, W2
0x27AC	0x780101  	MOV	W1, W2
0x27AE	0xB3C301  	MOV.B	#48, W1
0x27B0	0x470061  	ADD	W14, #1, W0
0x27B2	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5155 :: 		Glcd_Write_Text(HourText,51,row4,White);
0x27B4	0x470060  	ADD	W14, #0, W0
0x27B6	0xEF201A  	CLR	W13
0x27B8	0xB3C03C  	MOV.B	#3, W12
0x27BA	0xB3C33B  	MOV.B	#51, W11
0x27BC	0x780500  	MOV	W0, W10
0x27BE	0x0717E5  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5157 :: 		if (Ok_Button =0) then
0x27C0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x27C2	0x37000F  	BRA	L__Clock_Settings1885
;GRR3000LManagementPanel.mpas,5159 :: 		while (Ok_Button =0) do
L__Clock_Settings1888:
0x27C4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x27C6	0x370002  	BRA	L__Clock_Settings1889
;GRR3000LManagementPanel.mpas,5161 :: 		asm ClrWDT; end;
0x27C8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5162 :: 		end;
0x27CA	0x37FFFC  	BRA	L__Clock_Settings1888
L__Clock_Settings1889:
;GRR3000LManagementPanel.mpas,5164 :: 		Glcd_Write_Text(HourText,51,row4,Black);
0x27CC	0x470060  	ADD	W14, #0, W0
0x27CE	0xB3C01D  	MOV.B	#1, W13
0x27D0	0xB3C03C  	MOV.B	#3, W12
0x27D2	0xB3C33B  	MOV.B	#51, W11
0x27D4	0x780500  	MOV	W0, W10
0x27D6	0x0717D9  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5166 :: 		Chng[1] := 0;
0x27D8	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x27DA	0xEF2000  	CLR	W0
0x27DC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5167 :: 		SaveBit := 1;
0x27DE	0x470074  	ADD	W14, #20, W0
0x27E0	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,5169 :: 		end;
L__Clock_Settings1885:
;GRR3000LManagementPanel.mpas,5174 :: 		end; // chng[1] while end
0x27E2	0x37FFA6  	BRA	L__Clock_Settings1858
L__Clock_Settings1859:
;GRR3000LManagementPanel.mpas,5176 :: 		end;
L__Clock_Settings1850:
;GRR3000LManagementPanel.mpas,5178 :: 		end;
0x27E4	0x37031E  	BRA	L__Clock_Settings1845
L__Clock_Settings1848:
;GRR3000LManagementPanel.mpas,5180 :: 		2: begin  // dakika ayarý
0x27E6	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x27E8	0x784010  	MOV.B	[W0], W0
0x27EA	0xE10462  	CP.B	W0, #2
0x27EC	0x3A0074  	BRA NZ	L__Clock_Settings1894
L__Clock_Settings5303:
;GRR3000LManagementPanel.mpas,5187 :: 		Glcd_Write_Char(' ', 54, Row5, Black); // saat (*) yukarý ok anlamýna gelir
0x27EE	0xB3C01D  	MOV.B	#1, W13
0x27F0	0xB3C04C  	MOV.B	#4, W12
0x27F2	0xB3C36B  	MOV.B	#54, W11
0x27F4	0xB3C20A  	MOV.B	#32, W10
0x27F6	0x07FABE  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5188 :: 		Glcd_Write_Char('*', 72, Row5, Black); // dakika
0x27F8	0xB3C01D  	MOV.B	#1, W13
0x27FA	0xB3C04C  	MOV.B	#4, W12
0x27FC	0xB3C48B  	MOV.B	#72, W11
0x27FE	0xB3C2AA  	MOV.B	#42, W10
0x2800	0x07FAB9  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5189 :: 		Glcd_Write_Char(' ', 39, Row7, Black); // gün
0x2802	0xB3C01D  	MOV.B	#1, W13
0x2804	0xB3C06C  	MOV.B	#6, W12
0x2806	0xB3C27B  	MOV.B	#39, W11
0x2808	0xB3C20A  	MOV.B	#32, W10
0x280A	0x07FAB4  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5192 :: 		if (Ok_Button =0) then
0x280C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x280E	0x370062  	BRA	L__Clock_Settings1896
;GRR3000LManagementPanel.mpas,5194 :: 		while (Ok_Button =0) do
L__Clock_Settings1899:
0x2810	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2812	0x370002  	BRA	L__Clock_Settings1900
;GRR3000LManagementPanel.mpas,5196 :: 		asm ClrWDT; end;
0x2814	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5197 :: 		end;
0x2816	0x37FFFC  	BRA	L__Clock_Settings1899
L__Clock_Settings1900:
;GRR3000LManagementPanel.mpas,5199 :: 		Chng[2] := 1;
0x2818	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x281A	0xB3C010  	MOV.B	#1, W0
0x281C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5202 :: 		While (Chng[2] =1) do
L__Clock_Settings1904:
0x281E	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x2820	0x784010  	MOV.B	[W0], W0
0x2822	0xE10461  	CP.B	W0, #1
0x2824	0x3A0057  	BRA NZ	L__Clock_Settings1905
L__Clock_Settings5304:
;GRR3000LManagementPanel.mpas,5205 :: 		asm ClrWDT; end;
0x2826	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5207 :: 		if (Up_Button =0) then
0x2828	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x282A	0x370015  	BRA	L__Clock_Settings1909
;GRR3000LManagementPanel.mpas,5209 :: 		ButonStop       := 0;
0x282C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x282E	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5210 :: 		BtCounterNormal := 0;
0x2830	0xEF2000  	CLR	W0
0x2832	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5211 :: 		while (ButonStop = 0) do
L__Clock_Settings1912:
0x2834	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2836	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2838	0x370002  	BRA	L__Clock_Settings1913
;GRR3000LManagementPanel.mpas,5213 :: 		asm ClrWDT; end;
0x283A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5214 :: 		end;
0x283C	0x37FFFB  	BRA	L__Clock_Settings1912
L__Clock_Settings1913:
;GRR3000LManagementPanel.mpas,5215 :: 		Inc(Minutes);
0x283E	0xB3C011  	MOV.B	#1, W1
0x2840	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2842	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5216 :: 		if (Minutes > 59) then
0x2844	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2846	0x784090  	MOV.B	[W0], W1
0x2848	0xB3C3B0  	MOV.B	#59, W0
0x284A	0xE10C00  	CP.B	W1, W0
0x284C	0x340003  	BRA LE	L__Clock_Settings1917
L__Clock_Settings5305:
;GRR3000LManagementPanel.mpas,5217 :: 		Minutes := 0;
0x284E	0x213D01  	MOV	#lo_addr(_Minutes), W1
0x2850	0xEF2000  	CLR	W0
0x2852	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1917:
;GRR3000LManagementPanel.mpas,5218 :: 		end else
0x2854	0x370015  	BRA	L__Clock_Settings1910
L__Clock_Settings1909:
;GRR3000LManagementPanel.mpas,5219 :: 		if (Down_Button =0) then
0x2856	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x2858	0x370013  	BRA	L__Clock_Settings1920
;GRR3000LManagementPanel.mpas,5221 :: 		ButonStop       := 0;
0x285A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x285C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5222 :: 		BtCounterNormal := 0;
0x285E	0xEF2000  	CLR	W0
0x2860	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5223 :: 		while (ButonStop = 0) do
L__Clock_Settings1923:
0x2862	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2864	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2866	0x370002  	BRA	L__Clock_Settings1924
;GRR3000LManagementPanel.mpas,5225 :: 		asm ClrWDT; end;
0x2868	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5226 :: 		end;
0x286A	0x37FFFB  	BRA	L__Clock_Settings1923
L__Clock_Settings1924:
;GRR3000LManagementPanel.mpas,5227 :: 		Dec(Minutes);
0x286C	0xB3C011  	MOV.B	#1, W1
0x286E	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2870	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5228 :: 		if (Minutes < 0) then
0x2872	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2874	0x784010  	MOV.B	[W0], W0
0x2876	0xE10460  	CP.B	W0, #0
0x2878	0x3D0003  	BRA GE	L__Clock_Settings1928
L__Clock_Settings5306:
;GRR3000LManagementPanel.mpas,5229 :: 		Minutes := 59;
0x287A	0x213D01  	MOV	#lo_addr(_Minutes), W1
0x287C	0xB3C3B0  	MOV.B	#59, W0
0x287E	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1928:
;GRR3000LManagementPanel.mpas,5230 :: 		end;
L__Clock_Settings1920:
L__Clock_Settings1910:
;GRR3000LManagementPanel.mpas,5232 :: 		MinText[1]  := (Minutes div 10)+48;
0x2880	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2882	0xFB0010  	SE	[W0], W0
0x2884	0x2000A2  	MOV	#10, W2
0x2886	0x090011  	REPEAT	#17
0x2888	0xD80002  	DIV.S	W0, W2
0x288A	0x780100  	MOV	W0, W2
0x288C	0xB3C301  	MOV.B	#48, W1
0x288E	0x470063  	ADD	W14, #3, W0
0x2890	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5233 :: 		MinText[2]  := (Minutes mod 10)+48;
0x2892	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2894	0xFB0010  	SE	[W0], W0
0x2896	0x2000A2  	MOV	#10, W2
0x2898	0x090011  	REPEAT	#17
0x289A	0xD80002  	DIV.S	W0, W2
0x289C	0x780101  	MOV	W1, W2
0x289E	0xB3C301  	MOV.B	#48, W1
0x28A0	0x470064  	ADD	W14, #4, W0
0x28A2	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5234 :: 		Glcd_Write_Text(MinText,69,row4,White);
0x28A4	0x470063  	ADD	W14, #3, W0
0x28A6	0xEF201A  	CLR	W13
0x28A8	0xB3C03C  	MOV.B	#3, W12
0x28AA	0xB3C45B  	MOV.B	#69, W11
0x28AC	0x780500  	MOV	W0, W10
0x28AE	0x07176D  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5236 :: 		if (Ok_Button =0) then
0x28B0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x28B2	0x37000F  	BRA	L__Clock_Settings1931
;GRR3000LManagementPanel.mpas,5238 :: 		while (Ok_Button =0) do
L__Clock_Settings1934:
0x28B4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x28B6	0x370002  	BRA	L__Clock_Settings1935
;GRR3000LManagementPanel.mpas,5240 :: 		asm ClrWDT; end;
0x28B8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5241 :: 		end;
0x28BA	0x37FFFC  	BRA	L__Clock_Settings1934
L__Clock_Settings1935:
;GRR3000LManagementPanel.mpas,5244 :: 		Glcd_Write_Text(minText,69,row4,Black);
0x28BC	0x470063  	ADD	W14, #3, W0
0x28BE	0xB3C01D  	MOV.B	#1, W13
0x28C0	0xB3C03C  	MOV.B	#3, W12
0x28C2	0xB3C45B  	MOV.B	#69, W11
0x28C4	0x780500  	MOV	W0, W10
0x28C6	0x071761  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5246 :: 		Chng[2] := 0;
0x28C8	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x28CA	0xEF2000  	CLR	W0
0x28CC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5247 :: 		SaveBit := 1;
0x28CE	0x470074  	ADD	W14, #20, W0
0x28D0	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,5250 :: 		end;
L__Clock_Settings1931:
;GRR3000LManagementPanel.mpas,5255 :: 		end; // chng[2] while end
0x28D2	0x37FFA5  	BRA	L__Clock_Settings1904
L__Clock_Settings1905:
;GRR3000LManagementPanel.mpas,5257 :: 		end;
L__Clock_Settings1896:
;GRR3000LManagementPanel.mpas,5259 :: 		end;
0x28D4	0x3702A6  	BRA	L__Clock_Settings1845
L__Clock_Settings1894:
;GRR3000LManagementPanel.mpas,5261 :: 		3: begin  // gün ayarý
0x28D6	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x28D8	0x784010  	MOV.B	[W0], W0
0x28DA	0xE10463  	CP.B	W0, #3
0x28DC	0x3A015B  	BRA NZ	L__Clock_Settings1940
L__Clock_Settings5307:
;GRR3000LManagementPanel.mpas,5267 :: 		Glcd_Write_Char(' ', 72, Row5, Black); // dakika
0x28DE	0xB3C01D  	MOV.B	#1, W13
0x28E0	0xB3C04C  	MOV.B	#4, W12
0x28E2	0xB3C48B  	MOV.B	#72, W11
0x28E4	0xB3C20A  	MOV.B	#32, W10
0x28E6	0x07FA46  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5268 :: 		Glcd_Write_Char('*', 39, Row7, Black); // gün
0x28E8	0xB3C01D  	MOV.B	#1, W13
0x28EA	0xB3C06C  	MOV.B	#6, W12
0x28EC	0xB3C27B  	MOV.B	#39, W11
0x28EE	0xB3C2AA  	MOV.B	#42, W10
0x28F0	0x07FA41  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5269 :: 		Glcd_Write_Char(' ', 57, Row7, Black); // ay
0x28F2	0xB3C01D  	MOV.B	#1, W13
0x28F4	0xB3C06C  	MOV.B	#6, W12
0x28F6	0xB3C39B  	MOV.B	#57, W11
0x28F8	0xB3C20A  	MOV.B	#32, W10
0x28FA	0x07FA3C  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5273 :: 		if (Ok_Button =0) then
0x28FC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x28FE	0x370149  	BRA	L__Clock_Settings1942
;GRR3000LManagementPanel.mpas,5275 :: 		while (Ok_Button =0) do
L__Clock_Settings1945:
0x2900	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2902	0x370002  	BRA	L__Clock_Settings1946
;GRR3000LManagementPanel.mpas,5277 :: 		asm ClrWDT; end;
0x2904	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5278 :: 		end;
0x2906	0x37FFFC  	BRA	L__Clock_Settings1945
L__Clock_Settings1946:
;GRR3000LManagementPanel.mpas,5280 :: 		Chng[3] := 1;
0x2908	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x290A	0xB3C010  	MOV.B	#1, W0
0x290C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5283 :: 		While (Chng[3] =1) do
L__Clock_Settings1950:
0x290E	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0x2910	0x784010  	MOV.B	[W0], W0
0x2912	0xE10461  	CP.B	W0, #1
0x2914	0x3A013E  	BRA NZ	L__Clock_Settings1951
L__Clock_Settings5308:
;GRR3000LManagementPanel.mpas,5286 :: 		asm ClrWDT; end;
0x2916	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5288 :: 		if (Up_Button =0) then
0x2918	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x291A	0x370088  	BRA	L__Clock_Settings1955
;GRR3000LManagementPanel.mpas,5290 :: 		ButonStop       := 0;
0x291C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x291E	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5291 :: 		BtCounterNormal := 0;
0x2920	0xEF2000  	CLR	W0
0x2922	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5292 :: 		while (ButonStop = 0) do
L__Clock_Settings1958:
0x2924	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2926	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2928	0x370002  	BRA	L__Clock_Settings1959
;GRR3000LManagementPanel.mpas,5294 :: 		asm ClrWDT; end;
0x292A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5295 :: 		end;
0x292C	0x37FFFB  	BRA	L__Clock_Settings1958
L__Clock_Settings1959:
;GRR3000LManagementPanel.mpas,5296 :: 		Inc(day);
0x292E	0xB3C011  	MOV.B	#1, W1
0x2930	0x213C90  	MOV	#lo_addr(_Day), W0
0x2932	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5297 :: 		if ((Month = 4)or(Month = 6)or(Month= 9)or(Month = 11)) then
0x2934	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2936	0x784010  	MOV.B	[W0], W0
0x2938	0xE10464  	CP.B	W0, #4
0x293A	0xEF2002  	CLR	W1
0x293C	0x3A0001  	BRA NZ	L__Clock_Settings5309
0x293E	0xEEA002  	COM	W1
L__Clock_Settings5309:
0x2940	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2942	0x784010  	MOV.B	[W0], W0
0x2944	0xE10466  	CP.B	W0, #6
0x2946	0xEF2000  	CLR	W0
0x2948	0x3A0001  	BRA NZ	L__Clock_Settings5310
0x294A	0xEEA000  	COM	W0
L__Clock_Settings5310:
0x294C	0x708080  	IOR	W1, W0, W1
0x294E	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2950	0x784010  	MOV.B	[W0], W0
0x2952	0xE10469  	CP.B	W0, #9
0x2954	0xEF2000  	CLR	W0
0x2956	0x3A0001  	BRA NZ	L__Clock_Settings5311
0x2958	0xEEA000  	COM	W0
L__Clock_Settings5311:
0x295A	0x708080  	IOR	W1, W0, W1
0x295C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x295E	0x784010  	MOV.B	[W0], W0
0x2960	0xE1046B  	CP.B	W0, #11
0x2962	0xEF2000  	CLR	W0
0x2964	0x3A0001  	BRA NZ	L__Clock_Settings5312
0x2966	0xEEA000  	COM	W0
L__Clock_Settings5312:
0x2968	0x708000  	IOR	W1, W0, W0
0x296A	0x320008  	BRA Z	L__Clock_Settings1963
L__Clock_Settings5313:
;GRR3000LManagementPanel.mpas,5299 :: 		if (Day > 30) then Day := 1;
0x296C	0x213C90  	MOV	#lo_addr(_Day), W0
0x296E	0x784010  	MOV.B	[W0], W0
0x2970	0xE1047E  	CP.B	W0, #30
0x2972	0x340003  	BRA LE	L__Clock_Settings1966
L__Clock_Settings5314:
0x2974	0x213C91  	MOV	#lo_addr(_Day), W1
0x2976	0xB3C010  	MOV.B	#1, W0
0x2978	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1966:
;GRR3000LManagementPanel.mpas,5300 :: 		end else
0x297A	0x370057  	BRA	L__Clock_Settings1964
L__Clock_Settings1963:
;GRR3000LManagementPanel.mpas,5301 :: 		if (((Year mod 4) = 0)and(Month = 2)) then // 4 yýlda bir þubat ise 29' a kadar ayarlat
0x297C	0x213CB0  	MOV	#lo_addr(_Year), W0
0x297E	0xFB0010  	SE	[W0], W0
0x2980	0x200042  	MOV	#4, W2
0x2982	0x090011  	REPEAT	#17
0x2984	0xD80002  	DIV.S	W0, W2
0x2986	0x780001  	MOV	W1, W0
0x2988	0xE10060  	CP	W0, #0
0x298A	0xEF2002  	CLR	W1
0x298C	0x3A0001  	BRA NZ	L__Clock_Settings5315
0x298E	0xEEA002  	COM	W1
L__Clock_Settings5315:
0x2990	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2992	0x784010  	MOV.B	[W0], W0
0x2994	0xE10462  	CP.B	W0, #2
0x2996	0xEF2000  	CLR	W0
0x2998	0x3A0001  	BRA NZ	L__Clock_Settings5316
0x299A	0xEEA000  	COM	W0
L__Clock_Settings5316:
0x299C	0x608000  	AND	W1, W0, W0
0x299E	0x320008  	BRA Z	L__Clock_Settings1969
L__Clock_Settings5317:
;GRR3000LManagementPanel.mpas,5303 :: 		if (Day > 29) then Day := 1;
0x29A0	0x213C90  	MOV	#lo_addr(_Day), W0
0x29A2	0x784010  	MOV.B	[W0], W0
0x29A4	0xE1047D  	CP.B	W0, #29
0x29A6	0x340003  	BRA LE	L__Clock_Settings1972
L__Clock_Settings5318:
0x29A8	0x213C91  	MOV	#lo_addr(_Day), W1
0x29AA	0xB3C010  	MOV.B	#1, W0
0x29AC	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1972:
;GRR3000LManagementPanel.mpas,5304 :: 		end else
0x29AE	0x37003D  	BRA	L__Clock_Settings1970
L__Clock_Settings1969:
;GRR3000LManagementPanel.mpas,5305 :: 		if (((Year mod 4) <> 0)and(Month = 2)) then // þubat ise 28' a kadar ayarlat
0x29B0	0x213CB0  	MOV	#lo_addr(_Year), W0
0x29B2	0xFB0010  	SE	[W0], W0
0x29B4	0x200042  	MOV	#4, W2
0x29B6	0x090011  	REPEAT	#17
0x29B8	0xD80002  	DIV.S	W0, W2
0x29BA	0x780001  	MOV	W1, W0
0x29BC	0xE10060  	CP	W0, #0
0x29BE	0xEF2002  	CLR	W1
0x29C0	0x320001  	BRA Z	L__Clock_Settings5319
0x29C2	0xEEA002  	COM	W1
L__Clock_Settings5319:
0x29C4	0x213CA0  	MOV	#lo_addr(_Month), W0
0x29C6	0x784010  	MOV.B	[W0], W0
0x29C8	0xE10462  	CP.B	W0, #2
0x29CA	0xEF2000  	CLR	W0
0x29CC	0x3A0001  	BRA NZ	L__Clock_Settings5320
0x29CE	0xEEA000  	COM	W0
L__Clock_Settings5320:
0x29D0	0x608000  	AND	W1, W0, W0
0x29D2	0x320008  	BRA Z	L__Clock_Settings1975
L__Clock_Settings5321:
;GRR3000LManagementPanel.mpas,5307 :: 		if (Day > 28) then Day := 1;
0x29D4	0x213C90  	MOV	#lo_addr(_Day), W0
0x29D6	0x784010  	MOV.B	[W0], W0
0x29D8	0xE1047C  	CP.B	W0, #28
0x29DA	0x340003  	BRA LE	L__Clock_Settings1978
L__Clock_Settings5322:
0x29DC	0x213C91  	MOV	#lo_addr(_Day), W1
0x29DE	0xB3C010  	MOV.B	#1, W0
0x29E0	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1978:
;GRR3000LManagementPanel.mpas,5308 :: 		end else
0x29E2	0x370023  	BRA	L__Clock_Settings1976
L__Clock_Settings1975:
;GRR3000LManagementPanel.mpas,5309 :: 		if ((Month <> 4)or(Month <> 6)or(Month<> 9)or(Month <> 11)) then
0x29E4	0x213CA0  	MOV	#lo_addr(_Month), W0
0x29E6	0x784010  	MOV.B	[W0], W0
0x29E8	0xE10464  	CP.B	W0, #4
0x29EA	0xEF2002  	CLR	W1
0x29EC	0x320001  	BRA Z	L__Clock_Settings5323
0x29EE	0xEEA002  	COM	W1
L__Clock_Settings5323:
0x29F0	0x213CA0  	MOV	#lo_addr(_Month), W0
0x29F2	0x784010  	MOV.B	[W0], W0
0x29F4	0xE10466  	CP.B	W0, #6
0x29F6	0xEF2000  	CLR	W0
0x29F8	0x320001  	BRA Z	L__Clock_Settings5324
0x29FA	0xEEA000  	COM	W0
L__Clock_Settings5324:
0x29FC	0x708080  	IOR	W1, W0, W1
0x29FE	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A00	0x784010  	MOV.B	[W0], W0
0x2A02	0xE10469  	CP.B	W0, #9
0x2A04	0xEF2000  	CLR	W0
0x2A06	0x320001  	BRA Z	L__Clock_Settings5325
0x2A08	0xEEA000  	COM	W0
L__Clock_Settings5325:
0x2A0A	0x708080  	IOR	W1, W0, W1
0x2A0C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A0E	0x784010  	MOV.B	[W0], W0
0x2A10	0xE1046B  	CP.B	W0, #11
0x2A12	0xEF2000  	CLR	W0
0x2A14	0x320001  	BRA Z	L__Clock_Settings5326
0x2A16	0xEEA000  	COM	W0
L__Clock_Settings5326:
0x2A18	0x708000  	IOR	W1, W0, W0
0x2A1A	0x320007  	BRA Z	L__Clock_Settings1981
L__Clock_Settings5327:
;GRR3000LManagementPanel.mpas,5311 :: 		if (day > 31) then
0x2A1C	0x213C90  	MOV	#lo_addr(_Day), W0
0x2A1E	0x784010  	MOV.B	[W0], W0
0x2A20	0xE1047F  	CP.B	W0, #31
0x2A22	0x340003  	BRA LE	L__Clock_Settings1984
L__Clock_Settings5328:
;GRR3000LManagementPanel.mpas,5312 :: 		day := 1;
0x2A24	0x213C91  	MOV	#lo_addr(_Day), W1
0x2A26	0xB3C010  	MOV.B	#1, W0
0x2A28	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1984:
;GRR3000LManagementPanel.mpas,5313 :: 		end;
L__Clock_Settings1981:
L__Clock_Settings1976:
L__Clock_Settings1970:
L__Clock_Settings1964:
;GRR3000LManagementPanel.mpas,5315 :: 		end else
0x2A2A	0x370089  	BRA	L__Clock_Settings1956
L__Clock_Settings1955:
;GRR3000LManagementPanel.mpas,5316 :: 		if (Down_Button =0) then
0x2A2C	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x2A2E	0x370087  	BRA	L__Clock_Settings1987
;GRR3000LManagementPanel.mpas,5318 :: 		ButonStop       := 0;
0x2A30	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2A32	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5319 :: 		BtCounterNormal := 0;
0x2A34	0xEF2000  	CLR	W0
0x2A36	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5320 :: 		while (ButonStop = 0) do
L__Clock_Settings1990:
0x2A38	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2A3A	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2A3C	0x370002  	BRA	L__Clock_Settings1991
;GRR3000LManagementPanel.mpas,5322 :: 		asm ClrWDT; end;
0x2A3E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5323 :: 		end;
0x2A40	0x37FFFB  	BRA	L__Clock_Settings1990
L__Clock_Settings1991:
;GRR3000LManagementPanel.mpas,5324 :: 		Dec(day);
0x2A42	0xB3C011  	MOV.B	#1, W1
0x2A44	0x213C90  	MOV	#lo_addr(_Day), W0
0x2A46	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5325 :: 		if ((Month = 4)or(Month = 6)or(Month= 9)or(Month = 11)) then
0x2A48	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A4A	0x784010  	MOV.B	[W0], W0
0x2A4C	0xE10464  	CP.B	W0, #4
0x2A4E	0xEF2002  	CLR	W1
0x2A50	0x3A0001  	BRA NZ	L__Clock_Settings5329
0x2A52	0xEEA002  	COM	W1
L__Clock_Settings5329:
0x2A54	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A56	0x784010  	MOV.B	[W0], W0
0x2A58	0xE10466  	CP.B	W0, #6
0x2A5A	0xEF2000  	CLR	W0
0x2A5C	0x3A0001  	BRA NZ	L__Clock_Settings5330
0x2A5E	0xEEA000  	COM	W0
L__Clock_Settings5330:
0x2A60	0x708080  	IOR	W1, W0, W1
0x2A62	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A64	0x784010  	MOV.B	[W0], W0
0x2A66	0xE10469  	CP.B	W0, #9
0x2A68	0xEF2000  	CLR	W0
0x2A6A	0x3A0001  	BRA NZ	L__Clock_Settings5331
0x2A6C	0xEEA000  	COM	W0
L__Clock_Settings5331:
0x2A6E	0x708080  	IOR	W1, W0, W1
0x2A70	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2A72	0x784010  	MOV.B	[W0], W0
0x2A74	0xE1046B  	CP.B	W0, #11
0x2A76	0xEF2000  	CLR	W0
0x2A78	0x3A0001  	BRA NZ	L__Clock_Settings5332
0x2A7A	0xEEA000  	COM	W0
L__Clock_Settings5332:
0x2A7C	0x708000  	IOR	W1, W0, W0
0x2A7E	0x320008  	BRA Z	L__Clock_Settings1995
L__Clock_Settings5333:
;GRR3000LManagementPanel.mpas,5327 :: 		if (day < 1) then day := 30;
0x2A80	0x213C90  	MOV	#lo_addr(_Day), W0
0x2A82	0x784010  	MOV.B	[W0], W0
0x2A84	0xE10461  	CP.B	W0, #1
0x2A86	0x3D0003  	BRA GE	L__Clock_Settings1998
L__Clock_Settings5334:
0x2A88	0x213C91  	MOV	#lo_addr(_Day), W1
0x2A8A	0xB3C1E0  	MOV.B	#30, W0
0x2A8C	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings1998:
;GRR3000LManagementPanel.mpas,5328 :: 		end else
0x2A8E	0x370057  	BRA	L__Clock_Settings1996
L__Clock_Settings1995:
;GRR3000LManagementPanel.mpas,5329 :: 		if (((Year mod 4) = 0)and(Month = 2)) then // 4 yýlda bir þubat ise 29' a kadar ayarlat
0x2A90	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2A92	0xFB0010  	SE	[W0], W0
0x2A94	0x200042  	MOV	#4, W2
0x2A96	0x090011  	REPEAT	#17
0x2A98	0xD80002  	DIV.S	W0, W2
0x2A9A	0x780001  	MOV	W1, W0
0x2A9C	0xE10060  	CP	W0, #0
0x2A9E	0xEF2002  	CLR	W1
0x2AA0	0x3A0001  	BRA NZ	L__Clock_Settings5335
0x2AA2	0xEEA002  	COM	W1
L__Clock_Settings5335:
0x2AA4	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2AA6	0x784010  	MOV.B	[W0], W0
0x2AA8	0xE10462  	CP.B	W0, #2
0x2AAA	0xEF2000  	CLR	W0
0x2AAC	0x3A0001  	BRA NZ	L__Clock_Settings5336
0x2AAE	0xEEA000  	COM	W0
L__Clock_Settings5336:
0x2AB0	0x608000  	AND	W1, W0, W0
0x2AB2	0x320008  	BRA Z	L__Clock_Settings2001
L__Clock_Settings5337:
;GRR3000LManagementPanel.mpas,5331 :: 		if (day < 1) then day := 29;
0x2AB4	0x213C90  	MOV	#lo_addr(_Day), W0
0x2AB6	0x784010  	MOV.B	[W0], W0
0x2AB8	0xE10461  	CP.B	W0, #1
0x2ABA	0x3D0003  	BRA GE	L__Clock_Settings2004
L__Clock_Settings5338:
0x2ABC	0x213C91  	MOV	#lo_addr(_Day), W1
0x2ABE	0xB3C1D0  	MOV.B	#29, W0
0x2AC0	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2004:
;GRR3000LManagementPanel.mpas,5332 :: 		end else
0x2AC2	0x37003D  	BRA	L__Clock_Settings2002
L__Clock_Settings2001:
;GRR3000LManagementPanel.mpas,5333 :: 		if (((Year mod 4) <> 0)and(Month = 2)) then // þubat ise 28' a kadar ayarlat
0x2AC4	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2AC6	0xFB0010  	SE	[W0], W0
0x2AC8	0x200042  	MOV	#4, W2
0x2ACA	0x090011  	REPEAT	#17
0x2ACC	0xD80002  	DIV.S	W0, W2
0x2ACE	0x780001  	MOV	W1, W0
0x2AD0	0xE10060  	CP	W0, #0
0x2AD2	0xEF2002  	CLR	W1
0x2AD4	0x320001  	BRA Z	L__Clock_Settings5339
0x2AD6	0xEEA002  	COM	W1
L__Clock_Settings5339:
0x2AD8	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2ADA	0x784010  	MOV.B	[W0], W0
0x2ADC	0xE10462  	CP.B	W0, #2
0x2ADE	0xEF2000  	CLR	W0
0x2AE0	0x3A0001  	BRA NZ	L__Clock_Settings5340
0x2AE2	0xEEA000  	COM	W0
L__Clock_Settings5340:
0x2AE4	0x608000  	AND	W1, W0, W0
0x2AE6	0x320008  	BRA Z	L__Clock_Settings2007
L__Clock_Settings5341:
;GRR3000LManagementPanel.mpas,5335 :: 		if (day < 1) then day := 28;
0x2AE8	0x213C90  	MOV	#lo_addr(_Day), W0
0x2AEA	0x784010  	MOV.B	[W0], W0
0x2AEC	0xE10461  	CP.B	W0, #1
0x2AEE	0x3D0003  	BRA GE	L__Clock_Settings2010
L__Clock_Settings5342:
0x2AF0	0x213C91  	MOV	#lo_addr(_Day), W1
0x2AF2	0xB3C1C0  	MOV.B	#28, W0
0x2AF4	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2010:
;GRR3000LManagementPanel.mpas,5336 :: 		end else
0x2AF6	0x370023  	BRA	L__Clock_Settings2008
L__Clock_Settings2007:
;GRR3000LManagementPanel.mpas,5337 :: 		if ((Month <> 4)or(Month <> 6)or(Month<> 9)or(Month <> 11)) then
0x2AF8	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2AFA	0x784010  	MOV.B	[W0], W0
0x2AFC	0xE10464  	CP.B	W0, #4
0x2AFE	0xEF2002  	CLR	W1
0x2B00	0x320001  	BRA Z	L__Clock_Settings5343
0x2B02	0xEEA002  	COM	W1
L__Clock_Settings5343:
0x2B04	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2B06	0x784010  	MOV.B	[W0], W0
0x2B08	0xE10466  	CP.B	W0, #6
0x2B0A	0xEF2000  	CLR	W0
0x2B0C	0x320001  	BRA Z	L__Clock_Settings5344
0x2B0E	0xEEA000  	COM	W0
L__Clock_Settings5344:
0x2B10	0x708080  	IOR	W1, W0, W1
0x2B12	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2B14	0x784010  	MOV.B	[W0], W0
0x2B16	0xE10469  	CP.B	W0, #9
0x2B18	0xEF2000  	CLR	W0
0x2B1A	0x320001  	BRA Z	L__Clock_Settings5345
0x2B1C	0xEEA000  	COM	W0
L__Clock_Settings5345:
0x2B1E	0x708080  	IOR	W1, W0, W1
0x2B20	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2B22	0x784010  	MOV.B	[W0], W0
0x2B24	0xE1046B  	CP.B	W0, #11
0x2B26	0xEF2000  	CLR	W0
0x2B28	0x320001  	BRA Z	L__Clock_Settings5346
0x2B2A	0xEEA000  	COM	W0
L__Clock_Settings5346:
0x2B2C	0x708000  	IOR	W1, W0, W0
0x2B2E	0x320007  	BRA Z	L__Clock_Settings2013
L__Clock_Settings5347:
;GRR3000LManagementPanel.mpas,5339 :: 		if (day < 1) then
0x2B30	0x213C90  	MOV	#lo_addr(_Day), W0
0x2B32	0x784010  	MOV.B	[W0], W0
0x2B34	0xE10461  	CP.B	W0, #1
0x2B36	0x3D0003  	BRA GE	L__Clock_Settings2016
L__Clock_Settings5348:
;GRR3000LManagementPanel.mpas,5340 :: 		day := 31;
0x2B38	0x213C91  	MOV	#lo_addr(_Day), W1
0x2B3A	0xB3C1F0  	MOV.B	#31, W0
0x2B3C	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2016:
;GRR3000LManagementPanel.mpas,5341 :: 		end;
L__Clock_Settings2013:
L__Clock_Settings2008:
L__Clock_Settings2002:
L__Clock_Settings1996:
;GRR3000LManagementPanel.mpas,5342 :: 		end;
L__Clock_Settings1987:
L__Clock_Settings1956:
;GRR3000LManagementPanel.mpas,5344 :: 		dayText[1]  := (day div 10)+48;
0x2B3E	0x213C90  	MOV	#lo_addr(_Day), W0
0x2B40	0xFB0010  	SE	[W0], W0
0x2B42	0x2000A2  	MOV	#10, W2
0x2B44	0x090011  	REPEAT	#17
0x2B46	0xD80002  	DIV.S	W0, W2
0x2B48	0x780100  	MOV	W0, W2
0x2B4A	0xB3C301  	MOV.B	#48, W1
0x2B4C	0x470066  	ADD	W14, #6, W0
0x2B4E	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5345 :: 		dayText[2]  := (day mod 10)+48;
0x2B50	0x213C90  	MOV	#lo_addr(_Day), W0
0x2B52	0xFB0010  	SE	[W0], W0
0x2B54	0x2000A2  	MOV	#10, W2
0x2B56	0x090011  	REPEAT	#17
0x2B58	0xD80002  	DIV.S	W0, W2
0x2B5A	0x780101  	MOV	W1, W2
0x2B5C	0xB3C301  	MOV.B	#48, W1
0x2B5E	0x470067  	ADD	W14, #7, W0
0x2B60	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5346 :: 		Glcd_Write_Text(dayText,36,row6,White);
0x2B62	0x470066  	ADD	W14, #6, W0
0x2B64	0xEF201A  	CLR	W13
0x2B66	0xB3C05C  	MOV.B	#5, W12
0x2B68	0xB3C24B  	MOV.B	#36, W11
0x2B6A	0x780500  	MOV	W0, W10
0x2B6C	0x07160E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5348 :: 		if (Ok_Button =0) then
0x2B6E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2B70	0x37000F  	BRA	L__Clock_Settings2019
;GRR3000LManagementPanel.mpas,5350 :: 		while (Ok_Button =0) do
L__Clock_Settings2022:
0x2B72	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2B74	0x370002  	BRA	L__Clock_Settings2023
;GRR3000LManagementPanel.mpas,5352 :: 		asm ClrWDT; end;
0x2B76	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5353 :: 		end;
0x2B78	0x37FFFC  	BRA	L__Clock_Settings2022
L__Clock_Settings2023:
;GRR3000LManagementPanel.mpas,5355 :: 		Glcd_Write_Text(dayText,36,row6,Black);
0x2B7A	0x470066  	ADD	W14, #6, W0
0x2B7C	0xB3C01D  	MOV.B	#1, W13
0x2B7E	0xB3C05C  	MOV.B	#5, W12
0x2B80	0xB3C24B  	MOV.B	#36, W11
0x2B82	0x780500  	MOV	W0, W10
0x2B84	0x071602  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5357 :: 		Chng[3] := 0;
0x2B86	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x2B88	0xEF2000  	CLR	W0
0x2B8A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5358 :: 		SaveBit := 1;
0x2B8C	0x470074  	ADD	W14, #20, W0
0x2B8E	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,5360 :: 		end;
L__Clock_Settings2019:
;GRR3000LManagementPanel.mpas,5365 :: 		end; // chng[2] while end
0x2B90	0x37FEBE  	BRA	L__Clock_Settings1950
L__Clock_Settings1951:
;GRR3000LManagementPanel.mpas,5367 :: 		end;
L__Clock_Settings1942:
;GRR3000LManagementPanel.mpas,5369 :: 		end;
0x2B92	0x370147  	BRA	L__Clock_Settings1845
L__Clock_Settings1940:
;GRR3000LManagementPanel.mpas,5371 :: 		4: begin  // ay ayarý
0x2B94	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x2B96	0x784010  	MOV.B	[W0], W0
0x2B98	0xE10464  	CP.B	W0, #4
0x2B9A	0x3A0073  	BRA NZ	L__Clock_Settings2028
L__Clock_Settings5349:
;GRR3000LManagementPanel.mpas,5377 :: 		Glcd_Write_Char(' ', 39, Row7, Black); // gün
0x2B9C	0xB3C01D  	MOV.B	#1, W13
0x2B9E	0xB3C06C  	MOV.B	#6, W12
0x2BA0	0xB3C27B  	MOV.B	#39, W11
0x2BA2	0xB3C20A  	MOV.B	#32, W10
0x2BA4	0x07F8E7  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5378 :: 		Glcd_Write_Char('*', 57, Row7, Black); // ay
0x2BA6	0xB3C01D  	MOV.B	#1, W13
0x2BA8	0xB3C06C  	MOV.B	#6, W12
0x2BAA	0xB3C39B  	MOV.B	#57, W11
0x2BAC	0xB3C2AA  	MOV.B	#42, W10
0x2BAE	0x07F8E2  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5379 :: 		Glcd_Write_Char(' ', 81, Row7, Black); // yýl
0x2BB0	0xB3C01D  	MOV.B	#1, W13
0x2BB2	0xB3C06C  	MOV.B	#6, W12
0x2BB4	0xB3C51B  	MOV.B	#81, W11
0x2BB6	0xB3C20A  	MOV.B	#32, W10
0x2BB8	0x07F8DD  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5381 :: 		if (Ok_Button =0) then
0x2BBA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2BBC	0x370061  	BRA	L__Clock_Settings2030
;GRR3000LManagementPanel.mpas,5383 :: 		while (Ok_Button =0) do
L__Clock_Settings2033:
0x2BBE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2BC0	0x370002  	BRA	L__Clock_Settings2034
;GRR3000LManagementPanel.mpas,5385 :: 		asm ClrWDT; end;
0x2BC2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5386 :: 		end;
0x2BC4	0x37FFFC  	BRA	L__Clock_Settings2033
L__Clock_Settings2034:
;GRR3000LManagementPanel.mpas,5388 :: 		Chng[4] := 1;
0x2BC6	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0x2BC8	0xB3C010  	MOV.B	#1, W0
0x2BCA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5391 :: 		While (Chng[4] =1) do
L__Clock_Settings2038:
0x2BCC	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0x2BCE	0x784010  	MOV.B	[W0], W0
0x2BD0	0xE10461  	CP.B	W0, #1
0x2BD2	0x3A0056  	BRA NZ	L__Clock_Settings2039
L__Clock_Settings5350:
;GRR3000LManagementPanel.mpas,5394 :: 		asm ClrWDT; end;
0x2BD4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5396 :: 		if (Up_Button =0) then
0x2BD6	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x2BD8	0x370014  	BRA	L__Clock_Settings2043
;GRR3000LManagementPanel.mpas,5398 :: 		ButonStop       := 0;
0x2BDA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2BDC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5399 :: 		BtCounterNormal := 0;
0x2BDE	0xEF2000  	CLR	W0
0x2BE0	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5400 :: 		while (ButonStop = 0) do
L__Clock_Settings2046:
0x2BE2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2BE4	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2BE6	0x370002  	BRA	L__Clock_Settings2047
;GRR3000LManagementPanel.mpas,5402 :: 		asm ClrWDT; end;
0x2BE8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5403 :: 		end;
0x2BEA	0x37FFFB  	BRA	L__Clock_Settings2046
L__Clock_Settings2047:
;GRR3000LManagementPanel.mpas,5404 :: 		Inc(month);
0x2BEC	0xB3C011  	MOV.B	#1, W1
0x2BEE	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2BF0	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5405 :: 		if (month > 12) then
0x2BF2	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2BF4	0x784010  	MOV.B	[W0], W0
0x2BF6	0xE1046C  	CP.B	W0, #12
0x2BF8	0x340003  	BRA LE	L__Clock_Settings2051
L__Clock_Settings5351:
;GRR3000LManagementPanel.mpas,5406 :: 		month := 1;
0x2BFA	0x213CA1  	MOV	#lo_addr(_Month), W1
0x2BFC	0xB3C010  	MOV.B	#1, W0
0x2BFE	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2051:
;GRR3000LManagementPanel.mpas,5407 :: 		end else
0x2C00	0x370015  	BRA	L__Clock_Settings2044
L__Clock_Settings2043:
;GRR3000LManagementPanel.mpas,5408 :: 		if (Down_Button =0) then
0x2C02	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x2C04	0x370013  	BRA	L__Clock_Settings2054
;GRR3000LManagementPanel.mpas,5410 :: 		ButonStop       := 0;
0x2C06	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2C08	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5411 :: 		BtCounterNormal := 0;
0x2C0A	0xEF2000  	CLR	W0
0x2C0C	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5412 :: 		while (ButonStop = 0) do
L__Clock_Settings2057:
0x2C0E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2C10	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2C12	0x370002  	BRA	L__Clock_Settings2058
;GRR3000LManagementPanel.mpas,5414 :: 		asm ClrWDT; end;
0x2C14	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5415 :: 		end;
0x2C16	0x37FFFB  	BRA	L__Clock_Settings2057
L__Clock_Settings2058:
;GRR3000LManagementPanel.mpas,5416 :: 		Dec(month);
0x2C18	0xB3C011  	MOV.B	#1, W1
0x2C1A	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2C1C	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5417 :: 		if (month < 1) then
0x2C1E	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2C20	0x784010  	MOV.B	[W0], W0
0x2C22	0xE10461  	CP.B	W0, #1
0x2C24	0x3D0003  	BRA GE	L__Clock_Settings2062
L__Clock_Settings5352:
;GRR3000LManagementPanel.mpas,5418 :: 		month := 12;
0x2C26	0x213CA1  	MOV	#lo_addr(_Month), W1
0x2C28	0xB3C0C0  	MOV.B	#12, W0
0x2C2A	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2062:
;GRR3000LManagementPanel.mpas,5419 :: 		end;
L__Clock_Settings2054:
L__Clock_Settings2044:
;GRR3000LManagementPanel.mpas,5421 :: 		MonthText[1]  := (month div 10)+48;
0x2C2C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2C2E	0xFB0010  	SE	[W0], W0
0x2C30	0x2000A2  	MOV	#10, W2
0x2C32	0x090011  	REPEAT	#17
0x2C34	0xD80002  	DIV.S	W0, W2
0x2C36	0x780100  	MOV	W0, W2
0x2C38	0xB3C301  	MOV.B	#48, W1
0x2C3A	0x470069  	ADD	W14, #9, W0
0x2C3C	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5422 :: 		MonthText[2]  := (month mod 10)+48;
0x2C3E	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2C40	0xFB0010  	SE	[W0], W0
0x2C42	0x2000A2  	MOV	#10, W2
0x2C44	0x090011  	REPEAT	#17
0x2C46	0xD80002  	DIV.S	W0, W2
0x2C48	0x780101  	MOV	W1, W2
0x2C4A	0xB3C301  	MOV.B	#48, W1
0x2C4C	0x47006A  	ADD	W14, #10, W0
0x2C4E	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5423 :: 		Glcd_Write_Text(monthText,54,row6,White);
0x2C50	0x470069  	ADD	W14, #9, W0
0x2C52	0xEF201A  	CLR	W13
0x2C54	0xB3C05C  	MOV.B	#5, W12
0x2C56	0xB3C36B  	MOV.B	#54, W11
0x2C58	0x780500  	MOV	W0, W10
0x2C5A	0x071597  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5426 :: 		if (Ok_Button =0) then
0x2C5C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2C5E	0x37000F  	BRA	L__Clock_Settings2065
;GRR3000LManagementPanel.mpas,5428 :: 		while (Ok_Button =0) do
L__Clock_Settings2068:
0x2C60	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2C62	0x370002  	BRA	L__Clock_Settings2069
;GRR3000LManagementPanel.mpas,5430 :: 		asm ClrWDT; end;
0x2C64	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5431 :: 		end;
0x2C66	0x37FFFC  	BRA	L__Clock_Settings2068
L__Clock_Settings2069:
;GRR3000LManagementPanel.mpas,5433 :: 		Glcd_Write_Text(monthText,54,row6,Black);
0x2C68	0x470069  	ADD	W14, #9, W0
0x2C6A	0xB3C01D  	MOV.B	#1, W13
0x2C6C	0xB3C05C  	MOV.B	#5, W12
0x2C6E	0xB3C36B  	MOV.B	#54, W11
0x2C70	0x780500  	MOV	W0, W10
0x2C72	0x07158B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5435 :: 		Chng[4] := 0;
0x2C74	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0x2C76	0xEF2000  	CLR	W0
0x2C78	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5436 :: 		SaveBit := 1;
0x2C7A	0x470074  	ADD	W14, #20, W0
0x2C7C	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,5439 :: 		end;
L__Clock_Settings2065:
;GRR3000LManagementPanel.mpas,5444 :: 		end; // chng[4] while end
0x2C7E	0x37FFA6  	BRA	L__Clock_Settings2038
L__Clock_Settings2039:
;GRR3000LManagementPanel.mpas,5446 :: 		end;
L__Clock_Settings2030:
;GRR3000LManagementPanel.mpas,5448 :: 		end;
0x2C80	0x3700D0  	BRA	L__Clock_Settings1845
L__Clock_Settings2028:
;GRR3000LManagementPanel.mpas,5450 :: 		5: begin  // yýl ayarý
0x2C82	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x2C84	0x784010  	MOV.B	[W0], W0
0x2C86	0xE10465  	CP.B	W0, #5
0x2C88	0x3A007E  	BRA NZ	L__Clock_Settings2074
L__Clock_Settings5353:
;GRR3000LManagementPanel.mpas,5458 :: 		Glcd_Write_Char(' ', 57, Row7, Black); // ay
0x2C8A	0xB3C01D  	MOV.B	#1, W13
0x2C8C	0xB3C06C  	MOV.B	#6, W12
0x2C8E	0xB3C39B  	MOV.B	#57, W11
0x2C90	0xB3C20A  	MOV.B	#32, W10
0x2C92	0x07F870  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5459 :: 		Glcd_Write_Char('*', 81, Row7, Black); // yýl
0x2C94	0xB3C01D  	MOV.B	#1, W13
0x2C96	0xB3C06C  	MOV.B	#6, W12
0x2C98	0xB3C51B  	MOV.B	#81, W11
0x2C9A	0xB3C2AA  	MOV.B	#42, W10
0x2C9C	0x07F86B  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5460 :: 		Glcd_Write_Text(' ', 0,  row8, Black);
0x2C9E	0x4700F1  	ADD	W14, #17, W1
0x2CA0	0xB3C200  	MOV.B	#32, W0
0x2CA2	0x785880  	MOV.B	W0, [W1++]
0x2CA4	0xEF2000  	CLR	W0
0x2CA6	0x785880  	MOV.B	W0, [W1++]
0x2CA8	0x470071  	ADD	W14, #17, W0
0x2CAA	0xB3C01D  	MOV.B	#1, W13
0x2CAC	0xB3C07C  	MOV.B	#7, W12
0x2CAE	0xEF2016  	CLR	W11
0x2CB0	0x780500  	MOV	W0, W10
0x2CB2	0x07156B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5462 :: 		if (Ok_Button =0) then
0x2CB4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2CB6	0x370066  	BRA	L__Clock_Settings2076
;GRR3000LManagementPanel.mpas,5464 :: 		while (Ok_Button =0) do
L__Clock_Settings2079:
0x2CB8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2CBA	0x370002  	BRA	L__Clock_Settings2080
;GRR3000LManagementPanel.mpas,5466 :: 		asm ClrWDT; end;
0x2CBC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5467 :: 		end;
0x2CBE	0x37FFFC  	BRA	L__Clock_Settings2079
L__Clock_Settings2080:
;GRR3000LManagementPanel.mpas,5469 :: 		Chng[5] := 1;
0x2CC0	0x212501  	MOV	#lo_addr(_Chng+4), W1
0x2CC2	0xB3C010  	MOV.B	#1, W0
0x2CC4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5472 :: 		While (Chng[5] =1) do
L__Clock_Settings2084:
0x2CC6	0x212500  	MOV	#lo_addr(_Chng+4), W0
0x2CC8	0x784010  	MOV.B	[W0], W0
0x2CCA	0xE10461  	CP.B	W0, #1
0x2CCC	0x3A005B  	BRA NZ	L__Clock_Settings2085
L__Clock_Settings5354:
;GRR3000LManagementPanel.mpas,5475 :: 		asm ClrWDT; end;
0x2CCE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5477 :: 		if (Up_Button =0) then
0x2CD0	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x2CD2	0x370015  	BRA	L__Clock_Settings2089
;GRR3000LManagementPanel.mpas,5479 :: 		ButonStop       := 0;
0x2CD4	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2CD6	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5480 :: 		BtCounterNormal := 0;
0x2CD8	0xEF2000  	CLR	W0
0x2CDA	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5481 :: 		while (ButonStop = 0) do
L__Clock_Settings2092:
0x2CDC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2CDE	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2CE0	0x370002  	BRA	L__Clock_Settings2093
;GRR3000LManagementPanel.mpas,5483 :: 		asm ClrWDT; end;
0x2CE2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5484 :: 		end;
0x2CE4	0x37FFFB  	BRA	L__Clock_Settings2092
L__Clock_Settings2093:
;GRR3000LManagementPanel.mpas,5485 :: 		Inc(year);
0x2CE6	0xB3C011  	MOV.B	#1, W1
0x2CE8	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2CEA	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5486 :: 		if (year > 99) then
0x2CEC	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2CEE	0x784090  	MOV.B	[W0], W1
0x2CF0	0xB3C630  	MOV.B	#99, W0
0x2CF2	0xE10C00  	CP.B	W1, W0
0x2CF4	0x340003  	BRA LE	L__Clock_Settings2097
L__Clock_Settings5355:
;GRR3000LManagementPanel.mpas,5487 :: 		year := 12;
0x2CF6	0x213CB1  	MOV	#lo_addr(_Year), W1
0x2CF8	0xB3C0C0  	MOV.B	#12, W0
0x2CFA	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2097:
;GRR3000LManagementPanel.mpas,5488 :: 		end else
0x2CFC	0x370015  	BRA	L__Clock_Settings2090
L__Clock_Settings2089:
;GRR3000LManagementPanel.mpas,5489 :: 		if (Down_Button =0) then
0x2CFE	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x2D00	0x370013  	BRA	L__Clock_Settings2100
;GRR3000LManagementPanel.mpas,5491 :: 		ButonStop       := 0;
0x2D02	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2D04	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5492 :: 		BtCounterNormal := 0;
0x2D06	0xEF2000  	CLR	W0
0x2D08	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5493 :: 		while (ButonStop = 0) do
L__Clock_Settings2103:
0x2D0A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x2D0C	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x2D0E	0x370002  	BRA	L__Clock_Settings2104
;GRR3000LManagementPanel.mpas,5495 :: 		asm ClrWDT; end;
0x2D10	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5496 :: 		end;
0x2D12	0x37FFFB  	BRA	L__Clock_Settings2103
L__Clock_Settings2104:
;GRR3000LManagementPanel.mpas,5497 :: 		Dec(year);
0x2D14	0xB3C011  	MOV.B	#1, W1
0x2D16	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2D18	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5498 :: 		if (year < 12) then
0x2D1A	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2D1C	0x784010  	MOV.B	[W0], W0
0x2D1E	0xE1046C  	CP.B	W0, #12
0x2D20	0x3D0003  	BRA GE	L__Clock_Settings2108
L__Clock_Settings5356:
;GRR3000LManagementPanel.mpas,5499 :: 		year := 99;
0x2D22	0x213CB1  	MOV	#lo_addr(_Year), W1
0x2D24	0xB3C630  	MOV.B	#99, W0
0x2D26	0x784880  	MOV.B	W0, [W1]
L__Clock_Settings2108:
;GRR3000LManagementPanel.mpas,5500 :: 		end;
L__Clock_Settings2100:
L__Clock_Settings2090:
;GRR3000LManagementPanel.mpas,5502 :: 		YearText[1]  := '2';
0x2D28	0xB3C320  	MOV.B	#50, W0
0x2D2A	0x984F40  	MOV.B	W0, [W14+12]
;GRR3000LManagementPanel.mpas,5503 :: 		YearText[2]  := '0';
0x2D2C	0xB3C300  	MOV.B	#48, W0
0x2D2E	0x984F50  	MOV.B	W0, [W14+13]
;GRR3000LManagementPanel.mpas,5504 :: 		YearText[3]  := (year div 10)+48;
0x2D30	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2D32	0xFB0010  	SE	[W0], W0
0x2D34	0x2000A2  	MOV	#10, W2
0x2D36	0x090011  	REPEAT	#17
0x2D38	0xD80002  	DIV.S	W0, W2
0x2D3A	0x780100  	MOV	W0, W2
0x2D3C	0xB3C301  	MOV.B	#48, W1
0x2D3E	0x47006E  	ADD	W14, #14, W0
0x2D40	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5505 :: 		YearText[4]  := (year mod 10)+48;
0x2D42	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2D44	0xFB0010  	SE	[W0], W0
0x2D46	0x2000A2  	MOV	#10, W2
0x2D48	0x090011  	REPEAT	#17
0x2D4A	0xD80002  	DIV.S	W0, W2
0x2D4C	0x780101  	MOV	W1, W2
0x2D4E	0xB3C301  	MOV.B	#48, W1
0x2D50	0x47006F  	ADD	W14, #15, W0
0x2D52	0x414801  	ADD.B	W2, W1, [W0]
;GRR3000LManagementPanel.mpas,5506 :: 		Glcd_Write_Text(yearText,72,row6,White);
0x2D54	0x47006C  	ADD	W14, #12, W0
0x2D56	0xEF201A  	CLR	W13
0x2D58	0xB3C05C  	MOV.B	#5, W12
0x2D5A	0xB3C48B  	MOV.B	#72, W11
0x2D5C	0x780500  	MOV	W0, W10
0x2D5E	0x071515  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5509 :: 		if (Ok_Button =0) then
0x2D60	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2D62	0x37000F  	BRA	L__Clock_Settings2111
;GRR3000LManagementPanel.mpas,5511 :: 		while (Ok_Button =0) do
L__Clock_Settings2114:
0x2D64	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2D66	0x370002  	BRA	L__Clock_Settings2115
;GRR3000LManagementPanel.mpas,5513 :: 		asm ClrWDT; end;
0x2D68	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5514 :: 		end;
0x2D6A	0x37FFFC  	BRA	L__Clock_Settings2114
L__Clock_Settings2115:
;GRR3000LManagementPanel.mpas,5516 :: 		Glcd_Write_Text(yearText,72,row6,black);
0x2D6C	0x47006C  	ADD	W14, #12, W0
0x2D6E	0xB3C01D  	MOV.B	#1, W13
0x2D70	0xB3C05C  	MOV.B	#5, W12
0x2D72	0xB3C48B  	MOV.B	#72, W11
0x2D74	0x780500  	MOV	W0, W10
0x2D76	0x071509  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5518 :: 		Chng[5] := 0;
0x2D78	0x212501  	MOV	#lo_addr(_Chng+4), W1
0x2D7A	0xEF2000  	CLR	W0
0x2D7C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5519 :: 		SaveBit := 1;
0x2D7E	0x470074  	ADD	W14, #20, W0
0x2D80	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,5521 :: 		end;
L__Clock_Settings2111:
;GRR3000LManagementPanel.mpas,5526 :: 		end; // chng[5] while end
0x2D82	0x37FFA1  	BRA	L__Clock_Settings2084
L__Clock_Settings2085:
;GRR3000LManagementPanel.mpas,5528 :: 		end;
L__Clock_Settings2076:
;GRR3000LManagementPanel.mpas,5530 :: 		end;
0x2D84	0x37004E  	BRA	L__Clock_Settings1845
L__Clock_Settings2074:
;GRR3000LManagementPanel.mpas,5533 :: 		6: begin // geri
0x2D86	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x2D88	0x784010  	MOV.B	[W0], W0
0x2D8A	0xE10466  	CP.B	W0, #6
0x2D8C	0x3A004A  	BRA NZ	L__Clock_Settings2120
L__Clock_Settings5357:
;GRR3000LManagementPanel.mpas,5539 :: 		Glcd_Write_Char(' ', 54, Row5, Black); // saat
0x2D8E	0xB3C01D  	MOV.B	#1, W13
0x2D90	0xB3C04C  	MOV.B	#4, W12
0x2D92	0xB3C36B  	MOV.B	#54, W11
0x2D94	0xB3C20A  	MOV.B	#32, W10
0x2D96	0x07F7EE  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5540 :: 		Glcd_Write_Char(' ', 81, Row7, Black); // yýl
0x2D98	0xB3C01D  	MOV.B	#1, W13
0x2D9A	0xB3C06C  	MOV.B	#6, W12
0x2D9C	0xB3C51B  	MOV.B	#81, W11
0x2D9E	0xB3C20A  	MOV.B	#32, W10
0x2DA0	0x07F7E9  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,5541 :: 		Glcd_Write_Text('>', 0,  Row8, Black);
0x2DA2	0x4700F1  	ADD	W14, #17, W1
0x2DA4	0xB3C3E0  	MOV.B	#62, W0
0x2DA6	0x785880  	MOV.B	W0, [W1++]
0x2DA8	0xEF2000  	CLR	W0
0x2DAA	0x785880  	MOV.B	W0, [W1++]
0x2DAC	0x470071  	ADD	W14, #17, W0
0x2DAE	0xB3C01D  	MOV.B	#1, W13
0x2DB0	0xB3C07C  	MOV.B	#7, W12
0x2DB2	0xEF2016  	CLR	W11
0x2DB4	0x780500  	MOV	W0, W10
0x2DB6	0x0714E9  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5543 :: 		if (Ok_Button =0) then
0x2DB8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2DBA	0x370032  	BRA	L__Clock_Settings2122
;GRR3000LManagementPanel.mpas,5545 :: 		while (Ok_Button =0) do
L__Clock_Settings2125:
0x2DBC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2DBE	0x370002  	BRA	L__Clock_Settings2126
;GRR3000LManagementPanel.mpas,5547 :: 		asm ClrWDT; end;
0x2DC0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5548 :: 		end;
0x2DC2	0x37FFFC  	BRA	L__Clock_Settings2125
L__Clock_Settings2126:
;GRR3000LManagementPanel.mpas,5550 :: 		if (SaveBit = 1) then // ayar yapýlmýþsa kaydet, yapýlmamýþsa kaydetme
0x2DC4	0x470074  	ADD	W14, #20, W0
0x2DC6	0xA60010  	BTSS	[W0], #0
0x2DC8	0x370028  	BRA	L__Clock_Settings2130
;GRR3000LManagementPanel.mpas,5552 :: 		Hours   := Dec2Bcd16(Hours);
0x2DCA	0x213CE0  	MOV	#lo_addr(_Hours), W0
0x2DCC	0xFB0510  	SE	[W0], W10
0x2DCE	0x07FB1B  	RCALL	_Dec2Bcd16
0x2DD0	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x2DD2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5553 :: 		Minutes := Dec2Bcd16(Minutes);
0x2DD4	0x213D00  	MOV	#lo_addr(_Minutes), W0
0x2DD6	0xFB0510  	SE	[W0], W10
0x2DD8	0x07FB16  	RCALL	_Dec2Bcd16
0x2DDA	0x213D01  	MOV	#lo_addr(_Minutes), W1
0x2DDC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5554 :: 		Day     := Dec2Bcd16(Day);
0x2DDE	0x213C90  	MOV	#lo_addr(_Day), W0
0x2DE0	0xFB0510  	SE	[W0], W10
0x2DE2	0x07FB11  	RCALL	_Dec2Bcd16
0x2DE4	0x213C91  	MOV	#lo_addr(_Day), W1
0x2DE6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5555 :: 		Month   := Dec2Bcd16(Month);
0x2DE8	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2DEA	0xFB0510  	SE	[W0], W10
0x2DEC	0x07FB0C  	RCALL	_Dec2Bcd16
0x2DEE	0x213CA1  	MOV	#lo_addr(_Month), W1
0x2DF0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5556 :: 		Year    := Dec2Bcd16(Year);
0x2DF2	0x213CB0  	MOV	#lo_addr(_Year), W0
0x2DF4	0xFB0510  	SE	[W0], W10
0x2DF6	0x07FB07  	RCALL	_Dec2Bcd16
0x2DF8	0x213CB1  	MOV	#lo_addr(_Year), W1
0x2DFA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5558 :: 		Write_Time(Hours,Minutes,0x00,Day,0x01,Month,Year);
0x2DFC	0x213C93  	MOV	#lo_addr(_Day), W3
0x2DFE	0x213D02  	MOV	#lo_addr(_Minutes), W2
0x2E00	0x213CE1  	MOV	#lo_addr(_Hours), W1
0x2E02	0x784693  	MOV.B	[W3], W13
0x2E04	0xEF2018  	CLR	W12
0x2E06	0x784592  	MOV.B	[W2], W11
0x2E08	0x784511  	MOV.B	[W1], W10
0x2E0A	0x781F80  	PUSH	W0
0x2E0C	0x213CA0  	MOV	#lo_addr(_Month), W0
0x2E0E	0xFB0010  	SE	[W0], W0
0x2E10	0x781F80  	PUSH	W0
0x2E12	0x200010  	MOV	#1, W0
0x2E14	0x781F80  	PUSH	W0
0x2E16	0x07FAD0  	RCALL	_Write_Time
0x2E18	0xB1006F  	SUB	#6, W15
;GRR3000LManagementPanel.mpas,5559 :: 		end;
L__Clock_Settings2130:
;GRR3000LManagementPanel.mpas,5561 :: 		MenuExit := 1;
0x2E1A	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x2E1C	0xB3C010  	MOV.B	#1, W0
0x2E1E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5563 :: 		end;
L__Clock_Settings2122:
;GRR3000LManagementPanel.mpas,5564 :: 		end;
0x2E20	0x370000  	BRA	L__Clock_Settings1845
L__Clock_Settings2120:
L__Clock_Settings1845:
;GRR3000LManagementPanel.mpas,5572 :: 		end;
0x2E22	0x37FC5A  	BRA	L__Clock_Settings1841
L__Clock_Settings1842:
;GRR3000LManagementPanel.mpas,5574 :: 		Glcd_Fill(0x00);
0x2E24	0xEF2014  	CLR	W10
0x2E26	0x073552  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5575 :: 		MenuSayacValue := 7;
0x2E28	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x2E2A	0xB3C070  	MOV.B	#7, W0
0x2E2C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5577 :: 		end;
L_end_Clock_Settings:
0x2E2E	0x7806CF  	POP	W13
0x2E30	0x78064F  	POP	W12
0x2E32	0x7805CF  	POP	W11
0x2E34	0x78054F  	POP	W10
0x2E36	0xFA8000  	ULNK
0x2E38	0x060000  	RETURN
; end of _Clock_Settings
_Dec2Bcd16:
0x2406	0xFA0004  	LNK	#4
;__Lib_Conversions.mpas,542 :: 		
;__Lib_Conversions.mpas,545 :: 		
0x2408	0x203E82  	MOV	#1000, W2
0x240A	0x090011  	REPEAT	#17
0x240C	0xD88502  	DIV.U	W10, W2
0x240E	0x780080  	MOV	W0, W1
;__Lib_Conversions.mpas,546 :: 		
0x2410	0xDD084C  	SL	W1, #12, W0
0x2412	0x980710  	MOV	W0, [W14+2]
;__Lib_Conversions.mpas,547 :: 		
0x2414	0x203E80  	MOV	#1000, W0
0x2416	0xB80800  	MUL.UU	W1, W0, W0
0x2418	0x550000  	SUB	W10, W0, W0
0x241A	0x980700  	MOV	W0, [W14+0]
0x241C	0x780500  	MOV	W0, W10
;__Lib_Conversions.mpas,549 :: 		
0x241E	0x200642  	MOV	#100, W2
0x2420	0x090011  	REPEAT	#17
0x2422	0xD88002  	DIV.U	W0, W2
0x2424	0x780100  	MOV	W0, W2
;__Lib_Conversions.mpas,550 :: 		
0x2426	0xDD10C8  	SL	W2, #8, W1
0x2428	0x90001E  	MOV	[W14+2], W0
0x242A	0x700001  	IOR	W0, W1, W0
0x242C	0x980710  	MOV	W0, [W14+2]
;__Lib_Conversions.mpas,551 :: 		
0x242E	0x200640  	MOV	#100, W0
0x2430	0xB81100  	MUL.UU	W2, W0, W2
0x2432	0x90000E  	MOV	[W14+0], W0
0x2434	0x500002  	SUB	W0, W2, W0
0x2436	0x980700  	MOV	W0, [W14+0]
0x2438	0x780500  	MOV	W0, W10
;__Lib_Conversions.mpas,553 :: 		
0x243A	0x2000A2  	MOV	#10, W2
0x243C	0x090011  	REPEAT	#17
0x243E	0xD88002  	DIV.U	W0, W2
0x2440	0x780100  	MOV	W0, W2
;__Lib_Conversions.mpas,554 :: 		
0x2442	0xDD10C4  	SL	W2, #4, W1
0x2444	0x90001E  	MOV	[W14+2], W0
0x2446	0x700081  	IOR	W0, W1, W1
;__Lib_Conversions.mpas,555 :: 		
0x2448	0x2000A0  	MOV	#10, W0
0x244A	0xB81100  	MUL.UU	W2, W0, W2
0x244C	0x90000E  	MOV	[W14+0], W0
0x244E	0x500002  	SUB	W0, W2, W0
0x2450	0x780500  	MOV	W0, W10
;__Lib_Conversions.mpas,557 :: 		
; Result start address is: 2 (W1)
0x2452	0x708080  	IOR	W1, W0, W1
;__Lib_Conversions.mpas,558 :: 		
;__Lib_Conversions.mpas,559 :: 		
0x2454	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Dec2Bcd16:
0x2456	0xFA8000  	ULNK
0x2458	0x060000  	RETURN
; end of _Dec2Bcd16
_Write_Time:
0x23B8	0xFA0000  	LNK	#0
;GRR3000LManagementPanel.mpas,1621 :: 		begin
0x23BA	0x781F8A  	PUSH	W10
; c_week start address is: 6 (W3)
0x23BC	0x97F98E  	MOV.B	[W14-8], W3
; c_month start address is: 8 (W4)
0x23BE	0x97F26E  	MOV.B	[W14-10], W4
; c_year start address is: 10 (W5)
0x23C0	0x97F2CE  	MOV.B	[W14-12], W5
;GRR3000LManagementPanel.mpas,1623 :: 		ClrWdt;
0x23C2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,1626 :: 		I2C1_Start();                        // issue start signal
0x23C4	0x07F113  	RCALL	_I2C1_Start
;GRR3000LManagementPanel.mpas,1627 :: 		I2C1_Write(0xD0);                // address DS1307
0x23C6	0x781F8A  	PUSH	W10
0x23C8	0xB3CD0A  	MOV.B	#208, W10
0x23CA	0x07EED9  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1628 :: 		I2C1_Write(0);                       // start from word at address (REG0)
0x23CC	0xEF2014  	CLR	W10
0x23CE	0x07EED7  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1629 :: 		I2C1_Write(0x80);                    // write $80 to REG0. (Pause_ms counter + 0 sec)
0x23D0	0xB3C80A  	MOV.B	#128, W10
0x23D2	0x07EED5  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1631 :: 		I2C1_Write(c_minutes);               // write 0 to minutes word to (REG1)
0x23D4	0x78450B  	MOV.B	W11, W10
0x23D6	0x07EED3  	RCALL	_I2C1_Write
0x23D8	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,1632 :: 		I2C1_Write(c_hours);                 // write 17 to hours word (24-hours mode)(REG2)
0x23DA	0x07EED1  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1633 :: 		I2C1_Write(c_week);                  // write 2 - Monday (REG3)
0x23DC	0x784503  	MOV.B	W3, W10
; c_week end address is: 6 (W3)
0x23DE	0x07EECF  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1634 :: 		I2C1_Write(c_day);                   // write 4 to date word (REG4)
0x23E0	0x78450D  	MOV.B	W13, W10
0x23E2	0x07EECD  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1635 :: 		I2C1_Write(c_month);                 // write 5 (May) to month word (REG5)
0x23E4	0x784504  	MOV.B	W4, W10
; c_month end address is: 8 (W4)
0x23E6	0x07EECB  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1636 :: 		I2C1_Write(c_year);                  // write 01 to year word (REG6)
0x23E8	0x784505  	MOV.B	W5, W10
; c_year end address is: 10 (W5)
0x23EA	0x07EEC9  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1637 :: 		I2C1_Stop();                         // issue stop signal
0x23EC	0x07EEBD  	RCALL	_I2C1_Stop
;GRR3000LManagementPanel.mpas,1639 :: 		I2C1_Start();                        // issue start signal
0x23EE	0x07F0FE  	RCALL	_I2C1_Start
;GRR3000LManagementPanel.mpas,1640 :: 		I2C1_Write(0xD0);                // address DS1307
0x23F0	0xB3CD0A  	MOV.B	#208, W10
0x23F2	0x07EEC5  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1641 :: 		I2C1_Write(0);                       // start from word at address 0
0x23F4	0xEF2014  	CLR	W10
0x23F6	0x07EEC3  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1642 :: 		I2C1_Write(0 or c_seconds);          // write 0 to REG0 (enable counting + 0 sec)
0x23F8	0xFB800C  	ZE	W12, W0
0x23FA	0x784500  	MOV.B	W0, W10
0x23FC	0x07EEC0  	RCALL	_I2C1_Write
;GRR3000LManagementPanel.mpas,1643 :: 		I2C1_Stop();                         // issue stop signal
0x23FE	0x07EEB4  	RCALL	_I2C1_Stop
;GRR3000LManagementPanel.mpas,1644 :: 		end;
L_end_Write_Time:
0x2400	0x78054F  	POP	W10
0x2402	0xFA8000  	ULNK
0x2404	0x060000  	RETURN
; end of _Write_Time
_Modbus_Settings:
0x2E94	0xFA000A  	LNK	#10
;GRR3000LManagementPanel.mpas,5639 :: 		begin
;GRR3000LManagementPanel.mpas,5640 :: 		Glcd_Fill(0x00);
0x2E96	0x781F8A  	PUSH	W10
0x2E98	0x781F8B  	PUSH	W11
0x2E9A	0x781F8C  	PUSH	W12
0x2E9C	0x781F8D  	PUSH	W13
0x2E9E	0xEF2014  	CLR	W10
0x2EA0	0x073515  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5641 :: 		MenuExit         := 0;
0x2EA2	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x2EA4	0xEF2000  	CLR	W0
0x2EA6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5642 :: 		MenuSayacValue   := 1;
0x2EA8	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x2EAA	0xB3C010  	MOV.B	#1, W0
0x2EAC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5643 :: 		Chng[3]          := 2;
0x2EAE	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x2EB0	0xB3C020  	MOV.B	#2, W0
0x2EB2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5651 :: 		Glcd_Write_Text(Title_ModbusMenu,     0, Row1, Black);
0x2EB4	0xB3C01D  	MOV.B	#1, W13
0x2EB6	0xEF2018  	CLR	W12
0x2EB8	0xEF2016  	CLR	W11
0x2EBA	0x2139EA  	MOV	#lo_addr(_Title_ModbusMenu), W10
0x2EBC	0x071466  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5652 :: 		Glcd_Write_Text(SubTitle_Id,          6, Row2, Black);
0x2EBE	0xB3C01D  	MOV.B	#1, W13
0x2EC0	0xB3C01C  	MOV.B	#1, W12
0x2EC2	0xB3C06B  	MOV.B	#6, W11
0x2EC4	0x215E6A  	MOV	#lo_addr(_SubTitle_Id), W10
0x2EC6	0x071461  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5653 :: 		Glcd_Write_Text(SubTitle_BaudRate,    6, Row3, Black);
0x2EC8	0xB3C01D  	MOV.B	#1, W13
0x2ECA	0xB3C02C  	MOV.B	#2, W12
0x2ECC	0xB3C06B  	MOV.B	#6, W11
0x2ECE	0x215D8A  	MOV	#lo_addr(_SubTitle_BaudRate), W10
0x2ED0	0x07145C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5654 :: 		Glcd_Write_Text(SubTitle_Back,        6, Row4, Black);
0x2ED2	0xB3C01D  	MOV.B	#1, W13
0x2ED4	0xB3C03C  	MOV.B	#3, W12
0x2ED6	0xB3C06B  	MOV.B	#6, W11
0x2ED8	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x2EDA	0x071457  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5656 :: 		ModbusID         := EEPROM_Read(EE_ModbusIDEeAddr);
0x2EDC	0x2F048A  	MOV	#61512, W10
0x2EDE	0x2007FB  	MOV	#127, W11
0x2EE0	0x07FABF  	RCALL	_EEPROM_Read
0x2EE2	0x212E01  	MOV	#lo_addr(_ModbusID), W1
0x2EE4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5657 :: 		BaudRateSet      := EEPROM_Read(EE_ModbusBaudRate);
0x2EE6	0x2F04AA  	MOV	#61514, W10
0x2EE8	0x2007FB  	MOV	#127, W11
0x2EEA	0x07FABA  	RCALL	_EEPROM_Read
0x2EEC	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,5659 :: 		ValueDivide(ModbusID, 0);
0x2EEE	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x2EF0	0xEF2016  	CLR	W11
0x2EF2	0xFB8510  	ZE	[W0], W10
0x2EF4	0x07EE1D  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5660 :: 		Glcd_Write_Text(Value_Text, 84, Row2, Black);
0x2EF6	0xB3C01D  	MOV.B	#1, W13
0x2EF8	0xB3C01C  	MOV.B	#1, W12
0x2EFA	0xB3C54B  	MOV.B	#84, W11
0x2EFC	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0x2EFE	0x071445  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5663 :: 		1: Glcd_Write_Text(DisableText,84,row3,Black);
0x2F00	0x90400E  	MOV.B	[W14+0], W0
0x2F02	0xE10461  	CP.B	W0, #1
0x2F04	0x3A0006  	BRA NZ	L__Modbus_Settings2167
L__Modbus_Settings5370:
0x2F06	0xB3C01D  	MOV.B	#1, W13
0x2F08	0xB3C02C  	MOV.B	#2, W12
0x2F0A	0xB3C54B  	MOV.B	#84, W11
0x2F0C	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x2F0E	0x07143D  	RCALL	_Glcd_Write_Text
0x2F10	0x37006C  	BRA	L__Modbus_Settings2164
L__Modbus_Settings2167:
;GRR3000LManagementPanel.mpas,5664 :: 		2: Glcd_Write_Text(' 9600  ',84,row3,Black);
0x2F12	0x90400E  	MOV.B	[W14+0], W0
0x2F14	0xE10462  	CP.B	W0, #2
0x2F16	0x3A0018  	BRA NZ	L__Modbus_Settings2170
L__Modbus_Settings5371:
0x2F18	0x4700E1  	ADD	W14, #1, W1
0x2F1A	0xB3C200  	MOV.B	#32, W0
0x2F1C	0x785880  	MOV.B	W0, [W1++]
0x2F1E	0xB3C390  	MOV.B	#57, W0
0x2F20	0x785880  	MOV.B	W0, [W1++]
0x2F22	0xB3C360  	MOV.B	#54, W0
0x2F24	0x785880  	MOV.B	W0, [W1++]
0x2F26	0xB3C300  	MOV.B	#48, W0
0x2F28	0x785880  	MOV.B	W0, [W1++]
0x2F2A	0xB3C300  	MOV.B	#48, W0
0x2F2C	0x785880  	MOV.B	W0, [W1++]
0x2F2E	0xB3C200  	MOV.B	#32, W0
0x2F30	0x785880  	MOV.B	W0, [W1++]
0x2F32	0xB3C200  	MOV.B	#32, W0
0x2F34	0x785880  	MOV.B	W0, [W1++]
0x2F36	0xEF2000  	CLR	W0
0x2F38	0x785880  	MOV.B	W0, [W1++]
0x2F3A	0x470061  	ADD	W14, #1, W0
0x2F3C	0xB3C01D  	MOV.B	#1, W13
0x2F3E	0xB3C02C  	MOV.B	#2, W12
0x2F40	0xB3C54B  	MOV.B	#84, W11
0x2F42	0x780500  	MOV	W0, W10
0x2F44	0x071422  	RCALL	_Glcd_Write_Text
0x2F46	0x370051  	BRA	L__Modbus_Settings2164
L__Modbus_Settings2170:
;GRR3000LManagementPanel.mpas,5665 :: 		3: Glcd_Write_Text('19200  ',84,row3,Black);
0x2F48	0x90400E  	MOV.B	[W14+0], W0
0x2F4A	0xE10463  	CP.B	W0, #3
0x2F4C	0x3A0018  	BRA NZ	L__Modbus_Settings2173
L__Modbus_Settings5372:
0x2F4E	0x4700E1  	ADD	W14, #1, W1
0x2F50	0xB3C310  	MOV.B	#49, W0
0x2F52	0x785880  	MOV.B	W0, [W1++]
0x2F54	0xB3C390  	MOV.B	#57, W0
0x2F56	0x785880  	MOV.B	W0, [W1++]
0x2F58	0xB3C320  	MOV.B	#50, W0
0x2F5A	0x785880  	MOV.B	W0, [W1++]
0x2F5C	0xB3C300  	MOV.B	#48, W0
0x2F5E	0x785880  	MOV.B	W0, [W1++]
0x2F60	0xB3C300  	MOV.B	#48, W0
0x2F62	0x785880  	MOV.B	W0, [W1++]
0x2F64	0xB3C200  	MOV.B	#32, W0
0x2F66	0x785880  	MOV.B	W0, [W1++]
0x2F68	0xB3C200  	MOV.B	#32, W0
0x2F6A	0x785880  	MOV.B	W0, [W1++]
0x2F6C	0xEF2000  	CLR	W0
0x2F6E	0x785880  	MOV.B	W0, [W1++]
0x2F70	0x470061  	ADD	W14, #1, W0
0x2F72	0xB3C01D  	MOV.B	#1, W13
0x2F74	0xB3C02C  	MOV.B	#2, W12
0x2F76	0xB3C54B  	MOV.B	#84, W11
0x2F78	0x780500  	MOV	W0, W10
0x2F7A	0x071407  	RCALL	_Glcd_Write_Text
0x2F7C	0x370036  	BRA	L__Modbus_Settings2164
L__Modbus_Settings2173:
;GRR3000LManagementPanel.mpas,5666 :: 		4: Glcd_Write_Text('38400  ',84,row3,Black);
0x2F7E	0x90400E  	MOV.B	[W14+0], W0
0x2F80	0xE10464  	CP.B	W0, #4
0x2F82	0x3A0018  	BRA NZ	L__Modbus_Settings2176
L__Modbus_Settings5373:
0x2F84	0x4700E1  	ADD	W14, #1, W1
0x2F86	0xB3C330  	MOV.B	#51, W0
0x2F88	0x785880  	MOV.B	W0, [W1++]
0x2F8A	0xB3C380  	MOV.B	#56, W0
0x2F8C	0x785880  	MOV.B	W0, [W1++]
0x2F8E	0xB3C340  	MOV.B	#52, W0
0x2F90	0x785880  	MOV.B	W0, [W1++]
0x2F92	0xB3C300  	MOV.B	#48, W0
0x2F94	0x785880  	MOV.B	W0, [W1++]
0x2F96	0xB3C300  	MOV.B	#48, W0
0x2F98	0x785880  	MOV.B	W0, [W1++]
0x2F9A	0xB3C200  	MOV.B	#32, W0
0x2F9C	0x785880  	MOV.B	W0, [W1++]
0x2F9E	0xB3C200  	MOV.B	#32, W0
0x2FA0	0x785880  	MOV.B	W0, [W1++]
0x2FA2	0xEF2000  	CLR	W0
0x2FA4	0x785880  	MOV.B	W0, [W1++]
0x2FA6	0x470061  	ADD	W14, #1, W0
0x2FA8	0xB3C01D  	MOV.B	#1, W13
0x2FAA	0xB3C02C  	MOV.B	#2, W12
0x2FAC	0xB3C54B  	MOV.B	#84, W11
0x2FAE	0x780500  	MOV	W0, W10
0x2FB0	0x0713EC  	RCALL	_Glcd_Write_Text
0x2FB2	0x37001B  	BRA	L__Modbus_Settings2164
L__Modbus_Settings2176:
;GRR3000LManagementPanel.mpas,5667 :: 		5: Glcd_Write_Text('57600  ',84,row3,Black);
0x2FB4	0x90400E  	MOV.B	[W14+0], W0
0x2FB6	0xE10465  	CP.B	W0, #5
0x2FB8	0x3A0018  	BRA NZ	L__Modbus_Settings2179
L__Modbus_Settings5374:
0x2FBA	0x4700E1  	ADD	W14, #1, W1
0x2FBC	0xB3C350  	MOV.B	#53, W0
0x2FBE	0x785880  	MOV.B	W0, [W1++]
0x2FC0	0xB3C370  	MOV.B	#55, W0
0x2FC2	0x785880  	MOV.B	W0, [W1++]
0x2FC4	0xB3C360  	MOV.B	#54, W0
0x2FC6	0x785880  	MOV.B	W0, [W1++]
0x2FC8	0xB3C300  	MOV.B	#48, W0
0x2FCA	0x785880  	MOV.B	W0, [W1++]
0x2FCC	0xB3C300  	MOV.B	#48, W0
0x2FCE	0x785880  	MOV.B	W0, [W1++]
0x2FD0	0xB3C200  	MOV.B	#32, W0
0x2FD2	0x785880  	MOV.B	W0, [W1++]
0x2FD4	0xB3C200  	MOV.B	#32, W0
0x2FD6	0x785880  	MOV.B	W0, [W1++]
0x2FD8	0xEF2000  	CLR	W0
0x2FDA	0x785880  	MOV.B	W0, [W1++]
0x2FDC	0x470061  	ADD	W14, #1, W0
0x2FDE	0xB3C01D  	MOV.B	#1, W13
0x2FE0	0xB3C02C  	MOV.B	#2, W12
0x2FE2	0xB3C54B  	MOV.B	#84, W11
0x2FE4	0x780500  	MOV	W0, W10
0x2FE6	0x0713D1  	RCALL	_Glcd_Write_Text
0x2FE8	0x370000  	BRA	L__Modbus_Settings2164
L__Modbus_Settings2179:
L__Modbus_Settings2164:
;GRR3000LManagementPanel.mpas,5670 :: 		while (MenuExit = 0) do
L__Modbus_Settings2181:
0x2FEA	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x2FEC	0x784010  	MOV.B	[W0], W0
0x2FEE	0xE10460  	CP.B	W0, #0
0x2FF0	0x3A01A8  	BRA NZ	L__Modbus_Settings2182
L__Modbus_Settings5375:
;GRR3000LManagementPanel.mpas,5674 :: 		MenuSayac := MenuButtonRead(3, 255);  // menu için butonlarý oku 3 satýr menü var
0x2FF2	0xB3CFFB  	MOV.B	#255, W11
0x2FF4	0xB3C03A  	MOV.B	#3, W10
0x2FF6	0x07F14C  	RCALL	_MenuButtonRead
0x2FF8	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x2FFA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5676 :: 		asm ClrWDT; end;
0x2FFC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5679 :: 		1: begin // modbus id
0x2FFE	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3000	0x784010  	MOV.B	[W0], W0
0x3002	0xE10461  	CP.B	W0, #1
0x3004	0x3A005A  	BRA NZ	L__Modbus_Settings2188
L__Modbus_Settings5376:
;GRR3000LManagementPanel.mpas,5680 :: 		if (Ok_Button =0) then
0x3006	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3008	0x370057  	BRA	L__Modbus_Settings2190
;GRR3000LManagementPanel.mpas,5682 :: 		while (Ok_Button =0) do
L__Modbus_Settings2193:
0x300A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x300C	0x370002  	BRA	L__Modbus_Settings2194
;GRR3000LManagementPanel.mpas,5684 :: 		asm ClrWDT; end;
0x300E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5685 :: 		end;
0x3010	0x37FFFC  	BRA	L__Modbus_Settings2193
L__Modbus_Settings2194:
;GRR3000LManagementPanel.mpas,5687 :: 		Chng[1] := 1;
0x3012	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x3014	0xB3C010  	MOV.B	#1, W0
0x3016	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5689 :: 		While (Chng[1] =1) do
L__Modbus_Settings2198:
0x3018	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x301A	0x784010  	MOV.B	[W0], W0
0x301C	0xE10461  	CP.B	W0, #1
0x301E	0x3A004C  	BRA NZ	L__Modbus_Settings2199
L__Modbus_Settings5377:
;GRR3000LManagementPanel.mpas,5692 :: 		asm ClrWDT; end;
0x3020	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5694 :: 		if (Up_Button =0) then
0x3022	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x3024	0x370015  	BRA	L__Modbus_Settings2203
;GRR3000LManagementPanel.mpas,5696 :: 		ButonStop       := 0;
0x3026	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3028	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5697 :: 		BtCounterNormal := 0;
0x302A	0xEF2000  	CLR	W0
0x302C	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5698 :: 		while (ButonStop = 0) do
L__Modbus_Settings2206:
0x302E	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3030	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3032	0x370002  	BRA	L__Modbus_Settings2207
;GRR3000LManagementPanel.mpas,5700 :: 		asm ClrWDT; end;
0x3034	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5701 :: 		end;
0x3036	0x37FFFB  	BRA	L__Modbus_Settings2206
L__Modbus_Settings2207:
;GRR3000LManagementPanel.mpas,5702 :: 		Inc(ModbusID);
0x3038	0xB3C011  	MOV.B	#1, W1
0x303A	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x303C	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5703 :: 		if (ModbusID > 254) then
0x303E	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x3040	0x784090  	MOV.B	[W0], W1
0x3042	0xB3CFE0  	MOV.B	#254, W0
0x3044	0xE10C00  	CP.B	W1, W0
0x3046	0x360003  	BRA LEU	L__Modbus_Settings2211
L__Modbus_Settings5378:
;GRR3000LManagementPanel.mpas,5704 :: 		ModbusID := 254;
0x3048	0x212E01  	MOV	#lo_addr(_ModbusID), W1
0x304A	0xB3CFE0  	MOV.B	#254, W0
0x304C	0x784880  	MOV.B	W0, [W1]
L__Modbus_Settings2211:
;GRR3000LManagementPanel.mpas,5705 :: 		end else
0x304E	0x370015  	BRA	L__Modbus_Settings2204
L__Modbus_Settings2203:
;GRR3000LManagementPanel.mpas,5706 :: 		if (Down_Button =0) then
0x3050	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3052	0x370013  	BRA	L__Modbus_Settings2214
;GRR3000LManagementPanel.mpas,5708 :: 		ButonStop       := 0;
0x3054	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3056	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5709 :: 		BtCounterNormal := 0;
0x3058	0xEF2000  	CLR	W0
0x305A	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5710 :: 		while (ButonStop = 0) do
L__Modbus_Settings2217:
0x305C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x305E	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3060	0x370002  	BRA	L__Modbus_Settings2218
;GRR3000LManagementPanel.mpas,5712 :: 		asm ClrWDT; end;
0x3062	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5713 :: 		end;
0x3064	0x37FFFB  	BRA	L__Modbus_Settings2217
L__Modbus_Settings2218:
;GRR3000LManagementPanel.mpas,5714 :: 		Dec(ModbusID);
0x3066	0xB3C011  	MOV.B	#1, W1
0x3068	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x306A	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,5715 :: 		if (ModbusID < 1) then
0x306C	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x306E	0x784010  	MOV.B	[W0], W0
0x3070	0xE10461  	CP.B	W0, #1
0x3072	0x310003  	BRA GEU	L__Modbus_Settings2222
L__Modbus_Settings5379:
;GRR3000LManagementPanel.mpas,5716 :: 		ModbusID := 1;
0x3074	0x212E01  	MOV	#lo_addr(_ModbusID), W1
0x3076	0xB3C010  	MOV.B	#1, W0
0x3078	0x784880  	MOV.B	W0, [W1]
L__Modbus_Settings2222:
;GRR3000LManagementPanel.mpas,5717 :: 		end;
L__Modbus_Settings2214:
L__Modbus_Settings2204:
;GRR3000LManagementPanel.mpas,5719 :: 		ValueDivide(ModbusID, 0);
0x307A	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x307C	0xEF2016  	CLR	W11
0x307E	0xFB8510  	ZE	[W0], W10
0x3080	0x07ED57  	RCALL	_ValueDivide
;GRR3000LManagementPanel.mpas,5720 :: 		Glcd_Write_Text(Value_Text, 84, Row2, White);
0x3082	0xEF201A  	CLR	W13
0x3084	0xB3C01C  	MOV.B	#1, W12
0x3086	0xB3C54B  	MOV.B	#84, W11
0x3088	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0x308A	0x07137F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5722 :: 		if (Ok_Button =0) then
0x308C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x308E	0x370013  	BRA	L__Modbus_Settings2225
;GRR3000LManagementPanel.mpas,5724 :: 		while (Ok_Button =0) do
L__Modbus_Settings2228:
0x3090	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3092	0x370002  	BRA	L__Modbus_Settings2229
;GRR3000LManagementPanel.mpas,5726 :: 		asm ClrWDT; end;
0x3094	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5727 :: 		end;
0x3096	0x37FFFC  	BRA	L__Modbus_Settings2228
L__Modbus_Settings2229:
;GRR3000LManagementPanel.mpas,5729 :: 		EEPROM_Write(EE_ModbusIDEeAddr, ModbusID);
0x3098	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x309A	0xFB8610  	ZE	[W0], W12
0x309C	0x2F048A  	MOV	#61512, W10
0x309E	0x2007FB  	MOV	#127, W11
0x30A0	0x07F17A  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,5730 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Modbus_Settings2233:
0x30A2	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x30A4	0x37FFFE  	BRA	L__Modbus_Settings2233
;GRR3000LManagementPanel.mpas,5732 :: 		Chng[1] := 0;
0x30A6	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x30A8	0xEF2000  	CLR	W0
0x30AA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5733 :: 		Glcd_Write_Text(Value_Text, 84, Row2, Black);
0x30AC	0xB3C01D  	MOV.B	#1, W13
0x30AE	0xB3C01C  	MOV.B	#1, W12
0x30B0	0xB3C54B  	MOV.B	#84, W11
0x30B2	0x2141DA  	MOV	#lo_addr(_Value_Text), W10
0x30B4	0x07136A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,5735 :: 		end;
L__Modbus_Settings2225:
;GRR3000LManagementPanel.mpas,5740 :: 		end; // chng[1] while end
0x30B6	0x37FFB0  	BRA	L__Modbus_Settings2198
L__Modbus_Settings2199:
;GRR3000LManagementPanel.mpas,5742 :: 		end;
L__Modbus_Settings2190:
;GRR3000LManagementPanel.mpas,5743 :: 		end;
0x30B8	0x370143  	BRA	L__Modbus_Settings2185
L__Modbus_Settings2188:
;GRR3000LManagementPanel.mpas,5745 :: 		2: begin // modbus baud rate
0x30BA	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x30BC	0x784010  	MOV.B	[W0], W0
0x30BE	0xE10462  	CP.B	W0, #2
0x30C0	0x3A0131  	BRA NZ	L__Modbus_Settings2239
L__Modbus_Settings5380:
;GRR3000LManagementPanel.mpas,5746 :: 		if (Ok_Button =0) then
0x30C2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x30C4	0x37012E  	BRA	L__Modbus_Settings2241
;GRR3000LManagementPanel.mpas,5748 :: 		while (Ok_Button =0) do
L__Modbus_Settings2244:
0x30C6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x30C8	0x370002  	BRA	L__Modbus_Settings2245
;GRR3000LManagementPanel.mpas,5750 :: 		asm ClrWDT; end;
0x30CA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5751 :: 		end;
0x30CC	0x37FFFC  	BRA	L__Modbus_Settings2244
L__Modbus_Settings2245:
;GRR3000LManagementPanel.mpas,5753 :: 		Chng[2] := 1;
0x30CE	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x30D0	0xB3C010  	MOV.B	#1, W0
0x30D2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5755 :: 		While (Chng[2] =1) do
L__Modbus_Settings2249:
0x30D4	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x30D6	0x784010  	MOV.B	[W0], W0
0x30D8	0xE10461  	CP.B	W0, #1
0x30DA	0x3A0123  	BRA NZ	L__Modbus_Settings2250
L__Modbus_Settings5381:
;GRR3000LManagementPanel.mpas,5758 :: 		asm ClrWDT; end;
0x30DC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5760 :: 		if (Up_Button =0) then
0x30DE	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x30E0	0x370012  	BRA	L__Modbus_Settings2254
;GRR3000LManagementPanel.mpas,5762 :: 		ButonStop       := 0;
0x30E2	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x30E4	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5763 :: 		BtCounterNormal := 0;
0x30E6	0xEF2000  	CLR	W0
0x30E8	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5764 :: 		while (ButonStop = 0) do
L__Modbus_Settings2257:
0x30EA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x30EC	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x30EE	0x370002  	BRA	L__Modbus_Settings2258
;GRR3000LManagementPanel.mpas,5766 :: 		asm ClrWDT; end;
0x30F0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5767 :: 		end;
0x30F2	0x37FFFB  	BRA	L__Modbus_Settings2257
L__Modbus_Settings2258:
;GRR3000LManagementPanel.mpas,5768 :: 		Inc(BaudRateSet);
0x30F4	0x470060  	ADD	W14, #0, W0
0x30F6	0xFB8010  	ZE	[W0], W0
0x30F8	0xEC2000  	INC	W0
0x30FA	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,5769 :: 		if (BaudRateSet > 5) then
0x30FC	0xE10465  	CP.B	W0, #5
0x30FE	0x360002  	BRA LEU	L__Modbus_Settings2262
L__Modbus_Settings5382:
;GRR3000LManagementPanel.mpas,5770 :: 		BaudRateSet := 5;
0x3100	0xB3C050  	MOV.B	#5, W0
0x3102	0x984700  	MOV.B	W0, [W14+0]
L__Modbus_Settings2262:
;GRR3000LManagementPanel.mpas,5771 :: 		end else
0x3104	0x370013  	BRA	L__Modbus_Settings2255
L__Modbus_Settings2254:
;GRR3000LManagementPanel.mpas,5772 :: 		if (Down_Button =0) then
0x3106	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3108	0x370011  	BRA	L__Modbus_Settings2265
;GRR3000LManagementPanel.mpas,5774 :: 		ButonStop       := 0;
0x310A	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x310C	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,5775 :: 		BtCounterNormal := 0;
0x310E	0xEF2000  	CLR	W0
0x3110	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,5776 :: 		while (ButonStop = 0) do
L__Modbus_Settings2268:
0x3112	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0x3114	0xA7F010  	BTSC	[W0], BitPos(_ButonStop+0)
0x3116	0x370002  	BRA	L__Modbus_Settings2269
;GRR3000LManagementPanel.mpas,5778 :: 		asm ClrWDT; end;
0x3118	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5779 :: 		end;
0x311A	0x37FFFB  	BRA	L__Modbus_Settings2268
L__Modbus_Settings2269:
;GRR3000LManagementPanel.mpas,5780 :: 		Dec(BaudRateSet);
0x311C	0x470060  	ADD	W14, #0, W0
0x311E	0xFB8010  	ZE	[W0], W0
0x3120	0xED2000  	DEC	W0
0x3122	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,5781 :: 		if (BaudRateSet < 1) then
0x3124	0xE10461  	CP.B	W0, #1
0x3126	0x310002  	BRA GEU	L__Modbus_Settings2273
L__Modbus_Settings5383:
;GRR3000LManagementPanel.mpas,5782 :: 		BaudRateSet := 1;
0x3128	0xB3C010  	MOV.B	#1, W0
0x312A	0x984700  	MOV.B	W0, [W14+0]
L__Modbus_Settings2273:
;GRR3000LManagementPanel.mpas,5783 :: 		end;
L__Modbus_Settings2265:
L__Modbus_Settings2255:
;GRR3000LManagementPanel.mpas,5786 :: 		1: Glcd_Write_Text(DisableText,84,row3,White);
0x312C	0x90400E  	MOV.B	[W14+0], W0
0x312E	0xE10461  	CP.B	W0, #1
0x3130	0x3A0006  	BRA NZ	L__Modbus_Settings2278
L__Modbus_Settings5384:
0x3132	0xEF201A  	CLR	W13
0x3134	0xB3C02C  	MOV.B	#2, W12
0x3136	0xB3C54B  	MOV.B	#84, W11
0x3138	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x313A	0x071327  	RCALL	_Glcd_Write_Text
0x313C	0x37006C  	BRA	L__Modbus_Settings2275
L__Modbus_Settings2278:
;GRR3000LManagementPanel.mpas,5787 :: 		2: Glcd_Write_Text(' 9600  ',84,row3,White);
0x313E	0x90400E  	MOV.B	[W14+0], W0
0x3140	0xE10462  	CP.B	W0, #2
0x3142	0x3A0018  	BRA NZ	L__Modbus_Settings2281
L__Modbus_Settings5385:
0x3144	0x4700E1  	ADD	W14, #1, W1
0x3146	0xB3C200  	MOV.B	#32, W0
0x3148	0x785880  	MOV.B	W0, [W1++]
0x314A	0xB3C390  	MOV.B	#57, W0
0x314C	0x785880  	MOV.B	W0, [W1++]
0x314E	0xB3C360  	MOV.B	#54, W0
0x3150	0x785880  	MOV.B	W0, [W1++]
0x3152	0xB3C300  	MOV.B	#48, W0
0x3154	0x785880  	MOV.B	W0, [W1++]
0x3156	0xB3C300  	MOV.B	#48, W0
0x3158	0x785880  	MOV.B	W0, [W1++]
0x315A	0xB3C200  	MOV.B	#32, W0
0x315C	0x785880  	MOV.B	W0, [W1++]
0x315E	0xB3C200  	MOV.B	#32, W0
0x3160	0x785880  	MOV.B	W0, [W1++]
0x3162	0xEF2000  	CLR	W0
0x3164	0x785880  	MOV.B	W0, [W1++]
0x3166	0x470061  	ADD	W14, #1, W0
0x3168	0xEF201A  	CLR	W13
0x316A	0xB3C02C  	MOV.B	#2, W12
0x316C	0xB3C54B  	MOV.B	#84, W11
0x316E	0x780500  	MOV	W0, W10
0x3170	0x07130C  	RCALL	_Glcd_Write_Text
0x3172	0x370051  	BRA	L__Modbus_Settings2275
L__Modbus_Settings2281:
;GRR3000LManagementPanel.mpas,5788 :: 		3: Glcd_Write_Text('19200  ',84,row3,White);
0x3174	0x90400E  	MOV.B	[W14+0], W0
0x3176	0xE10463  	CP.B	W0, #3
0x3178	0x3A0018  	BRA NZ	L__Modbus_Settings2284
L__Modbus_Settings5386:
0x317A	0x4700E1  	ADD	W14, #1, W1
0x317C	0xB3C310  	MOV.B	#49, W0
0x317E	0x785880  	MOV.B	W0, [W1++]
0x3180	0xB3C390  	MOV.B	#57, W0
0x3182	0x785880  	MOV.B	W0, [W1++]
0x3184	0xB3C320  	MOV.B	#50, W0
0x3186	0x785880  	MOV.B	W0, [W1++]
0x3188	0xB3C300  	MOV.B	#48, W0
0x318A	0x785880  	MOV.B	W0, [W1++]
0x318C	0xB3C300  	MOV.B	#48, W0
0x318E	0x785880  	MOV.B	W0, [W1++]
0x3190	0xB3C200  	MOV.B	#32, W0
0x3192	0x785880  	MOV.B	W0, [W1++]
0x3194	0xB3C200  	MOV.B	#32, W0
0x3196	0x785880  	MOV.B	W0, [W1++]
0x3198	0xEF2000  	CLR	W0
0x319A	0x785880  	MOV.B	W0, [W1++]
0x319C	0x470061  	ADD	W14, #1, W0
0x319E	0xEF201A  	CLR	W13
0x31A0	0xB3C02C  	MOV.B	#2, W12
0x31A2	0xB3C54B  	MOV.B	#84, W11
0x31A4	0x780500  	MOV	W0, W10
0x31A6	0x0712F1  	RCALL	_Glcd_Write_Text
0x31A8	0x370036  	BRA	L__Modbus_Settings2275
L__Modbus_Settings2284:
;GRR3000LManagementPanel.mpas,5789 :: 		4: Glcd_Write_Text('38400  ',84,row3,White);
0x31AA	0x90400E  	MOV.B	[W14+0], W0
0x31AC	0xE10464  	CP.B	W0, #4
0x31AE	0x3A0018  	BRA NZ	L__Modbus_Settings2287
L__Modbus_Settings5387:
0x31B0	0x4700E1  	ADD	W14, #1, W1
0x31B2	0xB3C330  	MOV.B	#51, W0
0x31B4	0x785880  	MOV.B	W0, [W1++]
0x31B6	0xB3C380  	MOV.B	#56, W0
0x31B8	0x785880  	MOV.B	W0, [W1++]
0x31BA	0xB3C340  	MOV.B	#52, W0
0x31BC	0x785880  	MOV.B	W0, [W1++]
0x31BE	0xB3C300  	MOV.B	#48, W0
0x31C0	0x785880  	MOV.B	W0, [W1++]
0x31C2	0xB3C300  	MOV.B	#48, W0
0x31C4	0x785880  	MOV.B	W0, [W1++]
0x31C6	0xB3C200  	MOV.B	#32, W0
0x31C8	0x785880  	MOV.B	W0, [W1++]
0x31CA	0xB3C200  	MOV.B	#32, W0
0x31CC	0x785880  	MOV.B	W0, [W1++]
0x31CE	0xEF2000  	CLR	W0
0x31D0	0x785880  	MOV.B	W0, [W1++]
0x31D2	0x470061  	ADD	W14, #1, W0
0x31D4	0xEF201A  	CLR	W13
0x31D6	0xB3C02C  	MOV.B	#2, W12
0x31D8	0xB3C54B  	MOV.B	#84, W11
0x31DA	0x780500  	MOV	W0, W10
0x31DC	0x0712D6  	RCALL	_Glcd_Write_Text
0x31DE	0x37001B  	BRA	L__Modbus_Settings2275
L__Modbus_Settings2287:
;GRR3000LManagementPanel.mpas,5790 :: 		5: Glcd_Write_Text('57600  ',84,row3,White);
0x31E0	0x90400E  	MOV.B	[W14+0], W0
0x31E2	0xE10465  	CP.B	W0, #5
0x31E4	0x3A0018  	BRA NZ	L__Modbus_Settings2290
L__Modbus_Settings5388:
0x31E6	0x4700E1  	ADD	W14, #1, W1
0x31E8	0xB3C350  	MOV.B	#53, W0
0x31EA	0x785880  	MOV.B	W0, [W1++]
0x31EC	0xB3C370  	MOV.B	#55, W0
0x31EE	0x785880  	MOV.B	W0, [W1++]
0x31F0	0xB3C360  	MOV.B	#54, W0
0x31F2	0x785880  	MOV.B	W0, [W1++]
0x31F4	0xB3C300  	MOV.B	#48, W0
0x31F6	0x785880  	MOV.B	W0, [W1++]
0x31F8	0xB3C300  	MOV.B	#48, W0
0x31FA	0x785880  	MOV.B	W0, [W1++]
0x31FC	0xB3C200  	MOV.B	#32, W0
0x31FE	0x785880  	MOV.B	W0, [W1++]
0x3200	0xB3C200  	MOV.B	#32, W0
0x3202	0x785880  	MOV.B	W0, [W1++]
0x3204	0xEF2000  	CLR	W0
0x3206	0x785880  	MOV.B	W0, [W1++]
0x3208	0x470061  	ADD	W14, #1, W0
0x320A	0xEF201A  	CLR	W13
0x320C	0xB3C02C  	MOV.B	#2, W12
0x320E	0xB3C54B  	MOV.B	#84, W11
0x3210	0x780500  	MOV	W0, W10
0x3212	0x0712BB  	RCALL	_Glcd_Write_Text
0x3214	0x370000  	BRA	L__Modbus_Settings2275
L__Modbus_Settings2290:
L__Modbus_Settings2275:
;GRR3000LManagementPanel.mpas,5794 :: 		if (Ok_Button =0) then
0x3216	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3218	0x370083  	BRA	L__Modbus_Settings2292
;GRR3000LManagementPanel.mpas,5796 :: 		while (Ok_Button =0) do
L__Modbus_Settings2295:
0x321A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x321C	0x370002  	BRA	L__Modbus_Settings2296
;GRR3000LManagementPanel.mpas,5798 :: 		asm ClrWDT; end;
0x321E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5799 :: 		end;
0x3220	0x37FFFC  	BRA	L__Modbus_Settings2295
L__Modbus_Settings2296:
;GRR3000LManagementPanel.mpas,5801 :: 		EEPROM_Write(EE_ModbusBaudRate, BaudRateSet);
0x3222	0x470060  	ADD	W14, #0, W0
0x3224	0xFB8610  	ZE	[W0], W12
0x3226	0x2F04AA  	MOV	#61514, W10
0x3228	0x2007FB  	MOV	#127, W11
0x322A	0x07F0B5  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,5802 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Modbus_Settings2300:
0x322C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x322E	0x37FFFE  	BRA	L__Modbus_Settings2300
;GRR3000LManagementPanel.mpas,5804 :: 		Chng[2] := 0;
0x3230	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x3232	0xEF2000  	CLR	W0
0x3234	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5807 :: 		1: Glcd_Write_Text(DisableText,84,row3,Black);
0x3236	0x90400E  	MOV.B	[W14+0], W0
0x3238	0xE10461  	CP.B	W0, #1
0x323A	0x3A0006  	BRA NZ	L__Modbus_Settings2307
L__Modbus_Settings5389:
0x323C	0xB3C01D  	MOV.B	#1, W13
0x323E	0xB3C02C  	MOV.B	#2, W12
0x3240	0xB3C54B  	MOV.B	#84, W11
0x3242	0x21415A  	MOV	#lo_addr(_DisableText), W10
0x3244	0x0712A2  	RCALL	_Glcd_Write_Text
0x3246	0x37006C  	BRA	L__Modbus_Settings2304
L__Modbus_Settings2307:
;GRR3000LManagementPanel.mpas,5808 :: 		2: Glcd_Write_Text(' 9600  ',84,row3,Black);
0x3248	0x90400E  	MOV.B	[W14+0], W0
0x324A	0xE10462  	CP.B	W0, #2
0x324C	0x3A0018  	BRA NZ	L__Modbus_Settings2310
L__Modbus_Settings5390:
0x324E	0x4700E1  	ADD	W14, #1, W1
0x3250	0xB3C200  	MOV.B	#32, W0
0x3252	0x785880  	MOV.B	W0, [W1++]
0x3254	0xB3C390  	MOV.B	#57, W0
0x3256	0x785880  	MOV.B	W0, [W1++]
0x3258	0xB3C360  	MOV.B	#54, W0
0x325A	0x785880  	MOV.B	W0, [W1++]
0x325C	0xB3C300  	MOV.B	#48, W0
0x325E	0x785880  	MOV.B	W0, [W1++]
0x3260	0xB3C300  	MOV.B	#48, W0
0x3262	0x785880  	MOV.B	W0, [W1++]
0x3264	0xB3C200  	MOV.B	#32, W0
0x3266	0x785880  	MOV.B	W0, [W1++]
0x3268	0xB3C200  	MOV.B	#32, W0
0x326A	0x785880  	MOV.B	W0, [W1++]
0x326C	0xEF2000  	CLR	W0
0x326E	0x785880  	MOV.B	W0, [W1++]
0x3270	0x470061  	ADD	W14, #1, W0
0x3272	0xB3C01D  	MOV.B	#1, W13
0x3274	0xB3C02C  	MOV.B	#2, W12
0x3276	0xB3C54B  	MOV.B	#84, W11
0x3278	0x780500  	MOV	W0, W10
0x327A	0x071287  	RCALL	_Glcd_Write_Text
0x327C	0x370051  	BRA	L__Modbus_Settings2304
L__Modbus_Settings2310:
;GRR3000LManagementPanel.mpas,5809 :: 		3: Glcd_Write_Text('19200  ',84,row3,Black);
0x327E	0x90400E  	MOV.B	[W14+0], W0
0x3280	0xE10463  	CP.B	W0, #3
0x3282	0x3A0018  	BRA NZ	L__Modbus_Settings2313
L__Modbus_Settings5391:
0x3284	0x4700E1  	ADD	W14, #1, W1
0x3286	0xB3C310  	MOV.B	#49, W0
0x3288	0x785880  	MOV.B	W0, [W1++]
0x328A	0xB3C390  	MOV.B	#57, W0
0x328C	0x785880  	MOV.B	W0, [W1++]
0x328E	0xB3C320  	MOV.B	#50, W0
0x3290	0x785880  	MOV.B	W0, [W1++]
0x3292	0xB3C300  	MOV.B	#48, W0
0x3294	0x785880  	MOV.B	W0, [W1++]
0x3296	0xB3C300  	MOV.B	#48, W0
0x3298	0x785880  	MOV.B	W0, [W1++]
0x329A	0xB3C200  	MOV.B	#32, W0
0x329C	0x785880  	MOV.B	W0, [W1++]
0x329E	0xB3C200  	MOV.B	#32, W0
0x32A0	0x785880  	MOV.B	W0, [W1++]
0x32A2	0xEF2000  	CLR	W0
0x32A4	0x785880  	MOV.B	W0, [W1++]
0x32A6	0x470061  	ADD	W14, #1, W0
0x32A8	0xB3C01D  	MOV.B	#1, W13
0x32AA	0xB3C02C  	MOV.B	#2, W12
0x32AC	0xB3C54B  	MOV.B	#84, W11
0x32AE	0x780500  	MOV	W0, W10
0x32B0	0x07126C  	RCALL	_Glcd_Write_Text
0x32B2	0x370036  	BRA	L__Modbus_Settings2304
L__Modbus_Settings2313:
;GRR3000LManagementPanel.mpas,5810 :: 		4: Glcd_Write_Text('38400  ',84,row3,Black);
0x32B4	0x90400E  	MOV.B	[W14+0], W0
0x32B6	0xE10464  	CP.B	W0, #4
0x32B8	0x3A0018  	BRA NZ	L__Modbus_Settings2316
L__Modbus_Settings5392:
0x32BA	0x4700E1  	ADD	W14, #1, W1
0x32BC	0xB3C330  	MOV.B	#51, W0
0x32BE	0x785880  	MOV.B	W0, [W1++]
0x32C0	0xB3C380  	MOV.B	#56, W0
0x32C2	0x785880  	MOV.B	W0, [W1++]
0x32C4	0xB3C340  	MOV.B	#52, W0
0x32C6	0x785880  	MOV.B	W0, [W1++]
0x32C8	0xB3C300  	MOV.B	#48, W0
0x32CA	0x785880  	MOV.B	W0, [W1++]
0x32CC	0xB3C300  	MOV.B	#48, W0
0x32CE	0x785880  	MOV.B	W0, [W1++]
0x32D0	0xB3C200  	MOV.B	#32, W0
0x32D2	0x785880  	MOV.B	W0, [W1++]
0x32D4	0xB3C200  	MOV.B	#32, W0
0x32D6	0x785880  	MOV.B	W0, [W1++]
0x32D8	0xEF2000  	CLR	W0
0x32DA	0x785880  	MOV.B	W0, [W1++]
0x32DC	0x470061  	ADD	W14, #1, W0
0x32DE	0xB3C01D  	MOV.B	#1, W13
0x32E0	0xB3C02C  	MOV.B	#2, W12
0x32E2	0xB3C54B  	MOV.B	#84, W11
0x32E4	0x780500  	MOV	W0, W10
0x32E6	0x071251  	RCALL	_Glcd_Write_Text
0x32E8	0x37001B  	BRA	L__Modbus_Settings2304
L__Modbus_Settings2316:
;GRR3000LManagementPanel.mpas,5811 :: 		5: Glcd_Write_Text('57600  ',84,row3,Black);
0x32EA	0x90400E  	MOV.B	[W14+0], W0
0x32EC	0xE10465  	CP.B	W0, #5
0x32EE	0x3A0018  	BRA NZ	L__Modbus_Settings2319
L__Modbus_Settings5393:
0x32F0	0x4700E1  	ADD	W14, #1, W1
0x32F2	0xB3C350  	MOV.B	#53, W0
0x32F4	0x785880  	MOV.B	W0, [W1++]
0x32F6	0xB3C370  	MOV.B	#55, W0
0x32F8	0x785880  	MOV.B	W0, [W1++]
0x32FA	0xB3C360  	MOV.B	#54, W0
0x32FC	0x785880  	MOV.B	W0, [W1++]
0x32FE	0xB3C300  	MOV.B	#48, W0
0x3300	0x785880  	MOV.B	W0, [W1++]
0x3302	0xB3C300  	MOV.B	#48, W0
0x3304	0x785880  	MOV.B	W0, [W1++]
0x3306	0xB3C200  	MOV.B	#32, W0
0x3308	0x785880  	MOV.B	W0, [W1++]
0x330A	0xB3C200  	MOV.B	#32, W0
0x330C	0x785880  	MOV.B	W0, [W1++]
0x330E	0xEF2000  	CLR	W0
0x3310	0x785880  	MOV.B	W0, [W1++]
0x3312	0x470061  	ADD	W14, #1, W0
0x3314	0xB3C01D  	MOV.B	#1, W13
0x3316	0xB3C02C  	MOV.B	#2, W12
0x3318	0xB3C54B  	MOV.B	#84, W11
0x331A	0x780500  	MOV	W0, W10
0x331C	0x071236  	RCALL	_Glcd_Write_Text
0x331E	0x370000  	BRA	L__Modbus_Settings2304
L__Modbus_Settings2319:
L__Modbus_Settings2304:
;GRR3000LManagementPanel.mpas,5817 :: 		end;
L__Modbus_Settings2292:
;GRR3000LManagementPanel.mpas,5822 :: 		end; // chng[2] while end
0x3320	0x37FED9  	BRA	L__Modbus_Settings2249
L__Modbus_Settings2250:
;GRR3000LManagementPanel.mpas,5824 :: 		end;
L__Modbus_Settings2241:
;GRR3000LManagementPanel.mpas,5825 :: 		end;
0x3322	0x37000E  	BRA	L__Modbus_Settings2185
L__Modbus_Settings2239:
;GRR3000LManagementPanel.mpas,5826 :: 		3: begin // geri
0x3324	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3326	0x784010  	MOV.B	[W0], W0
0x3328	0xE10463  	CP.B	W0, #3
0x332A	0x3A000A  	BRA NZ	L__Modbus_Settings2322
L__Modbus_Settings5394:
;GRR3000LManagementPanel.mpas,5828 :: 		if (Ok_Button =0) then
0x332C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x332E	0x370007  	BRA	L__Modbus_Settings2324
;GRR3000LManagementPanel.mpas,5830 :: 		while (Ok_Button =0) do
L__Modbus_Settings2327:
0x3330	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3332	0x370002  	BRA	L__Modbus_Settings2328
;GRR3000LManagementPanel.mpas,5832 :: 		asm ClrWDT; end;
0x3334	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,5833 :: 		end;
0x3336	0x37FFFC  	BRA	L__Modbus_Settings2327
L__Modbus_Settings2328:
;GRR3000LManagementPanel.mpas,5834 :: 		MenuExit := 1;
0x3338	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x333A	0xB3C010  	MOV.B	#1, W0
0x333C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5836 :: 		end;
L__Modbus_Settings2324:
;GRR3000LManagementPanel.mpas,5840 :: 		end;
0x333E	0x370000  	BRA	L__Modbus_Settings2185
L__Modbus_Settings2322:
L__Modbus_Settings2185:
;GRR3000LManagementPanel.mpas,5848 :: 		end;
0x3340	0x37FE54  	BRA	L__Modbus_Settings2181
L__Modbus_Settings2182:
;GRR3000LManagementPanel.mpas,5850 :: 		Modbus_Adress  := ModbusID;
0x3342	0x212DD1  	MOV	#lo_addr(_Modbus_Adress), W1
0x3344	0x212E00  	MOV	#lo_addr(_ModbusID), W0
0x3346	0x784890  	MOV.B	[W0], [W1]
;GRR3000LManagementPanel.mpas,5851 :: 		ModbusBaudRate := BaudRateSet; // ayarlanan deðeri yükle
0x3348	0x2158E1  	MOV	#lo_addr(_ModbusBaudRate), W1
0x334A	0x90400E  	MOV.B	[W14+0], W0
0x334C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5853 :: 		Uart_Procedures;
0x334E	0x075AC0  	RCALL	_Uart_Procedures
;GRR3000LManagementPanel.mpas,5856 :: 		Glcd_Fill(0x00);
0x3350	0xEF2014  	CLR	W10
0x3352	0x0732BC  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,5857 :: 		MenuSayacValue := 8;
0x3354	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x3356	0xB3C080  	MOV.B	#8, W0
0x3358	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,5859 :: 		end;
L_end_Modbus_Settings:
0x335A	0x7806CF  	POP	W13
0x335C	0x78064F  	POP	W12
0x335E	0x7805CF  	POP	W11
0x3360	0x78054F  	POP	W10
0x3362	0xFA8000  	ULNK
0x3364	0x060000  	RETURN
; end of _Modbus_Settings
_Language_Settings:
0x44C4	0xFA0008  	LNK	#8
;GRR3000LManagementPanel.mpas,3742 :: 		begin
;GRR3000LManagementPanel.mpas,3743 :: 		Glcd_Fill(0x00);
0x44C6	0x781F8A  	PUSH	W10
0x44C8	0x781F8B  	PUSH	W11
0x44CA	0x781F8C  	PUSH	W12
0x44CC	0x781F8D  	PUSH	W13
0x44CE	0xEF2014  	CLR	W10
0x44D0	0x0729FD  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,3744 :: 		MenuExit        := 0;
0x44D2	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x44D4	0xEF2000  	CLR	W0
0x44D6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3745 :: 		MenuSayacValue  := 1;
0x44D8	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x44DA	0xB3C010  	MOV.B	#1, W0
0x44DC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3746 :: 		Chng[2]         := 2;
0x44DE	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x44E0	0xB3C020  	MOV.B	#2, W0
0x44E2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3748 :: 		Glcd_Set_Font(@NewFont5x7, 5, 7, 32);     // Change font
0x44E4	0xB3C07D  	MOV.B	#7, W13
0x44E6	0xB3C05C  	MOV.B	#5, W12
0x44E8	0x281E8A  	MOV	#lo_addr(_NewFont5x7), W10
0x44EA	0x20002B  	MOV	#higher_addr(_NewFont5x7), W11
0x44EC	0x200200  	MOV	#32, W0
0x44EE	0x781F80  	PUSH	W0
0x44F0	0x070AE3  	RCALL	_Glcd_Set_Font
0x44F2	0xB1002F  	SUB	#2, W15
;GRR3000LManagementPanel.mpas,3751 :: 		Glcd_Write_Text(Title_LangMenu,      0, Row1, Black);
0x44F4	0xB3C01D  	MOV.B	#1, W13
0x44F6	0xEF2018  	CLR	W12
0x44F8	0xEF2016  	CLR	W11
0x44FA	0x21349A  	MOV	#lo_addr(_Title_LangMenu), W10
0x44FC	0x070946  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3752 :: 		Glcd_Write_Text(Subtitle_Lang,       6, Row2, Black);
0x44FE	0xB3C01D  	MOV.B	#1, W13
0x4500	0xB3C01C  	MOV.B	#1, W12
0x4502	0xB3C06B  	MOV.B	#6, W11
0x4504	0x21650A  	MOV	#lo_addr(_Subtitle_Lang), W10
0x4506	0x070941  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3753 :: 		Glcd_Write_Text(SubTitle_Back,       6, Row3, Black);
0x4508	0xB3C01D  	MOV.B	#1, W13
0x450A	0xB3C02C  	MOV.B	#2, W12
0x450C	0xB3C06B  	MOV.B	#6, W11
0x450E	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x4510	0x07093C  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,3755 :: 		LanguageBit := EEPROM_Read(EE_LanguageBitEeAddr);
0x4512	0x2F04CA  	MOV	#61516, W10
0x4514	0x2007FB  	MOV	#127, W11
0x4516	0x07EFA4  	RCALL	_EEPROM_Read
0x4518	0x212E11  	MOV	#lo_addr(_LanguageBit), W1
0x451A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3757 :: 		English: Glcd_Write_Text('ENGLISH', 84, Row2, Black);
0x451C	0xE10462  	CP.B	W0, #2
0x451E	0x3A0018  	BRA NZ	L__Language_Settings1059
L__Language_Settings5193:
0x4520	0x4700E0  	ADD	W14, #0, W1
0x4522	0xB3C450  	MOV.B	#69, W0
0x4524	0x785880  	MOV.B	W0, [W1++]
0x4526	0xB3C4E0  	MOV.B	#78, W0
0x4528	0x785880  	MOV.B	W0, [W1++]
0x452A	0xB3C470  	MOV.B	#71, W0
0x452C	0x785880  	MOV.B	W0, [W1++]
0x452E	0xB3C4C0  	MOV.B	#76, W0
0x4530	0x785880  	MOV.B	W0, [W1++]
0x4532	0xB3C490  	MOV.B	#73, W0
0x4534	0x785880  	MOV.B	W0, [W1++]
0x4536	0xB3C530  	MOV.B	#83, W0
0x4538	0x785880  	MOV.B	W0, [W1++]
0x453A	0xB3C480  	MOV.B	#72, W0
0x453C	0x785880  	MOV.B	W0, [W1++]
0x453E	0xEF2000  	CLR	W0
0x4540	0x785880  	MOV.B	W0, [W1++]
0x4542	0x470060  	ADD	W14, #0, W0
0x4544	0xB3C01D  	MOV.B	#1, W13
0x4546	0xB3C01C  	MOV.B	#1, W12
0x4548	0xB3C54B  	MOV.B	#84, W11
0x454A	0x780500  	MOV	W0, W10
0x454C	0x07091E  	RCALL	_Glcd_Write_Text
0x454E	0x37001C  	BRA	L__Language_Settings1056
L__Language_Settings1059:
;GRR3000LManagementPanel.mpas,3758 :: 		Turkish: Glcd_Write_Text('TÜRKÇE ', 84, Row2, Black);
0x4550	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x4552	0x784010  	MOV.B	[W0], W0
0x4554	0xE10463  	CP.B	W0, #3
0x4556	0x3A0018  	BRA NZ	L__Language_Settings1062
L__Language_Settings5194:
0x4558	0x4700E0  	ADD	W14, #0, W1
0x455A	0xB3C540  	MOV.B	#84, W0
0x455C	0x785880  	MOV.B	W0, [W1++]
0x455E	0xB3CDC0  	MOV.B	#220, W0
0x4560	0x785880  	MOV.B	W0, [W1++]
0x4562	0xB3C520  	MOV.B	#82, W0
0x4564	0x785880  	MOV.B	W0, [W1++]
0x4566	0xB3C4B0  	MOV.B	#75, W0
0x4568	0x785880  	MOV.B	W0, [W1++]
0x456A	0xB3CC70  	MOV.B	#199, W0
0x456C	0x785880  	MOV.B	W0, [W1++]
0x456E	0xB3C450  	MOV.B	#69, W0
0x4570	0x785880  	MOV.B	W0, [W1++]
0x4572	0xB3C200  	MOV.B	#32, W0
0x4574	0x785880  	MOV.B	W0, [W1++]
0x4576	0xEF2000  	CLR	W0
0x4578	0x785880  	MOV.B	W0, [W1++]
0x457A	0x470060  	ADD	W14, #0, W0
0x457C	0xB3C01D  	MOV.B	#1, W13
0x457E	0xB3C01C  	MOV.B	#1, W12
0x4580	0xB3C54B  	MOV.B	#84, W11
0x4582	0x780500  	MOV	W0, W10
0x4584	0x070902  	RCALL	_Glcd_Write_Text
0x4586	0x370000  	BRA	L__Language_Settings1056
L__Language_Settings1062:
L__Language_Settings1056:
;GRR3000LManagementPanel.mpas,3762 :: 		While (MenuExit =0) do
L__Language_Settings1064:
0x4588	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x458A	0x784010  	MOV.B	[W0], W0
0x458C	0xE10460  	CP.B	W0, #0
0x458E	0x3A00CD  	BRA NZ	L__Language_Settings1065
L__Language_Settings5195:
;GRR3000LManagementPanel.mpas,3767 :: 		MenuSayac := MenuButtonRead(2, 255);  // menu için butonlarý oku 2 satýr menü var
0x4590	0xB3CFFB  	MOV.B	#255, W11
0x4592	0xB3C02A  	MOV.B	#2, W10
0x4594	0x07E67D  	RCALL	_MenuButtonRead
0x4596	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x4598	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3769 :: 		asm ClrWDT; end;
0x459A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3772 :: 		1: begin // dil
0x459C	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x459E	0x784010  	MOV.B	[W0], W0
0x45A0	0xE10461  	CP.B	W0, #1
0x45A2	0x3A00B4  	BRA NZ	L__Language_Settings1071
L__Language_Settings5196:
;GRR3000LManagementPanel.mpas,3774 :: 		if (Ok_Button =0) then
0x45A4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x45A6	0x3700B1  	BRA	L__Language_Settings1073
;GRR3000LManagementPanel.mpas,3776 :: 		while (Ok_Button =0) do
L__Language_Settings1076:
0x45A8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x45AA	0x370002  	BRA	L__Language_Settings1077
;GRR3000LManagementPanel.mpas,3778 :: 		asm ClrWDT; end;
0x45AC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3779 :: 		end;
0x45AE	0x37FFFC  	BRA	L__Language_Settings1076
L__Language_Settings1077:
;GRR3000LManagementPanel.mpas,3781 :: 		Chng[1] := 1;
0x45B0	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x45B2	0xB3C010  	MOV.B	#1, W0
0x45B4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3783 :: 		While (Chng[1] =1) do
L__Language_Settings1081:
0x45B6	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x45B8	0x784010  	MOV.B	[W0], W0
0x45BA	0xE10461  	CP.B	W0, #1
0x45BC	0x3A00A6  	BRA NZ	L__Language_Settings1082
L__Language_Settings5197:
;GRR3000LManagementPanel.mpas,3786 :: 		asm ClrWDT; end;
0x45BE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3788 :: 		if (Up_Button =0) then
0x45C0	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x45C2	0x37000F  	BRA	L__Language_Settings1086
;GRR3000LManagementPanel.mpas,3790 :: 		while (Up_Button =0) do
L__Language_Settings1089:
0x45C4	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x45C6	0x370002  	BRA	L__Language_Settings1090
;GRR3000LManagementPanel.mpas,3792 :: 		asm ClrWDT; end;
0x45C8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3793 :: 		end;
0x45CA	0x37FFFC  	BRA	L__Language_Settings1089
L__Language_Settings1090:
;GRR3000LManagementPanel.mpas,3795 :: 		Inc(LanguageBit);
0x45CC	0xB3C011  	MOV.B	#1, W1
0x45CE	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x45D0	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,3796 :: 		if (LanguageBit >3) then LanguageBit := 2;
0x45D2	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x45D4	0x784010  	MOV.B	[W0], W0
0x45D6	0xE10463  	CP.B	W0, #3
0x45D8	0x360003  	BRA LEU	L__Language_Settings1094
L__Language_Settings5198:
0x45DA	0x212E11  	MOV	#lo_addr(_LanguageBit), W1
0x45DC	0xB3C020  	MOV.B	#2, W0
0x45DE	0x784880  	MOV.B	W0, [W1]
L__Language_Settings1094:
;GRR3000LManagementPanel.mpas,3798 :: 		end else
0x45E0	0x370010  	BRA	L__Language_Settings1087
L__Language_Settings1086:
;GRR3000LManagementPanel.mpas,3799 :: 		if (Down_Button =0) then
0x45E2	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x45E4	0x37000E  	BRA	L__Language_Settings1097
;GRR3000LManagementPanel.mpas,3801 :: 		while (Down_Button =0) do
L__Language_Settings1100:
0x45E6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x45E8	0x370002  	BRA	L__Language_Settings1101
;GRR3000LManagementPanel.mpas,3803 :: 		asm ClrWDT; end;
0x45EA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3804 :: 		end;
0x45EC	0x37FFFC  	BRA	L__Language_Settings1100
L__Language_Settings1101:
;GRR3000LManagementPanel.mpas,3806 :: 		Dec(LanguageBit);
0x45EE	0xB3C011  	MOV.B	#1, W1
0x45F0	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x45F2	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,3807 :: 		if (LanguageBit <2) then LanguageBit := 3;
0x45F4	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x45F6	0x784010  	MOV.B	[W0], W0
0x45F8	0xE10462  	CP.B	W0, #2
0x45FA	0x310003  	BRA GEU	L__Language_Settings1105
L__Language_Settings5199:
0x45FC	0x212E11  	MOV	#lo_addr(_LanguageBit), W1
0x45FE	0xB3C030  	MOV.B	#3, W0
0x4600	0x784880  	MOV.B	W0, [W1]
L__Language_Settings1105:
;GRR3000LManagementPanel.mpas,3809 :: 		end;
L__Language_Settings1097:
L__Language_Settings1087:
;GRR3000LManagementPanel.mpas,3812 :: 		English: Glcd_Write_Text('ENGLISH', 84, Row2, White);
0x4602	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x4604	0x784010  	MOV.B	[W0], W0
0x4606	0xE10462  	CP.B	W0, #2
0x4608	0x3A0018  	BRA NZ	L__Language_Settings1110
L__Language_Settings5200:
0x460A	0x4700E0  	ADD	W14, #0, W1
0x460C	0xB3C450  	MOV.B	#69, W0
0x460E	0x785880  	MOV.B	W0, [W1++]
0x4610	0xB3C4E0  	MOV.B	#78, W0
0x4612	0x785880  	MOV.B	W0, [W1++]
0x4614	0xB3C470  	MOV.B	#71, W0
0x4616	0x785880  	MOV.B	W0, [W1++]
0x4618	0xB3C4C0  	MOV.B	#76, W0
0x461A	0x785880  	MOV.B	W0, [W1++]
0x461C	0xB3C490  	MOV.B	#73, W0
0x461E	0x785880  	MOV.B	W0, [W1++]
0x4620	0xB3C530  	MOV.B	#83, W0
0x4622	0x785880  	MOV.B	W0, [W1++]
0x4624	0xB3C480  	MOV.B	#72, W0
0x4626	0x785880  	MOV.B	W0, [W1++]
0x4628	0xEF2000  	CLR	W0
0x462A	0x785880  	MOV.B	W0, [W1++]
0x462C	0x470060  	ADD	W14, #0, W0
0x462E	0xEF201A  	CLR	W13
0x4630	0xB3C01C  	MOV.B	#1, W12
0x4632	0xB3C54B  	MOV.B	#84, W11
0x4634	0x780500  	MOV	W0, W10
0x4636	0x0708A9  	RCALL	_Glcd_Write_Text
0x4638	0x37001C  	BRA	L__Language_Settings1107
L__Language_Settings1110:
;GRR3000LManagementPanel.mpas,3813 :: 		Turkish: Glcd_Write_Text('TÜRKÇE ', 84, Row2, White);
0x463A	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x463C	0x784010  	MOV.B	[W0], W0
0x463E	0xE10463  	CP.B	W0, #3
0x4640	0x3A0018  	BRA NZ	L__Language_Settings1113
L__Language_Settings5201:
0x4642	0x4700E0  	ADD	W14, #0, W1
0x4644	0xB3C540  	MOV.B	#84, W0
0x4646	0x785880  	MOV.B	W0, [W1++]
0x4648	0xB3CDC0  	MOV.B	#220, W0
0x464A	0x785880  	MOV.B	W0, [W1++]
0x464C	0xB3C520  	MOV.B	#82, W0
0x464E	0x785880  	MOV.B	W0, [W1++]
0x4650	0xB3C4B0  	MOV.B	#75, W0
0x4652	0x785880  	MOV.B	W0, [W1++]
0x4654	0xB3CC70  	MOV.B	#199, W0
0x4656	0x785880  	MOV.B	W0, [W1++]
0x4658	0xB3C450  	MOV.B	#69, W0
0x465A	0x785880  	MOV.B	W0, [W1++]
0x465C	0xB3C200  	MOV.B	#32, W0
0x465E	0x785880  	MOV.B	W0, [W1++]
0x4660	0xEF2000  	CLR	W0
0x4662	0x785880  	MOV.B	W0, [W1++]
0x4664	0x470060  	ADD	W14, #0, W0
0x4666	0xEF201A  	CLR	W13
0x4668	0xB3C01C  	MOV.B	#1, W12
0x466A	0xB3C54B  	MOV.B	#84, W11
0x466C	0x780500  	MOV	W0, W10
0x466E	0x07088D  	RCALL	_Glcd_Write_Text
0x4670	0x370000  	BRA	L__Language_Settings1107
L__Language_Settings1113:
L__Language_Settings1107:
;GRR3000LManagementPanel.mpas,3817 :: 		if (Ok_Button =0) then
0x4672	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4674	0x370049  	BRA	L__Language_Settings1115
;GRR3000LManagementPanel.mpas,3819 :: 		while (Ok_Button =0) do
L__Language_Settings1118:
0x4676	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4678	0x370002  	BRA	L__Language_Settings1119
;GRR3000LManagementPanel.mpas,3821 :: 		asm ClrWDT; end;
0x467A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3822 :: 		end;
0x467C	0x37FFFC  	BRA	L__Language_Settings1118
L__Language_Settings1119:
;GRR3000LManagementPanel.mpas,3824 :: 		EEPROM_Write(EE_LanguageBitEeAddr, LanguageBit);
0x467E	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x4680	0xFB8610  	ZE	[W0], W12
0x4682	0x2F04CA  	MOV	#61516, W10
0x4684	0x2007FB  	MOV	#127, W11
0x4686	0x07E687  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,3825 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Language_Settings1123:
0x4688	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x468A	0x37FFFE  	BRA	L__Language_Settings1123
;GRR3000LManagementPanel.mpas,3827 :: 		Chng[1] := 0;
0x468C	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x468E	0xEF2000  	CLR	W0
0x4690	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3828 :: 		LanguageBit := EEPROM_Read(EE_LanguageBitEeAddr);
0x4692	0x2F04CA  	MOV	#61516, W10
0x4694	0x2007FB  	MOV	#127, W11
0x4696	0x07EEE4  	RCALL	_EEPROM_Read
0x4698	0x212E11  	MOV	#lo_addr(_LanguageBit), W1
0x469A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3830 :: 		English: Glcd_Write_Text('ENGLISH', 84, Row2, Black);
0x469C	0xE10462  	CP.B	W0, #2
0x469E	0x3A0018  	BRA NZ	L__Language_Settings1130
L__Language_Settings5202:
0x46A0	0x4700E0  	ADD	W14, #0, W1
0x46A2	0xB3C450  	MOV.B	#69, W0
0x46A4	0x785880  	MOV.B	W0, [W1++]
0x46A6	0xB3C4E0  	MOV.B	#78, W0
0x46A8	0x785880  	MOV.B	W0, [W1++]
0x46AA	0xB3C470  	MOV.B	#71, W0
0x46AC	0x785880  	MOV.B	W0, [W1++]
0x46AE	0xB3C4C0  	MOV.B	#76, W0
0x46B0	0x785880  	MOV.B	W0, [W1++]
0x46B2	0xB3C490  	MOV.B	#73, W0
0x46B4	0x785880  	MOV.B	W0, [W1++]
0x46B6	0xB3C530  	MOV.B	#83, W0
0x46B8	0x785880  	MOV.B	W0, [W1++]
0x46BA	0xB3C480  	MOV.B	#72, W0
0x46BC	0x785880  	MOV.B	W0, [W1++]
0x46BE	0xEF2000  	CLR	W0
0x46C0	0x785880  	MOV.B	W0, [W1++]
0x46C2	0x470060  	ADD	W14, #0, W0
0x46C4	0xB3C01D  	MOV.B	#1, W13
0x46C6	0xB3C01C  	MOV.B	#1, W12
0x46C8	0xB3C54B  	MOV.B	#84, W11
0x46CA	0x780500  	MOV	W0, W10
0x46CC	0x07085E  	RCALL	_Glcd_Write_Text
0x46CE	0x37001C  	BRA	L__Language_Settings1127
L__Language_Settings1130:
;GRR3000LManagementPanel.mpas,3831 :: 		Turkish: Glcd_Write_Text('TÜRKÇE ', 84, Row2, Black);
0x46D0	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x46D2	0x784010  	MOV.B	[W0], W0
0x46D4	0xE10463  	CP.B	W0, #3
0x46D6	0x3A0018  	BRA NZ	L__Language_Settings1133
L__Language_Settings5203:
0x46D8	0x4700E0  	ADD	W14, #0, W1
0x46DA	0xB3C540  	MOV.B	#84, W0
0x46DC	0x785880  	MOV.B	W0, [W1++]
0x46DE	0xB3CDC0  	MOV.B	#220, W0
0x46E0	0x785880  	MOV.B	W0, [W1++]
0x46E2	0xB3C520  	MOV.B	#82, W0
0x46E4	0x785880  	MOV.B	W0, [W1++]
0x46E6	0xB3C4B0  	MOV.B	#75, W0
0x46E8	0x785880  	MOV.B	W0, [W1++]
0x46EA	0xB3CC70  	MOV.B	#199, W0
0x46EC	0x785880  	MOV.B	W0, [W1++]
0x46EE	0xB3C450  	MOV.B	#69, W0
0x46F0	0x785880  	MOV.B	W0, [W1++]
0x46F2	0xB3C200  	MOV.B	#32, W0
0x46F4	0x785880  	MOV.B	W0, [W1++]
0x46F6	0xEF2000  	CLR	W0
0x46F8	0x785880  	MOV.B	W0, [W1++]
0x46FA	0x470060  	ADD	W14, #0, W0
0x46FC	0xB3C01D  	MOV.B	#1, W13
0x46FE	0xB3C01C  	MOV.B	#1, W12
0x4700	0xB3C54B  	MOV.B	#84, W11
0x4702	0x780500  	MOV	W0, W10
0x4704	0x070842  	RCALL	_Glcd_Write_Text
0x4706	0x370000  	BRA	L__Language_Settings1127
L__Language_Settings1133:
L__Language_Settings1127:
;GRR3000LManagementPanel.mpas,3836 :: 		end;
L__Language_Settings1115:
;GRR3000LManagementPanel.mpas,3841 :: 		end; // chng[1] while end
0x4708	0x37FF56  	BRA	L__Language_Settings1081
L__Language_Settings1082:
;GRR3000LManagementPanel.mpas,3844 :: 		end;
L__Language_Settings1073:
;GRR3000LManagementPanel.mpas,3846 :: 		end;
0x470A	0x37000E  	BRA	L__Language_Settings1068
L__Language_Settings1071:
;GRR3000LManagementPanel.mpas,3848 :: 		2:  begin // geri
0x470C	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x470E	0x784010  	MOV.B	[W0], W0
0x4710	0xE10462  	CP.B	W0, #2
0x4712	0x3A000A  	BRA NZ	L__Language_Settings1136
L__Language_Settings5204:
;GRR3000LManagementPanel.mpas,3850 :: 		if (Ok_Button =0) then
0x4714	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x4716	0x370007  	BRA	L__Language_Settings1138
;GRR3000LManagementPanel.mpas,3852 :: 		while (Ok_Button =0) do
L__Language_Settings1141:
0x4718	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x471A	0x370002  	BRA	L__Language_Settings1142
;GRR3000LManagementPanel.mpas,3854 :: 		asm ClrWDT; end;
0x471C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,3855 :: 		end;
0x471E	0x37FFFC  	BRA	L__Language_Settings1141
L__Language_Settings1142:
;GRR3000LManagementPanel.mpas,3856 :: 		MenuExit := 1;
0x4720	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x4722	0xB3C010  	MOV.B	#1, W0
0x4724	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3858 :: 		end;
L__Language_Settings1138:
;GRR3000LManagementPanel.mpas,3862 :: 		end;
0x4726	0x370000  	BRA	L__Language_Settings1068
L__Language_Settings1136:
L__Language_Settings1068:
;GRR3000LManagementPanel.mpas,3867 :: 		end;
0x4728	0x37FF2F  	BRA	L__Language_Settings1064
L__Language_Settings1065:
;GRR3000LManagementPanel.mpas,3869 :: 		if (LanguageBit = Turkish) then
0x472A	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x472C	0x784010  	MOV.B	[W0], W0
0x472E	0xE10463  	CP.B	W0, #3
0x4730	0x3A0002  	BRA NZ	L__Language_Settings1146
L__Language_Settings5205:
;GRR3000LManagementPanel.mpas,3871 :: 		Turkish_Lang;
0x4732	0x070A50  	RCALL	_Turkish_Lang
;GRR3000LManagementPanel.mpas,3872 :: 		end else
0x4734	0x370005  	BRA	L__Language_Settings1147
L__Language_Settings1146:
;GRR3000LManagementPanel.mpas,3873 :: 		if (LanguageBit = English) then
0x4736	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0x4738	0x784010  	MOV.B	[W0], W0
0x473A	0xE10462  	CP.B	W0, #2
0x473C	0x3A0001  	BRA NZ	L__Language_Settings1149
L__Language_Settings5206:
;GRR3000LManagementPanel.mpas,3875 :: 		English_Lang;
0x473E	0x071960  	RCALL	_English_Lang
;GRR3000LManagementPanel.mpas,3876 :: 		end;
L__Language_Settings1149:
L__Language_Settings1147:
;GRR3000LManagementPanel.mpas,3878 :: 		Glcd_Fill(0x00);
0x4740	0xEF2014  	CLR	W10
0x4742	0x0728C4  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,3879 :: 		MenuSayacValue := 10;
0x4744	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x4746	0xB3C0A0  	MOV.B	#10, W0
0x4748	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,3881 :: 		end;
L_end_Language_Settings:
0x474A	0x7806CF  	POP	W13
0x474C	0x78064F  	POP	W12
0x474E	0x7805CF  	POP	W11
0x4750	0x78054F  	POP	W10
0x4752	0xFA8000  	ULNK
0x4754	0x060000  	RETURN
; end of _Language_Settings
_Log_Settings:
0x475A	0xFA001E  	LNK	#30
;LogUnit.mpas,715 :: 		begin
;LogUnit.mpas,716 :: 		asm clrwdt; end;
0x475C	0x781F8A  	PUSH	W10
0x475E	0x781F8B  	PUSH	W11
0x4760	0x781F8C  	PUSH	W12
0x4762	0x781F8D  	PUSH	W13
0x4764	0xFE6000  	CLRWDT
;LogUnit.mpas,717 :: 		Glcd_Fill(0x00);
0x4766	0xEF2014  	CLR	W10
0x4768	0x0728B1  	RCALL	_Glcd_Fill
;LogUnit.mpas,718 :: 		Log_Page        := 1;
0x476A	0xB3C010  	MOV.B	#1, W0
0x476C	0x984750  	MOV.B	W0, [W14+5]
;LogUnit.mpas,719 :: 		MenuExit        := 0;
0x476E	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x4770	0xEF2000  	CLR	W0
0x4772	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,720 :: 		List_Text       := '   ';
0x4774	0x4700E1  	ADD	W14, #1, W1
0x4776	0xB3C200  	MOV.B	#32, W0
0x4778	0x785880  	MOV.B	W0, [W1++]
0x477A	0xB3C200  	MOV.B	#32, W0
0x477C	0x785880  	MOV.B	W0, [W1++]
0x477E	0xB3C200  	MOV.B	#32, W0
0x4780	0x785880  	MOV.B	W0, [W1++]
0x4782	0xEF2000  	CLR	W0
0x4784	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,722 :: 		Glcd_Write_Text(Title_LogMenu,0,Row1,Black);
0x4786	0xB3C01D  	MOV.B	#1, W13
0x4788	0xB3C00C  	MOV.B	#0, W12
0x478A	0xEF2016  	CLR	W11
0x478C	0x2106EA  	MOV	#lo_addr(_Title_LogMenu), W10
0x478E	0x0707FD  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,723 :: 		Glcd_Write_Text(SubTitle_LogRead,0,Row2,Black);
0x4790	0xB3C01D  	MOV.B	#1, W13
0x4792	0xB3C01C  	MOV.B	#1, W12
0x4794	0xEF2016  	CLR	W11
0x4796	0x21083A  	MOV	#lo_addr(_SubTitle_LogRead), W10
0x4798	0x0707F8  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,729 :: 		Log_Array              := EEPROM_Read(EE_LogListArrayEeAddr);
0x479A	0x2F07EA  	MOV	#61566, W10
0x479C	0x2007FB  	MOV	#127, W11
0x479E	0x07EE60  	RCALL	_EEPROM_Read
0x47A0	0x20AAE1  	MOV	#lo_addr(_Log_Array), W1
0x47A2	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,730 :: 		Pause_ms(50);
0x47A4	0x20032A  	MOV	#50, W10
0x47A6	0x074B77  	RCALL	_Pause_Ms
;LogUnit.mpas,733 :: 		clrwdt;
0x47A8	0xFE6000  	CLRWDT
;LogUnit.mpas,736 :: 		for Read_TempByte := 1 to 128 do
0x47AA	0xB3C010  	MOV.B	#1, W0
0x47AC	0x984700  	MOV.B	W0, [W14+0]
L__Log_Settings252:
;LogUnit.mpas,739 :: 		asm clrwdt; end;
0x47AE	0xFE6000  	CLRWDT
;LogUnit.mpas,741 :: 		Read_LogEvent[Read_TempByte] := EEPROM_Read(EeAddr_Log_Event[Read_TempByte]); // önce olay var mý ona bak
0x47B0	0x470060  	ADD	W14, #0, W0
0x47B2	0xFB8010  	ZE	[W0], W0
0x47B4	0x500161  	SUB	W0, #1, W2
0x47B6	0xDD10C1  	SL	W2, #1, W1
0x47B8	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x47BA	0x400001  	ADD	W0, W1, W0
0x47BC	0x980F60  	MOV	W0, [W14+28]
0x47BE	0xDD10C2  	SL	W2, #2, W1
0x47C0	0x291A80  	MOV	#lo_addr(_EeAddr_Log_Event), W0
0x47C2	0x400081  	ADD	W0, W1, W1
0x47C4	0x200020  	MOV	#higher_addr(_EeAddr_Log_Event), W0
0x47C6	0xB7A034  	MOV	WREG, PSVPAG
0x47C8	0xBE0511  	MOV.D	[W1], W10
0x47CA	0x07EE4A  	RCALL	_EEPROM_Read
0x47CC	0x9008EE  	MOV	[W14+28], W1
0x47CE	0x780880  	MOV	W0, [W1]
;LogUnit.mpas,742 :: 		Pause_ms(10);
0x47D0	0x2000AA  	MOV	#10, W10
0x47D2	0x074B61  	RCALL	_Pause_Ms
;LogUnit.mpas,744 :: 		Read_LogClock[Read_TempByte] := EEPROM_Read(EeAddr_Log_Clock[Read_TempByte]);
0x47D4	0x470060  	ADD	W14, #0, W0
0x47D6	0xFB8010  	ZE	[W0], W0
0x47D8	0x500161  	SUB	W0, #1, W2
0x47DA	0xDD10C1  	SL	W2, #1, W1
0x47DC	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x47DE	0x400001  	ADD	W0, W1, W0
0x47E0	0x980F60  	MOV	W0, [W14+28]
0x47E2	0xDD10C2  	SL	W2, #2, W1
0x47E4	0x293A80  	MOV	#lo_addr(_EeAddr_Log_Clock), W0
0x47E6	0x400081  	ADD	W0, W1, W1
0x47E8	0x200020  	MOV	#higher_addr(_EeAddr_Log_Clock), W0
0x47EA	0xB7A034  	MOV	WREG, PSVPAG
0x47EC	0xBE0511  	MOV.D	[W1], W10
0x47EE	0x07EE38  	RCALL	_EEPROM_Read
0x47F0	0x9008EE  	MOV	[W14+28], W1
0x47F2	0x780880  	MOV	W0, [W1]
;LogUnit.mpas,745 :: 		Pause_ms(10);
0x47F4	0x2000AA  	MOV	#10, W10
0x47F6	0x074B4F  	RCALL	_Pause_Ms
;LogUnit.mpas,747 :: 		asm clrwdt; end;
0x47F8	0xFE6000  	CLRWDT
;LogUnit.mpas,749 :: 		Read_LogDateHi[Read_TempByte] := EEPROM_Read(EeAddr_Log_DateHi[Read_TempByte]);
0x47FA	0x470060  	ADD	W14, #0, W0
0x47FC	0xFB8010  	ZE	[W0], W0
0x47FE	0x500161  	SUB	W0, #1, W2
0x4800	0xDD10C1  	SL	W2, #1, W1
0x4802	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4804	0x400001  	ADD	W0, W1, W0
0x4806	0x980F60  	MOV	W0, [W14+28]
0x4808	0xDD10C2  	SL	W2, #2, W1
0x480A	0x295A80  	MOV	#lo_addr(_EeAddr_Log_DateHi), W0
0x480C	0x400081  	ADD	W0, W1, W1
0x480E	0x200020  	MOV	#higher_addr(_EeAddr_Log_DateHi), W0
0x4810	0xB7A034  	MOV	WREG, PSVPAG
0x4812	0xBE0511  	MOV.D	[W1], W10
0x4814	0x07EE25  	RCALL	_EEPROM_Read
0x4816	0x9008EE  	MOV	[W14+28], W1
0x4818	0x780880  	MOV	W0, [W1]
;LogUnit.mpas,750 :: 		Pause_ms(10);
0x481A	0x2000AA  	MOV	#10, W10
0x481C	0x074B3C  	RCALL	_Pause_Ms
;LogUnit.mpas,752 :: 		asm clrwdt; end;
0x481E	0xFE6000  	CLRWDT
;LogUnit.mpas,754 :: 		Read_LogDateLo[Read_TempByte] := EEPROM_Read(EeAddr_Log_DateLo[Read_TempByte]);
0x4820	0x470060  	ADD	W14, #0, W0
0x4822	0xFB8010  	ZE	[W0], W0
0x4824	0x500161  	SUB	W0, #1, W2
0x4826	0xDD10C1  	SL	W2, #1, W1
0x4828	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x482A	0x400001  	ADD	W0, W1, W0
0x482C	0x980F60  	MOV	W0, [W14+28]
0x482E	0xDD10C2  	SL	W2, #2, W1
0x4830	0x297A80  	MOV	#lo_addr(_EeAddr_Log_DateLo), W0
0x4832	0x400081  	ADD	W0, W1, W1
0x4834	0x200020  	MOV	#higher_addr(_EeAddr_Log_DateLo), W0
0x4836	0xB7A034  	MOV	WREG, PSVPAG
0x4838	0xBE0511  	MOV.D	[W1], W10
0x483A	0x07EE12  	RCALL	_EEPROM_Read
0x483C	0x9008EE  	MOV	[W14+28], W1
0x483E	0x780880  	MOV	W0, [W1]
;LogUnit.mpas,755 :: 		Pause_ms(10);
0x4840	0x2000AA  	MOV	#10, W10
0x4842	0x074B29  	RCALL	_Pause_Ms
;LogUnit.mpas,757 :: 		asm clrwdt; end;
0x4844	0xFE6000  	CLRWDT
;LogUnit.mpas,760 :: 		end;
0x4846	0x90408E  	MOV.B	[W14+0], W1
0x4848	0xB3C800  	MOV.B	#128, W0
0x484A	0xE10C00  	CP.B	W1, W0
0x484C	0x320004  	BRA Z	L__Log_Settings255
L__Log_Settings488:
0x484E	0x90408E  	MOV.B	[W14+0], W1
0x4850	0x470060  	ADD	W14, #0, W0
0x4852	0x40C861  	ADD.B	W1, #1, [W0]
0x4854	0x37FFAC  	BRA	L__Log_Settings252
L__Log_Settings255:
;LogUnit.mpas,763 :: 		ByteToStr(Log_Array, List_Text);
0x4856	0x4700E1  	ADD	W14, #1, W1
0x4858	0x20AAE0  	MOV	#lo_addr(_Log_Array), W0
0x485A	0x780581  	MOV	W1, W11
0x485C	0x784510  	MOV.B	[W0], W10
0x485E	0x07E094  	RCALL	_ByteToStr
;LogUnit.mpas,764 :: 		Glcd_Write_Text(List_Text,0,Row4,Black);
0x4860	0x470061  	ADD	W14, #1, W0
0x4862	0xB3C01D  	MOV.B	#1, W13
0x4864	0xB3C03C  	MOV.B	#3, W12
0x4866	0xEF2016  	CLR	W11
0x4868	0x780500  	MOV	W0, W10
0x486A	0x07078F  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,765 :: 		Glcd_Write_Text('/128-List',20,Row4,Black);
0x486C	0x4700E6  	ADD	W14, #6, W1
0x486E	0xB3C2F0  	MOV.B	#47, W0
0x4870	0x785880  	MOV.B	W0, [W1++]
0x4872	0xB3C310  	MOV.B	#49, W0
0x4874	0x785880  	MOV.B	W0, [W1++]
0x4876	0xB3C320  	MOV.B	#50, W0
0x4878	0x785880  	MOV.B	W0, [W1++]
0x487A	0xB3C380  	MOV.B	#56, W0
0x487C	0x785880  	MOV.B	W0, [W1++]
0x487E	0xB3C2D0  	MOV.B	#45, W0
0x4880	0x785880  	MOV.B	W0, [W1++]
0x4882	0xB3C4C0  	MOV.B	#76, W0
0x4884	0x785880  	MOV.B	W0, [W1++]
0x4886	0xB3C690  	MOV.B	#105, W0
0x4888	0x785880  	MOV.B	W0, [W1++]
0x488A	0xB3C730  	MOV.B	#115, W0
0x488C	0x785880  	MOV.B	W0, [W1++]
0x488E	0xB3C740  	MOV.B	#116, W0
0x4890	0x785880  	MOV.B	W0, [W1++]
0x4892	0xEF2000  	CLR	W0
0x4894	0x785880  	MOV.B	W0, [W1++]
0x4896	0x470066  	ADD	W14, #6, W0
0x4898	0xB3C01D  	MOV.B	#1, W13
0x489A	0xB3C03C  	MOV.B	#3, W12
0x489C	0xB3C14B  	MOV.B	#20, W11
0x489E	0x780500  	MOV	W0, W10
0x48A0	0x070774  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,768 :: 		for i:= 1 to 10 do
; i start address is: 0 (W0)
0x48A2	0xB3C010  	MOV.B	#1, W0
; i end address is: 0 (W0)
L__Log_Settings257:
;LogUnit.mpas,770 :: 		Pause_ms(100);
; i start address is: 0 (W0)
0x48A4	0x781F80  	PUSH	W0
0x48A6	0x20064A  	MOV	#100, W10
0x48A8	0x074AF6  	RCALL	_Pause_Ms
0x48AA	0x78004F  	POP	W0
;LogUnit.mpas,772 :: 		clrwdt;
0x48AC	0xFE6000  	CLRWDT
;LogUnit.mpas,774 :: 		end;
0x48AE	0xE1046A  	CP.B	W0, #10
0x48B0	0x320003  	BRA Z	L__Log_Settings260
L__Log_Settings489:
; i start address is: 2 (W1)
0x48B2	0x4040E1  	ADD.B	W0, #1, W1
; i end address is: 0 (W0)
0x48B4	0x784001  	MOV.B	W1, W0
; i end address is: 2 (W1)
0x48B6	0x37FFF6  	BRA	L__Log_Settings257
L__Log_Settings260:
;LogUnit.mpas,776 :: 		Glcd_Fill(0x00);
0x48B8	0xEF2014  	CLR	W10
0x48BA	0x072808  	RCALL	_Glcd_Fill
;LogUnit.mpas,780 :: 		while (MenuExit = 0) do // ok butonuna basýlýrsa menüden çýkacak
L__Log_Settings262:
0x48BC	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x48BE	0x784010  	MOV.B	[W0], W0
0x48C0	0xE10460  	CP.B	W0, #0
0x48C2	0x3A0739  	BRA NZ	L__Log_Settings263
L__Log_Settings490:
;LogUnit.mpas,783 :: 		if (Hidden_Button =0) then
0x48C4	0xAFE2C2  	BTSC	Hidden_Button, BitPos(Hidden_Button+0)
0x48C6	0x370008  	BRA	L__Log_Settings267
;LogUnit.mpas,785 :: 		while (Hidden_Button =0) do
L__Log_Settings270:
0x48C8	0xAFE2C2  	BTSC	Hidden_Button, BitPos(Hidden_Button+0)
0x48CA	0x370002  	BRA	L__Log_Settings271
;LogUnit.mpas,788 :: 		clrwdt;
0x48CC	0xFE6000  	CLRWDT
;LogUnit.mpas,790 :: 		end;
0x48CE	0x37FFFC  	BRA	L__Log_Settings270
L__Log_Settings271:
;LogUnit.mpas,791 :: 		Log_Erase();
0x48D0	0x07EBA4  	RCALL	LogUnit_Log_Erase
;LogUnit.mpas,792 :: 		MenuExit := 1;
0x48D2	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x48D4	0xB3C010  	MOV.B	#1, W0
0x48D6	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,793 :: 		end;
L__Log_Settings267:
;LogUnit.mpas,795 :: 		if (Ok_Button =0) then
0x48D8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x48DA	0x370007  	BRA	L__Log_Settings275
;LogUnit.mpas,797 :: 		while (Ok_Button =0) do
L__Log_Settings278:
0x48DC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x48DE	0x370002  	BRA	L__Log_Settings279
;LogUnit.mpas,799 :: 		asm clrwdt; end;
0x48E0	0xFE6000  	CLRWDT
;LogUnit.mpas,800 :: 		end;
0x48E2	0x37FFFC  	BRA	L__Log_Settings278
L__Log_Settings279:
;LogUnit.mpas,802 :: 		MenuExit := 1;
0x48E4	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x48E6	0xB3C010  	MOV.B	#1, W0
0x48E8	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,804 :: 		end;
L__Log_Settings275:
;LogUnit.mpas,806 :: 		if (Down_Button =0) then
0x48EA	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0x48EC	0x37000F  	BRA	L__Log_Settings283
;LogUnit.mpas,808 :: 		while (Down_Button =0) do
L__Log_Settings286:
0x48EE	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0x48F0	0x370002  	BRA	L__Log_Settings287
;LogUnit.mpas,810 :: 		asm clrwdt; end;
0x48F2	0xFE6000  	CLRWDT
;LogUnit.mpas,811 :: 		end;
0x48F4	0x37FFFC  	BRA	L__Log_Settings286
L__Log_Settings287:
;LogUnit.mpas,812 :: 		Log_Page := Log_Page + 1;
0x48F6	0x470065  	ADD	W14, #5, W0
0x48F8	0xFB0010  	SE	[W0], W0
0x48FA	0xEC2000  	INC	W0
0x48FC	0x984750  	MOV.B	W0, [W14+5]
;LogUnit.mpas,813 :: 		if (Log_Page > 19) then Log_Page := 1;
0x48FE	0xE10473  	CP.B	W0, #19
0x4900	0x340002  	BRA LE	L__Log_Settings291
L__Log_Settings491:
0x4902	0xB3C010  	MOV.B	#1, W0
0x4904	0x984750  	MOV.B	W0, [W14+5]
L__Log_Settings291:
;LogUnit.mpas,814 :: 		Glcd_Fill(0x00);
0x4906	0xEF2014  	CLR	W10
0x4908	0x0727E1  	RCALL	_Glcd_Fill
;LogUnit.mpas,815 :: 		end else
0x490A	0x370010  	BRA	L__Log_Settings284
L__Log_Settings283:
;LogUnit.mpas,816 :: 		if (Up_Button =0) then
0x490C	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0x490E	0x37000E  	BRA	L__Log_Settings294
;LogUnit.mpas,818 :: 		while (Up_Button =0) do
L__Log_Settings297:
0x4910	0xAFA2CF  	BTSC	Up_Button, BitPos(Up_Button+0)
0x4912	0x370002  	BRA	L__Log_Settings298
;LogUnit.mpas,820 :: 		asm clrwdt; end;
0x4914	0xFE6000  	CLRWDT
;LogUnit.mpas,821 :: 		end;
0x4916	0x37FFFC  	BRA	L__Log_Settings297
L__Log_Settings298:
;LogUnit.mpas,822 :: 		Log_Page := Log_Page - 1;
0x4918	0x470065  	ADD	W14, #5, W0
0x491A	0xFB0010  	SE	[W0], W0
0x491C	0xED2000  	DEC	W0
0x491E	0x984750  	MOV.B	W0, [W14+5]
;LogUnit.mpas,823 :: 		if (Log_Page < 1) then Log_Page := 19;
0x4920	0xE10461  	CP.B	W0, #1
0x4922	0x3D0002  	BRA GE	L__Log_Settings302
L__Log_Settings492:
0x4924	0xB3C130  	MOV.B	#19, W0
0x4926	0x984750  	MOV.B	W0, [W14+5]
L__Log_Settings302:
;LogUnit.mpas,824 :: 		Glcd_Fill(0x00);
0x4928	0xEF2014  	CLR	W10
0x492A	0x0727D0  	RCALL	_Glcd_Fill
;LogUnit.mpas,825 :: 		end;
L__Log_Settings294:
L__Log_Settings284:
;LogUnit.mpas,827 :: 		asm clrwdt; end;
0x492C	0xFE6000  	CLRWDT
;LogUnit.mpas,831 :: 		1: begin  // log menüsü 1/19 sayfasý en fazla 7 olay görüntüleniyor
0x492E	0x90405E  	MOV.B	[W14+5], W0
0x4930	0xE10461  	CP.B	W0, #1
0x4932	0x3A0059  	BRA NZ	L__Log_Settings307
L__Log_Settings493:
;LogUnit.mpas,832 :: 		Glcd_Write_Text('SAYFA / PAGE - 1/19',22,Row1,Black);
0x4934	0x4700E6  	ADD	W14, #6, W1
0x4936	0xB3C530  	MOV.B	#83, W0
0x4938	0x785880  	MOV.B	W0, [W1++]
0x493A	0xB3C410  	MOV.B	#65, W0
0x493C	0x785880  	MOV.B	W0, [W1++]
0x493E	0xB3C590  	MOV.B	#89, W0
0x4940	0x785880  	MOV.B	W0, [W1++]
0x4942	0xB3C460  	MOV.B	#70, W0
0x4944	0x785880  	MOV.B	W0, [W1++]
0x4946	0xB3C410  	MOV.B	#65, W0
0x4948	0x785880  	MOV.B	W0, [W1++]
0x494A	0xB3C200  	MOV.B	#32, W0
0x494C	0x785880  	MOV.B	W0, [W1++]
0x494E	0xB3C2F0  	MOV.B	#47, W0
0x4950	0x785880  	MOV.B	W0, [W1++]
0x4952	0xB3C200  	MOV.B	#32, W0
0x4954	0x785880  	MOV.B	W0, [W1++]
0x4956	0xB3C500  	MOV.B	#80, W0
0x4958	0x785880  	MOV.B	W0, [W1++]
0x495A	0xB3C410  	MOV.B	#65, W0
0x495C	0x785880  	MOV.B	W0, [W1++]
0x495E	0xB3C470  	MOV.B	#71, W0
0x4960	0x785880  	MOV.B	W0, [W1++]
0x4962	0xB3C450  	MOV.B	#69, W0
0x4964	0x785880  	MOV.B	W0, [W1++]
0x4966	0xB3C200  	MOV.B	#32, W0
0x4968	0x785880  	MOV.B	W0, [W1++]
0x496A	0xB3C2D0  	MOV.B	#45, W0
0x496C	0x785880  	MOV.B	W0, [W1++]
0x496E	0xB3C200  	MOV.B	#32, W0
0x4970	0x785880  	MOV.B	W0, [W1++]
0x4972	0xB3C310  	MOV.B	#49, W0
0x4974	0x785880  	MOV.B	W0, [W1++]
0x4976	0xB3C2F0  	MOV.B	#47, W0
0x4978	0x785880  	MOV.B	W0, [W1++]
0x497A	0xB3C310  	MOV.B	#49, W0
0x497C	0x785880  	MOV.B	W0, [W1++]
0x497E	0xB3C390  	MOV.B	#57, W0
0x4980	0x785880  	MOV.B	W0, [W1++]
0x4982	0xEF2000  	CLR	W0
0x4984	0x785880  	MOV.B	W0, [W1++]
0x4986	0x470066  	ADD	W14, #6, W0
0x4988	0xB3C01D  	MOV.B	#1, W13
0x498A	0xB3C00C  	MOV.B	#0, W12
0x498C	0xB3C16B  	MOV.B	#22, W11
0x498E	0x780500  	MOV	W0, W10
0x4990	0x0706FC  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,833 :: 		for i:= 1 to 7 do
; i start address is: 26 (W13)
0x4992	0xB3C01D  	MOV.B	#1, W13
; i end address is: 26 (W13)
0x4994	0x78460D  	MOV.B	W13, W12
L__Log_Settings309:
;LogUnit.mpas,835 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4996	0xFB800C  	ZE	W12, W0
0x4998	0xED2000  	DEC	W0
0x499A	0xDD0241  	SL	W0, #1, W4
0x499C	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x499E	0x400184  	ADD	W0, W4, W3
0x49A0	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x49A2	0x400104  	ADD	W0, W4, W2
0x49A4	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x49A6	0x400084  	ADD	W0, W4, W1
0x49A8	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x49AA	0x400004  	ADD	W0, W4, W0
0x49AC	0x781F8C  	PUSH	W12
0x49AE	0x780690  	MOV	[W0], W13
0x49B0	0x780611  	MOV	[W1], W12
0x49B2	0x780592  	MOV	[W2], W11
0x49B4	0x780513  	MOV	[W3], W10
0x49B6	0x07EA63  	RCALL	LogUnit_Log_Partition
0x49B8	0x78064F  	POP	W12
;LogUnit.mpas,836 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i,Black);
0x49BA	0x781F8C  	PUSH	W12
0x49BC	0x200010  	MOV	#1, W0
0x49BE	0x781F80  	PUSH	W0
0x49C0	0xFB800C  	ZE	W12, W0
0x49C2	0x781F80  	PUSH	W0
0x49C4	0x200690  	MOV	#105, W0
0x49C6	0x781F80  	PUSH	W0
0x49C8	0x200230  	MOV	#35, W0
0x49CA	0x781F80  	PUSH	W0
0x49CC	0xEF201A  	CLR	W13
0x49CE	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x49D0	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x49D2	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x49D4	0x07ED4D  	RCALL	LogUnit_Log_Glcd_Write
0x49D6	0xB1008F  	SUB	#8, W15
0x49D8	0x78064F  	POP	W12
;LogUnit.mpas,837 :: 		end;
0x49DA	0xE16467  	CP.B	W12, #7
0x49DC	0x320003  	BRA Z	L__Log_Settings312
L__Log_Settings494:
; i start address is: 0 (W0)
0x49DE	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x49E0	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x49E2	0x37FFD9  	BRA	L__Log_Settings309
L__Log_Settings312:
;LogUnit.mpas,839 :: 		end;
0x49E4	0x3706A7  	BRA	L__Log_Settings304
L__Log_Settings307:
;LogUnit.mpas,840 :: 		2: begin  // log menüsü 2/19 sayfasý en fazla 7 olay görüntüleniyor
0x49E6	0x90405E  	MOV.B	[W14+5], W0
0x49E8	0xE10462  	CP.B	W0, #2
0x49EA	0x3A005A  	BRA NZ	L__Log_Settings315
L__Log_Settings495:
;LogUnit.mpas,841 :: 		Glcd_Write_Text('SAYFA / PAGE - 2/19',22,Row1,Black);
0x49EC	0x4700E6  	ADD	W14, #6, W1
0x49EE	0xB3C530  	MOV.B	#83, W0
0x49F0	0x785880  	MOV.B	W0, [W1++]
0x49F2	0xB3C410  	MOV.B	#65, W0
0x49F4	0x785880  	MOV.B	W0, [W1++]
0x49F6	0xB3C590  	MOV.B	#89, W0
0x49F8	0x785880  	MOV.B	W0, [W1++]
0x49FA	0xB3C460  	MOV.B	#70, W0
0x49FC	0x785880  	MOV.B	W0, [W1++]
0x49FE	0xB3C410  	MOV.B	#65, W0
0x4A00	0x785880  	MOV.B	W0, [W1++]
0x4A02	0xB3C200  	MOV.B	#32, W0
0x4A04	0x785880  	MOV.B	W0, [W1++]
0x4A06	0xB3C2F0  	MOV.B	#47, W0
0x4A08	0x785880  	MOV.B	W0, [W1++]
0x4A0A	0xB3C200  	MOV.B	#32, W0
0x4A0C	0x785880  	MOV.B	W0, [W1++]
0x4A0E	0xB3C500  	MOV.B	#80, W0
0x4A10	0x785880  	MOV.B	W0, [W1++]
0x4A12	0xB3C410  	MOV.B	#65, W0
0x4A14	0x785880  	MOV.B	W0, [W1++]
0x4A16	0xB3C470  	MOV.B	#71, W0
0x4A18	0x785880  	MOV.B	W0, [W1++]
0x4A1A	0xB3C450  	MOV.B	#69, W0
0x4A1C	0x785880  	MOV.B	W0, [W1++]
0x4A1E	0xB3C200  	MOV.B	#32, W0
0x4A20	0x785880  	MOV.B	W0, [W1++]
0x4A22	0xB3C2D0  	MOV.B	#45, W0
0x4A24	0x785880  	MOV.B	W0, [W1++]
0x4A26	0xB3C200  	MOV.B	#32, W0
0x4A28	0x785880  	MOV.B	W0, [W1++]
0x4A2A	0xB3C320  	MOV.B	#50, W0
0x4A2C	0x785880  	MOV.B	W0, [W1++]
0x4A2E	0xB3C2F0  	MOV.B	#47, W0
0x4A30	0x785880  	MOV.B	W0, [W1++]
0x4A32	0xB3C310  	MOV.B	#49, W0
0x4A34	0x785880  	MOV.B	W0, [W1++]
0x4A36	0xB3C390  	MOV.B	#57, W0
0x4A38	0x785880  	MOV.B	W0, [W1++]
0x4A3A	0xEF2000  	CLR	W0
0x4A3C	0x785880  	MOV.B	W0, [W1++]
0x4A3E	0x470066  	ADD	W14, #6, W0
0x4A40	0xB3C01D  	MOV.B	#1, W13
0x4A42	0xB3C00C  	MOV.B	#0, W12
0x4A44	0xB3C16B  	MOV.B	#22, W11
0x4A46	0x780500  	MOV	W0, W10
0x4A48	0x0706A0  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,843 :: 		for i:= 8 to 14 do
; i start address is: 26 (W13)
0x4A4A	0xB3C08D  	MOV.B	#8, W13
; i end address is: 26 (W13)
0x4A4C	0x78460D  	MOV.B	W13, W12
L__Log_Settings317:
;LogUnit.mpas,845 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4A4E	0xFB800C  	ZE	W12, W0
0x4A50	0xED2000  	DEC	W0
0x4A52	0xDD0241  	SL	W0, #1, W4
0x4A54	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4A56	0x400184  	ADD	W0, W4, W3
0x4A58	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4A5A	0x400104  	ADD	W0, W4, W2
0x4A5C	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4A5E	0x400084  	ADD	W0, W4, W1
0x4A60	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4A62	0x400004  	ADD	W0, W4, W0
0x4A64	0x781F8C  	PUSH	W12
0x4A66	0x780690  	MOV	[W0], W13
0x4A68	0x780611  	MOV	[W1], W12
0x4A6A	0x780592  	MOV	[W2], W11
0x4A6C	0x780513  	MOV	[W3], W10
0x4A6E	0x07EA07  	RCALL	LogUnit_Log_Partition
0x4A70	0x78064F  	POP	W12
;LogUnit.mpas,846 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-7,Black);
0x4A72	0xFB800C  	ZE	W12, W0
0x4A74	0x5000E7  	SUB	W0, #7, W1
0x4A76	0x781F8C  	PUSH	W12
0x4A78	0xEF201A  	CLR	W13
0x4A7A	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4A7C	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4A7E	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4A80	0x200010  	MOV	#1, W0
0x4A82	0x781F80  	PUSH	W0
0x4A84	0x781F81  	PUSH	W1
0x4A86	0x200690  	MOV	#105, W0
0x4A88	0x781F80  	PUSH	W0
0x4A8A	0x200230  	MOV	#35, W0
0x4A8C	0x781F80  	PUSH	W0
0x4A8E	0x07ECF0  	RCALL	LogUnit_Log_Glcd_Write
0x4A90	0xB1008F  	SUB	#8, W15
0x4A92	0x78064F  	POP	W12
;LogUnit.mpas,847 :: 		end;
0x4A94	0xE1646E  	CP.B	W12, #14
0x4A96	0x320003  	BRA Z	L__Log_Settings320
L__Log_Settings496:
; i start address is: 0 (W0)
0x4A98	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4A9A	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4A9C	0x37FFD8  	BRA	L__Log_Settings317
L__Log_Settings320:
;LogUnit.mpas,848 :: 		end;
0x4A9E	0x37064A  	BRA	L__Log_Settings304
L__Log_Settings315:
;LogUnit.mpas,850 :: 		3: begin  // log menüsü 3/19 sayfasý en fazla 7 olay görüntüleniyor
0x4AA0	0x90405E  	MOV.B	[W14+5], W0
0x4AA2	0xE10463  	CP.B	W0, #3
0x4AA4	0x3A005A  	BRA NZ	L__Log_Settings323
L__Log_Settings497:
;LogUnit.mpas,851 :: 		Glcd_Write_Text('SAYFA / PAGE - 3/19',22,Row1,Black);
0x4AA6	0x4700E6  	ADD	W14, #6, W1
0x4AA8	0xB3C530  	MOV.B	#83, W0
0x4AAA	0x785880  	MOV.B	W0, [W1++]
0x4AAC	0xB3C410  	MOV.B	#65, W0
0x4AAE	0x785880  	MOV.B	W0, [W1++]
0x4AB0	0xB3C590  	MOV.B	#89, W0
0x4AB2	0x785880  	MOV.B	W0, [W1++]
0x4AB4	0xB3C460  	MOV.B	#70, W0
0x4AB6	0x785880  	MOV.B	W0, [W1++]
0x4AB8	0xB3C410  	MOV.B	#65, W0
0x4ABA	0x785880  	MOV.B	W0, [W1++]
0x4ABC	0xB3C200  	MOV.B	#32, W0
0x4ABE	0x785880  	MOV.B	W0, [W1++]
0x4AC0	0xB3C2F0  	MOV.B	#47, W0
0x4AC2	0x785880  	MOV.B	W0, [W1++]
0x4AC4	0xB3C200  	MOV.B	#32, W0
0x4AC6	0x785880  	MOV.B	W0, [W1++]
0x4AC8	0xB3C500  	MOV.B	#80, W0
0x4ACA	0x785880  	MOV.B	W0, [W1++]
0x4ACC	0xB3C410  	MOV.B	#65, W0
0x4ACE	0x785880  	MOV.B	W0, [W1++]
0x4AD0	0xB3C470  	MOV.B	#71, W0
0x4AD2	0x785880  	MOV.B	W0, [W1++]
0x4AD4	0xB3C450  	MOV.B	#69, W0
0x4AD6	0x785880  	MOV.B	W0, [W1++]
0x4AD8	0xB3C200  	MOV.B	#32, W0
0x4ADA	0x785880  	MOV.B	W0, [W1++]
0x4ADC	0xB3C2D0  	MOV.B	#45, W0
0x4ADE	0x785880  	MOV.B	W0, [W1++]
0x4AE0	0xB3C200  	MOV.B	#32, W0
0x4AE2	0x785880  	MOV.B	W0, [W1++]
0x4AE4	0xB3C330  	MOV.B	#51, W0
0x4AE6	0x785880  	MOV.B	W0, [W1++]
0x4AE8	0xB3C2F0  	MOV.B	#47, W0
0x4AEA	0x785880  	MOV.B	W0, [W1++]
0x4AEC	0xB3C310  	MOV.B	#49, W0
0x4AEE	0x785880  	MOV.B	W0, [W1++]
0x4AF0	0xB3C390  	MOV.B	#57, W0
0x4AF2	0x785880  	MOV.B	W0, [W1++]
0x4AF4	0xEF2000  	CLR	W0
0x4AF6	0x785880  	MOV.B	W0, [W1++]
0x4AF8	0x470066  	ADD	W14, #6, W0
0x4AFA	0xB3C01D  	MOV.B	#1, W13
0x4AFC	0xB3C00C  	MOV.B	#0, W12
0x4AFE	0xB3C16B  	MOV.B	#22, W11
0x4B00	0x780500  	MOV	W0, W10
0x4B02	0x070643  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,853 :: 		for i:= 15 to 21 do
; i start address is: 26 (W13)
0x4B04	0xB3C0FD  	MOV.B	#15, W13
; i end address is: 26 (W13)
0x4B06	0x78460D  	MOV.B	W13, W12
L__Log_Settings325:
;LogUnit.mpas,855 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4B08	0xFB800C  	ZE	W12, W0
0x4B0A	0xED2000  	DEC	W0
0x4B0C	0xDD0241  	SL	W0, #1, W4
0x4B0E	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4B10	0x400184  	ADD	W0, W4, W3
0x4B12	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4B14	0x400104  	ADD	W0, W4, W2
0x4B16	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4B18	0x400084  	ADD	W0, W4, W1
0x4B1A	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4B1C	0x400004  	ADD	W0, W4, W0
0x4B1E	0x781F8C  	PUSH	W12
0x4B20	0x780690  	MOV	[W0], W13
0x4B22	0x780611  	MOV	[W1], W12
0x4B24	0x780592  	MOV	[W2], W11
0x4B26	0x780513  	MOV	[W3], W10
0x4B28	0x07E9AA  	RCALL	LogUnit_Log_Partition
0x4B2A	0x78064F  	POP	W12
;LogUnit.mpas,856 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-14,Black);
0x4B2C	0xFB800C  	ZE	W12, W0
0x4B2E	0x5000EE  	SUB	W0, #14, W1
0x4B30	0x781F8C  	PUSH	W12
0x4B32	0xEF201A  	CLR	W13
0x4B34	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4B36	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4B38	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4B3A	0x200010  	MOV	#1, W0
0x4B3C	0x781F80  	PUSH	W0
0x4B3E	0x781F81  	PUSH	W1
0x4B40	0x200690  	MOV	#105, W0
0x4B42	0x781F80  	PUSH	W0
0x4B44	0x200230  	MOV	#35, W0
0x4B46	0x781F80  	PUSH	W0
0x4B48	0x07EC93  	RCALL	LogUnit_Log_Glcd_Write
0x4B4A	0xB1008F  	SUB	#8, W15
0x4B4C	0x78064F  	POP	W12
;LogUnit.mpas,857 :: 		end;
0x4B4E	0xE16475  	CP.B	W12, #21
0x4B50	0x320003  	BRA Z	L__Log_Settings328
L__Log_Settings498:
; i start address is: 0 (W0)
0x4B52	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4B54	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4B56	0x37FFD8  	BRA	L__Log_Settings325
L__Log_Settings328:
;LogUnit.mpas,858 :: 		end;
0x4B58	0x3705ED  	BRA	L__Log_Settings304
L__Log_Settings323:
;LogUnit.mpas,860 :: 		4: begin  // log menüsü 4/19 sayfasý en fazla 7 olay görüntüleniyor
0x4B5A	0x90405E  	MOV.B	[W14+5], W0
0x4B5C	0xE10464  	CP.B	W0, #4
0x4B5E	0x3A005A  	BRA NZ	L__Log_Settings331
L__Log_Settings499:
;LogUnit.mpas,861 :: 		Glcd_Write_Text('SAYFA / PAGE - 4/19',22,Row1,Black);
0x4B60	0x4700E6  	ADD	W14, #6, W1
0x4B62	0xB3C530  	MOV.B	#83, W0
0x4B64	0x785880  	MOV.B	W0, [W1++]
0x4B66	0xB3C410  	MOV.B	#65, W0
0x4B68	0x785880  	MOV.B	W0, [W1++]
0x4B6A	0xB3C590  	MOV.B	#89, W0
0x4B6C	0x785880  	MOV.B	W0, [W1++]
0x4B6E	0xB3C460  	MOV.B	#70, W0
0x4B70	0x785880  	MOV.B	W0, [W1++]
0x4B72	0xB3C410  	MOV.B	#65, W0
0x4B74	0x785880  	MOV.B	W0, [W1++]
0x4B76	0xB3C200  	MOV.B	#32, W0
0x4B78	0x785880  	MOV.B	W0, [W1++]
0x4B7A	0xB3C2F0  	MOV.B	#47, W0
0x4B7C	0x785880  	MOV.B	W0, [W1++]
0x4B7E	0xB3C200  	MOV.B	#32, W0
0x4B80	0x785880  	MOV.B	W0, [W1++]
0x4B82	0xB3C500  	MOV.B	#80, W0
0x4B84	0x785880  	MOV.B	W0, [W1++]
0x4B86	0xB3C410  	MOV.B	#65, W0
0x4B88	0x785880  	MOV.B	W0, [W1++]
0x4B8A	0xB3C470  	MOV.B	#71, W0
0x4B8C	0x785880  	MOV.B	W0, [W1++]
0x4B8E	0xB3C450  	MOV.B	#69, W0
0x4B90	0x785880  	MOV.B	W0, [W1++]
0x4B92	0xB3C200  	MOV.B	#32, W0
0x4B94	0x785880  	MOV.B	W0, [W1++]
0x4B96	0xB3C2D0  	MOV.B	#45, W0
0x4B98	0x785880  	MOV.B	W0, [W1++]
0x4B9A	0xB3C200  	MOV.B	#32, W0
0x4B9C	0x785880  	MOV.B	W0, [W1++]
0x4B9E	0xB3C340  	MOV.B	#52, W0
0x4BA0	0x785880  	MOV.B	W0, [W1++]
0x4BA2	0xB3C2F0  	MOV.B	#47, W0
0x4BA4	0x785880  	MOV.B	W0, [W1++]
0x4BA6	0xB3C310  	MOV.B	#49, W0
0x4BA8	0x785880  	MOV.B	W0, [W1++]
0x4BAA	0xB3C390  	MOV.B	#57, W0
0x4BAC	0x785880  	MOV.B	W0, [W1++]
0x4BAE	0xEF2000  	CLR	W0
0x4BB0	0x785880  	MOV.B	W0, [W1++]
0x4BB2	0x470066  	ADD	W14, #6, W0
0x4BB4	0xB3C01D  	MOV.B	#1, W13
0x4BB6	0xB3C00C  	MOV.B	#0, W12
0x4BB8	0xB3C16B  	MOV.B	#22, W11
0x4BBA	0x780500  	MOV	W0, W10
0x4BBC	0x0705E6  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,863 :: 		for i:= 22 to 28 do
; i start address is: 26 (W13)
0x4BBE	0xB3C16D  	MOV.B	#22, W13
; i end address is: 26 (W13)
0x4BC0	0x78460D  	MOV.B	W13, W12
L__Log_Settings333:
;LogUnit.mpas,865 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4BC2	0xFB800C  	ZE	W12, W0
0x4BC4	0xED2000  	DEC	W0
0x4BC6	0xDD0241  	SL	W0, #1, W4
0x4BC8	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4BCA	0x400184  	ADD	W0, W4, W3
0x4BCC	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4BCE	0x400104  	ADD	W0, W4, W2
0x4BD0	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4BD2	0x400084  	ADD	W0, W4, W1
0x4BD4	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4BD6	0x400004  	ADD	W0, W4, W0
0x4BD8	0x781F8C  	PUSH	W12
0x4BDA	0x780690  	MOV	[W0], W13
0x4BDC	0x780611  	MOV	[W1], W12
0x4BDE	0x780592  	MOV	[W2], W11
0x4BE0	0x780513  	MOV	[W3], W10
0x4BE2	0x07E94D  	RCALL	LogUnit_Log_Partition
0x4BE4	0x78064F  	POP	W12
;LogUnit.mpas,866 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-21,Black);
0x4BE6	0xFB800C  	ZE	W12, W0
0x4BE8	0x5000F5  	SUB	W0, #21, W1
0x4BEA	0x781F8C  	PUSH	W12
0x4BEC	0xEF201A  	CLR	W13
0x4BEE	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4BF0	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4BF2	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4BF4	0x200010  	MOV	#1, W0
0x4BF6	0x781F80  	PUSH	W0
0x4BF8	0x781F81  	PUSH	W1
0x4BFA	0x200690  	MOV	#105, W0
0x4BFC	0x781F80  	PUSH	W0
0x4BFE	0x200230  	MOV	#35, W0
0x4C00	0x781F80  	PUSH	W0
0x4C02	0x07EC36  	RCALL	LogUnit_Log_Glcd_Write
0x4C04	0xB1008F  	SUB	#8, W15
0x4C06	0x78064F  	POP	W12
;LogUnit.mpas,867 :: 		end;
0x4C08	0xE1647C  	CP.B	W12, #28
0x4C0A	0x320003  	BRA Z	L__Log_Settings336
L__Log_Settings500:
; i start address is: 0 (W0)
0x4C0C	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4C0E	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4C10	0x37FFD8  	BRA	L__Log_Settings333
L__Log_Settings336:
;LogUnit.mpas,868 :: 		end;
0x4C12	0x370590  	BRA	L__Log_Settings304
L__Log_Settings331:
;LogUnit.mpas,870 :: 		5: begin  // log menüsü 5/19 sayfasý en fazla 7 olay görüntüleniyor
0x4C14	0x90405E  	MOV.B	[W14+5], W0
0x4C16	0xE10465  	CP.B	W0, #5
0x4C18	0x3A005B  	BRA NZ	L__Log_Settings339
L__Log_Settings501:
;LogUnit.mpas,871 :: 		Glcd_Write_Text('SAYFA / PAGE - 5/19',22,Row1,Black);
0x4C1A	0x4700E6  	ADD	W14, #6, W1
0x4C1C	0xB3C530  	MOV.B	#83, W0
0x4C1E	0x785880  	MOV.B	W0, [W1++]
0x4C20	0xB3C410  	MOV.B	#65, W0
0x4C22	0x785880  	MOV.B	W0, [W1++]
0x4C24	0xB3C590  	MOV.B	#89, W0
0x4C26	0x785880  	MOV.B	W0, [W1++]
0x4C28	0xB3C460  	MOV.B	#70, W0
0x4C2A	0x785880  	MOV.B	W0, [W1++]
0x4C2C	0xB3C410  	MOV.B	#65, W0
0x4C2E	0x785880  	MOV.B	W0, [W1++]
0x4C30	0xB3C200  	MOV.B	#32, W0
0x4C32	0x785880  	MOV.B	W0, [W1++]
0x4C34	0xB3C2F0  	MOV.B	#47, W0
0x4C36	0x785880  	MOV.B	W0, [W1++]
0x4C38	0xB3C200  	MOV.B	#32, W0
0x4C3A	0x785880  	MOV.B	W0, [W1++]
0x4C3C	0xB3C500  	MOV.B	#80, W0
0x4C3E	0x785880  	MOV.B	W0, [W1++]
0x4C40	0xB3C410  	MOV.B	#65, W0
0x4C42	0x785880  	MOV.B	W0, [W1++]
0x4C44	0xB3C470  	MOV.B	#71, W0
0x4C46	0x785880  	MOV.B	W0, [W1++]
0x4C48	0xB3C450  	MOV.B	#69, W0
0x4C4A	0x785880  	MOV.B	W0, [W1++]
0x4C4C	0xB3C200  	MOV.B	#32, W0
0x4C4E	0x785880  	MOV.B	W0, [W1++]
0x4C50	0xB3C2D0  	MOV.B	#45, W0
0x4C52	0x785880  	MOV.B	W0, [W1++]
0x4C54	0xB3C200  	MOV.B	#32, W0
0x4C56	0x785880  	MOV.B	W0, [W1++]
0x4C58	0xB3C350  	MOV.B	#53, W0
0x4C5A	0x785880  	MOV.B	W0, [W1++]
0x4C5C	0xB3C2F0  	MOV.B	#47, W0
0x4C5E	0x785880  	MOV.B	W0, [W1++]
0x4C60	0xB3C310  	MOV.B	#49, W0
0x4C62	0x785880  	MOV.B	W0, [W1++]
0x4C64	0xB3C390  	MOV.B	#57, W0
0x4C66	0x785880  	MOV.B	W0, [W1++]
0x4C68	0xEF2000  	CLR	W0
0x4C6A	0x785880  	MOV.B	W0, [W1++]
0x4C6C	0x470066  	ADD	W14, #6, W0
0x4C6E	0xB3C01D  	MOV.B	#1, W13
0x4C70	0xB3C00C  	MOV.B	#0, W12
0x4C72	0xB3C16B  	MOV.B	#22, W11
0x4C74	0x780500  	MOV	W0, W10
0x4C76	0x070589  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,873 :: 		for i:= 29 to 35 do
; i start address is: 26 (W13)
0x4C78	0xB3C1DD  	MOV.B	#29, W13
; i end address is: 26 (W13)
0x4C7A	0x78460D  	MOV.B	W13, W12
L__Log_Settings341:
;LogUnit.mpas,875 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4C7C	0xFB800C  	ZE	W12, W0
0x4C7E	0xED2000  	DEC	W0
0x4C80	0xDD0241  	SL	W0, #1, W4
0x4C82	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4C84	0x400184  	ADD	W0, W4, W3
0x4C86	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4C88	0x400104  	ADD	W0, W4, W2
0x4C8A	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4C8C	0x400084  	ADD	W0, W4, W1
0x4C8E	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4C90	0x400004  	ADD	W0, W4, W0
0x4C92	0x781F8C  	PUSH	W12
0x4C94	0x780690  	MOV	[W0], W13
0x4C96	0x780611  	MOV	[W1], W12
0x4C98	0x780592  	MOV	[W2], W11
0x4C9A	0x780513  	MOV	[W3], W10
0x4C9C	0x07E8F0  	RCALL	LogUnit_Log_Partition
0x4C9E	0x78064F  	POP	W12
;LogUnit.mpas,876 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-28,Black);
0x4CA0	0xFB800C  	ZE	W12, W0
0x4CA2	0x5000FC  	SUB	W0, #28, W1
0x4CA4	0x781F8C  	PUSH	W12
0x4CA6	0xEF201A  	CLR	W13
0x4CA8	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4CAA	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4CAC	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4CAE	0x200010  	MOV	#1, W0
0x4CB0	0x781F80  	PUSH	W0
0x4CB2	0x781F81  	PUSH	W1
0x4CB4	0x200690  	MOV	#105, W0
0x4CB6	0x781F80  	PUSH	W0
0x4CB8	0x200230  	MOV	#35, W0
0x4CBA	0x781F80  	PUSH	W0
0x4CBC	0x07EBD9  	RCALL	LogUnit_Log_Glcd_Write
0x4CBE	0xB1008F  	SUB	#8, W15
0x4CC0	0x78064F  	POP	W12
;LogUnit.mpas,877 :: 		end;
0x4CC2	0xB3C230  	MOV.B	#35, W0
0x4CC4	0xE16400  	CP.B	W12, W0
0x4CC6	0x320003  	BRA Z	L__Log_Settings344
L__Log_Settings502:
; i start address is: 0 (W0)
0x4CC8	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4CCA	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4CCC	0x37FFD7  	BRA	L__Log_Settings341
L__Log_Settings344:
;LogUnit.mpas,878 :: 		end;  //-----------------------
0x4CCE	0x370532  	BRA	L__Log_Settings304
L__Log_Settings339:
;LogUnit.mpas,880 :: 		6: begin  // log menüsü 6/19 sayfasý en fazla 7 olay görüntüleniyor
0x4CD0	0x90405E  	MOV.B	[W14+5], W0
0x4CD2	0xE10466  	CP.B	W0, #6
0x4CD4	0x3A005C  	BRA NZ	L__Log_Settings347
L__Log_Settings503:
;LogUnit.mpas,881 :: 		Glcd_Write_Text('SAYFA / PAGE - 6/19',22,Row1,Black);
0x4CD6	0x4700E6  	ADD	W14, #6, W1
0x4CD8	0xB3C530  	MOV.B	#83, W0
0x4CDA	0x785880  	MOV.B	W0, [W1++]
0x4CDC	0xB3C410  	MOV.B	#65, W0
0x4CDE	0x785880  	MOV.B	W0, [W1++]
0x4CE0	0xB3C590  	MOV.B	#89, W0
0x4CE2	0x785880  	MOV.B	W0, [W1++]
0x4CE4	0xB3C460  	MOV.B	#70, W0
0x4CE6	0x785880  	MOV.B	W0, [W1++]
0x4CE8	0xB3C410  	MOV.B	#65, W0
0x4CEA	0x785880  	MOV.B	W0, [W1++]
0x4CEC	0xB3C200  	MOV.B	#32, W0
0x4CEE	0x785880  	MOV.B	W0, [W1++]
0x4CF0	0xB3C2F0  	MOV.B	#47, W0
0x4CF2	0x785880  	MOV.B	W0, [W1++]
0x4CF4	0xB3C200  	MOV.B	#32, W0
0x4CF6	0x785880  	MOV.B	W0, [W1++]
0x4CF8	0xB3C500  	MOV.B	#80, W0
0x4CFA	0x785880  	MOV.B	W0, [W1++]
0x4CFC	0xB3C410  	MOV.B	#65, W0
0x4CFE	0x785880  	MOV.B	W0, [W1++]
0x4D00	0xB3C470  	MOV.B	#71, W0
0x4D02	0x785880  	MOV.B	W0, [W1++]
0x4D04	0xB3C450  	MOV.B	#69, W0
0x4D06	0x785880  	MOV.B	W0, [W1++]
0x4D08	0xB3C200  	MOV.B	#32, W0
0x4D0A	0x785880  	MOV.B	W0, [W1++]
0x4D0C	0xB3C2D0  	MOV.B	#45, W0
0x4D0E	0x785880  	MOV.B	W0, [W1++]
0x4D10	0xB3C200  	MOV.B	#32, W0
0x4D12	0x785880  	MOV.B	W0, [W1++]
0x4D14	0xB3C360  	MOV.B	#54, W0
0x4D16	0x785880  	MOV.B	W0, [W1++]
0x4D18	0xB3C2F0  	MOV.B	#47, W0
0x4D1A	0x785880  	MOV.B	W0, [W1++]
0x4D1C	0xB3C310  	MOV.B	#49, W0
0x4D1E	0x785880  	MOV.B	W0, [W1++]
0x4D20	0xB3C390  	MOV.B	#57, W0
0x4D22	0x785880  	MOV.B	W0, [W1++]
0x4D24	0xEF2000  	CLR	W0
0x4D26	0x785880  	MOV.B	W0, [W1++]
0x4D28	0x470066  	ADD	W14, #6, W0
0x4D2A	0xB3C01D  	MOV.B	#1, W13
0x4D2C	0xB3C00C  	MOV.B	#0, W12
0x4D2E	0xB3C16B  	MOV.B	#22, W11
0x4D30	0x780500  	MOV	W0, W10
0x4D32	0x07052B  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,883 :: 		for i:= 36 to 42 do
; i start address is: 26 (W13)
0x4D34	0xB3C24D  	MOV.B	#36, W13
; i end address is: 26 (W13)
0x4D36	0x78460D  	MOV.B	W13, W12
L__Log_Settings349:
;LogUnit.mpas,885 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4D38	0xFB800C  	ZE	W12, W0
0x4D3A	0xED2000  	DEC	W0
0x4D3C	0xDD0241  	SL	W0, #1, W4
0x4D3E	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4D40	0x400184  	ADD	W0, W4, W3
0x4D42	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4D44	0x400104  	ADD	W0, W4, W2
0x4D46	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4D48	0x400084  	ADD	W0, W4, W1
0x4D4A	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4D4C	0x400004  	ADD	W0, W4, W0
0x4D4E	0x781F8C  	PUSH	W12
0x4D50	0x780690  	MOV	[W0], W13
0x4D52	0x780611  	MOV	[W1], W12
0x4D54	0x780592  	MOV	[W2], W11
0x4D56	0x780513  	MOV	[W3], W10
0x4D58	0x07E892  	RCALL	LogUnit_Log_Partition
0x4D5A	0x78064F  	POP	W12
;LogUnit.mpas,886 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-35,Black);
0x4D5C	0xFB808C  	ZE	W12, W1
0x4D5E	0x200230  	MOV	#35, W0
0x4D60	0x508080  	SUB	W1, W0, W1
0x4D62	0x781F8C  	PUSH	W12
0x4D64	0xEF201A  	CLR	W13
0x4D66	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4D68	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4D6A	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4D6C	0x200010  	MOV	#1, W0
0x4D6E	0x781F80  	PUSH	W0
0x4D70	0x781F81  	PUSH	W1
0x4D72	0x200690  	MOV	#105, W0
0x4D74	0x781F80  	PUSH	W0
0x4D76	0x200230  	MOV	#35, W0
0x4D78	0x781F80  	PUSH	W0
0x4D7A	0x07EB7A  	RCALL	LogUnit_Log_Glcd_Write
0x4D7C	0xB1008F  	SUB	#8, W15
0x4D7E	0x78064F  	POP	W12
;LogUnit.mpas,887 :: 		end;
0x4D80	0xB3C2A0  	MOV.B	#42, W0
0x4D82	0xE16400  	CP.B	W12, W0
0x4D84	0x320003  	BRA Z	L__Log_Settings352
L__Log_Settings504:
; i start address is: 0 (W0)
0x4D86	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4D88	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4D8A	0x37FFD6  	BRA	L__Log_Settings349
L__Log_Settings352:
;LogUnit.mpas,888 :: 		end;
0x4D8C	0x3704D3  	BRA	L__Log_Settings304
L__Log_Settings347:
;LogUnit.mpas,890 :: 		7: begin  // log menüsü 7/19 sayfasý en fazla 7 olay görüntüleniyor
0x4D8E	0x90405E  	MOV.B	[W14+5], W0
0x4D90	0xE10467  	CP.B	W0, #7
0x4D92	0x3A005C  	BRA NZ	L__Log_Settings355
L__Log_Settings505:
;LogUnit.mpas,891 :: 		Glcd_Write_Text('SAYFA / PAGE - 7/19',22,Row1,Black);
0x4D94	0x4700E6  	ADD	W14, #6, W1
0x4D96	0xB3C530  	MOV.B	#83, W0
0x4D98	0x785880  	MOV.B	W0, [W1++]
0x4D9A	0xB3C410  	MOV.B	#65, W0
0x4D9C	0x785880  	MOV.B	W0, [W1++]
0x4D9E	0xB3C590  	MOV.B	#89, W0
0x4DA0	0x785880  	MOV.B	W0, [W1++]
0x4DA2	0xB3C460  	MOV.B	#70, W0
0x4DA4	0x785880  	MOV.B	W0, [W1++]
0x4DA6	0xB3C410  	MOV.B	#65, W0
0x4DA8	0x785880  	MOV.B	W0, [W1++]
0x4DAA	0xB3C200  	MOV.B	#32, W0
0x4DAC	0x785880  	MOV.B	W0, [W1++]
0x4DAE	0xB3C2F0  	MOV.B	#47, W0
0x4DB0	0x785880  	MOV.B	W0, [W1++]
0x4DB2	0xB3C200  	MOV.B	#32, W0
0x4DB4	0x785880  	MOV.B	W0, [W1++]
0x4DB6	0xB3C500  	MOV.B	#80, W0
0x4DB8	0x785880  	MOV.B	W0, [W1++]
0x4DBA	0xB3C410  	MOV.B	#65, W0
0x4DBC	0x785880  	MOV.B	W0, [W1++]
0x4DBE	0xB3C470  	MOV.B	#71, W0
0x4DC0	0x785880  	MOV.B	W0, [W1++]
0x4DC2	0xB3C450  	MOV.B	#69, W0
0x4DC4	0x785880  	MOV.B	W0, [W1++]
0x4DC6	0xB3C200  	MOV.B	#32, W0
0x4DC8	0x785880  	MOV.B	W0, [W1++]
0x4DCA	0xB3C2D0  	MOV.B	#45, W0
0x4DCC	0x785880  	MOV.B	W0, [W1++]
0x4DCE	0xB3C200  	MOV.B	#32, W0
0x4DD0	0x785880  	MOV.B	W0, [W1++]
0x4DD2	0xB3C370  	MOV.B	#55, W0
0x4DD4	0x785880  	MOV.B	W0, [W1++]
0x4DD6	0xB3C2F0  	MOV.B	#47, W0
0x4DD8	0x785880  	MOV.B	W0, [W1++]
0x4DDA	0xB3C310  	MOV.B	#49, W0
0x4DDC	0x785880  	MOV.B	W0, [W1++]
0x4DDE	0xB3C390  	MOV.B	#57, W0
0x4DE0	0x785880  	MOV.B	W0, [W1++]
0x4DE2	0xEF2000  	CLR	W0
0x4DE4	0x785880  	MOV.B	W0, [W1++]
0x4DE6	0x470066  	ADD	W14, #6, W0
0x4DE8	0xB3C01D  	MOV.B	#1, W13
0x4DEA	0xB3C00C  	MOV.B	#0, W12
0x4DEC	0xB3C16B  	MOV.B	#22, W11
0x4DEE	0x780500  	MOV	W0, W10
0x4DF0	0x0704CC  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,893 :: 		for i:= 43 to 49 do
; i start address is: 26 (W13)
0x4DF2	0xB3C2BD  	MOV.B	#43, W13
; i end address is: 26 (W13)
0x4DF4	0x78460D  	MOV.B	W13, W12
L__Log_Settings357:
;LogUnit.mpas,895 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4DF6	0xFB800C  	ZE	W12, W0
0x4DF8	0xED2000  	DEC	W0
0x4DFA	0xDD0241  	SL	W0, #1, W4
0x4DFC	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4DFE	0x400184  	ADD	W0, W4, W3
0x4E00	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4E02	0x400104  	ADD	W0, W4, W2
0x4E04	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4E06	0x400084  	ADD	W0, W4, W1
0x4E08	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4E0A	0x400004  	ADD	W0, W4, W0
0x4E0C	0x781F8C  	PUSH	W12
0x4E0E	0x780690  	MOV	[W0], W13
0x4E10	0x780611  	MOV	[W1], W12
0x4E12	0x780592  	MOV	[W2], W11
0x4E14	0x780513  	MOV	[W3], W10
0x4E16	0x07E833  	RCALL	LogUnit_Log_Partition
0x4E18	0x78064F  	POP	W12
;LogUnit.mpas,896 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-42,Black);
0x4E1A	0xFB808C  	ZE	W12, W1
0x4E1C	0x2002A0  	MOV	#42, W0
0x4E1E	0x508080  	SUB	W1, W0, W1
0x4E20	0x781F8C  	PUSH	W12
0x4E22	0xEF201A  	CLR	W13
0x4E24	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4E26	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4E28	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4E2A	0x200010  	MOV	#1, W0
0x4E2C	0x781F80  	PUSH	W0
0x4E2E	0x781F81  	PUSH	W1
0x4E30	0x200690  	MOV	#105, W0
0x4E32	0x781F80  	PUSH	W0
0x4E34	0x200230  	MOV	#35, W0
0x4E36	0x781F80  	PUSH	W0
0x4E38	0x07EB1B  	RCALL	LogUnit_Log_Glcd_Write
0x4E3A	0xB1008F  	SUB	#8, W15
0x4E3C	0x78064F  	POP	W12
;LogUnit.mpas,897 :: 		end;
0x4E3E	0xB3C310  	MOV.B	#49, W0
0x4E40	0xE16400  	CP.B	W12, W0
0x4E42	0x320003  	BRA Z	L__Log_Settings360
L__Log_Settings506:
; i start address is: 0 (W0)
0x4E44	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4E46	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4E48	0x37FFD6  	BRA	L__Log_Settings357
L__Log_Settings360:
;LogUnit.mpas,898 :: 		end;
0x4E4A	0x370474  	BRA	L__Log_Settings304
L__Log_Settings355:
;LogUnit.mpas,900 :: 		8: begin  // log menüsü 8/19 sayfasý en fazla 7 olay görüntüleniyor
0x4E4C	0x90405E  	MOV.B	[W14+5], W0
0x4E4E	0xE10468  	CP.B	W0, #8
0x4E50	0x3A005C  	BRA NZ	L__Log_Settings363
L__Log_Settings507:
;LogUnit.mpas,901 :: 		Glcd_Write_Text('SAYFA / PAGE - 8/19',22,Row1,Black);
0x4E52	0x4700E6  	ADD	W14, #6, W1
0x4E54	0xB3C530  	MOV.B	#83, W0
0x4E56	0x785880  	MOV.B	W0, [W1++]
0x4E58	0xB3C410  	MOV.B	#65, W0
0x4E5A	0x785880  	MOV.B	W0, [W1++]
0x4E5C	0xB3C590  	MOV.B	#89, W0
0x4E5E	0x785880  	MOV.B	W0, [W1++]
0x4E60	0xB3C460  	MOV.B	#70, W0
0x4E62	0x785880  	MOV.B	W0, [W1++]
0x4E64	0xB3C410  	MOV.B	#65, W0
0x4E66	0x785880  	MOV.B	W0, [W1++]
0x4E68	0xB3C200  	MOV.B	#32, W0
0x4E6A	0x785880  	MOV.B	W0, [W1++]
0x4E6C	0xB3C2F0  	MOV.B	#47, W0
0x4E6E	0x785880  	MOV.B	W0, [W1++]
0x4E70	0xB3C200  	MOV.B	#32, W0
0x4E72	0x785880  	MOV.B	W0, [W1++]
0x4E74	0xB3C500  	MOV.B	#80, W0
0x4E76	0x785880  	MOV.B	W0, [W1++]
0x4E78	0xB3C410  	MOV.B	#65, W0
0x4E7A	0x785880  	MOV.B	W0, [W1++]
0x4E7C	0xB3C470  	MOV.B	#71, W0
0x4E7E	0x785880  	MOV.B	W0, [W1++]
0x4E80	0xB3C450  	MOV.B	#69, W0
0x4E82	0x785880  	MOV.B	W0, [W1++]
0x4E84	0xB3C200  	MOV.B	#32, W0
0x4E86	0x785880  	MOV.B	W0, [W1++]
0x4E88	0xB3C2D0  	MOV.B	#45, W0
0x4E8A	0x785880  	MOV.B	W0, [W1++]
0x4E8C	0xB3C200  	MOV.B	#32, W0
0x4E8E	0x785880  	MOV.B	W0, [W1++]
0x4E90	0xB3C380  	MOV.B	#56, W0
0x4E92	0x785880  	MOV.B	W0, [W1++]
0x4E94	0xB3C2F0  	MOV.B	#47, W0
0x4E96	0x785880  	MOV.B	W0, [W1++]
0x4E98	0xB3C310  	MOV.B	#49, W0
0x4E9A	0x785880  	MOV.B	W0, [W1++]
0x4E9C	0xB3C390  	MOV.B	#57, W0
0x4E9E	0x785880  	MOV.B	W0, [W1++]
0x4EA0	0xEF2000  	CLR	W0
0x4EA2	0x785880  	MOV.B	W0, [W1++]
0x4EA4	0x470066  	ADD	W14, #6, W0
0x4EA6	0xB3C01D  	MOV.B	#1, W13
0x4EA8	0xB3C00C  	MOV.B	#0, W12
0x4EAA	0xB3C16B  	MOV.B	#22, W11
0x4EAC	0x780500  	MOV	W0, W10
0x4EAE	0x07046D  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,903 :: 		for i:= 50 to 56 do
; i start address is: 26 (W13)
0x4EB0	0xB3C32D  	MOV.B	#50, W13
; i end address is: 26 (W13)
0x4EB2	0x78460D  	MOV.B	W13, W12
L__Log_Settings365:
;LogUnit.mpas,905 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4EB4	0xFB800C  	ZE	W12, W0
0x4EB6	0xED2000  	DEC	W0
0x4EB8	0xDD0241  	SL	W0, #1, W4
0x4EBA	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4EBC	0x400184  	ADD	W0, W4, W3
0x4EBE	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4EC0	0x400104  	ADD	W0, W4, W2
0x4EC2	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4EC4	0x400084  	ADD	W0, W4, W1
0x4EC6	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4EC8	0x400004  	ADD	W0, W4, W0
0x4ECA	0x781F8C  	PUSH	W12
0x4ECC	0x780690  	MOV	[W0], W13
0x4ECE	0x780611  	MOV	[W1], W12
0x4ED0	0x780592  	MOV	[W2], W11
0x4ED2	0x780513  	MOV	[W3], W10
0x4ED4	0x07E7D4  	RCALL	LogUnit_Log_Partition
0x4ED6	0x78064F  	POP	W12
;LogUnit.mpas,906 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-49,Black);
0x4ED8	0xFB808C  	ZE	W12, W1
0x4EDA	0x200310  	MOV	#49, W0
0x4EDC	0x508080  	SUB	W1, W0, W1
0x4EDE	0x781F8C  	PUSH	W12
0x4EE0	0xEF201A  	CLR	W13
0x4EE2	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4EE4	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4EE6	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4EE8	0x200010  	MOV	#1, W0
0x4EEA	0x781F80  	PUSH	W0
0x4EEC	0x781F81  	PUSH	W1
0x4EEE	0x200690  	MOV	#105, W0
0x4EF0	0x781F80  	PUSH	W0
0x4EF2	0x200230  	MOV	#35, W0
0x4EF4	0x781F80  	PUSH	W0
0x4EF6	0x07EABC  	RCALL	LogUnit_Log_Glcd_Write
0x4EF8	0xB1008F  	SUB	#8, W15
0x4EFA	0x78064F  	POP	W12
;LogUnit.mpas,907 :: 		end;
0x4EFC	0xB3C380  	MOV.B	#56, W0
0x4EFE	0xE16400  	CP.B	W12, W0
0x4F00	0x320003  	BRA Z	L__Log_Settings368
L__Log_Settings508:
; i start address is: 0 (W0)
0x4F02	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4F04	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4F06	0x37FFD6  	BRA	L__Log_Settings365
L__Log_Settings368:
;LogUnit.mpas,908 :: 		end;
0x4F08	0x370415  	BRA	L__Log_Settings304
L__Log_Settings363:
;LogUnit.mpas,910 :: 		9: begin  // log menüsü 9/19 sayfasý en fazla 7 olay görüntüleniyor
0x4F0A	0x90405E  	MOV.B	[W14+5], W0
0x4F0C	0xE10469  	CP.B	W0, #9
0x4F0E	0x3A005C  	BRA NZ	L__Log_Settings371
L__Log_Settings509:
;LogUnit.mpas,911 :: 		Glcd_Write_Text('SAYFA / PAGE - 9/19',22,Row1,Black);
0x4F10	0x4700E6  	ADD	W14, #6, W1
0x4F12	0xB3C530  	MOV.B	#83, W0
0x4F14	0x785880  	MOV.B	W0, [W1++]
0x4F16	0xB3C410  	MOV.B	#65, W0
0x4F18	0x785880  	MOV.B	W0, [W1++]
0x4F1A	0xB3C590  	MOV.B	#89, W0
0x4F1C	0x785880  	MOV.B	W0, [W1++]
0x4F1E	0xB3C460  	MOV.B	#70, W0
0x4F20	0x785880  	MOV.B	W0, [W1++]
0x4F22	0xB3C410  	MOV.B	#65, W0
0x4F24	0x785880  	MOV.B	W0, [W1++]
0x4F26	0xB3C200  	MOV.B	#32, W0
0x4F28	0x785880  	MOV.B	W0, [W1++]
0x4F2A	0xB3C2F0  	MOV.B	#47, W0
0x4F2C	0x785880  	MOV.B	W0, [W1++]
0x4F2E	0xB3C200  	MOV.B	#32, W0
0x4F30	0x785880  	MOV.B	W0, [W1++]
0x4F32	0xB3C500  	MOV.B	#80, W0
0x4F34	0x785880  	MOV.B	W0, [W1++]
0x4F36	0xB3C410  	MOV.B	#65, W0
0x4F38	0x785880  	MOV.B	W0, [W1++]
0x4F3A	0xB3C470  	MOV.B	#71, W0
0x4F3C	0x785880  	MOV.B	W0, [W1++]
0x4F3E	0xB3C450  	MOV.B	#69, W0
0x4F40	0x785880  	MOV.B	W0, [W1++]
0x4F42	0xB3C200  	MOV.B	#32, W0
0x4F44	0x785880  	MOV.B	W0, [W1++]
0x4F46	0xB3C2D0  	MOV.B	#45, W0
0x4F48	0x785880  	MOV.B	W0, [W1++]
0x4F4A	0xB3C200  	MOV.B	#32, W0
0x4F4C	0x785880  	MOV.B	W0, [W1++]
0x4F4E	0xB3C390  	MOV.B	#57, W0
0x4F50	0x785880  	MOV.B	W0, [W1++]
0x4F52	0xB3C2F0  	MOV.B	#47, W0
0x4F54	0x785880  	MOV.B	W0, [W1++]
0x4F56	0xB3C310  	MOV.B	#49, W0
0x4F58	0x785880  	MOV.B	W0, [W1++]
0x4F5A	0xB3C390  	MOV.B	#57, W0
0x4F5C	0x785880  	MOV.B	W0, [W1++]
0x4F5E	0xEF2000  	CLR	W0
0x4F60	0x785880  	MOV.B	W0, [W1++]
0x4F62	0x470066  	ADD	W14, #6, W0
0x4F64	0xB3C01D  	MOV.B	#1, W13
0x4F66	0xB3C00C  	MOV.B	#0, W12
0x4F68	0xB3C16B  	MOV.B	#22, W11
0x4F6A	0x780500  	MOV	W0, W10
0x4F6C	0x07040E  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,913 :: 		for i:= 57 to 63 do
; i start address is: 26 (W13)
0x4F6E	0xB3C39D  	MOV.B	#57, W13
; i end address is: 26 (W13)
0x4F70	0x78460D  	MOV.B	W13, W12
L__Log_Settings373:
;LogUnit.mpas,915 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x4F72	0xFB800C  	ZE	W12, W0
0x4F74	0xED2000  	DEC	W0
0x4F76	0xDD0241  	SL	W0, #1, W4
0x4F78	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x4F7A	0x400184  	ADD	W0, W4, W3
0x4F7C	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x4F7E	0x400104  	ADD	W0, W4, W2
0x4F80	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x4F82	0x400084  	ADD	W0, W4, W1
0x4F84	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x4F86	0x400004  	ADD	W0, W4, W0
0x4F88	0x781F8C  	PUSH	W12
0x4F8A	0x780690  	MOV	[W0], W13
0x4F8C	0x780611  	MOV	[W1], W12
0x4F8E	0x780592  	MOV	[W2], W11
0x4F90	0x780513  	MOV	[W3], W10
0x4F92	0x07E775  	RCALL	LogUnit_Log_Partition
0x4F94	0x78064F  	POP	W12
;LogUnit.mpas,916 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-56,Black);
0x4F96	0xFB808C  	ZE	W12, W1
0x4F98	0x200380  	MOV	#56, W0
0x4F9A	0x508080  	SUB	W1, W0, W1
0x4F9C	0x781F8C  	PUSH	W12
0x4F9E	0xEF201A  	CLR	W13
0x4FA0	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x4FA2	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x4FA4	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x4FA6	0x200010  	MOV	#1, W0
0x4FA8	0x781F80  	PUSH	W0
0x4FAA	0x781F81  	PUSH	W1
0x4FAC	0x200690  	MOV	#105, W0
0x4FAE	0x781F80  	PUSH	W0
0x4FB0	0x200230  	MOV	#35, W0
0x4FB2	0x781F80  	PUSH	W0
0x4FB4	0x07EA5D  	RCALL	LogUnit_Log_Glcd_Write
0x4FB6	0xB1008F  	SUB	#8, W15
0x4FB8	0x78064F  	POP	W12
;LogUnit.mpas,917 :: 		end;
0x4FBA	0xB3C3F0  	MOV.B	#63, W0
0x4FBC	0xE16400  	CP.B	W12, W0
0x4FBE	0x320003  	BRA Z	L__Log_Settings376
L__Log_Settings510:
; i start address is: 0 (W0)
0x4FC0	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x4FC2	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x4FC4	0x37FFD6  	BRA	L__Log_Settings373
L__Log_Settings376:
;LogUnit.mpas,918 :: 		end;
0x4FC6	0x3703B6  	BRA	L__Log_Settings304
L__Log_Settings371:
;LogUnit.mpas,920 :: 		10: begin  // log menüsü 10/19 sayfasý en fazla 7 olay görüntüleniyor
0x4FC8	0x90405E  	MOV.B	[W14+5], W0
0x4FCA	0xE1046A  	CP.B	W0, #10
0x4FCC	0x3A005C  	BRA NZ	L__Log_Settings379
L__Log_Settings511:
;LogUnit.mpas,921 :: 		Glcd_Write_Text('SAYFA / PAGE -10/19',22,Row1,Black);
0x4FCE	0x4700E6  	ADD	W14, #6, W1
0x4FD0	0xB3C530  	MOV.B	#83, W0
0x4FD2	0x785880  	MOV.B	W0, [W1++]
0x4FD4	0xB3C410  	MOV.B	#65, W0
0x4FD6	0x785880  	MOV.B	W0, [W1++]
0x4FD8	0xB3C590  	MOV.B	#89, W0
0x4FDA	0x785880  	MOV.B	W0, [W1++]
0x4FDC	0xB3C460  	MOV.B	#70, W0
0x4FDE	0x785880  	MOV.B	W0, [W1++]
0x4FE0	0xB3C410  	MOV.B	#65, W0
0x4FE2	0x785880  	MOV.B	W0, [W1++]
0x4FE4	0xB3C200  	MOV.B	#32, W0
0x4FE6	0x785880  	MOV.B	W0, [W1++]
0x4FE8	0xB3C2F0  	MOV.B	#47, W0
0x4FEA	0x785880  	MOV.B	W0, [W1++]
0x4FEC	0xB3C200  	MOV.B	#32, W0
0x4FEE	0x785880  	MOV.B	W0, [W1++]
0x4FF0	0xB3C500  	MOV.B	#80, W0
0x4FF2	0x785880  	MOV.B	W0, [W1++]
0x4FF4	0xB3C410  	MOV.B	#65, W0
0x4FF6	0x785880  	MOV.B	W0, [W1++]
0x4FF8	0xB3C470  	MOV.B	#71, W0
0x4FFA	0x785880  	MOV.B	W0, [W1++]
0x4FFC	0xB3C450  	MOV.B	#69, W0
0x4FFE	0x785880  	MOV.B	W0, [W1++]
0x5000	0xB3C200  	MOV.B	#32, W0
0x5002	0x785880  	MOV.B	W0, [W1++]
0x5004	0xB3C2D0  	MOV.B	#45, W0
0x5006	0x785880  	MOV.B	W0, [W1++]
0x5008	0xB3C310  	MOV.B	#49, W0
0x500A	0x785880  	MOV.B	W0, [W1++]
0x500C	0xB3C300  	MOV.B	#48, W0
0x500E	0x785880  	MOV.B	W0, [W1++]
0x5010	0xB3C2F0  	MOV.B	#47, W0
0x5012	0x785880  	MOV.B	W0, [W1++]
0x5014	0xB3C310  	MOV.B	#49, W0
0x5016	0x785880  	MOV.B	W0, [W1++]
0x5018	0xB3C390  	MOV.B	#57, W0
0x501A	0x785880  	MOV.B	W0, [W1++]
0x501C	0xEF2000  	CLR	W0
0x501E	0x785880  	MOV.B	W0, [W1++]
0x5020	0x470066  	ADD	W14, #6, W0
0x5022	0xB3C01D  	MOV.B	#1, W13
0x5024	0xB3C00C  	MOV.B	#0, W12
0x5026	0xB3C16B  	MOV.B	#22, W11
0x5028	0x780500  	MOV	W0, W10
0x502A	0x0703AF  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,923 :: 		for i:= 64 to 70 do
; i start address is: 26 (W13)
0x502C	0xB3C40D  	MOV.B	#64, W13
; i end address is: 26 (W13)
0x502E	0x78460D  	MOV.B	W13, W12
L__Log_Settings381:
;LogUnit.mpas,925 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x5030	0xFB800C  	ZE	W12, W0
0x5032	0xED2000  	DEC	W0
0x5034	0xDD0241  	SL	W0, #1, W4
0x5036	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x5038	0x400184  	ADD	W0, W4, W3
0x503A	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x503C	0x400104  	ADD	W0, W4, W2
0x503E	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x5040	0x400084  	ADD	W0, W4, W1
0x5042	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x5044	0x400004  	ADD	W0, W4, W0
0x5046	0x781F8C  	PUSH	W12
0x5048	0x780690  	MOV	[W0], W13
0x504A	0x780611  	MOV	[W1], W12
0x504C	0x780592  	MOV	[W2], W11
0x504E	0x780513  	MOV	[W3], W10
0x5050	0x07E716  	RCALL	LogUnit_Log_Partition
0x5052	0x78064F  	POP	W12
;LogUnit.mpas,926 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-63,Black);
0x5054	0xFB808C  	ZE	W12, W1
0x5056	0x2003F0  	MOV	#63, W0
0x5058	0x508080  	SUB	W1, W0, W1
0x505A	0x781F8C  	PUSH	W12
0x505C	0xEF201A  	CLR	W13
0x505E	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x5060	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5062	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x5064	0x200010  	MOV	#1, W0
0x5066	0x781F80  	PUSH	W0
0x5068	0x781F81  	PUSH	W1
0x506A	0x200690  	MOV	#105, W0
0x506C	0x781F80  	PUSH	W0
0x506E	0x200230  	MOV	#35, W0
0x5070	0x781F80  	PUSH	W0
0x5072	0x07E9FE  	RCALL	LogUnit_Log_Glcd_Write
0x5074	0xB1008F  	SUB	#8, W15
0x5076	0x78064F  	POP	W12
;LogUnit.mpas,927 :: 		end;
0x5078	0xB3C460  	MOV.B	#70, W0
0x507A	0xE16400  	CP.B	W12, W0
0x507C	0x320003  	BRA Z	L__Log_Settings384
L__Log_Settings512:
; i start address is: 0 (W0)
0x507E	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x5080	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x5082	0x37FFD6  	BRA	L__Log_Settings381
L__Log_Settings384:
;LogUnit.mpas,928 :: 		end;
0x5084	0x370357  	BRA	L__Log_Settings304
L__Log_Settings379:
;LogUnit.mpas,930 :: 		11: begin  // log menüsü 11/19 sayfasý en fazla 7 olay görüntüleniyor
0x5086	0x90405E  	MOV.B	[W14+5], W0
0x5088	0xE1046B  	CP.B	W0, #11
0x508A	0x3A005C  	BRA NZ	L__Log_Settings387
L__Log_Settings513:
;LogUnit.mpas,931 :: 		Glcd_Write_Text('SAYFA / PAGE -11/19',22,Row1,Black);
0x508C	0x4700E6  	ADD	W14, #6, W1
0x508E	0xB3C530  	MOV.B	#83, W0
0x5090	0x785880  	MOV.B	W0, [W1++]
0x5092	0xB3C410  	MOV.B	#65, W0
0x5094	0x785880  	MOV.B	W0, [W1++]
0x5096	0xB3C590  	MOV.B	#89, W0
0x5098	0x785880  	MOV.B	W0, [W1++]
0x509A	0xB3C460  	MOV.B	#70, W0
0x509C	0x785880  	MOV.B	W0, [W1++]
0x509E	0xB3C410  	MOV.B	#65, W0
0x50A0	0x785880  	MOV.B	W0, [W1++]
0x50A2	0xB3C200  	MOV.B	#32, W0
0x50A4	0x785880  	MOV.B	W0, [W1++]
0x50A6	0xB3C2F0  	MOV.B	#47, W0
0x50A8	0x785880  	MOV.B	W0, [W1++]
0x50AA	0xB3C200  	MOV.B	#32, W0
0x50AC	0x785880  	MOV.B	W0, [W1++]
0x50AE	0xB3C500  	MOV.B	#80, W0
0x50B0	0x785880  	MOV.B	W0, [W1++]
0x50B2	0xB3C410  	MOV.B	#65, W0
0x50B4	0x785880  	MOV.B	W0, [W1++]
0x50B6	0xB3C470  	MOV.B	#71, W0
0x50B8	0x785880  	MOV.B	W0, [W1++]
0x50BA	0xB3C450  	MOV.B	#69, W0
0x50BC	0x785880  	MOV.B	W0, [W1++]
0x50BE	0xB3C200  	MOV.B	#32, W0
0x50C0	0x785880  	MOV.B	W0, [W1++]
0x50C2	0xB3C2D0  	MOV.B	#45, W0
0x50C4	0x785880  	MOV.B	W0, [W1++]
0x50C6	0xB3C310  	MOV.B	#49, W0
0x50C8	0x785880  	MOV.B	W0, [W1++]
0x50CA	0xB3C310  	MOV.B	#49, W0
0x50CC	0x785880  	MOV.B	W0, [W1++]
0x50CE	0xB3C2F0  	MOV.B	#47, W0
0x50D0	0x785880  	MOV.B	W0, [W1++]
0x50D2	0xB3C310  	MOV.B	#49, W0
0x50D4	0x785880  	MOV.B	W0, [W1++]
0x50D6	0xB3C390  	MOV.B	#57, W0
0x50D8	0x785880  	MOV.B	W0, [W1++]
0x50DA	0xEF2000  	CLR	W0
0x50DC	0x785880  	MOV.B	W0, [W1++]
0x50DE	0x470066  	ADD	W14, #6, W0
0x50E0	0xB3C01D  	MOV.B	#1, W13
0x50E2	0xB3C00C  	MOV.B	#0, W12
0x50E4	0xB3C16B  	MOV.B	#22, W11
0x50E6	0x780500  	MOV	W0, W10
0x50E8	0x070350  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,933 :: 		for i:= 71 to 77 do
; i start address is: 26 (W13)
0x50EA	0xB3C47D  	MOV.B	#71, W13
; i end address is: 26 (W13)
0x50EC	0x78460D  	MOV.B	W13, W12
L__Log_Settings389:
;LogUnit.mpas,935 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x50EE	0xFB800C  	ZE	W12, W0
0x50F0	0xED2000  	DEC	W0
0x50F2	0xDD0241  	SL	W0, #1, W4
0x50F4	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x50F6	0x400184  	ADD	W0, W4, W3
0x50F8	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x50FA	0x400104  	ADD	W0, W4, W2
0x50FC	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x50FE	0x400084  	ADD	W0, W4, W1
0x5100	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x5102	0x400004  	ADD	W0, W4, W0
0x5104	0x781F8C  	PUSH	W12
0x5106	0x780690  	MOV	[W0], W13
0x5108	0x780611  	MOV	[W1], W12
0x510A	0x780592  	MOV	[W2], W11
0x510C	0x780513  	MOV	[W3], W10
0x510E	0x07E6B7  	RCALL	LogUnit_Log_Partition
0x5110	0x78064F  	POP	W12
;LogUnit.mpas,936 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-70,Black);
0x5112	0xFB808C  	ZE	W12, W1
0x5114	0x200460  	MOV	#70, W0
0x5116	0x508080  	SUB	W1, W0, W1
0x5118	0x781F8C  	PUSH	W12
0x511A	0xEF201A  	CLR	W13
0x511C	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x511E	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5120	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x5122	0x200010  	MOV	#1, W0
0x5124	0x781F80  	PUSH	W0
0x5126	0x781F81  	PUSH	W1
0x5128	0x200690  	MOV	#105, W0
0x512A	0x781F80  	PUSH	W0
0x512C	0x200230  	MOV	#35, W0
0x512E	0x781F80  	PUSH	W0
0x5130	0x07E99F  	RCALL	LogUnit_Log_Glcd_Write
0x5132	0xB1008F  	SUB	#8, W15
0x5134	0x78064F  	POP	W12
;LogUnit.mpas,937 :: 		end;
0x5136	0xB3C4D0  	MOV.B	#77, W0
0x5138	0xE16400  	CP.B	W12, W0
0x513A	0x320003  	BRA Z	L__Log_Settings392
L__Log_Settings514:
; i start address is: 0 (W0)
0x513C	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x513E	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x5140	0x37FFD6  	BRA	L__Log_Settings389
L__Log_Settings392:
;LogUnit.mpas,938 :: 		end;
0x5142	0x3702F8  	BRA	L__Log_Settings304
L__Log_Settings387:
;LogUnit.mpas,940 :: 		12: begin  // log menüsü 12/19 sayfasý en fazla 7 olay görüntüleniyor
0x5144	0x90405E  	MOV.B	[W14+5], W0
0x5146	0xE1046C  	CP.B	W0, #12
0x5148	0x3A005C  	BRA NZ	L__Log_Settings395
L__Log_Settings515:
;LogUnit.mpas,941 :: 		Glcd_Write_Text('SAYFA / PAGE -12/19',22,Row1,Black);
0x514A	0x4700E6  	ADD	W14, #6, W1
0x514C	0xB3C530  	MOV.B	#83, W0
0x514E	0x785880  	MOV.B	W0, [W1++]
0x5150	0xB3C410  	MOV.B	#65, W0
0x5152	0x785880  	MOV.B	W0, [W1++]
0x5154	0xB3C590  	MOV.B	#89, W0
0x5156	0x785880  	MOV.B	W0, [W1++]
0x5158	0xB3C460  	MOV.B	#70, W0
0x515A	0x785880  	MOV.B	W0, [W1++]
0x515C	0xB3C410  	MOV.B	#65, W0
0x515E	0x785880  	MOV.B	W0, [W1++]
0x5160	0xB3C200  	MOV.B	#32, W0
0x5162	0x785880  	MOV.B	W0, [W1++]
0x5164	0xB3C2F0  	MOV.B	#47, W0
0x5166	0x785880  	MOV.B	W0, [W1++]
0x5168	0xB3C200  	MOV.B	#32, W0
0x516A	0x785880  	MOV.B	W0, [W1++]
0x516C	0xB3C500  	MOV.B	#80, W0
0x516E	0x785880  	MOV.B	W0, [W1++]
0x5170	0xB3C410  	MOV.B	#65, W0
0x5172	0x785880  	MOV.B	W0, [W1++]
0x5174	0xB3C470  	MOV.B	#71, W0
0x5176	0x785880  	MOV.B	W0, [W1++]
0x5178	0xB3C450  	MOV.B	#69, W0
0x517A	0x785880  	MOV.B	W0, [W1++]
0x517C	0xB3C200  	MOV.B	#32, W0
0x517E	0x785880  	MOV.B	W0, [W1++]
0x5180	0xB3C2D0  	MOV.B	#45, W0
0x5182	0x785880  	MOV.B	W0, [W1++]
0x5184	0xB3C310  	MOV.B	#49, W0
0x5186	0x785880  	MOV.B	W0, [W1++]
0x5188	0xB3C320  	MOV.B	#50, W0
0x518A	0x785880  	MOV.B	W0, [W1++]
0x518C	0xB3C2F0  	MOV.B	#47, W0
0x518E	0x785880  	MOV.B	W0, [W1++]
0x5190	0xB3C310  	MOV.B	#49, W0
0x5192	0x785880  	MOV.B	W0, [W1++]
0x5194	0xB3C390  	MOV.B	#57, W0
0x5196	0x785880  	MOV.B	W0, [W1++]
0x5198	0xEF2000  	CLR	W0
0x519A	0x785880  	MOV.B	W0, [W1++]
0x519C	0x470066  	ADD	W14, #6, W0
0x519E	0xB3C01D  	MOV.B	#1, W13
0x51A0	0xB3C00C  	MOV.B	#0, W12
0x51A2	0xB3C16B  	MOV.B	#22, W11
0x51A4	0x780500  	MOV	W0, W10
0x51A6	0x0702F1  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,943 :: 		for i:= 78 to 84 do
; i start address is: 26 (W13)
0x51A8	0xB3C4ED  	MOV.B	#78, W13
; i end address is: 26 (W13)
0x51AA	0x78460D  	MOV.B	W13, W12
L__Log_Settings397:
;LogUnit.mpas,945 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x51AC	0xFB800C  	ZE	W12, W0
0x51AE	0xED2000  	DEC	W0
0x51B0	0xDD0241  	SL	W0, #1, W4
0x51B2	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x51B4	0x400184  	ADD	W0, W4, W3
0x51B6	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x51B8	0x400104  	ADD	W0, W4, W2
0x51BA	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x51BC	0x400084  	ADD	W0, W4, W1
0x51BE	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x51C0	0x400004  	ADD	W0, W4, W0
0x51C2	0x781F8C  	PUSH	W12
0x51C4	0x780690  	MOV	[W0], W13
0x51C6	0x780611  	MOV	[W1], W12
0x51C8	0x780592  	MOV	[W2], W11
0x51CA	0x780513  	MOV	[W3], W10
0x51CC	0x07E658  	RCALL	LogUnit_Log_Partition
0x51CE	0x78064F  	POP	W12
;LogUnit.mpas,946 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-77,Black);
0x51D0	0xFB808C  	ZE	W12, W1
0x51D2	0x2004D0  	MOV	#77, W0
0x51D4	0x508080  	SUB	W1, W0, W1
0x51D6	0x781F8C  	PUSH	W12
0x51D8	0xEF201A  	CLR	W13
0x51DA	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x51DC	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x51DE	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x51E0	0x200010  	MOV	#1, W0
0x51E2	0x781F80  	PUSH	W0
0x51E4	0x781F81  	PUSH	W1
0x51E6	0x200690  	MOV	#105, W0
0x51E8	0x781F80  	PUSH	W0
0x51EA	0x200230  	MOV	#35, W0
0x51EC	0x781F80  	PUSH	W0
0x51EE	0x07E940  	RCALL	LogUnit_Log_Glcd_Write
0x51F0	0xB1008F  	SUB	#8, W15
0x51F2	0x78064F  	POP	W12
;LogUnit.mpas,947 :: 		end;
0x51F4	0xB3C540  	MOV.B	#84, W0
0x51F6	0xE16400  	CP.B	W12, W0
0x51F8	0x320003  	BRA Z	L__Log_Settings400
L__Log_Settings516:
; i start address is: 0 (W0)
0x51FA	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x51FC	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x51FE	0x37FFD6  	BRA	L__Log_Settings397
L__Log_Settings400:
;LogUnit.mpas,948 :: 		end;
0x5200	0x370299  	BRA	L__Log_Settings304
L__Log_Settings395:
;LogUnit.mpas,950 :: 		13: begin  // log menüsü 13/19 sayfasý en fazla 7 olay görüntüleniyor
0x5202	0x90405E  	MOV.B	[W14+5], W0
0x5204	0xE1046D  	CP.B	W0, #13
0x5206	0x3A005C  	BRA NZ	L__Log_Settings403
L__Log_Settings517:
;LogUnit.mpas,951 :: 		Glcd_Write_Text('SAYFA / PAGE -13/19',22,Row1,Black);
0x5208	0x4700E6  	ADD	W14, #6, W1
0x520A	0xB3C530  	MOV.B	#83, W0
0x520C	0x785880  	MOV.B	W0, [W1++]
0x520E	0xB3C410  	MOV.B	#65, W0
0x5210	0x785880  	MOV.B	W0, [W1++]
0x5212	0xB3C590  	MOV.B	#89, W0
0x5214	0x785880  	MOV.B	W0, [W1++]
0x5216	0xB3C460  	MOV.B	#70, W0
0x5218	0x785880  	MOV.B	W0, [W1++]
0x521A	0xB3C410  	MOV.B	#65, W0
0x521C	0x785880  	MOV.B	W0, [W1++]
0x521E	0xB3C200  	MOV.B	#32, W0
0x5220	0x785880  	MOV.B	W0, [W1++]
0x5222	0xB3C2F0  	MOV.B	#47, W0
0x5224	0x785880  	MOV.B	W0, [W1++]
0x5226	0xB3C200  	MOV.B	#32, W0
0x5228	0x785880  	MOV.B	W0, [W1++]
0x522A	0xB3C500  	MOV.B	#80, W0
0x522C	0x785880  	MOV.B	W0, [W1++]
0x522E	0xB3C410  	MOV.B	#65, W0
0x5230	0x785880  	MOV.B	W0, [W1++]
0x5232	0xB3C470  	MOV.B	#71, W0
0x5234	0x785880  	MOV.B	W0, [W1++]
0x5236	0xB3C450  	MOV.B	#69, W0
0x5238	0x785880  	MOV.B	W0, [W1++]
0x523A	0xB3C200  	MOV.B	#32, W0
0x523C	0x785880  	MOV.B	W0, [W1++]
0x523E	0xB3C2D0  	MOV.B	#45, W0
0x5240	0x785880  	MOV.B	W0, [W1++]
0x5242	0xB3C310  	MOV.B	#49, W0
0x5244	0x785880  	MOV.B	W0, [W1++]
0x5246	0xB3C330  	MOV.B	#51, W0
0x5248	0x785880  	MOV.B	W0, [W1++]
0x524A	0xB3C2F0  	MOV.B	#47, W0
0x524C	0x785880  	MOV.B	W0, [W1++]
0x524E	0xB3C310  	MOV.B	#49, W0
0x5250	0x785880  	MOV.B	W0, [W1++]
0x5252	0xB3C390  	MOV.B	#57, W0
0x5254	0x785880  	MOV.B	W0, [W1++]
0x5256	0xEF2000  	CLR	W0
0x5258	0x785880  	MOV.B	W0, [W1++]
0x525A	0x470066  	ADD	W14, #6, W0
0x525C	0xB3C01D  	MOV.B	#1, W13
0x525E	0xB3C00C  	MOV.B	#0, W12
0x5260	0xB3C16B  	MOV.B	#22, W11
0x5262	0x780500  	MOV	W0, W10
0x5264	0x070292  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,953 :: 		for i:= 85 to 91 do
; i start address is: 26 (W13)
0x5266	0xB3C55D  	MOV.B	#85, W13
; i end address is: 26 (W13)
0x5268	0x78460D  	MOV.B	W13, W12
L__Log_Settings405:
;LogUnit.mpas,955 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x526A	0xFB800C  	ZE	W12, W0
0x526C	0xED2000  	DEC	W0
0x526E	0xDD0241  	SL	W0, #1, W4
0x5270	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x5272	0x400184  	ADD	W0, W4, W3
0x5274	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x5276	0x400104  	ADD	W0, W4, W2
0x5278	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x527A	0x400084  	ADD	W0, W4, W1
0x527C	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x527E	0x400004  	ADD	W0, W4, W0
0x5280	0x781F8C  	PUSH	W12
0x5282	0x780690  	MOV	[W0], W13
0x5284	0x780611  	MOV	[W1], W12
0x5286	0x780592  	MOV	[W2], W11
0x5288	0x780513  	MOV	[W3], W10
0x528A	0x07E5F9  	RCALL	LogUnit_Log_Partition
0x528C	0x78064F  	POP	W12
;LogUnit.mpas,956 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-84,Black);
0x528E	0xFB808C  	ZE	W12, W1
0x5290	0x200540  	MOV	#84, W0
0x5292	0x508080  	SUB	W1, W0, W1
0x5294	0x781F8C  	PUSH	W12
0x5296	0xEF201A  	CLR	W13
0x5298	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x529A	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x529C	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x529E	0x200010  	MOV	#1, W0
0x52A0	0x781F80  	PUSH	W0
0x52A2	0x781F81  	PUSH	W1
0x52A4	0x200690  	MOV	#105, W0
0x52A6	0x781F80  	PUSH	W0
0x52A8	0x200230  	MOV	#35, W0
0x52AA	0x781F80  	PUSH	W0
0x52AC	0x07E8E1  	RCALL	LogUnit_Log_Glcd_Write
0x52AE	0xB1008F  	SUB	#8, W15
0x52B0	0x78064F  	POP	W12
;LogUnit.mpas,957 :: 		end;
0x52B2	0xB3C5B0  	MOV.B	#91, W0
0x52B4	0xE16400  	CP.B	W12, W0
0x52B6	0x320003  	BRA Z	L__Log_Settings408
L__Log_Settings518:
; i start address is: 0 (W0)
0x52B8	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x52BA	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x52BC	0x37FFD6  	BRA	L__Log_Settings405
L__Log_Settings408:
;LogUnit.mpas,958 :: 		end;
0x52BE	0x37023A  	BRA	L__Log_Settings304
L__Log_Settings403:
;LogUnit.mpas,960 :: 		14: begin  // log menüsü 14/19 sayfasý en fazla 7 olay görüntüleniyor
0x52C0	0x90405E  	MOV.B	[W14+5], W0
0x52C2	0xE1046E  	CP.B	W0, #14
0x52C4	0x3A005C  	BRA NZ	L__Log_Settings411
L__Log_Settings519:
;LogUnit.mpas,961 :: 		Glcd_Write_Text('SAYFA / PAGE -14/19',22,Row1,Black);
0x52C6	0x4700E6  	ADD	W14, #6, W1
0x52C8	0xB3C530  	MOV.B	#83, W0
0x52CA	0x785880  	MOV.B	W0, [W1++]
0x52CC	0xB3C410  	MOV.B	#65, W0
0x52CE	0x785880  	MOV.B	W0, [W1++]
0x52D0	0xB3C590  	MOV.B	#89, W0
0x52D2	0x785880  	MOV.B	W0, [W1++]
0x52D4	0xB3C460  	MOV.B	#70, W0
0x52D6	0x785880  	MOV.B	W0, [W1++]
0x52D8	0xB3C410  	MOV.B	#65, W0
0x52DA	0x785880  	MOV.B	W0, [W1++]
0x52DC	0xB3C200  	MOV.B	#32, W0
0x52DE	0x785880  	MOV.B	W0, [W1++]
0x52E0	0xB3C2F0  	MOV.B	#47, W0
0x52E2	0x785880  	MOV.B	W0, [W1++]
0x52E4	0xB3C200  	MOV.B	#32, W0
0x52E6	0x785880  	MOV.B	W0, [W1++]
0x52E8	0xB3C500  	MOV.B	#80, W0
0x52EA	0x785880  	MOV.B	W0, [W1++]
0x52EC	0xB3C410  	MOV.B	#65, W0
0x52EE	0x785880  	MOV.B	W0, [W1++]
0x52F0	0xB3C470  	MOV.B	#71, W0
0x52F2	0x785880  	MOV.B	W0, [W1++]
0x52F4	0xB3C450  	MOV.B	#69, W0
0x52F6	0x785880  	MOV.B	W0, [W1++]
0x52F8	0xB3C200  	MOV.B	#32, W0
0x52FA	0x785880  	MOV.B	W0, [W1++]
0x52FC	0xB3C2D0  	MOV.B	#45, W0
0x52FE	0x785880  	MOV.B	W0, [W1++]
0x5300	0xB3C310  	MOV.B	#49, W0
0x5302	0x785880  	MOV.B	W0, [W1++]
0x5304	0xB3C340  	MOV.B	#52, W0
0x5306	0x785880  	MOV.B	W0, [W1++]
0x5308	0xB3C2F0  	MOV.B	#47, W0
0x530A	0x785880  	MOV.B	W0, [W1++]
0x530C	0xB3C310  	MOV.B	#49, W0
0x530E	0x785880  	MOV.B	W0, [W1++]
0x5310	0xB3C390  	MOV.B	#57, W0
0x5312	0x785880  	MOV.B	W0, [W1++]
0x5314	0xEF2000  	CLR	W0
0x5316	0x785880  	MOV.B	W0, [W1++]
0x5318	0x470066  	ADD	W14, #6, W0
0x531A	0xB3C01D  	MOV.B	#1, W13
0x531C	0xB3C00C  	MOV.B	#0, W12
0x531E	0xB3C16B  	MOV.B	#22, W11
0x5320	0x780500  	MOV	W0, W10
0x5322	0x070233  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,963 :: 		for i:= 92 to 98 do
; i start address is: 26 (W13)
0x5324	0xB3C5CD  	MOV.B	#92, W13
; i end address is: 26 (W13)
0x5326	0x78460D  	MOV.B	W13, W12
L__Log_Settings413:
;LogUnit.mpas,965 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x5328	0xFB800C  	ZE	W12, W0
0x532A	0xED2000  	DEC	W0
0x532C	0xDD0241  	SL	W0, #1, W4
0x532E	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x5330	0x400184  	ADD	W0, W4, W3
0x5332	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x5334	0x400104  	ADD	W0, W4, W2
0x5336	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x5338	0x400084  	ADD	W0, W4, W1
0x533A	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x533C	0x400004  	ADD	W0, W4, W0
0x533E	0x781F8C  	PUSH	W12
0x5340	0x780690  	MOV	[W0], W13
0x5342	0x780611  	MOV	[W1], W12
0x5344	0x780592  	MOV	[W2], W11
0x5346	0x780513  	MOV	[W3], W10
0x5348	0x07E59A  	RCALL	LogUnit_Log_Partition
0x534A	0x78064F  	POP	W12
;LogUnit.mpas,966 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-91,Black);
0x534C	0xFB808C  	ZE	W12, W1
0x534E	0x2005B0  	MOV	#91, W0
0x5350	0x508080  	SUB	W1, W0, W1
0x5352	0x781F8C  	PUSH	W12
0x5354	0xEF201A  	CLR	W13
0x5356	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x5358	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x535A	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x535C	0x200010  	MOV	#1, W0
0x535E	0x781F80  	PUSH	W0
0x5360	0x781F81  	PUSH	W1
0x5362	0x200690  	MOV	#105, W0
0x5364	0x781F80  	PUSH	W0
0x5366	0x200230  	MOV	#35, W0
0x5368	0x781F80  	PUSH	W0
0x536A	0x07E882  	RCALL	LogUnit_Log_Glcd_Write
0x536C	0xB1008F  	SUB	#8, W15
0x536E	0x78064F  	POP	W12
;LogUnit.mpas,967 :: 		end;
0x5370	0xB3C620  	MOV.B	#98, W0
0x5372	0xE16400  	CP.B	W12, W0
0x5374	0x320003  	BRA Z	L__Log_Settings416
L__Log_Settings520:
; i start address is: 0 (W0)
0x5376	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x5378	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x537A	0x37FFD6  	BRA	L__Log_Settings413
L__Log_Settings416:
;LogUnit.mpas,968 :: 		end;
0x537C	0x3701DB  	BRA	L__Log_Settings304
L__Log_Settings411:
;LogUnit.mpas,970 :: 		15: begin  // log menüsü 15/19 sayfasý en fazla 7 olay görüntüleniyor
0x537E	0x90405E  	MOV.B	[W14+5], W0
0x5380	0xE1046F  	CP.B	W0, #15
0x5382	0x3A005C  	BRA NZ	L__Log_Settings419
L__Log_Settings521:
;LogUnit.mpas,971 :: 		Glcd_Write_Text('SAYFA / PAGE -15/19',22,Row1,Black);
0x5384	0x4700E6  	ADD	W14, #6, W1
0x5386	0xB3C530  	MOV.B	#83, W0
0x5388	0x785880  	MOV.B	W0, [W1++]
0x538A	0xB3C410  	MOV.B	#65, W0
0x538C	0x785880  	MOV.B	W0, [W1++]
0x538E	0xB3C590  	MOV.B	#89, W0
0x5390	0x785880  	MOV.B	W0, [W1++]
0x5392	0xB3C460  	MOV.B	#70, W0
0x5394	0x785880  	MOV.B	W0, [W1++]
0x5396	0xB3C410  	MOV.B	#65, W0
0x5398	0x785880  	MOV.B	W0, [W1++]
0x539A	0xB3C200  	MOV.B	#32, W0
0x539C	0x785880  	MOV.B	W0, [W1++]
0x539E	0xB3C2F0  	MOV.B	#47, W0
0x53A0	0x785880  	MOV.B	W0, [W1++]
0x53A2	0xB3C200  	MOV.B	#32, W0
0x53A4	0x785880  	MOV.B	W0, [W1++]
0x53A6	0xB3C500  	MOV.B	#80, W0
0x53A8	0x785880  	MOV.B	W0, [W1++]
0x53AA	0xB3C410  	MOV.B	#65, W0
0x53AC	0x785880  	MOV.B	W0, [W1++]
0x53AE	0xB3C470  	MOV.B	#71, W0
0x53B0	0x785880  	MOV.B	W0, [W1++]
0x53B2	0xB3C450  	MOV.B	#69, W0
0x53B4	0x785880  	MOV.B	W0, [W1++]
0x53B6	0xB3C200  	MOV.B	#32, W0
0x53B8	0x785880  	MOV.B	W0, [W1++]
0x53BA	0xB3C2D0  	MOV.B	#45, W0
0x53BC	0x785880  	MOV.B	W0, [W1++]
0x53BE	0xB3C310  	MOV.B	#49, W0
0x53C0	0x785880  	MOV.B	W0, [W1++]
0x53C2	0xB3C350  	MOV.B	#53, W0
0x53C4	0x785880  	MOV.B	W0, [W1++]
0x53C6	0xB3C2F0  	MOV.B	#47, W0
0x53C8	0x785880  	MOV.B	W0, [W1++]
0x53CA	0xB3C310  	MOV.B	#49, W0
0x53CC	0x785880  	MOV.B	W0, [W1++]
0x53CE	0xB3C390  	MOV.B	#57, W0
0x53D0	0x785880  	MOV.B	W0, [W1++]
0x53D2	0xEF2000  	CLR	W0
0x53D4	0x785880  	MOV.B	W0, [W1++]
0x53D6	0x470066  	ADD	W14, #6, W0
0x53D8	0xB3C01D  	MOV.B	#1, W13
0x53DA	0xB3C00C  	MOV.B	#0, W12
0x53DC	0xB3C16B  	MOV.B	#22, W11
0x53DE	0x780500  	MOV	W0, W10
0x53E0	0x0701D4  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,973 :: 		for i:= 99 to 105 do
; i start address is: 26 (W13)
0x53E2	0xB3C63D  	MOV.B	#99, W13
; i end address is: 26 (W13)
0x53E4	0x78460D  	MOV.B	W13, W12
L__Log_Settings421:
;LogUnit.mpas,975 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x53E6	0xFB800C  	ZE	W12, W0
0x53E8	0xED2000  	DEC	W0
0x53EA	0xDD0241  	SL	W0, #1, W4
0x53EC	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x53EE	0x400184  	ADD	W0, W4, W3
0x53F0	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x53F2	0x400104  	ADD	W0, W4, W2
0x53F4	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x53F6	0x400084  	ADD	W0, W4, W1
0x53F8	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x53FA	0x400004  	ADD	W0, W4, W0
0x53FC	0x781F8C  	PUSH	W12
0x53FE	0x780690  	MOV	[W0], W13
0x5400	0x780611  	MOV	[W1], W12
0x5402	0x780592  	MOV	[W2], W11
0x5404	0x780513  	MOV	[W3], W10
0x5406	0x07E53B  	RCALL	LogUnit_Log_Partition
0x5408	0x78064F  	POP	W12
;LogUnit.mpas,976 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-98,Black);
0x540A	0xFB808C  	ZE	W12, W1
0x540C	0x200620  	MOV	#98, W0
0x540E	0x508080  	SUB	W1, W0, W1
0x5410	0x781F8C  	PUSH	W12
0x5412	0xEF201A  	CLR	W13
0x5414	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x5416	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5418	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x541A	0x200010  	MOV	#1, W0
0x541C	0x781F80  	PUSH	W0
0x541E	0x781F81  	PUSH	W1
0x5420	0x200690  	MOV	#105, W0
0x5422	0x781F80  	PUSH	W0
0x5424	0x200230  	MOV	#35, W0
0x5426	0x781F80  	PUSH	W0
0x5428	0x07E823  	RCALL	LogUnit_Log_Glcd_Write
0x542A	0xB1008F  	SUB	#8, W15
0x542C	0x78064F  	POP	W12
;LogUnit.mpas,977 :: 		end;
0x542E	0xB3C690  	MOV.B	#105, W0
0x5430	0xE16400  	CP.B	W12, W0
0x5432	0x320003  	BRA Z	L__Log_Settings424
L__Log_Settings522:
; i start address is: 0 (W0)
0x5434	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x5436	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x5438	0x37FFD6  	BRA	L__Log_Settings421
L__Log_Settings424:
;LogUnit.mpas,978 :: 		end;
0x543A	0x37017C  	BRA	L__Log_Settings304
L__Log_Settings419:
;LogUnit.mpas,980 :: 		16: begin  // log menüsü 16/19 sayfasý en fazla 7 olay görüntüleniyor
0x543C	0x90405E  	MOV.B	[W14+5], W0
0x543E	0xE10470  	CP.B	W0, #16
0x5440	0x3A005C  	BRA NZ	L__Log_Settings427
L__Log_Settings523:
;LogUnit.mpas,981 :: 		Glcd_Write_Text('SAYFA / PAGE -16/19',22,Row1,Black);
0x5442	0x4700E6  	ADD	W14, #6, W1
0x5444	0xB3C530  	MOV.B	#83, W0
0x5446	0x785880  	MOV.B	W0, [W1++]
0x5448	0xB3C410  	MOV.B	#65, W0
0x544A	0x785880  	MOV.B	W0, [W1++]
0x544C	0xB3C590  	MOV.B	#89, W0
0x544E	0x785880  	MOV.B	W0, [W1++]
0x5450	0xB3C460  	MOV.B	#70, W0
0x5452	0x785880  	MOV.B	W0, [W1++]
0x5454	0xB3C410  	MOV.B	#65, W0
0x5456	0x785880  	MOV.B	W0, [W1++]
0x5458	0xB3C200  	MOV.B	#32, W0
0x545A	0x785880  	MOV.B	W0, [W1++]
0x545C	0xB3C2F0  	MOV.B	#47, W0
0x545E	0x785880  	MOV.B	W0, [W1++]
0x5460	0xB3C200  	MOV.B	#32, W0
0x5462	0x785880  	MOV.B	W0, [W1++]
0x5464	0xB3C500  	MOV.B	#80, W0
0x5466	0x785880  	MOV.B	W0, [W1++]
0x5468	0xB3C410  	MOV.B	#65, W0
0x546A	0x785880  	MOV.B	W0, [W1++]
0x546C	0xB3C470  	MOV.B	#71, W0
0x546E	0x785880  	MOV.B	W0, [W1++]
0x5470	0xB3C450  	MOV.B	#69, W0
0x5472	0x785880  	MOV.B	W0, [W1++]
0x5474	0xB3C200  	MOV.B	#32, W0
0x5476	0x785880  	MOV.B	W0, [W1++]
0x5478	0xB3C2D0  	MOV.B	#45, W0
0x547A	0x785880  	MOV.B	W0, [W1++]
0x547C	0xB3C310  	MOV.B	#49, W0
0x547E	0x785880  	MOV.B	W0, [W1++]
0x5480	0xB3C360  	MOV.B	#54, W0
0x5482	0x785880  	MOV.B	W0, [W1++]
0x5484	0xB3C2F0  	MOV.B	#47, W0
0x5486	0x785880  	MOV.B	W0, [W1++]
0x5488	0xB3C310  	MOV.B	#49, W0
0x548A	0x785880  	MOV.B	W0, [W1++]
0x548C	0xB3C390  	MOV.B	#57, W0
0x548E	0x785880  	MOV.B	W0, [W1++]
0x5490	0xEF2000  	CLR	W0
0x5492	0x785880  	MOV.B	W0, [W1++]
0x5494	0x470066  	ADD	W14, #6, W0
0x5496	0xB3C01D  	MOV.B	#1, W13
0x5498	0xB3C00C  	MOV.B	#0, W12
0x549A	0xB3C16B  	MOV.B	#22, W11
0x549C	0x780500  	MOV	W0, W10
0x549E	0x070175  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,983 :: 		for i:= 106 to 112 do
; i start address is: 26 (W13)
0x54A0	0xB3C6AD  	MOV.B	#106, W13
; i end address is: 26 (W13)
0x54A2	0x78460D  	MOV.B	W13, W12
L__Log_Settings429:
;LogUnit.mpas,985 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x54A4	0xFB800C  	ZE	W12, W0
0x54A6	0xED2000  	DEC	W0
0x54A8	0xDD0241  	SL	W0, #1, W4
0x54AA	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x54AC	0x400184  	ADD	W0, W4, W3
0x54AE	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x54B0	0x400104  	ADD	W0, W4, W2
0x54B2	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x54B4	0x400084  	ADD	W0, W4, W1
0x54B6	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x54B8	0x400004  	ADD	W0, W4, W0
0x54BA	0x781F8C  	PUSH	W12
0x54BC	0x780690  	MOV	[W0], W13
0x54BE	0x780611  	MOV	[W1], W12
0x54C0	0x780592  	MOV	[W2], W11
0x54C2	0x780513  	MOV	[W3], W10
0x54C4	0x07E4DC  	RCALL	LogUnit_Log_Partition
0x54C6	0x78064F  	POP	W12
;LogUnit.mpas,986 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-105,Black);
0x54C8	0xFB808C  	ZE	W12, W1
0x54CA	0x200690  	MOV	#105, W0
0x54CC	0x508080  	SUB	W1, W0, W1
0x54CE	0x781F8C  	PUSH	W12
0x54D0	0xEF201A  	CLR	W13
0x54D2	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x54D4	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x54D6	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x54D8	0x200010  	MOV	#1, W0
0x54DA	0x781F80  	PUSH	W0
0x54DC	0x781F81  	PUSH	W1
0x54DE	0x200690  	MOV	#105, W0
0x54E0	0x781F80  	PUSH	W0
0x54E2	0x200230  	MOV	#35, W0
0x54E4	0x781F80  	PUSH	W0
0x54E6	0x07E7C4  	RCALL	LogUnit_Log_Glcd_Write
0x54E8	0xB1008F  	SUB	#8, W15
0x54EA	0x78064F  	POP	W12
;LogUnit.mpas,987 :: 		end;
0x54EC	0xB3C700  	MOV.B	#112, W0
0x54EE	0xE16400  	CP.B	W12, W0
0x54F0	0x320003  	BRA Z	L__Log_Settings432
L__Log_Settings524:
; i start address is: 0 (W0)
0x54F2	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x54F4	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x54F6	0x37FFD6  	BRA	L__Log_Settings429
L__Log_Settings432:
;LogUnit.mpas,988 :: 		end;
0x54F8	0x37011D  	BRA	L__Log_Settings304
L__Log_Settings427:
;LogUnit.mpas,990 :: 		17: begin  // log menüsü 17/19 sayfasý en fazla 7 olay görüntüleniyor
0x54FA	0x90405E  	MOV.B	[W14+5], W0
0x54FC	0xE10471  	CP.B	W0, #17
0x54FE	0x3A005C  	BRA NZ	L__Log_Settings435
L__Log_Settings525:
;LogUnit.mpas,991 :: 		Glcd_Write_Text('SAYFA / PAGE -17/19',22,Row1,Black);
0x5500	0x4700E6  	ADD	W14, #6, W1
0x5502	0xB3C530  	MOV.B	#83, W0
0x5504	0x785880  	MOV.B	W0, [W1++]
0x5506	0xB3C410  	MOV.B	#65, W0
0x5508	0x785880  	MOV.B	W0, [W1++]
0x550A	0xB3C590  	MOV.B	#89, W0
0x550C	0x785880  	MOV.B	W0, [W1++]
0x550E	0xB3C460  	MOV.B	#70, W0
0x5510	0x785880  	MOV.B	W0, [W1++]
0x5512	0xB3C410  	MOV.B	#65, W0
0x5514	0x785880  	MOV.B	W0, [W1++]
0x5516	0xB3C200  	MOV.B	#32, W0
0x5518	0x785880  	MOV.B	W0, [W1++]
0x551A	0xB3C2F0  	MOV.B	#47, W0
0x551C	0x785880  	MOV.B	W0, [W1++]
0x551E	0xB3C200  	MOV.B	#32, W0
0x5520	0x785880  	MOV.B	W0, [W1++]
0x5522	0xB3C500  	MOV.B	#80, W0
0x5524	0x785880  	MOV.B	W0, [W1++]
0x5526	0xB3C410  	MOV.B	#65, W0
0x5528	0x785880  	MOV.B	W0, [W1++]
0x552A	0xB3C470  	MOV.B	#71, W0
0x552C	0x785880  	MOV.B	W0, [W1++]
0x552E	0xB3C450  	MOV.B	#69, W0
0x5530	0x785880  	MOV.B	W0, [W1++]
0x5532	0xB3C200  	MOV.B	#32, W0
0x5534	0x785880  	MOV.B	W0, [W1++]
0x5536	0xB3C2D0  	MOV.B	#45, W0
0x5538	0x785880  	MOV.B	W0, [W1++]
0x553A	0xB3C310  	MOV.B	#49, W0
0x553C	0x785880  	MOV.B	W0, [W1++]
0x553E	0xB3C370  	MOV.B	#55, W0
0x5540	0x785880  	MOV.B	W0, [W1++]
0x5542	0xB3C2F0  	MOV.B	#47, W0
0x5544	0x785880  	MOV.B	W0, [W1++]
0x5546	0xB3C310  	MOV.B	#49, W0
0x5548	0x785880  	MOV.B	W0, [W1++]
0x554A	0xB3C390  	MOV.B	#57, W0
0x554C	0x785880  	MOV.B	W0, [W1++]
0x554E	0xEF2000  	CLR	W0
0x5550	0x785880  	MOV.B	W0, [W1++]
0x5552	0x470066  	ADD	W14, #6, W0
0x5554	0xB3C01D  	MOV.B	#1, W13
0x5556	0xB3C00C  	MOV.B	#0, W12
0x5558	0xB3C16B  	MOV.B	#22, W11
0x555A	0x780500  	MOV	W0, W10
0x555C	0x070116  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,993 :: 		for i:= 113 to 119 do
; i start address is: 26 (W13)
0x555E	0xB3C71D  	MOV.B	#113, W13
; i end address is: 26 (W13)
0x5560	0x78460D  	MOV.B	W13, W12
L__Log_Settings437:
;LogUnit.mpas,995 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x5562	0xFB800C  	ZE	W12, W0
0x5564	0xED2000  	DEC	W0
0x5566	0xDD0241  	SL	W0, #1, W4
0x5568	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x556A	0x400184  	ADD	W0, W4, W3
0x556C	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x556E	0x400104  	ADD	W0, W4, W2
0x5570	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x5572	0x400084  	ADD	W0, W4, W1
0x5574	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x5576	0x400004  	ADD	W0, W4, W0
0x5578	0x781F8C  	PUSH	W12
0x557A	0x780690  	MOV	[W0], W13
0x557C	0x780611  	MOV	[W1], W12
0x557E	0x780592  	MOV	[W2], W11
0x5580	0x780513  	MOV	[W3], W10
0x5582	0x07E47D  	RCALL	LogUnit_Log_Partition
0x5584	0x78064F  	POP	W12
;LogUnit.mpas,996 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-112,Black);
0x5586	0xFB808C  	ZE	W12, W1
0x5588	0x200700  	MOV	#112, W0
0x558A	0x508080  	SUB	W1, W0, W1
0x558C	0x781F8C  	PUSH	W12
0x558E	0xEF201A  	CLR	W13
0x5590	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x5592	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5594	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x5596	0x200010  	MOV	#1, W0
0x5598	0x781F80  	PUSH	W0
0x559A	0x781F81  	PUSH	W1
0x559C	0x200690  	MOV	#105, W0
0x559E	0x781F80  	PUSH	W0
0x55A0	0x200230  	MOV	#35, W0
0x55A2	0x781F80  	PUSH	W0
0x55A4	0x07E765  	RCALL	LogUnit_Log_Glcd_Write
0x55A6	0xB1008F  	SUB	#8, W15
0x55A8	0x78064F  	POP	W12
;LogUnit.mpas,997 :: 		end;
0x55AA	0xB3C770  	MOV.B	#119, W0
0x55AC	0xE16400  	CP.B	W12, W0
0x55AE	0x320003  	BRA Z	L__Log_Settings440
L__Log_Settings526:
; i start address is: 0 (W0)
0x55B0	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x55B2	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x55B4	0x37FFD6  	BRA	L__Log_Settings437
L__Log_Settings440:
;LogUnit.mpas,998 :: 		end;
0x55B6	0x3700BE  	BRA	L__Log_Settings304
L__Log_Settings435:
;LogUnit.mpas,1000 :: 		18: begin  // log menüsü 18/19 sayfasý en fazla 7 olay görüntüleniyor
0x55B8	0x90405E  	MOV.B	[W14+5], W0
0x55BA	0xE10472  	CP.B	W0, #18
0x55BC	0x3A005C  	BRA NZ	L__Log_Settings443
L__Log_Settings527:
;LogUnit.mpas,1001 :: 		Glcd_Write_Text('SAYFA / PAGE -18/19',22,Row1,Black);
0x55BE	0x4700E6  	ADD	W14, #6, W1
0x55C0	0xB3C530  	MOV.B	#83, W0
0x55C2	0x785880  	MOV.B	W0, [W1++]
0x55C4	0xB3C410  	MOV.B	#65, W0
0x55C6	0x785880  	MOV.B	W0, [W1++]
0x55C8	0xB3C590  	MOV.B	#89, W0
0x55CA	0x785880  	MOV.B	W0, [W1++]
0x55CC	0xB3C460  	MOV.B	#70, W0
0x55CE	0x785880  	MOV.B	W0, [W1++]
0x55D0	0xB3C410  	MOV.B	#65, W0
0x55D2	0x785880  	MOV.B	W0, [W1++]
0x55D4	0xB3C200  	MOV.B	#32, W0
0x55D6	0x785880  	MOV.B	W0, [W1++]
0x55D8	0xB3C2F0  	MOV.B	#47, W0
0x55DA	0x785880  	MOV.B	W0, [W1++]
0x55DC	0xB3C200  	MOV.B	#32, W0
0x55DE	0x785880  	MOV.B	W0, [W1++]
0x55E0	0xB3C500  	MOV.B	#80, W0
0x55E2	0x785880  	MOV.B	W0, [W1++]
0x55E4	0xB3C410  	MOV.B	#65, W0
0x55E6	0x785880  	MOV.B	W0, [W1++]
0x55E8	0xB3C470  	MOV.B	#71, W0
0x55EA	0x785880  	MOV.B	W0, [W1++]
0x55EC	0xB3C450  	MOV.B	#69, W0
0x55EE	0x785880  	MOV.B	W0, [W1++]
0x55F0	0xB3C200  	MOV.B	#32, W0
0x55F2	0x785880  	MOV.B	W0, [W1++]
0x55F4	0xB3C2D0  	MOV.B	#45, W0
0x55F6	0x785880  	MOV.B	W0, [W1++]
0x55F8	0xB3C310  	MOV.B	#49, W0
0x55FA	0x785880  	MOV.B	W0, [W1++]
0x55FC	0xB3C380  	MOV.B	#56, W0
0x55FE	0x785880  	MOV.B	W0, [W1++]
0x5600	0xB3C2F0  	MOV.B	#47, W0
0x5602	0x785880  	MOV.B	W0, [W1++]
0x5604	0xB3C310  	MOV.B	#49, W0
0x5606	0x785880  	MOV.B	W0, [W1++]
0x5608	0xB3C390  	MOV.B	#57, W0
0x560A	0x785880  	MOV.B	W0, [W1++]
0x560C	0xEF2000  	CLR	W0
0x560E	0x785880  	MOV.B	W0, [W1++]
0x5610	0x470066  	ADD	W14, #6, W0
0x5612	0xB3C01D  	MOV.B	#1, W13
0x5614	0xB3C00C  	MOV.B	#0, W12
0x5616	0xB3C16B  	MOV.B	#22, W11
0x5618	0x780500  	MOV	W0, W10
0x561A	0x0700B7  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,1003 :: 		for i:= 120 to 126 do
; i start address is: 26 (W13)
0x561C	0xB3C78D  	MOV.B	#120, W13
; i end address is: 26 (W13)
0x561E	0x78460D  	MOV.B	W13, W12
L__Log_Settings445:
;LogUnit.mpas,1005 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x5620	0xFB800C  	ZE	W12, W0
0x5622	0xED2000  	DEC	W0
0x5624	0xDD0241  	SL	W0, #1, W4
0x5626	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x5628	0x400184  	ADD	W0, W4, W3
0x562A	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x562C	0x400104  	ADD	W0, W4, W2
0x562E	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x5630	0x400084  	ADD	W0, W4, W1
0x5632	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x5634	0x400004  	ADD	W0, W4, W0
0x5636	0x781F8C  	PUSH	W12
0x5638	0x780690  	MOV	[W0], W13
0x563A	0x780611  	MOV	[W1], W12
0x563C	0x780592  	MOV	[W2], W11
0x563E	0x780513  	MOV	[W3], W10
0x5640	0x07E41E  	RCALL	LogUnit_Log_Partition
0x5642	0x78064F  	POP	W12
;LogUnit.mpas,1006 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-119,Black);
0x5644	0xFB808C  	ZE	W12, W1
0x5646	0x200770  	MOV	#119, W0
0x5648	0x508080  	SUB	W1, W0, W1
0x564A	0x781F8C  	PUSH	W12
0x564C	0xEF201A  	CLR	W13
0x564E	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x5650	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5652	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x5654	0x200010  	MOV	#1, W0
0x5656	0x781F80  	PUSH	W0
0x5658	0x781F81  	PUSH	W1
0x565A	0x200690  	MOV	#105, W0
0x565C	0x781F80  	PUSH	W0
0x565E	0x200230  	MOV	#35, W0
0x5660	0x781F80  	PUSH	W0
0x5662	0x07E706  	RCALL	LogUnit_Log_Glcd_Write
0x5664	0xB1008F  	SUB	#8, W15
0x5666	0x78064F  	POP	W12
;LogUnit.mpas,1007 :: 		end;
0x5668	0xB3C7E0  	MOV.B	#126, W0
0x566A	0xE16400  	CP.B	W12, W0
0x566C	0x320003  	BRA Z	L__Log_Settings448
L__Log_Settings528:
; i start address is: 0 (W0)
0x566E	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x5670	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x5672	0x37FFD6  	BRA	L__Log_Settings445
L__Log_Settings448:
;LogUnit.mpas,1008 :: 		end;
0x5674	0x37005F  	BRA	L__Log_Settings304
L__Log_Settings443:
;LogUnit.mpas,1010 :: 		19: begin  // log menüsü 19/19 sayfasý en fazla 7 olay görüntüleniyor
0x5676	0x90405E  	MOV.B	[W14+5], W0
0x5678	0xE10473  	CP.B	W0, #19
0x567A	0x3A005C  	BRA NZ	L__Log_Settings451
L__Log_Settings529:
;LogUnit.mpas,1011 :: 		Glcd_Write_Text('SAYFA / PAGE -19/19',22,Row1,Black);
0x567C	0x4700E6  	ADD	W14, #6, W1
0x567E	0xB3C530  	MOV.B	#83, W0
0x5680	0x785880  	MOV.B	W0, [W1++]
0x5682	0xB3C410  	MOV.B	#65, W0
0x5684	0x785880  	MOV.B	W0, [W1++]
0x5686	0xB3C590  	MOV.B	#89, W0
0x5688	0x785880  	MOV.B	W0, [W1++]
0x568A	0xB3C460  	MOV.B	#70, W0
0x568C	0x785880  	MOV.B	W0, [W1++]
0x568E	0xB3C410  	MOV.B	#65, W0
0x5690	0x785880  	MOV.B	W0, [W1++]
0x5692	0xB3C200  	MOV.B	#32, W0
0x5694	0x785880  	MOV.B	W0, [W1++]
0x5696	0xB3C2F0  	MOV.B	#47, W0
0x5698	0x785880  	MOV.B	W0, [W1++]
0x569A	0xB3C200  	MOV.B	#32, W0
0x569C	0x785880  	MOV.B	W0, [W1++]
0x569E	0xB3C500  	MOV.B	#80, W0
0x56A0	0x785880  	MOV.B	W0, [W1++]
0x56A2	0xB3C410  	MOV.B	#65, W0
0x56A4	0x785880  	MOV.B	W0, [W1++]
0x56A6	0xB3C470  	MOV.B	#71, W0
0x56A8	0x785880  	MOV.B	W0, [W1++]
0x56AA	0xB3C450  	MOV.B	#69, W0
0x56AC	0x785880  	MOV.B	W0, [W1++]
0x56AE	0xB3C200  	MOV.B	#32, W0
0x56B0	0x785880  	MOV.B	W0, [W1++]
0x56B2	0xB3C2D0  	MOV.B	#45, W0
0x56B4	0x785880  	MOV.B	W0, [W1++]
0x56B6	0xB3C310  	MOV.B	#49, W0
0x56B8	0x785880  	MOV.B	W0, [W1++]
0x56BA	0xB3C390  	MOV.B	#57, W0
0x56BC	0x785880  	MOV.B	W0, [W1++]
0x56BE	0xB3C2F0  	MOV.B	#47, W0
0x56C0	0x785880  	MOV.B	W0, [W1++]
0x56C2	0xB3C310  	MOV.B	#49, W0
0x56C4	0x785880  	MOV.B	W0, [W1++]
0x56C6	0xB3C390  	MOV.B	#57, W0
0x56C8	0x785880  	MOV.B	W0, [W1++]
0x56CA	0xEF2000  	CLR	W0
0x56CC	0x785880  	MOV.B	W0, [W1++]
0x56CE	0x470066  	ADD	W14, #6, W0
0x56D0	0xB3C01D  	MOV.B	#1, W13
0x56D2	0xB3C00C  	MOV.B	#0, W12
0x56D4	0xB3C16B  	MOV.B	#22, W11
0x56D6	0x780500  	MOV	W0, W10
0x56D8	0x070058  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,1013 :: 		for i:= 127 to 128 do
; i start address is: 26 (W13)
0x56DA	0xB3C7FD  	MOV.B	#127, W13
; i end address is: 26 (W13)
0x56DC	0x78460D  	MOV.B	W13, W12
L__Log_Settings453:
;LogUnit.mpas,1015 :: 		Log_Partition(Read_LogClock[i],Read_LogDateHi[i],Read_LogDateLo[i],Read_LogEvent[i]);
; i start address is: 24 (W12)
0x56DE	0xFB800C  	ZE	W12, W0
0x56E0	0xED2000  	DEC	W0
0x56E2	0xDD0241  	SL	W0, #1, W4
0x56E4	0x20AB00  	MOV	#lo_addr(_Read_LogClock), W0
0x56E6	0x400184  	ADD	W0, W4, W3
0x56E8	0x20D1E0  	MOV	#lo_addr(_Read_LogDateHi), W0
0x56EA	0x400104  	ADD	W0, W4, W2
0x56EC	0x20E280  	MOV	#lo_addr(_Read_LogDateLo), W0
0x56EE	0x400084  	ADD	W0, W4, W1
0x56F0	0x20BB00  	MOV	#lo_addr(_Read_LogEvent), W0
0x56F2	0x400004  	ADD	W0, W4, W0
0x56F4	0x781F8C  	PUSH	W12
0x56F6	0x780690  	MOV	[W0], W13
0x56F8	0x780611  	MOV	[W1], W12
0x56FA	0x780592  	MOV	[W2], W11
0x56FC	0x780513  	MOV	[W3], W10
0x56FE	0x07E3BF  	RCALL	LogUnit_Log_Partition
0x5700	0x78064F  	POP	W12
;LogUnit.mpas,1016 :: 		Log_Glcd_Write(Hour_Text,Day_Text,Event_Text,0,35,105,i-126,Black);
0x5702	0xFB808C  	ZE	W12, W1
0x5704	0x2007E0  	MOV	#126, W0
0x5706	0x508080  	SUB	W1, W0, W1
0x5708	0x781F8C  	PUSH	W12
0x570A	0xEF201A  	CLR	W13
0x570C	0x20F34C  	MOV	#lo_addr(_Event_Text), W12
0x570E	0x20F28B  	MOV	#lo_addr(_Day_Text), W11
0x5710	0x20E20A  	MOV	#lo_addr(_Hour_Text), W10
0x5712	0x200010  	MOV	#1, W0
0x5714	0x781F80  	PUSH	W0
0x5716	0x781F81  	PUSH	W1
0x5718	0x200690  	MOV	#105, W0
0x571A	0x781F80  	PUSH	W0
0x571C	0x200230  	MOV	#35, W0
0x571E	0x781F80  	PUSH	W0
0x5720	0x07E6A7  	RCALL	LogUnit_Log_Glcd_Write
0x5722	0xB1008F  	SUB	#8, W15
0x5724	0x78064F  	POP	W12
;LogUnit.mpas,1017 :: 		end;
0x5726	0xB3C800  	MOV.B	#128, W0
0x5728	0xE16400  	CP.B	W12, W0
0x572A	0x320003  	BRA Z	L__Log_Settings456
L__Log_Settings530:
; i start address is: 0 (W0)
0x572C	0x464061  	ADD.B	W12, #1, W0
; i end address is: 24 (W12)
0x572E	0x784600  	MOV.B	W0, W12
; i end address is: 0 (W0)
0x5730	0x37FFD6  	BRA	L__Log_Settings453
L__Log_Settings456:
;LogUnit.mpas,1018 :: 		end;
0x5732	0x370000  	BRA	L__Log_Settings304
L__Log_Settings451:
L__Log_Settings304:
;LogUnit.mpas,1024 :: 		end;
0x5734	0x37F8C3  	BRA	L__Log_Settings262
L__Log_Settings263:
;LogUnit.mpas,1026 :: 		Glcd_Fill(0x00);
0x5736	0xEF2014  	CLR	W10
0x5738	0x0720C9  	RCALL	_Glcd_Fill
;LogUnit.mpas,1028 :: 		end;
L_end_Log_Settings:
0x573A	0x7806CF  	POP	W13
0x573C	0x78064F  	POP	W12
0x573E	0x7805CF  	POP	W11
0x5740	0x78054F  	POP	W10
0x5742	0xFA8000  	ULNK
0x5744	0x060000  	RETURN
; end of _Log_Settings
LogUnit_Log_Erase:
0x201A	0xFA0018  	LNK	#24
;LogUnit.mpas,594 :: 		begin
;LogUnit.mpas,596 :: 		EraseMenuExit  := 0;
0x201C	0x781F8A  	PUSH	W10
0x201E	0x781F8B  	PUSH	W11
0x2020	0x781F8C  	PUSH	W12
0x2022	0x781F8D  	PUSH	W13
0x2024	0xEF2000  	CLR	W0
0x2026	0x984700  	MOV.B	W0, [W14+0]
;LogUnit.mpas,598 :: 		Glcd_Fill(0x00);
0x2028	0xEF2014  	CLR	W10
0x202A	0x073C50  	RCALL	_Glcd_Fill
;LogUnit.mpas,601 :: 		Glcd_Write_Text('Olaylar Silinsin mi? ',0,Row1,Black);
0x202C	0x4700E2  	ADD	W14, #2, W1
0x202E	0xB3C4F0  	MOV.B	#79, W0
0x2030	0x785880  	MOV.B	W0, [W1++]
0x2032	0xB3C6C0  	MOV.B	#108, W0
0x2034	0x785880  	MOV.B	W0, [W1++]
0x2036	0xB3C610  	MOV.B	#97, W0
0x2038	0x785880  	MOV.B	W0, [W1++]
0x203A	0xB3C790  	MOV.B	#121, W0
0x203C	0x785880  	MOV.B	W0, [W1++]
0x203E	0xB3C6C0  	MOV.B	#108, W0
0x2040	0x785880  	MOV.B	W0, [W1++]
0x2042	0xB3C610  	MOV.B	#97, W0
0x2044	0x785880  	MOV.B	W0, [W1++]
0x2046	0xB3C720  	MOV.B	#114, W0
0x2048	0x785880  	MOV.B	W0, [W1++]
0x204A	0xB3C200  	MOV.B	#32, W0
0x204C	0x785880  	MOV.B	W0, [W1++]
0x204E	0xB3C530  	MOV.B	#83, W0
0x2050	0x785880  	MOV.B	W0, [W1++]
0x2052	0xB3C690  	MOV.B	#105, W0
0x2054	0x785880  	MOV.B	W0, [W1++]
0x2056	0xB3C6C0  	MOV.B	#108, W0
0x2058	0x785880  	MOV.B	W0, [W1++]
0x205A	0xB3C690  	MOV.B	#105, W0
0x205C	0x785880  	MOV.B	W0, [W1++]
0x205E	0xB3C6E0  	MOV.B	#110, W0
0x2060	0x785880  	MOV.B	W0, [W1++]
0x2062	0xB3C730  	MOV.B	#115, W0
0x2064	0x785880  	MOV.B	W0, [W1++]
0x2066	0xB3C690  	MOV.B	#105, W0
0x2068	0x785880  	MOV.B	W0, [W1++]
0x206A	0xB3C6E0  	MOV.B	#110, W0
0x206C	0x785880  	MOV.B	W0, [W1++]
0x206E	0xB3C200  	MOV.B	#32, W0
0x2070	0x785880  	MOV.B	W0, [W1++]
0x2072	0xB3C6D0  	MOV.B	#109, W0
0x2074	0x785880  	MOV.B	W0, [W1++]
0x2076	0xB3C690  	MOV.B	#105, W0
0x2078	0x785880  	MOV.B	W0, [W1++]
0x207A	0xB3C3F0  	MOV.B	#63, W0
0x207C	0x785880  	MOV.B	W0, [W1++]
0x207E	0xB3C200  	MOV.B	#32, W0
0x2080	0x785880  	MOV.B	W0, [W1++]
0x2082	0xEF2000  	CLR	W0
0x2084	0x785880  	MOV.B	W0, [W1++]
0x2086	0x470062  	ADD	W14, #2, W0
0x2088	0xB3C01D  	MOV.B	#1, W13
0x208A	0xB3C00C  	MOV.B	#0, W12
0x208C	0xEF2016  	CLR	W11
0x208E	0x780500  	MOV	W0, W10
0x2090	0x071B7C  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,602 :: 		Glcd_Write_Text('OK Buton   = Evet    ',0,Row2,Black);
0x2092	0x4700E2  	ADD	W14, #2, W1
0x2094	0xB3C4F0  	MOV.B	#79, W0
0x2096	0x785880  	MOV.B	W0, [W1++]
0x2098	0xB3C4B0  	MOV.B	#75, W0
0x209A	0x785880  	MOV.B	W0, [W1++]
0x209C	0xB3C200  	MOV.B	#32, W0
0x209E	0x785880  	MOV.B	W0, [W1++]
0x20A0	0xB3C420  	MOV.B	#66, W0
0x20A2	0x785880  	MOV.B	W0, [W1++]
0x20A4	0xB3C750  	MOV.B	#117, W0
0x20A6	0x785880  	MOV.B	W0, [W1++]
0x20A8	0xB3C740  	MOV.B	#116, W0
0x20AA	0x785880  	MOV.B	W0, [W1++]
0x20AC	0xB3C6F0  	MOV.B	#111, W0
0x20AE	0x785880  	MOV.B	W0, [W1++]
0x20B0	0xB3C6E0  	MOV.B	#110, W0
0x20B2	0x785880  	MOV.B	W0, [W1++]
0x20B4	0xB3C200  	MOV.B	#32, W0
0x20B6	0x785880  	MOV.B	W0, [W1++]
0x20B8	0xB3C200  	MOV.B	#32, W0
0x20BA	0x785880  	MOV.B	W0, [W1++]
0x20BC	0xB3C200  	MOV.B	#32, W0
0x20BE	0x785880  	MOV.B	W0, [W1++]
0x20C0	0xB3C3D0  	MOV.B	#61, W0
0x20C2	0x785880  	MOV.B	W0, [W1++]
0x20C4	0xB3C200  	MOV.B	#32, W0
0x20C6	0x785880  	MOV.B	W0, [W1++]
0x20C8	0xB3C450  	MOV.B	#69, W0
0x20CA	0x785880  	MOV.B	W0, [W1++]
0x20CC	0xB3C760  	MOV.B	#118, W0
0x20CE	0x785880  	MOV.B	W0, [W1++]
0x20D0	0xB3C650  	MOV.B	#101, W0
0x20D2	0x785880  	MOV.B	W0, [W1++]
0x20D4	0xB3C740  	MOV.B	#116, W0
0x20D6	0x785880  	MOV.B	W0, [W1++]
0x20D8	0xB3C200  	MOV.B	#32, W0
0x20DA	0x785880  	MOV.B	W0, [W1++]
0x20DC	0xB3C200  	MOV.B	#32, W0
0x20DE	0x785880  	MOV.B	W0, [W1++]
0x20E0	0xB3C200  	MOV.B	#32, W0
0x20E2	0x785880  	MOV.B	W0, [W1++]
0x20E4	0xB3C200  	MOV.B	#32, W0
0x20E6	0x785880  	MOV.B	W0, [W1++]
0x20E8	0xEF2000  	CLR	W0
0x20EA	0x785880  	MOV.B	W0, [W1++]
0x20EC	0x470062  	ADD	W14, #2, W0
0x20EE	0xB3C01D  	MOV.B	#1, W13
0x20F0	0xB3C01C  	MOV.B	#1, W12
0x20F2	0xEF2016  	CLR	W11
0x20F4	0x780500  	MOV	W0, W10
0x20F6	0x071B49  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,603 :: 		Glcd_Write_Text('Down Buton = Hayýr   ',0,Row3,Black);
0x20F8	0x4700E2  	ADD	W14, #2, W1
0x20FA	0xB3C440  	MOV.B	#68, W0
0x20FC	0x785880  	MOV.B	W0, [W1++]
0x20FE	0xB3C6F0  	MOV.B	#111, W0
0x2100	0x785880  	MOV.B	W0, [W1++]
0x2102	0xB3C770  	MOV.B	#119, W0
0x2104	0x785880  	MOV.B	W0, [W1++]
0x2106	0xB3C6E0  	MOV.B	#110, W0
0x2108	0x785880  	MOV.B	W0, [W1++]
0x210A	0xB3C200  	MOV.B	#32, W0
0x210C	0x785880  	MOV.B	W0, [W1++]
0x210E	0xB3C420  	MOV.B	#66, W0
0x2110	0x785880  	MOV.B	W0, [W1++]
0x2112	0xB3C750  	MOV.B	#117, W0
0x2114	0x785880  	MOV.B	W0, [W1++]
0x2116	0xB3C740  	MOV.B	#116, W0
0x2118	0x785880  	MOV.B	W0, [W1++]
0x211A	0xB3C6F0  	MOV.B	#111, W0
0x211C	0x785880  	MOV.B	W0, [W1++]
0x211E	0xB3C6E0  	MOV.B	#110, W0
0x2120	0x785880  	MOV.B	W0, [W1++]
0x2122	0xB3C200  	MOV.B	#32, W0
0x2124	0x785880  	MOV.B	W0, [W1++]
0x2126	0xB3C3D0  	MOV.B	#61, W0
0x2128	0x785880  	MOV.B	W0, [W1++]
0x212A	0xB3C200  	MOV.B	#32, W0
0x212C	0x785880  	MOV.B	W0, [W1++]
0x212E	0xB3C480  	MOV.B	#72, W0
0x2130	0x785880  	MOV.B	W0, [W1++]
0x2132	0xB3C610  	MOV.B	#97, W0
0x2134	0x785880  	MOV.B	W0, [W1++]
0x2136	0xB3C790  	MOV.B	#121, W0
0x2138	0x785880  	MOV.B	W0, [W1++]
0x213A	0xB3CFD0  	MOV.B	#253, W0
0x213C	0x785880  	MOV.B	W0, [W1++]
0x213E	0xB3C720  	MOV.B	#114, W0
0x2140	0x785880  	MOV.B	W0, [W1++]
0x2142	0xB3C200  	MOV.B	#32, W0
0x2144	0x785880  	MOV.B	W0, [W1++]
0x2146	0xB3C200  	MOV.B	#32, W0
0x2148	0x785880  	MOV.B	W0, [W1++]
0x214A	0xB3C200  	MOV.B	#32, W0
0x214C	0x785880  	MOV.B	W0, [W1++]
0x214E	0xEF2000  	CLR	W0
0x2150	0x785880  	MOV.B	W0, [W1++]
0x2152	0x470062  	ADD	W14, #2, W0
0x2154	0xB3C01D  	MOV.B	#1, W13
0x2156	0xB3C02C  	MOV.B	#2, W12
0x2158	0xEF2016  	CLR	W11
0x215A	0x780500  	MOV	W0, W10
0x215C	0x071B16  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,605 :: 		while (EraseMenuExit =0) do
L_LogUnit_Log_Erase200:
0x215E	0x90400E  	MOV.B	[W14+0], W0
0x2160	0xE10460  	CP.B	W0, #0
0x2162	0x3A011A  	BRA NZ	L_LogUnit_Log_Erase201
L_LogUnit_Log_Erase485:
;LogUnit.mpas,609 :: 		clrwdt;
0x2164	0xFE6000  	CLRWDT
;LogUnit.mpas,612 :: 		if (Ok_Button=0) then
0x2166	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x2168	0x3700D1  	BRA	L_LogUnit_Log_Erase205
;LogUnit.mpas,614 :: 		while (Ok_Button =0) do
L_LogUnit_Log_Erase208:
0x216A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x216C	0x370002  	BRA	L_LogUnit_Log_Erase209
;LogUnit.mpas,617 :: 		clrwdt;
0x216E	0xFE6000  	CLRWDT
;LogUnit.mpas,619 :: 		end;
0x2170	0x37FFFC  	BRA	L_LogUnit_Log_Erase208
L_LogUnit_Log_Erase209:
;LogUnit.mpas,621 :: 		Glcd_Write_Text('Olaylar Siliniyor... ',0,Row4,Black);
0x2172	0x4700E2  	ADD	W14, #2, W1
0x2174	0xB3C4F0  	MOV.B	#79, W0
0x2176	0x785880  	MOV.B	W0, [W1++]
0x2178	0xB3C6C0  	MOV.B	#108, W0
0x217A	0x785880  	MOV.B	W0, [W1++]
0x217C	0xB3C610  	MOV.B	#97, W0
0x217E	0x785880  	MOV.B	W0, [W1++]
0x2180	0xB3C790  	MOV.B	#121, W0
0x2182	0x785880  	MOV.B	W0, [W1++]
0x2184	0xB3C6C0  	MOV.B	#108, W0
0x2186	0x785880  	MOV.B	W0, [W1++]
0x2188	0xB3C610  	MOV.B	#97, W0
0x218A	0x785880  	MOV.B	W0, [W1++]
0x218C	0xB3C720  	MOV.B	#114, W0
0x218E	0x785880  	MOV.B	W0, [W1++]
0x2190	0xB3C200  	MOV.B	#32, W0
0x2192	0x785880  	MOV.B	W0, [W1++]
0x2194	0xB3C530  	MOV.B	#83, W0
0x2196	0x785880  	MOV.B	W0, [W1++]
0x2198	0xB3C690  	MOV.B	#105, W0
0x219A	0x785880  	MOV.B	W0, [W1++]
0x219C	0xB3C6C0  	MOV.B	#108, W0
0x219E	0x785880  	MOV.B	W0, [W1++]
0x21A0	0xB3C690  	MOV.B	#105, W0
0x21A2	0x785880  	MOV.B	W0, [W1++]
0x21A4	0xB3C6E0  	MOV.B	#110, W0
0x21A6	0x785880  	MOV.B	W0, [W1++]
0x21A8	0xB3C690  	MOV.B	#105, W0
0x21AA	0x785880  	MOV.B	W0, [W1++]
0x21AC	0xB3C790  	MOV.B	#121, W0
0x21AE	0x785880  	MOV.B	W0, [W1++]
0x21B0	0xB3C6F0  	MOV.B	#111, W0
0x21B2	0x785880  	MOV.B	W0, [W1++]
0x21B4	0xB3C720  	MOV.B	#114, W0
0x21B6	0x785880  	MOV.B	W0, [W1++]
0x21B8	0xB3C2E0  	MOV.B	#46, W0
0x21BA	0x785880  	MOV.B	W0, [W1++]
0x21BC	0xB3C2E0  	MOV.B	#46, W0
0x21BE	0x785880  	MOV.B	W0, [W1++]
0x21C0	0xB3C2E0  	MOV.B	#46, W0
0x21C2	0x785880  	MOV.B	W0, [W1++]
0x21C4	0xB3C200  	MOV.B	#32, W0
0x21C6	0x785880  	MOV.B	W0, [W1++]
0x21C8	0xEF2000  	CLR	W0
0x21CA	0x785880  	MOV.B	W0, [W1++]
0x21CC	0x470062  	ADD	W14, #2, W0
0x21CE	0xB3C01D  	MOV.B	#1, W13
0x21D0	0xB3C03C  	MOV.B	#3, W12
0x21D2	0xEF2016  	CLR	W11
0x21D4	0x780500  	MOV	W0, W10
0x21D6	0x071AD9  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,624 :: 		for Erase_TempByte := 1 to 128 do
0x21D8	0xB3C010  	MOV.B	#1, W0
0x21DA	0x984710  	MOV.B	W0, [W14+1]
L_LogUnit_Log_Erase213:
;LogUnit.mpas,627 :: 		asm clrwdt; end;
0x21DC	0xFE6000  	CLRWDT
;LogUnit.mpas,629 :: 		EEPROM_Write(EeAddr_Log_Clock[Erase_TempByte],0xFFFF); // olay saatlerini sil
0x21DE	0x470061  	ADD	W14, #1, W0
0x21E0	0xFB8010  	ZE	[W0], W0
0x21E2	0xED2000  	DEC	W0
0x21E4	0xDD00C2  	SL	W0, #2, W1
0x21E6	0x293A80  	MOV	#lo_addr(_EeAddr_Log_Clock), W0
0x21E8	0x400101  	ADD	W0, W1, W2
0x21EA	0x200020  	MOV	#higher_addr(_EeAddr_Log_Clock), W0
0x21EC	0xB7A034  	MOV	WREG, PSVPAG
0x21EE	0xBE0012  	MOV.D	[W2], W0
0x21F0	0x2FFFFC  	MOV	#65535, W12
0x21F2	0xBE0500  	MOV.D	W0, W10
0x21F4	0x07F8D0  	RCALL	_EEPROM_Write
;LogUnit.mpas,630 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L_LogUnit_Log_Erase218:
0x21F6	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x21F8	0x37FFFE  	BRA	L_LogUnit_Log_Erase218
;LogUnit.mpas,632 :: 		Pause_ms(10);
0x21FA	0x2000AA  	MOV	#10, W10
0x21FC	0x075E4C  	RCALL	_Pause_Ms
;LogUnit.mpas,634 :: 		asm clrwdt; end;
0x21FE	0xFE6000  	CLRWDT
;LogUnit.mpas,636 :: 		EEPROM_Write(EeAddr_Log_DateHi[Erase_TempByte],0xFFFF); // olay tarihini
0x2200	0x470061  	ADD	W14, #1, W0
0x2202	0xFB8010  	ZE	[W0], W0
0x2204	0xED2000  	DEC	W0
0x2206	0xDD00C2  	SL	W0, #2, W1
0x2208	0x295A80  	MOV	#lo_addr(_EeAddr_Log_DateHi), W0
0x220A	0x400101  	ADD	W0, W1, W2
0x220C	0x200020  	MOV	#higher_addr(_EeAddr_Log_DateHi), W0
0x220E	0xB7A034  	MOV	WREG, PSVPAG
0x2210	0xBE0012  	MOV.D	[W2], W0
0x2212	0x2FFFFC  	MOV	#65535, W12
0x2214	0xBE0500  	MOV.D	W0, W10
0x2216	0x07F8BF  	RCALL	_EEPROM_Write
;LogUnit.mpas,637 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L_LogUnit_Log_Erase223:
0x2218	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x221A	0x37FFFE  	BRA	L_LogUnit_Log_Erase223
;LogUnit.mpas,639 :: 		Pause_ms(10);
0x221C	0x2000AA  	MOV	#10, W10
0x221E	0x075E3B  	RCALL	_Pause_Ms
;LogUnit.mpas,641 :: 		asm clrwdt; end;
0x2220	0xFE6000  	CLRWDT
;LogUnit.mpas,643 :: 		EEPROM_Write(EeAddr_Log_DateLo[Erase_TempByte],0xFFFF); // olay tarihini sil
0x2222	0x470061  	ADD	W14, #1, W0
0x2224	0xFB8010  	ZE	[W0], W0
0x2226	0xED2000  	DEC	W0
0x2228	0xDD00C2  	SL	W0, #2, W1
0x222A	0x297A80  	MOV	#lo_addr(_EeAddr_Log_DateLo), W0
0x222C	0x400101  	ADD	W0, W1, W2
0x222E	0x200020  	MOV	#higher_addr(_EeAddr_Log_DateLo), W0
0x2230	0xB7A034  	MOV	WREG, PSVPAG
0x2232	0xBE0012  	MOV.D	[W2], W0
0x2234	0x2FFFFC  	MOV	#65535, W12
0x2236	0xBE0500  	MOV.D	W0, W10
0x2238	0x07F8AE  	RCALL	_EEPROM_Write
;LogUnit.mpas,644 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L_LogUnit_Log_Erase228:
0x223A	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x223C	0x37FFFE  	BRA	L_LogUnit_Log_Erase228
;LogUnit.mpas,646 :: 		Pause_ms(10);
0x223E	0x2000AA  	MOV	#10, W10
0x2240	0x075E2A  	RCALL	_Pause_Ms
;LogUnit.mpas,648 :: 		asm clrwdt; end;
0x2242	0xFE6000  	CLRWDT
;LogUnit.mpas,650 :: 		EEPROM_Write(EeAddr_Log_Event[Erase_TempByte],0xFFFF); // olaylarý sil
0x2244	0x470061  	ADD	W14, #1, W0
0x2246	0xFB8010  	ZE	[W0], W0
0x2248	0xED2000  	DEC	W0
0x224A	0xDD00C2  	SL	W0, #2, W1
0x224C	0x291A80  	MOV	#lo_addr(_EeAddr_Log_Event), W0
0x224E	0x400101  	ADD	W0, W1, W2
0x2250	0x200020  	MOV	#higher_addr(_EeAddr_Log_Event), W0
0x2252	0xB7A034  	MOV	WREG, PSVPAG
0x2254	0xBE0012  	MOV.D	[W2], W0
0x2256	0x2FFFFC  	MOV	#65535, W12
0x2258	0xBE0500  	MOV.D	W0, W10
0x225A	0x07F89D  	RCALL	_EEPROM_Write
;LogUnit.mpas,651 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L_LogUnit_Log_Erase233:
0x225C	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x225E	0x37FFFE  	BRA	L_LogUnit_Log_Erase233
;LogUnit.mpas,653 :: 		Pause_ms(10);
0x2260	0x2000AA  	MOV	#10, W10
0x2262	0x075E19  	RCALL	_Pause_Ms
;LogUnit.mpas,655 :: 		asm clrwdt; end;
0x2264	0xFE6000  	CLRWDT
;LogUnit.mpas,657 :: 		EEPROM_Write(EE_LogListArrayEeAddr,0); // olaylarý listesini sil
0x2266	0xEF2018  	CLR	W12
0x2268	0x2F07EA  	MOV	#61566, W10
0x226A	0x2007FB  	MOV	#127, W11
0x226C	0x07F894  	RCALL	_EEPROM_Write
;LogUnit.mpas,658 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L_LogUnit_Log_Erase238:
0x226E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x2270	0x37FFFE  	BRA	L_LogUnit_Log_Erase238
;LogUnit.mpas,660 :: 		Pause_ms(10);
0x2272	0x2000AA  	MOV	#10, W10
0x2274	0x075E10  	RCALL	_Pause_Ms
;LogUnit.mpas,662 :: 		asm clrwdt; end;
0x2276	0xFE6000  	CLRWDT
;LogUnit.mpas,664 :: 		end;
0x2278	0x90409E  	MOV.B	[W14+1], W1
0x227A	0xB3C800  	MOV.B	#128, W0
0x227C	0xE10C00  	CP.B	W1, W0
0x227E	0x320004  	BRA Z	L_LogUnit_Log_Erase216
L_LogUnit_Log_Erase486:
0x2280	0x90409E  	MOV.B	[W14+1], W1
0x2282	0x470061  	ADD	W14, #1, W0
0x2284	0x40C861  	ADD.B	W1, #1, [W0]
0x2286	0x37FFAA  	BRA	L_LogUnit_Log_Erase213
L_LogUnit_Log_Erase216:
;LogUnit.mpas,667 :: 		Glcd_Write_Text('Liste Temizlendi ... ',0,Row4,Black);
0x2288	0x4700E2  	ADD	W14, #2, W1
0x228A	0xB3C4C0  	MOV.B	#76, W0
0x228C	0x785880  	MOV.B	W0, [W1++]
0x228E	0xB3C690  	MOV.B	#105, W0
0x2290	0x785880  	MOV.B	W0, [W1++]
0x2292	0xB3C730  	MOV.B	#115, W0
0x2294	0x785880  	MOV.B	W0, [W1++]
0x2296	0xB3C740  	MOV.B	#116, W0
0x2298	0x785880  	MOV.B	W0, [W1++]
0x229A	0xB3C650  	MOV.B	#101, W0
0x229C	0x785880  	MOV.B	W0, [W1++]
0x229E	0xB3C200  	MOV.B	#32, W0
0x22A0	0x785880  	MOV.B	W0, [W1++]
0x22A2	0xB3C540  	MOV.B	#84, W0
0x22A4	0x785880  	MOV.B	W0, [W1++]
0x22A6	0xB3C650  	MOV.B	#101, W0
0x22A8	0x785880  	MOV.B	W0, [W1++]
0x22AA	0xB3C6D0  	MOV.B	#109, W0
0x22AC	0x785880  	MOV.B	W0, [W1++]
0x22AE	0xB3C690  	MOV.B	#105, W0
0x22B0	0x785880  	MOV.B	W0, [W1++]
0x22B2	0xB3C7A0  	MOV.B	#122, W0
0x22B4	0x785880  	MOV.B	W0, [W1++]
0x22B6	0xB3C6C0  	MOV.B	#108, W0
0x22B8	0x785880  	MOV.B	W0, [W1++]
0x22BA	0xB3C650  	MOV.B	#101, W0
0x22BC	0x785880  	MOV.B	W0, [W1++]
0x22BE	0xB3C6E0  	MOV.B	#110, W0
0x22C0	0x785880  	MOV.B	W0, [W1++]
0x22C2	0xB3C640  	MOV.B	#100, W0
0x22C4	0x785880  	MOV.B	W0, [W1++]
0x22C6	0xB3C690  	MOV.B	#105, W0
0x22C8	0x785880  	MOV.B	W0, [W1++]
0x22CA	0xB3C200  	MOV.B	#32, W0
0x22CC	0x785880  	MOV.B	W0, [W1++]
0x22CE	0xB3C2E0  	MOV.B	#46, W0
0x22D0	0x785880  	MOV.B	W0, [W1++]
0x22D2	0xB3C2E0  	MOV.B	#46, W0
0x22D4	0x785880  	MOV.B	W0, [W1++]
0x22D6	0xB3C2E0  	MOV.B	#46, W0
0x22D8	0x785880  	MOV.B	W0, [W1++]
0x22DA	0xB3C200  	MOV.B	#32, W0
0x22DC	0x785880  	MOV.B	W0, [W1++]
0x22DE	0xEF2000  	CLR	W0
0x22E0	0x785880  	MOV.B	W0, [W1++]
0x22E2	0x470062  	ADD	W14, #2, W0
0x22E4	0xB3C01D  	MOV.B	#1, W13
0x22E6	0xB3C03C  	MOV.B	#3, W12
0x22E8	0xEF2016  	CLR	W11
0x22EA	0x780500  	MOV	W0, W10
0x22EC	0x071A4E  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,669 :: 		Pause_ms(250);
0x22EE	0x200FAA  	MOV	#250, W10
0x22F0	0x075DD2  	RCALL	_Pause_Ms
;LogUnit.mpas,670 :: 		asm clrwdt; end;
0x22F2	0xFE6000  	CLRWDT
;LogUnit.mpas,671 :: 		Pause_ms(250);
0x22F4	0x200FAA  	MOV	#250, W10
0x22F6	0x075DCF  	RCALL	_Pause_Ms
;LogUnit.mpas,672 :: 		asm clrwdt; end;
0x22F8	0xFE6000  	CLRWDT
;LogUnit.mpas,673 :: 		Pause_ms(250);
0x22FA	0x200FAA  	MOV	#250, W10
0x22FC	0x075DCC  	RCALL	_Pause_Ms
;LogUnit.mpas,674 :: 		asm clrwdt; end;
0x22FE	0xFE6000  	CLRWDT
;LogUnit.mpas,675 :: 		Pause_ms(250);
0x2300	0x200FAA  	MOV	#250, W10
0x2302	0x075DC9  	RCALL	_Pause_Ms
;LogUnit.mpas,676 :: 		asm clrwdt; end;
0x2304	0xFE6000  	CLRWDT
;LogUnit.mpas,678 :: 		EraseMenuExit := 1;
0x2306	0xB3C010  	MOV.B	#1, W0
0x2308	0x984700  	MOV.B	W0, [W14+0]
;LogUnit.mpas,681 :: 		end else
0x230A	0x370045  	BRA	L_LogUnit_Log_Erase206
L_LogUnit_Log_Erase205:
;LogUnit.mpas,682 :: 		if (Down_Button =0) then
0x230C	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0x230E	0x370043  	BRA	L_LogUnit_Log_Erase243
;LogUnit.mpas,684 :: 		while (Down_Button =0) do
L_LogUnit_Log_Erase246:
0x2310	0xAF62D5  	BTSC	Down_Button, BitPos(Down_Button+0)
0x2312	0x370002  	BRA	L_LogUnit_Log_Erase247
;LogUnit.mpas,687 :: 		clrwdt;
0x2314	0xFE6000  	CLRWDT
;LogUnit.mpas,689 :: 		end;
0x2316	0x37FFFC  	BRA	L_LogUnit_Log_Erase246
L_LogUnit_Log_Erase247:
;LogUnit.mpas,690 :: 		EraseMenuExit := 1;
0x2318	0xB3C010  	MOV.B	#1, W0
0x231A	0x984700  	MOV.B	W0, [W14+0]
;LogUnit.mpas,691 :: 		Glcd_Write_Text('Ýptal Edildi...     ',0,Row4,Black);
0x231C	0x4700E2  	ADD	W14, #2, W1
0x231E	0xB3CDD0  	MOV.B	#221, W0
0x2320	0x785880  	MOV.B	W0, [W1++]
0x2322	0xB3C700  	MOV.B	#112, W0
0x2324	0x785880  	MOV.B	W0, [W1++]
0x2326	0xB3C740  	MOV.B	#116, W0
0x2328	0x785880  	MOV.B	W0, [W1++]
0x232A	0xB3C610  	MOV.B	#97, W0
0x232C	0x785880  	MOV.B	W0, [W1++]
0x232E	0xB3C6C0  	MOV.B	#108, W0
0x2330	0x785880  	MOV.B	W0, [W1++]
0x2332	0xB3C200  	MOV.B	#32, W0
0x2334	0x785880  	MOV.B	W0, [W1++]
0x2336	0xB3C450  	MOV.B	#69, W0
0x2338	0x785880  	MOV.B	W0, [W1++]
0x233A	0xB3C640  	MOV.B	#100, W0
0x233C	0x785880  	MOV.B	W0, [W1++]
0x233E	0xB3C690  	MOV.B	#105, W0
0x2340	0x785880  	MOV.B	W0, [W1++]
0x2342	0xB3C6C0  	MOV.B	#108, W0
0x2344	0x785880  	MOV.B	W0, [W1++]
0x2346	0xB3C640  	MOV.B	#100, W0
0x2348	0x785880  	MOV.B	W0, [W1++]
0x234A	0xB3C690  	MOV.B	#105, W0
0x234C	0x785880  	MOV.B	W0, [W1++]
0x234E	0xB3C2E0  	MOV.B	#46, W0
0x2350	0x785880  	MOV.B	W0, [W1++]
0x2352	0xB3C2E0  	MOV.B	#46, W0
0x2354	0x785880  	MOV.B	W0, [W1++]
0x2356	0xB3C2E0  	MOV.B	#46, W0
0x2358	0x785880  	MOV.B	W0, [W1++]
0x235A	0xB3C200  	MOV.B	#32, W0
0x235C	0x785880  	MOV.B	W0, [W1++]
0x235E	0xB3C200  	MOV.B	#32, W0
0x2360	0x785880  	MOV.B	W0, [W1++]
0x2362	0xB3C200  	MOV.B	#32, W0
0x2364	0x785880  	MOV.B	W0, [W1++]
0x2366	0xB3C200  	MOV.B	#32, W0
0x2368	0x785880  	MOV.B	W0, [W1++]
0x236A	0xB3C200  	MOV.B	#32, W0
0x236C	0x785880  	MOV.B	W0, [W1++]
0x236E	0xEF2000  	CLR	W0
0x2370	0x785880  	MOV.B	W0, [W1++]
0x2372	0x470062  	ADD	W14, #2, W0
0x2374	0xB3C01D  	MOV.B	#1, W13
0x2376	0xB3C03C  	MOV.B	#3, W12
0x2378	0xEF2016  	CLR	W11
0x237A	0x780500  	MOV	W0, W10
0x237C	0x071A06  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,692 :: 		Pause_ms(250);
0x237E	0x200FAA  	MOV	#250, W10
0x2380	0x075D8A  	RCALL	_Pause_Ms
;LogUnit.mpas,693 :: 		asm clrwdt; end;
0x2382	0xFE6000  	CLRWDT
;LogUnit.mpas,694 :: 		Pause_ms(250);
0x2384	0x200FAA  	MOV	#250, W10
0x2386	0x075D87  	RCALL	_Pause_Ms
;LogUnit.mpas,695 :: 		asm clrwdt; end;
0x2388	0xFE6000  	CLRWDT
;LogUnit.mpas,696 :: 		Pause_ms(250);
0x238A	0x200FAA  	MOV	#250, W10
0x238C	0x075D84  	RCALL	_Pause_Ms
;LogUnit.mpas,697 :: 		asm clrwdt; end;
0x238E	0xFE6000  	CLRWDT
;LogUnit.mpas,698 :: 		Pause_ms(250);
0x2390	0x200FAA  	MOV	#250, W10
0x2392	0x075D81  	RCALL	_Pause_Ms
;LogUnit.mpas,699 :: 		asm clrwdt; end;
0x2394	0xFE6000  	CLRWDT
;LogUnit.mpas,700 :: 		end;
L_LogUnit_Log_Erase243:
L_LogUnit_Log_Erase206:
;LogUnit.mpas,702 :: 		end;
0x2396	0x37FEE3  	BRA	L_LogUnit_Log_Erase200
L_LogUnit_Log_Erase201:
;LogUnit.mpas,704 :: 		Glcd_Fill(0x00);
0x2398	0xEF2014  	CLR	W10
0x239A	0x073A98  	RCALL	_Glcd_Fill
;LogUnit.mpas,707 :: 		end;
L_end_Log_Erase:
0x239C	0x7806CF  	POP	W13
0x239E	0x78064F  	POP	W12
0x23A0	0x7805CF  	POP	W11
0x23A2	0x78054F  	POP	W10
0x23A4	0xFA8000  	ULNK
0x23A6	0x060000  	RETURN
; end of LogUnit_Log_Erase
LogUnit_Log_Partition:
0x1E7E	0xFA0018  	LNK	#24
;LogUnit.mpas,518 :: 		begin
;LogUnit.mpas,521 :: 		Temp_Text1 := '     ';
0x1E80	0x781F8A  	PUSH	W10
0x1E82	0x781F8B  	PUSH	W11
0x1E84	0x4700E0  	ADD	W14, #0, W1
0x1E86	0xB3C200  	MOV.B	#32, W0
0x1E88	0x785880  	MOV.B	W0, [W1++]
0x1E8A	0xB3C200  	MOV.B	#32, W0
0x1E8C	0x785880  	MOV.B	W0, [W1++]
0x1E8E	0xB3C200  	MOV.B	#32, W0
0x1E90	0x785880  	MOV.B	W0, [W1++]
0x1E92	0xB3C200  	MOV.B	#32, W0
0x1E94	0x785880  	MOV.B	W0, [W1++]
0x1E96	0xB3C200  	MOV.B	#32, W0
0x1E98	0x785880  	MOV.B	W0, [W1++]
0x1E9A	0xEF2000  	CLR	W0
0x1E9C	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,522 :: 		Temp_Text2 := '     ';
0x1E9E	0x4700E6  	ADD	W14, #6, W1
0x1EA0	0xB3C200  	MOV.B	#32, W0
0x1EA2	0x785880  	MOV.B	W0, [W1++]
0x1EA4	0xB3C200  	MOV.B	#32, W0
0x1EA6	0x785880  	MOV.B	W0, [W1++]
0x1EA8	0xB3C200  	MOV.B	#32, W0
0x1EAA	0x785880  	MOV.B	W0, [W1++]
0x1EAC	0xB3C200  	MOV.B	#32, W0
0x1EAE	0x785880  	MOV.B	W0, [W1++]
0x1EB0	0xB3C200  	MOV.B	#32, W0
0x1EB2	0x785880  	MOV.B	W0, [W1++]
0x1EB4	0xEF2000  	CLR	W0
0x1EB6	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,523 :: 		Temp_Text3 := '     ';
0x1EB8	0x4700EC  	ADD	W14, #12, W1
0x1EBA	0xB3C200  	MOV.B	#32, W0
0x1EBC	0x785880  	MOV.B	W0, [W1++]
0x1EBE	0xB3C200  	MOV.B	#32, W0
0x1EC0	0x785880  	MOV.B	W0, [W1++]
0x1EC2	0xB3C200  	MOV.B	#32, W0
0x1EC4	0x785880  	MOV.B	W0, [W1++]
0x1EC6	0xB3C200  	MOV.B	#32, W0
0x1EC8	0x785880  	MOV.B	W0, [W1++]
0x1ECA	0xB3C200  	MOV.B	#32, W0
0x1ECC	0x785880  	MOV.B	W0, [W1++]
0x1ECE	0xEF2000  	CLR	W0
0x1ED0	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,524 :: 		Temp_Text4 := '     ';
0x1ED2	0x4700F2  	ADD	W14, #18, W1
0x1ED4	0xB3C200  	MOV.B	#32, W0
0x1ED6	0x785880  	MOV.B	W0, [W1++]
0x1ED8	0xB3C200  	MOV.B	#32, W0
0x1EDA	0x785880  	MOV.B	W0, [W1++]
0x1EDC	0xB3C200  	MOV.B	#32, W0
0x1EDE	0x785880  	MOV.B	W0, [W1++]
0x1EE0	0xB3C200  	MOV.B	#32, W0
0x1EE2	0x785880  	MOV.B	W0, [W1++]
0x1EE4	0xB3C200  	MOV.B	#32, W0
0x1EE6	0x785880  	MOV.B	W0, [W1++]
0x1EE8	0xEF2000  	CLR	W0
0x1EEA	0x785880  	MOV.B	W0, [W1++]
;LogUnit.mpas,526 :: 		WordToStr(LogPart_Hour,Temp_Text1);
0x1EEC	0x470060  	ADD	W14, #0, W0
0x1EEE	0x781F8B  	PUSH	W11
0x1EF0	0x780580  	MOV	W0, W11
0x1EF2	0x07F9AF  	RCALL	_WordToStr
0x1EF4	0x7805CF  	POP	W11
;LogUnit.mpas,527 :: 		WordToStr(LogPart_DayMonth,Temp_Text2);
0x1EF6	0x470066  	ADD	W14, #6, W0
0x1EF8	0x78050B  	MOV	W11, W10
0x1EFA	0x780580  	MOV	W0, W11
0x1EFC	0x07F9AA  	RCALL	_WordToStr
;LogUnit.mpas,528 :: 		WordToStr(LogPart_Year,Temp_Text3);
0x1EFE	0x47006C  	ADD	W14, #12, W0
0x1F00	0x780580  	MOV	W0, W11
0x1F02	0x78050C  	MOV	W12, W10
0x1F04	0x07F9A6  	RCALL	_WordToStr
;LogUnit.mpas,529 :: 		WordToStr(LogPart_Event,Temp_Text4);
0x1F06	0x470072  	ADD	W14, #18, W0
0x1F08	0x780580  	MOV	W0, W11
0x1F0A	0x78050D  	MOV	W13, W10
0x1F0C	0x07F9A2  	RCALL	_WordToStr
;LogUnit.mpas,531 :: 		if (LogPart_Event <> 0xFFFF) then   // olay olmuþsa yaz, yoksa yazma
0x1F0E	0x2FFFF0  	MOV	#65535, W0
0x1F10	0xE16800  	CP	W13, W0
0x1F12	0x320040  	BRA Z	L_LogUnit_Log_Partition195
L_LogUnit_Log_Partition482:
;LogUnit.mpas,533 :: 		Hour_Text[1]  := Temp_Text1[1];
0x1F14	0x20E201  	MOV	#lo_addr(_Hour_Text), W1
0x1F16	0x90401E  	MOV.B	[W14+1], W0
0x1F18	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,534 :: 		Hour_Text[2]  := Temp_Text1[2];
0x1F1A	0x20E211  	MOV	#lo_addr(_Hour_Text+1), W1
0x1F1C	0x90402E  	MOV.B	[W14+2], W0
0x1F1E	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,535 :: 		Hour_Text[3]  := ':';
0x1F20	0x20E221  	MOV	#lo_addr(_Hour_Text+2), W1
0x1F22	0xB3C3A0  	MOV.B	#58, W0
0x1F24	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,536 :: 		Hour_Text[4]  := Temp_Text1[3];
0x1F26	0x20E231  	MOV	#lo_addr(_Hour_Text+3), W1
0x1F28	0x90403E  	MOV.B	[W14+3], W0
0x1F2A	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,537 :: 		Hour_Text[5]  := Temp_Text1[4];
0x1F2C	0x20E241  	MOV	#lo_addr(_Hour_Text+4), W1
0x1F2E	0x90404E  	MOV.B	[W14+4], W0
0x1F30	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,538 :: 		Hour_Text[6]  := '-';
0x1F32	0x20E251  	MOV	#lo_addr(_Hour_Text+5), W1
0x1F34	0xB3C2D0  	MOV.B	#45, W0
0x1F36	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,539 :: 		Day_Text[1]   := Temp_Text2[1];
0x1F38	0x20F281  	MOV	#lo_addr(_Day_Text), W1
0x1F3A	0x90407E  	MOV.B	[W14+7], W0
0x1F3C	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,540 :: 		Day_Text[2]   := Temp_Text2[2];
0x1F3E	0x20F291  	MOV	#lo_addr(_Day_Text+1), W1
0x1F40	0x90480E  	MOV.B	[W14+8], W0
0x1F42	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,541 :: 		Day_Text[3]   := '.';
0x1F44	0x20F2A1  	MOV	#lo_addr(_Day_Text+2), W1
0x1F46	0xB3C2E0  	MOV.B	#46, W0
0x1F48	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,542 :: 		Day_Text[4]   := Temp_Text2[3];
0x1F4A	0x20F2B1  	MOV	#lo_addr(_Day_Text+3), W1
0x1F4C	0x90481E  	MOV.B	[W14+9], W0
0x1F4E	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,543 :: 		Day_Text[5]   := Temp_Text2[4];
0x1F50	0x20F2C1  	MOV	#lo_addr(_Day_Text+4), W1
0x1F52	0x90482E  	MOV.B	[W14+10], W0
0x1F54	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,544 :: 		Day_Text[6]   := '.';
0x1F56	0x20F2D1  	MOV	#lo_addr(_Day_Text+5), W1
0x1F58	0xB3C2E0  	MOV.B	#46, W0
0x1F5A	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,545 :: 		Day_Text[7]   := '2';
0x1F5C	0x20F2E1  	MOV	#lo_addr(_Day_Text+6), W1
0x1F5E	0xB3C320  	MOV.B	#50, W0
0x1F60	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,546 :: 		Day_Text[8]   := '0';
0x1F62	0x20F2F1  	MOV	#lo_addr(_Day_Text+7), W1
0x1F64	0xB3C300  	MOV.B	#48, W0
0x1F66	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,547 :: 		Day_Text[9]   := Temp_Text3[3];
0x1F68	0x20F301  	MOV	#lo_addr(_Day_Text+8), W1
0x1F6A	0x90487E  	MOV.B	[W14+15], W0
0x1F6C	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,548 :: 		Day_Text[10]  := Temp_Text3[4];
0x1F6E	0x20F311  	MOV	#lo_addr(_Day_Text+9), W1
0x1F70	0x90500E  	MOV.B	[W14+16], W0
0x1F72	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,549 :: 		Day_Text[11]  := '=';
0x1F74	0x20F321  	MOV	#lo_addr(_Day_Text+10), W1
0x1F76	0xB3C3D0  	MOV.B	#61, W0
0x1F78	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,550 :: 		event_Text[1]  := '0';
0x1F7A	0x20F341  	MOV	#lo_addr(_Event_Text), W1
0x1F7C	0xB3C300  	MOV.B	#48, W0
0x1F7E	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,551 :: 		event_Text[2]  := 'x';
0x1F80	0x20F351  	MOV	#lo_addr(_Event_Text+1), W1
0x1F82	0xB3C780  	MOV.B	#120, W0
0x1F84	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,552 :: 		event_Text[3]  := Temp_Text4[3];
0x1F86	0x20F361  	MOV	#lo_addr(_Event_Text+2), W1
0x1F88	0x90505E  	MOV.B	[W14+21], W0
0x1F8A	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,553 :: 		event_Text[4]  := Temp_Text4[4];
0x1F8C	0x20F371  	MOV	#lo_addr(_Event_Text+3), W1
0x1F8E	0x90506E  	MOV.B	[W14+22], W0
0x1F90	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,554 :: 		end else
0x1F92	0x37003F  	BRA	L_LogUnit_Log_Partition196
L_LogUnit_Log_Partition195:
;LogUnit.mpas,556 :: 		Hour_Text[1]   := ' ';
0x1F94	0x20E201  	MOV	#lo_addr(_Hour_Text), W1
0x1F96	0xB3C200  	MOV.B	#32, W0
0x1F98	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,557 :: 		Hour_Text[2]   := ' ';
0x1F9A	0x20E211  	MOV	#lo_addr(_Hour_Text+1), W1
0x1F9C	0xB3C200  	MOV.B	#32, W0
0x1F9E	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,558 :: 		Hour_Text[3]   := ' ';
0x1FA0	0x20E221  	MOV	#lo_addr(_Hour_Text+2), W1
0x1FA2	0xB3C200  	MOV.B	#32, W0
0x1FA4	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,559 :: 		Hour_Text[4]   := ' ';
0x1FA6	0x20E231  	MOV	#lo_addr(_Hour_Text+3), W1
0x1FA8	0xB3C200  	MOV.B	#32, W0
0x1FAA	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,560 :: 		Hour_Text[5]   := ' ';
0x1FAC	0x20E241  	MOV	#lo_addr(_Hour_Text+4), W1
0x1FAE	0xB3C200  	MOV.B	#32, W0
0x1FB0	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,561 :: 		Hour_Text[6]   := ' ';
0x1FB2	0x20E251  	MOV	#lo_addr(_Hour_Text+5), W1
0x1FB4	0xB3C200  	MOV.B	#32, W0
0x1FB6	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,562 :: 		Day_Text[1]    := ' ';
0x1FB8	0x20F281  	MOV	#lo_addr(_Day_Text), W1
0x1FBA	0xB3C200  	MOV.B	#32, W0
0x1FBC	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,563 :: 		Day_Text[2]    := ' ';
0x1FBE	0x20F291  	MOV	#lo_addr(_Day_Text+1), W1
0x1FC0	0xB3C200  	MOV.B	#32, W0
0x1FC2	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,564 :: 		Day_Text[3]    := ' ';
0x1FC4	0x20F2A1  	MOV	#lo_addr(_Day_Text+2), W1
0x1FC6	0xB3C200  	MOV.B	#32, W0
0x1FC8	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,565 :: 		Day_Text[4]    := ' ';
0x1FCA	0x20F2B1  	MOV	#lo_addr(_Day_Text+3), W1
0x1FCC	0xB3C200  	MOV.B	#32, W0
0x1FCE	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,566 :: 		Day_Text[5]    := ' ';
0x1FD0	0x20F2C1  	MOV	#lo_addr(_Day_Text+4), W1
0x1FD2	0xB3C200  	MOV.B	#32, W0
0x1FD4	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,567 :: 		Day_Text[6]    := ' ';
0x1FD6	0x20F2D1  	MOV	#lo_addr(_Day_Text+5), W1
0x1FD8	0xB3C200  	MOV.B	#32, W0
0x1FDA	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,568 :: 		Day_Text[7]    := ' ';
0x1FDC	0x20F2E1  	MOV	#lo_addr(_Day_Text+6), W1
0x1FDE	0xB3C200  	MOV.B	#32, W0
0x1FE0	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,569 :: 		Day_Text[8]    := ' ';
0x1FE2	0x20F2F1  	MOV	#lo_addr(_Day_Text+7), W1
0x1FE4	0xB3C200  	MOV.B	#32, W0
0x1FE6	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,570 :: 		Day_Text[9]    := ' ';
0x1FE8	0x20F301  	MOV	#lo_addr(_Day_Text+8), W1
0x1FEA	0xB3C200  	MOV.B	#32, W0
0x1FEC	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,571 :: 		Day_Text[10]   := ' ';
0x1FEE	0x20F311  	MOV	#lo_addr(_Day_Text+9), W1
0x1FF0	0xB3C200  	MOV.B	#32, W0
0x1FF2	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,572 :: 		Day_Text[11]   := ' ';
0x1FF4	0x20F321  	MOV	#lo_addr(_Day_Text+10), W1
0x1FF6	0xB3C200  	MOV.B	#32, W0
0x1FF8	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,573 :: 		event_Text[1]  := ' ';
0x1FFA	0x20F341  	MOV	#lo_addr(_Event_Text), W1
0x1FFC	0xB3C200  	MOV.B	#32, W0
0x1FFE	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,574 :: 		event_Text[2]  := ' ';
0x2000	0x20F351  	MOV	#lo_addr(_Event_Text+1), W1
0x2002	0xB3C200  	MOV.B	#32, W0
0x2004	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,575 :: 		event_Text[3]  := ' ';
0x2006	0x20F361  	MOV	#lo_addr(_Event_Text+2), W1
0x2008	0xB3C200  	MOV.B	#32, W0
0x200A	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,576 :: 		event_Text[4]  := ' ';
0x200C	0x20F371  	MOV	#lo_addr(_Event_Text+3), W1
0x200E	0xB3C200  	MOV.B	#32, W0
0x2010	0x784880  	MOV.B	W0, [W1]
;LogUnit.mpas,577 :: 		end;
L_LogUnit_Log_Partition196:
;LogUnit.mpas,583 :: 		end;
L_end_Log_Partition:
0x2012	0x7805CF  	POP	W11
0x2014	0x78054F  	POP	W10
0x2016	0xFA8000  	ULNK
0x2018	0x060000  	RETURN
; end of LogUnit_Log_Partition
LogUnit_Log_Glcd_Write:
0x2470	0xFA0000  	LNK	#0
;LogUnit.mpas,586 :: 		begin
0x2472	0x781F8A  	PUSH	W10
0x2474	0x781F8B  	PUSH	W11
0x2476	0x781F8C  	PUSH	W12
0x2478	0x781F8D  	PUSH	W13
0x247A	0x97F80E  	MOV.B	[W14-8], W0
0x247C	0x9FFF00  	MOV.B	W0, [W14-8]
0x247E	0x97F06E  	MOV.B	[W14-10], W0
0x2480	0x9FF760  	MOV.B	W0, [W14-10]
0x2482	0x97F04E  	MOV.B	[W14-12], W0
0x2484	0x9FF740  	MOV.B	W0, [W14-12]
0x2486	0x97F02E  	MOV.B	[W14-14], W0
0x2488	0x9FF720  	MOV.B	W0, [W14-14]
;LogUnit.mpas,587 :: 		Glcd_Write_Text(Text1,Coloumn1,Row,Colour);
0x248A	0x781F8C  	PUSH	W12
0x248C	0x781F8B  	PUSH	W11
0x248E	0x97F64E  	MOV.B	[W14-12], W12
0x2490	0x78458D  	MOV.B	W13, W11
0x2492	0x97F6AE  	MOV.B	[W14-14], W13
0x2494	0x07197A  	RCALL	_Glcd_Write_Text
0x2496	0x7805CF  	POP	W11
;LogUnit.mpas,588 :: 		Glcd_Write_Text(Text2,Coloumn2,Row,Colour);
0x2498	0x97F6AE  	MOV.B	[W14-14], W13
0x249A	0x97F64E  	MOV.B	[W14-12], W12
0x249C	0x78050B  	MOV	W11, W10
0x249E	0x97FD8E  	MOV.B	[W14-8], W11
0x24A0	0x071974  	RCALL	_Glcd_Write_Text
0x24A2	0x78064F  	POP	W12
;LogUnit.mpas,589 :: 		Glcd_Write_Text(Text3,Coloumn3,Row,Colour);
0x24A4	0x97F6AE  	MOV.B	[W14-14], W13
0x24A6	0x97F5EE  	MOV.B	[W14-10], W11
0x24A8	0x78050C  	MOV	W12, W10
0x24AA	0x97F64E  	MOV.B	[W14-12], W12
0x24AC	0x07196E  	RCALL	_Glcd_Write_Text
;LogUnit.mpas,590 :: 		end;
L_end_Log_Glcd_Write:
0x24AE	0x7806CF  	POP	W13
0x24B0	0x78064F  	POP	W12
0x24B2	0x7805CF  	POP	W11
0x24B4	0x78054F  	POP	W10
0x24B6	0xFA8000  	ULNK
0x24B8	0x060000  	RETURN
; end of LogUnit_Log_Glcd_Write
_Password_Settings:
;GRR3000LManagementPanel.mpas,8207 :: 		begin
;GRR3000LManagementPanel.mpas,8209 :: 		MenuExit        := 0;
0x3366	0x781F8A  	PUSH	W10
0x3368	0x781F8B  	PUSH	W11
0x336A	0x781F8C  	PUSH	W12
0x336C	0x781F8D  	PUSH	W13
0x336E	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x3370	0xEF2000  	CLR	W0
0x3372	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8210 :: 		MenuSayacValue  := 1;
0x3374	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x3376	0xB3C010  	MOV.B	#1, W0
0x3378	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8211 :: 		Chng[11]        := 2;
0x337A	0x212561  	MOV	#lo_addr(_Chng+10), W1
0x337C	0xB3C020  	MOV.B	#2, W0
0x337E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8212 :: 		Chng[9]         := 1;
0x3380	0x212541  	MOV	#lo_addr(_Chng+8), W1
0x3382	0xB3C010  	MOV.B	#1, W0
0x3384	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8215 :: 		Confirm_AcMenuBit       := EEPROM_Read(EE_ConfirmAcMenuEeAddr);
0x3386	0x2F05EA  	MOV	#61534, W10
0x3388	0x2007FB  	MOV	#127, W11
0x338A	0x07F86A  	RCALL	_EEPROM_Read
0x338C	0x212A41  	MOV	#lo_addr(_Confirm_AcMenuBit), W1
0x338E	0xA09011  	BSET	[W1], BitPos(_Confirm_AcMenuBit+0)
0x3390	0xAE0000  	BTSS	W0, #0
0x3392	0xA19011  	BCLR	[W1], BitPos(_Confirm_AcMenuBit+0)
;GRR3000LManagementPanel.mpas,8216 :: 		Confirm_BattMenuBit     := EEPROM_Read(EE_ConfirmBattMenuEeAddr);
0x3394	0x2F062A  	MOV	#61538, W10
0x3396	0x2007FB  	MOV	#127, W11
0x3398	0x07F863  	RCALL	_EEPROM_Read
0x339A	0x212A41  	MOV	#lo_addr(_Confirm_BattMenuBit), W1
0x339C	0xA02011  	BSET	[W1], BitPos(_Confirm_BattMenuBit+0)
0x339E	0xAE0000  	BTSS	W0, #0
0x33A0	0xA12011  	BCLR	[W1], BitPos(_Confirm_BattMenuBit+0)
;GRR3000LManagementPanel.mpas,8217 :: 		Confirm_ClockMenuBit    := EEPROM_Read(EE_ConfirmClockMenuEeAddr);
0x33A2	0x2F06AA  	MOV	#61546, W10
0x33A4	0x2007FB  	MOV	#127, W11
0x33A6	0x07F85C  	RCALL	_EEPROM_Read
0x33A8	0x212A41  	MOV	#lo_addr(_Confirm_ClockMenuBit), W1
0x33AA	0xA05011  	BSET	[W1], BitPos(_Confirm_ClockMenuBit+0)
0x33AC	0xAE0000  	BTSS	W0, #0
0x33AE	0xA15011  	BCLR	[W1], BitPos(_Confirm_ClockMenuBit+0)
;GRR3000LManagementPanel.mpas,8218 :: 		Confirm_DcMenuBit       := EEPROM_Read(EE_ConfirmDcMenuEeAddr);
0x33B0	0x2F060A  	MOV	#61536, W10
0x33B2	0x2007FB  	MOV	#127, W11
0x33B4	0x07F855  	RCALL	_EEPROM_Read
0x33B6	0x212A41  	MOV	#lo_addr(_Confirm_DcMenuBit), W1
0x33B8	0xA08011  	BSET	[W1], BitPos(_Confirm_DcMenuBit+0)
0x33BA	0xAE0000  	BTSS	W0, #0
0x33BC	0xA18011  	BCLR	[W1], BitPos(_Confirm_DcMenuBit+0)
;GRR3000LManagementPanel.mpas,8220 :: 		Confirm_LeakaMenuBit    := EEPROM_Read(EE_ConfirmLeakMenuEeAddr);
0x33BE	0x2F066A  	MOV	#61542, W10
0x33C0	0x2007FB  	MOV	#127, W11
0x33C2	0x07F84E  	RCALL	_EEPROM_Read
0x33C4	0x212A41  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W1
0x33C6	0xA01011  	BSET	[W1], BitPos(_Confirm_LeakaMenuBit+0)
0x33C8	0xAE0000  	BTSS	W0, #0
0x33CA	0xA11011  	BCLR	[W1], BitPos(_Confirm_LeakaMenuBit+0)
;GRR3000LManagementPanel.mpas,8221 :: 		Confirm_ModbusMenuBit   := EEPROM_Read(EE_ConfirmModbusMenuEeAddr);
0x33CC	0x2F06CA  	MOV	#61548, W10
0x33CE	0x2007FB  	MOV	#127, W11
0x33D0	0x07F847  	RCALL	_EEPROM_Read
0x33D2	0x212A41  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W1
0x33D4	0xA04011  	BSET	[W1], BitPos(_Confirm_ModbusMenuBit+0)
0x33D6	0xAE0000  	BTSS	W0, #0
0x33D8	0xA14011  	BCLR	[W1], BitPos(_Confirm_ModbusMenuBit+0)
;GRR3000LManagementPanel.mpas,8222 :: 		Confirm_OperaMenuBit    := EEPROM_Read(EE_ConfirmOperaMenuEeAddr);
0x33DA	0x2F064A  	MOV	#61540, W10
0x33DC	0x2007FB  	MOV	#127, W11
0x33DE	0x07F840  	RCALL	_EEPROM_Read
0x33E0	0x212A41  	MOV	#lo_addr(_Confirm_OperaMenuBit), W1
0x33E2	0xA07011  	BSET	[W1], BitPos(_Confirm_OperaMenuBit+0)
0x33E4	0xAE0000  	BTSS	W0, #0
0x33E6	0xA17011  	BCLR	[W1], BitPos(_Confirm_OperaMenuBit+0)
;GRR3000LManagementPanel.mpas,8223 :: 		Confirm_TempeMenuBit    := EEPROM_Read(EE_ConfirmTempMenuEeAddr);
0x33E8	0x2F068A  	MOV	#61544, W10
0x33EA	0x2007FB  	MOV	#127, W11
0x33EC	0x07F839  	RCALL	_EEPROM_Read
0x33EE	0x212A41  	MOV	#lo_addr(_Confirm_TempeMenuBit), W1
0x33F0	0xA03011  	BSET	[W1], BitPos(_Confirm_TempeMenuBit+0)
0x33F2	0xAE0000  	BTSS	W0, #0
0x33F4	0xA13011  	BCLR	[W1], BitPos(_Confirm_TempeMenuBit+0)
;GRR3000LManagementPanel.mpas,8224 :: 		User_Password           := EEPROM_Read(EE_PasswordEeAddr);
0x33F6	0x2F070A  	MOV	#61552, W10
0x33F8	0x2007FB  	MOV	#127, W11
0x33FA	0x07F832  	RCALL	_EEPROM_Read
0x33FC	0x88AD40  	MOV	W0, _User_Password
;GRR3000LManagementPanel.mpas,8226 :: 		Password_Entry_Screen(1);
0x33FE	0xB3C01A  	MOV.B	#1, W10
0x3400	0x07F005  	RCALL	_Password_Entry_Screen
;GRR3000LManagementPanel.mpas,8227 :: 		Glcd_Fill(0x00);
0x3402	0xEF2014  	CLR	W10
0x3404	0x073263  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8229 :: 		While (MenuExit =0) do
L__Password_Settings3705:
0x3406	0x214660  	MOV	#lo_addr(_MenuExit), W0
0x3408	0x784010  	MOV.B	[W0], W0
0x340A	0xE10460  	CP.B	W0, #0
0x340C	0x3A0417  	BRA NZ	L__Password_Settings3706
L__Password_Settings5581:
;GRR3000LManagementPanel.mpas,8233 :: 		MenuSayac := MenuButtonRead(10,255); // 10 satýr menu var
0x340E	0xB3CFFB  	MOV.B	#255, W11
0x3410	0xB3C0AA  	MOV.B	#10, W10
0x3412	0x07EF3E  	RCALL	_MenuButtonRead
0x3414	0x212751  	MOV	#lo_addr(_MenuSayac), W1
0x3416	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8234 :: 		Chng[9]   := 1;
0x3418	0x212541  	MOV	#lo_addr(_Chng+8), W1
0x341A	0xB3C010  	MOV.B	#1, W0
0x341C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8236 :: 		asm ClrWDT; end;
0x341E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8238 :: 		if (MenuSayac < 8) then
0x3420	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3422	0x784010  	MOV.B	[W0], W0
0x3424	0xE10468  	CP.B	W0, #8
0x3426	0x3D0086  	BRA GE	L__Password_Settings3710
L__Password_Settings5582:
;GRR3000LManagementPanel.mpas,8240 :: 		if (Chng[11] =2) then
0x3428	0x212560  	MOV	#lo_addr(_Chng+10), W0
0x342A	0x784010  	MOV.B	[W0], W0
0x342C	0xE10462  	CP.B	W0, #2
0x342E	0x3A0081  	BRA NZ	L__Password_Settings3713
L__Password_Settings5583:
;GRR3000LManagementPanel.mpas,8242 :: 		Chng[11] := 1;
0x3430	0x212561  	MOV	#lo_addr(_Chng+10), W1
0x3432	0xB3C010  	MOV.B	#1, W0
0x3434	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8248 :: 		Glcd_Fill(0x00);
0x3436	0xEF2014  	CLR	W10
0x3438	0x073249  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8251 :: 		Glcd_Write_Text(Title_AuthMenu1     , 0, Row1, Black);
0x343A	0xB3C01D  	MOV.B	#1, W13
0x343C	0xEF2018  	CLR	W12
0x343E	0xEF2016  	CLR	W11
0x3440	0x216D0A  	MOV	#lo_addr(_Title_AuthMenu1), W10
0x3442	0x0711A3  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8252 :: 		Glcd_Write_Text(SubTitle_PswChng    , 6, Row2, Black);
0x3444	0xB3C01D  	MOV.B	#1, W13
0x3446	0xB3C01C  	MOV.B	#1, W12
0x3448	0xB3C06B  	MOV.B	#6, W11
0x344A	0x21754A  	MOV	#lo_addr(_SubTitle_PswChng), W10
0x344C	0x07119E  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8253 :: 		Glcd_Write_Text(SubTitle_PswAcset   , 6, Row3, Black);
0x344E	0xB3C01D  	MOV.B	#1, W13
0x3450	0xB3C02C  	MOV.B	#2, W12
0x3452	0xB3C06B  	MOV.B	#6, W11
0x3454	0x21742A  	MOV	#lo_addr(_SubTitle_PswAcset), W10
0x3456	0x071199  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8254 :: 		Glcd_Write_Text(SubTitle_PswDcset   , 6, Row4, Black);
0x3458	0xB3C01D  	MOV.B	#1, W13
0x345A	0xB3C03C  	MOV.B	#3, W12
0x345C	0xB3C06B  	MOV.B	#6, W11
0x345E	0x21766A  	MOV	#lo_addr(_SubTitle_PswDcset), W10
0x3460	0x071194  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8255 :: 		Glcd_Write_Text(SubTitle_Pswbatset  , 6, Row5, Black);
0x3462	0xB3C01D  	MOV.B	#1, W13
0x3464	0xB3C04C  	MOV.B	#4, W12
0x3466	0xB3C06B  	MOV.B	#6, W11
0x3468	0x2178AA  	MOV	#lo_addr(_SubTitle_Pswbatset), W10
0x346A	0x07118F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8256 :: 		Glcd_Write_Text(SubTitle_Pswopmod   , 6, Row6, Black);
0x346C	0xB3C01D  	MOV.B	#1, W13
0x346E	0xB3C05C  	MOV.B	#5, W12
0x3470	0xB3C06B  	MOV.B	#6, W11
0x3472	0x21778A  	MOV	#lo_addr(_SubTitle_Pswopmod), W10
0x3474	0x07118A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8257 :: 		Glcd_Write_Text(SubTitle_Pswleak    , 6, Row7, Black);
0x3476	0xB3C01D  	MOV.B	#1, W13
0x3478	0xB3C06C  	MOV.B	#6, W12
0x347A	0xB3C06B  	MOV.B	#6, W11
0x347C	0x216F7A  	MOV	#lo_addr(_SubTitle_Pswleak), W10
0x347E	0x071185  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8258 :: 		Glcd_Write_Text(SubTitle_Pswtemp    , 6, Row8, Black);
0x3480	0xB3C01D  	MOV.B	#1, W13
0x3482	0xB3C07C  	MOV.B	#7, W12
0x3484	0xB3C06B  	MOV.B	#6, W11
0x3486	0x216E5A  	MOV	#lo_addr(_SubTitle_Pswtemp), W10
0x3488	0x071180  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8264 :: 		if (Confirm_AcMenuBit = 1)    then Glcd_Write_Char('+', 114, Row3,Black) else Glcd_Write_Char('x', 114, Row3,Black);
0x348A	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0x348C	0xA69010  	BTSS	[W0], BitPos(_Confirm_AcMenuBit+0)
0x348E	0x370006  	BRA	L__Password_Settings3716
0x3490	0xB3C01D  	MOV.B	#1, W13
0x3492	0xB3C02C  	MOV.B	#2, W12
0x3494	0xB3C72B  	MOV.B	#114, W11
0x3496	0xB3C2BA  	MOV.B	#43, W10
0x3498	0x07F46D  	RCALL	_Glcd_Write_Char
0x349A	0x370005  	BRA	L__Password_Settings3717
L__Password_Settings3716:
0x349C	0xB3C01D  	MOV.B	#1, W13
0x349E	0xB3C02C  	MOV.B	#2, W12
0x34A0	0xB3C72B  	MOV.B	#114, W11
0x34A2	0xB3C78A  	MOV.B	#120, W10
0x34A4	0x07F467  	RCALL	_Glcd_Write_Char
L__Password_Settings3717:
;GRR3000LManagementPanel.mpas,8265 :: 		if (Confirm_DcMenuBit = 1)    then Glcd_Write_Char('+', 114, Row4,Black) else Glcd_Write_Char('x', 114, Row4,Black);
0x34A6	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0x34A8	0xA68010  	BTSS	[W0], BitPos(_Confirm_DcMenuBit+0)
0x34AA	0x370006  	BRA	L__Password_Settings3719
0x34AC	0xB3C01D  	MOV.B	#1, W13
0x34AE	0xB3C03C  	MOV.B	#3, W12
0x34B0	0xB3C72B  	MOV.B	#114, W11
0x34B2	0xB3C2BA  	MOV.B	#43, W10
0x34B4	0x07F45F  	RCALL	_Glcd_Write_Char
0x34B6	0x370005  	BRA	L__Password_Settings3720
L__Password_Settings3719:
0x34B8	0xB3C01D  	MOV.B	#1, W13
0x34BA	0xB3C03C  	MOV.B	#3, W12
0x34BC	0xB3C72B  	MOV.B	#114, W11
0x34BE	0xB3C78A  	MOV.B	#120, W10
0x34C0	0x07F459  	RCALL	_Glcd_Write_Char
L__Password_Settings3720:
;GRR3000LManagementPanel.mpas,8266 :: 		if (Confirm_BattMenuBit = 1)  then Glcd_Write_Char('+', 114, Row5,Black) else Glcd_Write_Char('x', 114, Row5,Black);
0x34C2	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0x34C4	0xA62010  	BTSS	[W0], BitPos(_Confirm_BattMenuBit+0)
0x34C6	0x370006  	BRA	L__Password_Settings3722
0x34C8	0xB3C01D  	MOV.B	#1, W13
0x34CA	0xB3C04C  	MOV.B	#4, W12
0x34CC	0xB3C72B  	MOV.B	#114, W11
0x34CE	0xB3C2BA  	MOV.B	#43, W10
0x34D0	0x07F451  	RCALL	_Glcd_Write_Char
0x34D2	0x370005  	BRA	L__Password_Settings3723
L__Password_Settings3722:
0x34D4	0xB3C01D  	MOV.B	#1, W13
0x34D6	0xB3C04C  	MOV.B	#4, W12
0x34D8	0xB3C72B  	MOV.B	#114, W11
0x34DA	0xB3C78A  	MOV.B	#120, W10
0x34DC	0x07F44B  	RCALL	_Glcd_Write_Char
L__Password_Settings3723:
;GRR3000LManagementPanel.mpas,8267 :: 		if (Confirm_OperaMenuBit = 1) then Glcd_Write_Char('+', 114, Row6,Black) else Glcd_Write_Char('x', 114, Row6,Black);
0x34DE	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0x34E0	0xA67010  	BTSS	[W0], BitPos(_Confirm_OperaMenuBit+0)
0x34E2	0x370006  	BRA	L__Password_Settings3725
0x34E4	0xB3C01D  	MOV.B	#1, W13
0x34E6	0xB3C05C  	MOV.B	#5, W12
0x34E8	0xB3C72B  	MOV.B	#114, W11
0x34EA	0xB3C2BA  	MOV.B	#43, W10
0x34EC	0x07F443  	RCALL	_Glcd_Write_Char
0x34EE	0x370005  	BRA	L__Password_Settings3726
L__Password_Settings3725:
0x34F0	0xB3C01D  	MOV.B	#1, W13
0x34F2	0xB3C05C  	MOV.B	#5, W12
0x34F4	0xB3C72B  	MOV.B	#114, W11
0x34F6	0xB3C78A  	MOV.B	#120, W10
0x34F8	0x07F43D  	RCALL	_Glcd_Write_Char
L__Password_Settings3726:
;GRR3000LManagementPanel.mpas,8268 :: 		if (Confirm_LeakaMenuBit = 1) then Glcd_Write_Char('+', 114, Row7,Black) else Glcd_Write_Char('x', 114, Row7,Black);
0x34FA	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0x34FC	0xA61010  	BTSS	[W0], BitPos(_Confirm_LeakaMenuBit+0)
0x34FE	0x370006  	BRA	L__Password_Settings3728
0x3500	0xB3C01D  	MOV.B	#1, W13
0x3502	0xB3C06C  	MOV.B	#6, W12
0x3504	0xB3C72B  	MOV.B	#114, W11
0x3506	0xB3C2BA  	MOV.B	#43, W10
0x3508	0x07F435  	RCALL	_Glcd_Write_Char
0x350A	0x370005  	BRA	L__Password_Settings3729
L__Password_Settings3728:
0x350C	0xB3C01D  	MOV.B	#1, W13
0x350E	0xB3C06C  	MOV.B	#6, W12
0x3510	0xB3C72B  	MOV.B	#114, W11
0x3512	0xB3C78A  	MOV.B	#120, W10
0x3514	0x07F42F  	RCALL	_Glcd_Write_Char
L__Password_Settings3729:
;GRR3000LManagementPanel.mpas,8269 :: 		if (Confirm_TempeMenuBit = 1) then Glcd_Write_Char('+', 114, Row8,Black) else Glcd_Write_Char('x', 114, Row8,Black);
0x3516	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0x3518	0xA63010  	BTSS	[W0], BitPos(_Confirm_TempeMenuBit+0)
0x351A	0x370006  	BRA	L__Password_Settings3731
0x351C	0xB3C01D  	MOV.B	#1, W13
0x351E	0xB3C07C  	MOV.B	#7, W12
0x3520	0xB3C72B  	MOV.B	#114, W11
0x3522	0xB3C2BA  	MOV.B	#43, W10
0x3524	0x07F427  	RCALL	_Glcd_Write_Char
0x3526	0x370005  	BRA	L__Password_Settings3732
L__Password_Settings3731:
0x3528	0xB3C01D  	MOV.B	#1, W13
0x352A	0xB3C07C  	MOV.B	#7, W12
0x352C	0xB3C72B  	MOV.B	#114, W11
0x352E	0xB3C78A  	MOV.B	#120, W10
0x3530	0x07F421  	RCALL	_Glcd_Write_Char
L__Password_Settings3732:
;GRR3000LManagementPanel.mpas,8271 :: 		end;
L__Password_Settings3713:
;GRR3000LManagementPanel.mpas,8274 :: 		end else
0x3532	0x37003D  	BRA	L__Password_Settings3711
L__Password_Settings3710:
;GRR3000LManagementPanel.mpas,8275 :: 		if (MenuSayac >= 8) then
0x3534	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3536	0x784010  	MOV.B	[W0], W0
0x3538	0xE10468  	CP.B	W0, #8
0x353A	0x350039  	BRA LT	L__Password_Settings3734
L__Password_Settings5584:
;GRR3000LManagementPanel.mpas,8277 :: 		if (Chng[11] =1) then
0x353C	0x212560  	MOV	#lo_addr(_Chng+10), W0
0x353E	0x784010  	MOV.B	[W0], W0
0x3540	0xE10461  	CP.B	W0, #1
0x3542	0x3A0035  	BRA NZ	L__Password_Settings3737
L__Password_Settings5585:
;GRR3000LManagementPanel.mpas,8279 :: 		Chng[11] := 2;
0x3544	0x212561  	MOV	#lo_addr(_Chng+10), W1
0x3546	0xB3C020  	MOV.B	#2, W0
0x3548	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8286 :: 		Glcd_Fill(0x00);
0x354A	0xEF2014  	CLR	W10
0x354C	0x0731BF  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8289 :: 		Glcd_Write_Text(Title_AuthMenu2     , 0, Row1, Black);
0x354E	0xB3C01D  	MOV.B	#1, W13
0x3550	0xEF2018  	CLR	W12
0x3552	0xEF2016  	CLR	W11
0x3554	0x21709A  	MOV	#lo_addr(_Title_AuthMenu2), W10
0x3556	0x071119  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8290 :: 		Glcd_Write_Text(SubTitle_Pswclock   , 6, Row2, Black);
0x3558	0xB3C01D  	MOV.B	#1, W13
0x355A	0xB3C01C  	MOV.B	#1, W12
0x355C	0xB3C06B  	MOV.B	#6, W11
0x355E	0x21730A  	MOV	#lo_addr(_SubTitle_Pswclock), W10
0x3560	0x071114  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8291 :: 		Glcd_Write_Text(SubTitle_Pswmodbus  , 6, Row3, Black);
0x3562	0xB3C01D  	MOV.B	#1, W13
0x3564	0xB3C02C  	MOV.B	#2, W12
0x3566	0xB3C06B  	MOV.B	#6, W11
0x3568	0x2171EA  	MOV	#lo_addr(_SubTitle_Pswmodbus), W10
0x356A	0x07110F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8292 :: 		Glcd_Write_Text(SubTitle_Back       , 6, Row4, Black);
0x356C	0xB3C01D  	MOV.B	#1, W13
0x356E	0xB3C03C  	MOV.B	#3, W12
0x3570	0xB3C06B  	MOV.B	#6, W11
0x3572	0x21454A  	MOV	#lo_addr(_SubTitle_Back), W10
0x3574	0x07110A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8294 :: 		if (Confirm_ClockMenuBit = 1) then Glcd_Write_Char('+', 114, Row2,Black) else Glcd_Write_Char('x', 114, Row2,Black);
0x3576	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0x3578	0xA65010  	BTSS	[W0], BitPos(_Confirm_ClockMenuBit+0)
0x357A	0x370006  	BRA	L__Password_Settings3740
0x357C	0xB3C01D  	MOV.B	#1, W13
0x357E	0xB3C01C  	MOV.B	#1, W12
0x3580	0xB3C72B  	MOV.B	#114, W11
0x3582	0xB3C2BA  	MOV.B	#43, W10
0x3584	0x07F3F7  	RCALL	_Glcd_Write_Char
0x3586	0x370005  	BRA	L__Password_Settings3741
L__Password_Settings3740:
0x3588	0xB3C01D  	MOV.B	#1, W13
0x358A	0xB3C01C  	MOV.B	#1, W12
0x358C	0xB3C72B  	MOV.B	#114, W11
0x358E	0xB3C78A  	MOV.B	#120, W10
0x3590	0x07F3F1  	RCALL	_Glcd_Write_Char
L__Password_Settings3741:
;GRR3000LManagementPanel.mpas,8295 :: 		if (Confirm_ModbusMenuBit = 1) then Glcd_Write_Char('+', 114, Row3,Black) else Glcd_Write_Char('x', 114, Row3,Black);
0x3592	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0x3594	0xA64010  	BTSS	[W0], BitPos(_Confirm_ModbusMenuBit+0)
0x3596	0x370006  	BRA	L__Password_Settings3743
0x3598	0xB3C01D  	MOV.B	#1, W13
0x359A	0xB3C02C  	MOV.B	#2, W12
0x359C	0xB3C72B  	MOV.B	#114, W11
0x359E	0xB3C2BA  	MOV.B	#43, W10
0x35A0	0x07F3E9  	RCALL	_Glcd_Write_Char
0x35A2	0x370005  	BRA	L__Password_Settings3744
L__Password_Settings3743:
0x35A4	0xB3C01D  	MOV.B	#1, W13
0x35A6	0xB3C02C  	MOV.B	#2, W12
0x35A8	0xB3C72B  	MOV.B	#114, W11
0x35AA	0xB3C78A  	MOV.B	#120, W10
0x35AC	0x07F3E3  	RCALL	_Glcd_Write_Char
L__Password_Settings3744:
;GRR3000LManagementPanel.mpas,8297 :: 		end;
L__Password_Settings3737:
;GRR3000LManagementPanel.mpas,8299 :: 		end;
L__Password_Settings3734:
L__Password_Settings3711:
;GRR3000LManagementPanel.mpas,8302 :: 		1: begin // þifre deðiþtirme
0x35AE	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x35B0	0x784010  	MOV.B	[W0], W0
0x35B2	0xE10461  	CP.B	W0, #1
0x35B4	0x3A000C  	BRA NZ	L__Password_Settings3748
L__Password_Settings5586:
;GRR3000LManagementPanel.mpas,8303 :: 		if (Ok_Button =0) then
0x35B6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x35B8	0x370009  	BRA	L__Password_Settings3750
;GRR3000LManagementPanel.mpas,8305 :: 		while (Ok_Button =0) do
L__Password_Settings3753:
0x35BA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x35BC	0x370002  	BRA	L__Password_Settings3754
;GRR3000LManagementPanel.mpas,8307 :: 		asm ClrWDT; end;
0x35BE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8308 :: 		end;
0x35C0	0x37FFFC  	BRA	L__Password_Settings3753
L__Password_Settings3754:
;GRR3000LManagementPanel.mpas,8311 :: 		Password_Entry_Screen(0);
0x35C2	0xEF2014  	CLR	W10
0x35C4	0x07EF23  	RCALL	_Password_Entry_Screen
;GRR3000LManagementPanel.mpas,8312 :: 		Chng[11] := 2; // ekraný yeniden yükle
0x35C6	0x212561  	MOV	#lo_addr(_Chng+10), W1
0x35C8	0xB3C020  	MOV.B	#2, W0
0x35CA	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8314 :: 		end;
L__Password_Settings3750:
;GRR3000LManagementPanel.mpas,8315 :: 		end;
0x35CC	0x370336  	BRA	L__Password_Settings3745
L__Password_Settings3748:
;GRR3000LManagementPanel.mpas,8317 :: 		2: begin
0x35CE	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x35D0	0x784010  	MOV.B	[W0], W0
0x35D2	0xE10462  	CP.B	W0, #2
0x35D4	0x3A0061  	BRA NZ	L__Password_Settings3759
L__Password_Settings5587:
;GRR3000LManagementPanel.mpas,8321 :: 		if (Ok_Button =0) then
0x35D6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x35D8	0x37005E  	BRA	L__Password_Settings3761
;GRR3000LManagementPanel.mpas,8323 :: 		while (Ok_Button =0) do
L__Password_Settings3764:
0x35DA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x35DC	0x370002  	BRA	L__Password_Settings3765
;GRR3000LManagementPanel.mpas,8325 :: 		asm ClrWDT; end;
0x35DE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8326 :: 		end;
0x35E0	0x37FFFC  	BRA	L__Password_Settings3764
L__Password_Settings3765:
;GRR3000LManagementPanel.mpas,8329 :: 		Chng[1] := 1;
0x35E2	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x35E4	0xB3C010  	MOV.B	#1, W0
0x35E6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8331 :: 		While (Chng[1] =1) do
L__Password_Settings3769:
0x35E8	0x2124C0  	MOV	#lo_addr(_Chng), W0
0x35EA	0x784010  	MOV.B	[W0], W0
0x35EC	0xE10461  	CP.B	W0, #1
0x35EE	0x3A0053  	BRA NZ	L__Password_Settings3770
L__Password_Settings5588:
;GRR3000LManagementPanel.mpas,8333 :: 		asm ClrWDT; end;
0x35F0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8335 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x35F2	0xA90004  	BCLR	W2, #0
0x35F4	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x35F6	0xA80004  	BSET	W2, #0
0x35F8	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x35FA	0xA80042  	BSET	SR, #0
0x35FC	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x35FE	0xA90042  	BCLR	SR, #0
0x3600	0xAE0004  	BTSS	W2, #0
0x3602	0xAF0042  	BTSC	SR, #0
0x3604	0x370002  	BRA	L__Password_Settings5589
0x3606	0xA90004  	BCLR	W2, #0
0x3608	0x370001  	BRA	L__Password_Settings5592
L__Password_Settings5589:
0x360A	0xA80004  	BSET	W2, #0
L__Password_Settings5592:
0x360C	0xAE0004  	BTSS	W2, #0
0x360E	0x370014  	BRA	L__Password_Settings3774
;GRR3000LManagementPanel.mpas,8337 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3777:
0x3610	0xA90004  	BCLR	W2, #0
0x3612	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3614	0xA80004  	BSET	W2, #0
0x3616	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3618	0xA80042  	BSET	SR, #0
0x361A	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x361C	0xA90042  	BCLR	SR, #0
0x361E	0xAE0004  	BTSS	W2, #0
0x3620	0xAF0042  	BTSC	SR, #0
0x3622	0x370002  	BRA	L__Password_Settings5593
0x3624	0xA90004  	BCLR	W2, #0
0x3626	0x370001  	BRA	L__Password_Settings5596
L__Password_Settings5593:
0x3628	0xA80004  	BSET	W2, #0
L__Password_Settings5596:
0x362A	0xAE0004  	BTSS	W2, #0
0x362C	0x370002  	BRA	L__Password_Settings3778
;GRR3000LManagementPanel.mpas,8339 :: 		asm ClrWDT; end;
0x362E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8340 :: 		end;
0x3630	0x37FFEF  	BRA	L__Password_Settings3777
L__Password_Settings3778:
;GRR3000LManagementPanel.mpas,8342 :: 		Confirm_AcMenuBit := not Confirm_AcMenuBit;
0x3632	0x212A41  	MOV	#lo_addr(_Confirm_AcMenuBit), W1
0x3634	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0x3636	0xA29010  	BTG	[W0], BitPos(_Confirm_AcMenuBit+0)
;GRR3000LManagementPanel.mpas,8344 :: 		end;
L__Password_Settings3774:
;GRR3000LManagementPanel.mpas,8346 :: 		if (Confirm_AcMenuBit = 1) then Glcd_Write_Char('+', 114, Row3, White) else Glcd_Write_Char('x', 114, Row3, White);
0x3638	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0x363A	0xA69010  	BTSS	[W0], BitPos(_Confirm_AcMenuBit+0)
0x363C	0x370006  	BRA	L__Password_Settings3782
0x363E	0xEF201A  	CLR	W13
0x3640	0xB3C02C  	MOV.B	#2, W12
0x3642	0xB3C72B  	MOV.B	#114, W11
0x3644	0xB3C2BA  	MOV.B	#43, W10
0x3646	0x07F396  	RCALL	_Glcd_Write_Char
0x3648	0x370005  	BRA	L__Password_Settings3783
L__Password_Settings3782:
0x364A	0xEF201A  	CLR	W13
0x364C	0xB3C02C  	MOV.B	#2, W12
0x364E	0xB3C72B  	MOV.B	#114, W11
0x3650	0xB3C78A  	MOV.B	#120, W10
0x3652	0x07F390  	RCALL	_Glcd_Write_Char
L__Password_Settings3783:
;GRR3000LManagementPanel.mpas,8348 :: 		if (Ok_Button =0) then
0x3654	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3656	0x37001E  	BRA	L__Password_Settings3785
;GRR3000LManagementPanel.mpas,8350 :: 		while (Ok_Button =0) do
L__Password_Settings3788:
0x3658	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x365A	0x370002  	BRA	L__Password_Settings3789
;GRR3000LManagementPanel.mpas,8352 :: 		asm ClrWDT; end;
0x365C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8353 :: 		end;
0x365E	0x37FFFC  	BRA	L__Password_Settings3788
L__Password_Settings3789:
;GRR3000LManagementPanel.mpas,8355 :: 		EEPROM_Write(EE_ConfirmAcMenuEeAddr, Confirm_AcMenuBit);
0x3660	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0x3662	0xEF2018  	CLR	W12
0x3664	0xA79010  	BTSC	[W0], BitPos(_Confirm_AcMenuBit+0)
0x3666	0xEC2018  	INC	W12
0x3668	0x2F05EA  	MOV	#61534, W10
0x366A	0x2007FB  	MOV	#127, W11
0x366C	0x07EE94  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8356 :: 		while(WR_bit) do begin end;
L__Password_Settings3793:
0x366E	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3670	0x37FFFE  	BRA	L__Password_Settings3793
;GRR3000LManagementPanel.mpas,8357 :: 		Chng[1] := 0;
0x3672	0x2124C1  	MOV	#lo_addr(_Chng), W1
0x3674	0xEF2000  	CLR	W0
0x3676	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8358 :: 		if (Confirm_AcMenuBit = 1) then Glcd_Write_Char('+', 114, Row3, Black) else Glcd_Write_Char('x', 114, Row3, Black);
0x3678	0x212A40  	MOV	#lo_addr(_Confirm_AcMenuBit), W0
0x367A	0xA69010  	BTSS	[W0], BitPos(_Confirm_AcMenuBit+0)
0x367C	0x370006  	BRA	L__Password_Settings3798
0x367E	0xB3C01D  	MOV.B	#1, W13
0x3680	0xB3C02C  	MOV.B	#2, W12
0x3682	0xB3C72B  	MOV.B	#114, W11
0x3684	0xB3C2BA  	MOV.B	#43, W10
0x3686	0x07F376  	RCALL	_Glcd_Write_Char
0x3688	0x370005  	BRA	L__Password_Settings3799
L__Password_Settings3798:
0x368A	0xB3C01D  	MOV.B	#1, W13
0x368C	0xB3C02C  	MOV.B	#2, W12
0x368E	0xB3C72B  	MOV.B	#114, W11
0x3690	0xB3C78A  	MOV.B	#120, W10
0x3692	0x07F370  	RCALL	_Glcd_Write_Char
L__Password_Settings3799:
;GRR3000LManagementPanel.mpas,8360 :: 		end;
L__Password_Settings3785:
;GRR3000LManagementPanel.mpas,8364 :: 		end;
0x3694	0x37FFA9  	BRA	L__Password_Settings3769
L__Password_Settings3770:
;GRR3000LManagementPanel.mpas,8365 :: 		end;
L__Password_Settings3761:
;GRR3000LManagementPanel.mpas,8366 :: 		end;
0x3696	0x3702D1  	BRA	L__Password_Settings3745
L__Password_Settings3759:
;GRR3000LManagementPanel.mpas,8369 :: 		3: begin // dc set menu
0x3698	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x369A	0x784010  	MOV.B	[W0], W0
0x369C	0xE10463  	CP.B	W0, #3
0x369E	0x3A0061  	BRA NZ	L__Password_Settings3802
L__Password_Settings5597:
;GRR3000LManagementPanel.mpas,8371 :: 		if (Ok_Button =0) then
0x36A0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x36A2	0x37005E  	BRA	L__Password_Settings3804
;GRR3000LManagementPanel.mpas,8373 :: 		while (Ok_Button =0) do
L__Password_Settings3807:
0x36A4	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x36A6	0x370002  	BRA	L__Password_Settings3808
;GRR3000LManagementPanel.mpas,8375 :: 		asm ClrWDT; end;
0x36A8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8376 :: 		end;
0x36AA	0x37FFFC  	BRA	L__Password_Settings3807
L__Password_Settings3808:
;GRR3000LManagementPanel.mpas,8379 :: 		Chng[2] := 1;
0x36AC	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x36AE	0xB3C010  	MOV.B	#1, W0
0x36B0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8381 :: 		While (Chng[2] =1) do
L__Password_Settings3812:
0x36B2	0x2124D0  	MOV	#lo_addr(_Chng+1), W0
0x36B4	0x784010  	MOV.B	[W0], W0
0x36B6	0xE10461  	CP.B	W0, #1
0x36B8	0x3A0053  	BRA NZ	L__Password_Settings3813
L__Password_Settings5598:
;GRR3000LManagementPanel.mpas,8383 :: 		asm ClrWDT; end;
0x36BA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8385 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x36BC	0xA90004  	BCLR	W2, #0
0x36BE	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x36C0	0xA80004  	BSET	W2, #0
0x36C2	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x36C4	0xA80042  	BSET	SR, #0
0x36C6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x36C8	0xA90042  	BCLR	SR, #0
0x36CA	0xAE0004  	BTSS	W2, #0
0x36CC	0xAF0042  	BTSC	SR, #0
0x36CE	0x370002  	BRA	L__Password_Settings5599
0x36D0	0xA90004  	BCLR	W2, #0
0x36D2	0x370001  	BRA	L__Password_Settings5602
L__Password_Settings5599:
0x36D4	0xA80004  	BSET	W2, #0
L__Password_Settings5602:
0x36D6	0xAE0004  	BTSS	W2, #0
0x36D8	0x370014  	BRA	L__Password_Settings3817
;GRR3000LManagementPanel.mpas,8387 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3820:
0x36DA	0xA90004  	BCLR	W2, #0
0x36DC	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x36DE	0xA80004  	BSET	W2, #0
0x36E0	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x36E2	0xA80042  	BSET	SR, #0
0x36E4	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x36E6	0xA90042  	BCLR	SR, #0
0x36E8	0xAE0004  	BTSS	W2, #0
0x36EA	0xAF0042  	BTSC	SR, #0
0x36EC	0x370002  	BRA	L__Password_Settings5603
0x36EE	0xA90004  	BCLR	W2, #0
0x36F0	0x370001  	BRA	L__Password_Settings5606
L__Password_Settings5603:
0x36F2	0xA80004  	BSET	W2, #0
L__Password_Settings5606:
0x36F4	0xAE0004  	BTSS	W2, #0
0x36F6	0x370002  	BRA	L__Password_Settings3821
;GRR3000LManagementPanel.mpas,8389 :: 		asm ClrWDT; end;
0x36F8	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8390 :: 		end;
0x36FA	0x37FFEF  	BRA	L__Password_Settings3820
L__Password_Settings3821:
;GRR3000LManagementPanel.mpas,8392 :: 		Confirm_DcMenuBit := not Confirm_DcMenuBit;
0x36FC	0x212A41  	MOV	#lo_addr(_Confirm_DcMenuBit), W1
0x36FE	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0x3700	0xA28010  	BTG	[W0], BitPos(_Confirm_DcMenuBit+0)
;GRR3000LManagementPanel.mpas,8394 :: 		end;
L__Password_Settings3817:
;GRR3000LManagementPanel.mpas,8396 :: 		if (Confirm_DcMenuBit = 1) then Glcd_Write_Char('+', 114, Row4, White) else Glcd_Write_Char('x', 114, Row4, White);
0x3702	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0x3704	0xA68010  	BTSS	[W0], BitPos(_Confirm_DcMenuBit+0)
0x3706	0x370006  	BRA	L__Password_Settings3825
0x3708	0xEF201A  	CLR	W13
0x370A	0xB3C03C  	MOV.B	#3, W12
0x370C	0xB3C72B  	MOV.B	#114, W11
0x370E	0xB3C2BA  	MOV.B	#43, W10
0x3710	0x07F331  	RCALL	_Glcd_Write_Char
0x3712	0x370005  	BRA	L__Password_Settings3826
L__Password_Settings3825:
0x3714	0xEF201A  	CLR	W13
0x3716	0xB3C03C  	MOV.B	#3, W12
0x3718	0xB3C72B  	MOV.B	#114, W11
0x371A	0xB3C78A  	MOV.B	#120, W10
0x371C	0x07F32B  	RCALL	_Glcd_Write_Char
L__Password_Settings3826:
;GRR3000LManagementPanel.mpas,8398 :: 		if (Ok_Button =0) then
0x371E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3720	0x37001E  	BRA	L__Password_Settings3828
;GRR3000LManagementPanel.mpas,8400 :: 		while (Ok_Button =0) do
L__Password_Settings3831:
0x3722	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3724	0x370002  	BRA	L__Password_Settings3832
;GRR3000LManagementPanel.mpas,8402 :: 		asm ClrWDT; end;
0x3726	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8403 :: 		end;
0x3728	0x37FFFC  	BRA	L__Password_Settings3831
L__Password_Settings3832:
;GRR3000LManagementPanel.mpas,8405 :: 		EEPROM_Write(EE_ConfirmDcMenuEeAddr, Confirm_DcMenuBit);
0x372A	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0x372C	0xEF2018  	CLR	W12
0x372E	0xA78010  	BTSC	[W0], BitPos(_Confirm_DcMenuBit+0)
0x3730	0xEC2018  	INC	W12
0x3732	0x2F060A  	MOV	#61536, W10
0x3734	0x2007FB  	MOV	#127, W11
0x3736	0x07EE2F  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8406 :: 		while(WR_bit) do begin end;
L__Password_Settings3836:
0x3738	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x373A	0x37FFFE  	BRA	L__Password_Settings3836
;GRR3000LManagementPanel.mpas,8407 :: 		Chng[2] := 0;
0x373C	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0x373E	0xEF2000  	CLR	W0
0x3740	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8408 :: 		if (Confirm_DcMenuBit = 1) then Glcd_Write_Char('+', 114, Row4, Black) else Glcd_Write_Char('x', 114, Row4, Black);
0x3742	0x212A40  	MOV	#lo_addr(_Confirm_DcMenuBit), W0
0x3744	0xA68010  	BTSS	[W0], BitPos(_Confirm_DcMenuBit+0)
0x3746	0x370006  	BRA	L__Password_Settings3841
0x3748	0xB3C01D  	MOV.B	#1, W13
0x374A	0xB3C03C  	MOV.B	#3, W12
0x374C	0xB3C72B  	MOV.B	#114, W11
0x374E	0xB3C2BA  	MOV.B	#43, W10
0x3750	0x07F311  	RCALL	_Glcd_Write_Char
0x3752	0x370005  	BRA	L__Password_Settings3842
L__Password_Settings3841:
0x3754	0xB3C01D  	MOV.B	#1, W13
0x3756	0xB3C03C  	MOV.B	#3, W12
0x3758	0xB3C72B  	MOV.B	#114, W11
0x375A	0xB3C78A  	MOV.B	#120, W10
0x375C	0x07F30B  	RCALL	_Glcd_Write_Char
L__Password_Settings3842:
;GRR3000LManagementPanel.mpas,8410 :: 		end;
L__Password_Settings3828:
;GRR3000LManagementPanel.mpas,8414 :: 		end;
0x375E	0x37FFA9  	BRA	L__Password_Settings3812
L__Password_Settings3813:
;GRR3000LManagementPanel.mpas,8415 :: 		end;
L__Password_Settings3804:
;GRR3000LManagementPanel.mpas,8416 :: 		end;
0x3760	0x37026C  	BRA	L__Password_Settings3745
L__Password_Settings3802:
;GRR3000LManagementPanel.mpas,8418 :: 		4: begin // akü set menu
0x3762	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3764	0x784010  	MOV.B	[W0], W0
0x3766	0xE10464  	CP.B	W0, #4
0x3768	0x3A0061  	BRA NZ	L__Password_Settings3845
L__Password_Settings5607:
;GRR3000LManagementPanel.mpas,8420 :: 		if (Ok_Button =0) then
0x376A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x376C	0x37005E  	BRA	L__Password_Settings3847
;GRR3000LManagementPanel.mpas,8422 :: 		while (Ok_Button =0) do
L__Password_Settings3850:
0x376E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3770	0x370002  	BRA	L__Password_Settings3851
;GRR3000LManagementPanel.mpas,8424 :: 		asm ClrWDT; end;
0x3772	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8425 :: 		end;
0x3774	0x37FFFC  	BRA	L__Password_Settings3850
L__Password_Settings3851:
;GRR3000LManagementPanel.mpas,8428 :: 		Chng[3] := 1;
0x3776	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x3778	0xB3C010  	MOV.B	#1, W0
0x377A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8430 :: 		While (Chng[3] =1) do
L__Password_Settings3855:
0x377C	0x2124E0  	MOV	#lo_addr(_Chng+2), W0
0x377E	0x784010  	MOV.B	[W0], W0
0x3780	0xE10461  	CP.B	W0, #1
0x3782	0x3A0053  	BRA NZ	L__Password_Settings3856
L__Password_Settings5608:
;GRR3000LManagementPanel.mpas,8432 :: 		asm ClrWDT; end;
0x3784	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8434 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x3786	0xA90004  	BCLR	W2, #0
0x3788	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x378A	0xA80004  	BSET	W2, #0
0x378C	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x378E	0xA80042  	BSET	SR, #0
0x3790	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3792	0xA90042  	BCLR	SR, #0
0x3794	0xAE0004  	BTSS	W2, #0
0x3796	0xAF0042  	BTSC	SR, #0
0x3798	0x370002  	BRA	L__Password_Settings5609
0x379A	0xA90004  	BCLR	W2, #0
0x379C	0x370001  	BRA	L__Password_Settings5612
L__Password_Settings5609:
0x379E	0xA80004  	BSET	W2, #0
L__Password_Settings5612:
0x37A0	0xAE0004  	BTSS	W2, #0
0x37A2	0x370014  	BRA	L__Password_Settings3860
;GRR3000LManagementPanel.mpas,8436 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3863:
0x37A4	0xA90004  	BCLR	W2, #0
0x37A6	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x37A8	0xA80004  	BSET	W2, #0
0x37AA	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x37AC	0xA80042  	BSET	SR, #0
0x37AE	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x37B0	0xA90042  	BCLR	SR, #0
0x37B2	0xAE0004  	BTSS	W2, #0
0x37B4	0xAF0042  	BTSC	SR, #0
0x37B6	0x370002  	BRA	L__Password_Settings5613
0x37B8	0xA90004  	BCLR	W2, #0
0x37BA	0x370001  	BRA	L__Password_Settings5616
L__Password_Settings5613:
0x37BC	0xA80004  	BSET	W2, #0
L__Password_Settings5616:
0x37BE	0xAE0004  	BTSS	W2, #0
0x37C0	0x370002  	BRA	L__Password_Settings3864
;GRR3000LManagementPanel.mpas,8438 :: 		asm ClrWDT; end;
0x37C2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8439 :: 		end;
0x37C4	0x37FFEF  	BRA	L__Password_Settings3863
L__Password_Settings3864:
;GRR3000LManagementPanel.mpas,8441 :: 		Confirm_BattMenuBit := not Confirm_BattMenuBit;
0x37C6	0x212A41  	MOV	#lo_addr(_Confirm_BattMenuBit), W1
0x37C8	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0x37CA	0xA22010  	BTG	[W0], BitPos(_Confirm_BattMenuBit+0)
;GRR3000LManagementPanel.mpas,8443 :: 		end;
L__Password_Settings3860:
;GRR3000LManagementPanel.mpas,8445 :: 		if (Confirm_BattMenuBit = 1) then Glcd_Write_Char('+', 114, Row5, White) else Glcd_Write_Char('x', 114, Row5, White);
0x37CC	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0x37CE	0xA62010  	BTSS	[W0], BitPos(_Confirm_BattMenuBit+0)
0x37D0	0x370006  	BRA	L__Password_Settings3868
0x37D2	0xEF201A  	CLR	W13
0x37D4	0xB3C04C  	MOV.B	#4, W12
0x37D6	0xB3C72B  	MOV.B	#114, W11
0x37D8	0xB3C2BA  	MOV.B	#43, W10
0x37DA	0x07F2CC  	RCALL	_Glcd_Write_Char
0x37DC	0x370005  	BRA	L__Password_Settings3869
L__Password_Settings3868:
0x37DE	0xEF201A  	CLR	W13
0x37E0	0xB3C04C  	MOV.B	#4, W12
0x37E2	0xB3C72B  	MOV.B	#114, W11
0x37E4	0xB3C78A  	MOV.B	#120, W10
0x37E6	0x07F2C6  	RCALL	_Glcd_Write_Char
L__Password_Settings3869:
;GRR3000LManagementPanel.mpas,8447 :: 		if (Ok_Button =0) then
0x37E8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x37EA	0x37001E  	BRA	L__Password_Settings3871
;GRR3000LManagementPanel.mpas,8449 :: 		while (Ok_Button =0) do
L__Password_Settings3874:
0x37EC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x37EE	0x370002  	BRA	L__Password_Settings3875
;GRR3000LManagementPanel.mpas,8451 :: 		asm ClrWDT; end;
0x37F0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8452 :: 		end;
0x37F2	0x37FFFC  	BRA	L__Password_Settings3874
L__Password_Settings3875:
;GRR3000LManagementPanel.mpas,8454 :: 		EEPROM_Write(EE_ConfirmBattMenuEeAddr, Confirm_BattMenuBit);
0x37F4	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0x37F6	0xEF2018  	CLR	W12
0x37F8	0xA72010  	BTSC	[W0], BitPos(_Confirm_BattMenuBit+0)
0x37FA	0xEC2018  	INC	W12
0x37FC	0x2F062A  	MOV	#61538, W10
0x37FE	0x2007FB  	MOV	#127, W11
0x3800	0x07EDCA  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8455 :: 		while(WR_bit) do begin end;
L__Password_Settings3879:
0x3802	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3804	0x37FFFE  	BRA	L__Password_Settings3879
;GRR3000LManagementPanel.mpas,8456 :: 		Chng[3] := 0;
0x3806	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0x3808	0xEF2000  	CLR	W0
0x380A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8457 :: 		if (Confirm_BattMenuBit = 1) then Glcd_Write_Char('+', 114, Row5, Black) else Glcd_Write_Char('x', 114, Row5, Black);
0x380C	0x212A40  	MOV	#lo_addr(_Confirm_BattMenuBit), W0
0x380E	0xA62010  	BTSS	[W0], BitPos(_Confirm_BattMenuBit+0)
0x3810	0x370006  	BRA	L__Password_Settings3884
0x3812	0xB3C01D  	MOV.B	#1, W13
0x3814	0xB3C04C  	MOV.B	#4, W12
0x3816	0xB3C72B  	MOV.B	#114, W11
0x3818	0xB3C2BA  	MOV.B	#43, W10
0x381A	0x07F2AC  	RCALL	_Glcd_Write_Char
0x381C	0x370005  	BRA	L__Password_Settings3885
L__Password_Settings3884:
0x381E	0xB3C01D  	MOV.B	#1, W13
0x3820	0xB3C04C  	MOV.B	#4, W12
0x3822	0xB3C72B  	MOV.B	#114, W11
0x3824	0xB3C78A  	MOV.B	#120, W10
0x3826	0x07F2A6  	RCALL	_Glcd_Write_Char
L__Password_Settings3885:
;GRR3000LManagementPanel.mpas,8459 :: 		end;
L__Password_Settings3871:
;GRR3000LManagementPanel.mpas,8463 :: 		end;
0x3828	0x37FFA9  	BRA	L__Password_Settings3855
L__Password_Settings3856:
;GRR3000LManagementPanel.mpas,8464 :: 		end;
L__Password_Settings3847:
;GRR3000LManagementPanel.mpas,8465 :: 		end;
0x382A	0x370207  	BRA	L__Password_Settings3745
L__Password_Settings3845:
;GRR3000LManagementPanel.mpas,8467 :: 		5: begin // çalýþma modu menu
0x382C	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x382E	0x784010  	MOV.B	[W0], W0
0x3830	0xE10465  	CP.B	W0, #5
0x3832	0x3A0061  	BRA NZ	L__Password_Settings3888
L__Password_Settings5617:
;GRR3000LManagementPanel.mpas,8469 :: 		if (Ok_Button =0) then
0x3834	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3836	0x37005E  	BRA	L__Password_Settings3890
;GRR3000LManagementPanel.mpas,8471 :: 		while (Ok_Button =0) do
L__Password_Settings3893:
0x3838	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x383A	0x370002  	BRA	L__Password_Settings3894
;GRR3000LManagementPanel.mpas,8473 :: 		asm ClrWDT; end;
0x383C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8474 :: 		end;
0x383E	0x37FFFC  	BRA	L__Password_Settings3893
L__Password_Settings3894:
;GRR3000LManagementPanel.mpas,8477 :: 		Chng[4] := 1;
0x3840	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0x3842	0xB3C010  	MOV.B	#1, W0
0x3844	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8479 :: 		While (Chng[4] =1) do
L__Password_Settings3898:
0x3846	0x2124F0  	MOV	#lo_addr(_Chng+3), W0
0x3848	0x784010  	MOV.B	[W0], W0
0x384A	0xE10461  	CP.B	W0, #1
0x384C	0x3A0053  	BRA NZ	L__Password_Settings3899
L__Password_Settings5618:
;GRR3000LManagementPanel.mpas,8481 :: 		asm ClrWDT; end;
0x384E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8483 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x3850	0xA90004  	BCLR	W2, #0
0x3852	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3854	0xA80004  	BSET	W2, #0
0x3856	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3858	0xA80042  	BSET	SR, #0
0x385A	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x385C	0xA90042  	BCLR	SR, #0
0x385E	0xAE0004  	BTSS	W2, #0
0x3860	0xAF0042  	BTSC	SR, #0
0x3862	0x370002  	BRA	L__Password_Settings5619
0x3864	0xA90004  	BCLR	W2, #0
0x3866	0x370001  	BRA	L__Password_Settings5622
L__Password_Settings5619:
0x3868	0xA80004  	BSET	W2, #0
L__Password_Settings5622:
0x386A	0xAE0004  	BTSS	W2, #0
0x386C	0x370014  	BRA	L__Password_Settings3903
;GRR3000LManagementPanel.mpas,8485 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3906:
0x386E	0xA90004  	BCLR	W2, #0
0x3870	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3872	0xA80004  	BSET	W2, #0
0x3874	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3876	0xA80042  	BSET	SR, #0
0x3878	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x387A	0xA90042  	BCLR	SR, #0
0x387C	0xAE0004  	BTSS	W2, #0
0x387E	0xAF0042  	BTSC	SR, #0
0x3880	0x370002  	BRA	L__Password_Settings5623
0x3882	0xA90004  	BCLR	W2, #0
0x3884	0x370001  	BRA	L__Password_Settings5626
L__Password_Settings5623:
0x3886	0xA80004  	BSET	W2, #0
L__Password_Settings5626:
0x3888	0xAE0004  	BTSS	W2, #0
0x388A	0x370002  	BRA	L__Password_Settings3907
;GRR3000LManagementPanel.mpas,8487 :: 		asm ClrWDT; end;
0x388C	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8488 :: 		end;
0x388E	0x37FFEF  	BRA	L__Password_Settings3906
L__Password_Settings3907:
;GRR3000LManagementPanel.mpas,8490 :: 		Confirm_OperaMenuBit := not Confirm_OperaMenuBit;
0x3890	0x212A41  	MOV	#lo_addr(_Confirm_OperaMenuBit), W1
0x3892	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0x3894	0xA27010  	BTG	[W0], BitPos(_Confirm_OperaMenuBit+0)
;GRR3000LManagementPanel.mpas,8492 :: 		end;
L__Password_Settings3903:
;GRR3000LManagementPanel.mpas,8494 :: 		if (Confirm_OperaMenuBit = 1) then Glcd_Write_Char('+', 114, Row6, White) else Glcd_Write_Char('x', 114, Row6, White);
0x3896	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0x3898	0xA67010  	BTSS	[W0], BitPos(_Confirm_OperaMenuBit+0)
0x389A	0x370006  	BRA	L__Password_Settings3911
0x389C	0xEF201A  	CLR	W13
0x389E	0xB3C05C  	MOV.B	#5, W12
0x38A0	0xB3C72B  	MOV.B	#114, W11
0x38A2	0xB3C2BA  	MOV.B	#43, W10
0x38A4	0x07F267  	RCALL	_Glcd_Write_Char
0x38A6	0x370005  	BRA	L__Password_Settings3912
L__Password_Settings3911:
0x38A8	0xEF201A  	CLR	W13
0x38AA	0xB3C05C  	MOV.B	#5, W12
0x38AC	0xB3C72B  	MOV.B	#114, W11
0x38AE	0xB3C78A  	MOV.B	#120, W10
0x38B0	0x07F261  	RCALL	_Glcd_Write_Char
L__Password_Settings3912:
;GRR3000LManagementPanel.mpas,8496 :: 		if (Ok_Button =0) then
0x38B2	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x38B4	0x37001E  	BRA	L__Password_Settings3914
;GRR3000LManagementPanel.mpas,8498 :: 		while (Ok_Button =0) do
L__Password_Settings3917:
0x38B6	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x38B8	0x370002  	BRA	L__Password_Settings3918
;GRR3000LManagementPanel.mpas,8500 :: 		asm ClrWDT; end;
0x38BA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8501 :: 		end;
0x38BC	0x37FFFC  	BRA	L__Password_Settings3917
L__Password_Settings3918:
;GRR3000LManagementPanel.mpas,8503 :: 		EEPROM_Write(EE_ConfirmOperaMenuEeAddr, Confirm_OperaMenuBit);
0x38BE	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0x38C0	0xEF2018  	CLR	W12
0x38C2	0xA77010  	BTSC	[W0], BitPos(_Confirm_OperaMenuBit+0)
0x38C4	0xEC2018  	INC	W12
0x38C6	0x2F064A  	MOV	#61540, W10
0x38C8	0x2007FB  	MOV	#127, W11
0x38CA	0x07ED65  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8504 :: 		while(WR_bit) do begin end;
L__Password_Settings3922:
0x38CC	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x38CE	0x37FFFE  	BRA	L__Password_Settings3922
;GRR3000LManagementPanel.mpas,8505 :: 		Chng[4] := 0;
0x38D0	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0x38D2	0xEF2000  	CLR	W0
0x38D4	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8506 :: 		if (Confirm_OperaMenuBit = 1) then Glcd_Write_Char('+', 114, Row6, Black) else Glcd_Write_Char('x', 114, Row6, Black);
0x38D6	0x212A40  	MOV	#lo_addr(_Confirm_OperaMenuBit), W0
0x38D8	0xA67010  	BTSS	[W0], BitPos(_Confirm_OperaMenuBit+0)
0x38DA	0x370006  	BRA	L__Password_Settings3927
0x38DC	0xB3C01D  	MOV.B	#1, W13
0x38DE	0xB3C05C  	MOV.B	#5, W12
0x38E0	0xB3C72B  	MOV.B	#114, W11
0x38E2	0xB3C2BA  	MOV.B	#43, W10
0x38E4	0x07F247  	RCALL	_Glcd_Write_Char
0x38E6	0x370005  	BRA	L__Password_Settings3928
L__Password_Settings3927:
0x38E8	0xB3C01D  	MOV.B	#1, W13
0x38EA	0xB3C05C  	MOV.B	#5, W12
0x38EC	0xB3C72B  	MOV.B	#114, W11
0x38EE	0xB3C78A  	MOV.B	#120, W10
0x38F0	0x07F241  	RCALL	_Glcd_Write_Char
L__Password_Settings3928:
;GRR3000LManagementPanel.mpas,8508 :: 		end;
L__Password_Settings3914:
;GRR3000LManagementPanel.mpas,8512 :: 		end;
0x38F2	0x37FFA9  	BRA	L__Password_Settings3898
L__Password_Settings3899:
;GRR3000LManagementPanel.mpas,8513 :: 		end;
L__Password_Settings3890:
;GRR3000LManagementPanel.mpas,8514 :: 		end;
0x38F4	0x3701A2  	BRA	L__Password_Settings3745
L__Password_Settings3888:
;GRR3000LManagementPanel.mpas,8516 :: 		6: begin // çalýþma modu menu
0x38F6	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x38F8	0x784010  	MOV.B	[W0], W0
0x38FA	0xE10466  	CP.B	W0, #6
0x38FC	0x3A0061  	BRA NZ	L__Password_Settings3931
L__Password_Settings5627:
;GRR3000LManagementPanel.mpas,8518 :: 		if (Ok_Button =0) then
0x38FE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3900	0x37005E  	BRA	L__Password_Settings3933
;GRR3000LManagementPanel.mpas,8520 :: 		while (Ok_Button =0) do
L__Password_Settings3936:
0x3902	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3904	0x370002  	BRA	L__Password_Settings3937
;GRR3000LManagementPanel.mpas,8522 :: 		asm ClrWDT; end;
0x3906	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8523 :: 		end;
0x3908	0x37FFFC  	BRA	L__Password_Settings3936
L__Password_Settings3937:
;GRR3000LManagementPanel.mpas,8526 :: 		Chng[5] := 1;
0x390A	0x212501  	MOV	#lo_addr(_Chng+4), W1
0x390C	0xB3C010  	MOV.B	#1, W0
0x390E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8528 :: 		While (Chng[5] =1) do
L__Password_Settings3941:
0x3910	0x212500  	MOV	#lo_addr(_Chng+4), W0
0x3912	0x784010  	MOV.B	[W0], W0
0x3914	0xE10461  	CP.B	W0, #1
0x3916	0x3A0053  	BRA NZ	L__Password_Settings3942
L__Password_Settings5628:
;GRR3000LManagementPanel.mpas,8530 :: 		asm ClrWDT; end;
0x3918	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8532 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x391A	0xA90004  	BCLR	W2, #0
0x391C	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x391E	0xA80004  	BSET	W2, #0
0x3920	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3922	0xA80042  	BSET	SR, #0
0x3924	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3926	0xA90042  	BCLR	SR, #0
0x3928	0xAE0004  	BTSS	W2, #0
0x392A	0xAF0042  	BTSC	SR, #0
0x392C	0x370002  	BRA	L__Password_Settings5629
0x392E	0xA90004  	BCLR	W2, #0
0x3930	0x370001  	BRA	L__Password_Settings5632
L__Password_Settings5629:
0x3932	0xA80004  	BSET	W2, #0
L__Password_Settings5632:
0x3934	0xAE0004  	BTSS	W2, #0
0x3936	0x370014  	BRA	L__Password_Settings3946
;GRR3000LManagementPanel.mpas,8534 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3949:
0x3938	0xA90004  	BCLR	W2, #0
0x393A	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x393C	0xA80004  	BSET	W2, #0
0x393E	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3940	0xA80042  	BSET	SR, #0
0x3942	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3944	0xA90042  	BCLR	SR, #0
0x3946	0xAE0004  	BTSS	W2, #0
0x3948	0xAF0042  	BTSC	SR, #0
0x394A	0x370002  	BRA	L__Password_Settings5633
0x394C	0xA90004  	BCLR	W2, #0
0x394E	0x370001  	BRA	L__Password_Settings5636
L__Password_Settings5633:
0x3950	0xA80004  	BSET	W2, #0
L__Password_Settings5636:
0x3952	0xAE0004  	BTSS	W2, #0
0x3954	0x370002  	BRA	L__Password_Settings3950
;GRR3000LManagementPanel.mpas,8536 :: 		asm ClrWDT; end;
0x3956	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8537 :: 		end;
0x3958	0x37FFEF  	BRA	L__Password_Settings3949
L__Password_Settings3950:
;GRR3000LManagementPanel.mpas,8539 :: 		Confirm_LeakaMenuBit := not Confirm_LeakaMenuBit;
0x395A	0x212A41  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W1
0x395C	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0x395E	0xA21010  	BTG	[W0], BitPos(_Confirm_LeakaMenuBit+0)
;GRR3000LManagementPanel.mpas,8541 :: 		end;
L__Password_Settings3946:
;GRR3000LManagementPanel.mpas,8543 :: 		if (Confirm_LeakaMenuBit = 1) then Glcd_Write_Char('+', 114, Row7, White) else Glcd_Write_Char('x', 114, Row7, White);
0x3960	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0x3962	0xA61010  	BTSS	[W0], BitPos(_Confirm_LeakaMenuBit+0)
0x3964	0x370006  	BRA	L__Password_Settings3954
0x3966	0xEF201A  	CLR	W13
0x3968	0xB3C06C  	MOV.B	#6, W12
0x396A	0xB3C72B  	MOV.B	#114, W11
0x396C	0xB3C2BA  	MOV.B	#43, W10
0x396E	0x07F202  	RCALL	_Glcd_Write_Char
0x3970	0x370005  	BRA	L__Password_Settings3955
L__Password_Settings3954:
0x3972	0xEF201A  	CLR	W13
0x3974	0xB3C06C  	MOV.B	#6, W12
0x3976	0xB3C72B  	MOV.B	#114, W11
0x3978	0xB3C78A  	MOV.B	#120, W10
0x397A	0x07F1FC  	RCALL	_Glcd_Write_Char
L__Password_Settings3955:
;GRR3000LManagementPanel.mpas,8545 :: 		if (Ok_Button =0) then
0x397C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x397E	0x37001E  	BRA	L__Password_Settings3957
;GRR3000LManagementPanel.mpas,8547 :: 		while (Ok_Button =0) do
L__Password_Settings3960:
0x3980	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3982	0x370002  	BRA	L__Password_Settings3961
;GRR3000LManagementPanel.mpas,8549 :: 		asm ClrWDT; end;
0x3984	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8550 :: 		end;
0x3986	0x37FFFC  	BRA	L__Password_Settings3960
L__Password_Settings3961:
;GRR3000LManagementPanel.mpas,8552 :: 		EEPROM_Write(EE_ConfirmLeakMenuEeAddr, Confirm_LeakaMenuBit);
0x3988	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0x398A	0xEF2018  	CLR	W12
0x398C	0xA71010  	BTSC	[W0], BitPos(_Confirm_LeakaMenuBit+0)
0x398E	0xEC2018  	INC	W12
0x3990	0x2F066A  	MOV	#61542, W10
0x3992	0x2007FB  	MOV	#127, W11
0x3994	0x07ED00  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8553 :: 		while(WR_bit) do begin end;
L__Password_Settings3965:
0x3996	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3998	0x37FFFE  	BRA	L__Password_Settings3965
;GRR3000LManagementPanel.mpas,8554 :: 		Chng[5] := 0;
0x399A	0x212501  	MOV	#lo_addr(_Chng+4), W1
0x399C	0xEF2000  	CLR	W0
0x399E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8555 :: 		if (Confirm_LeakaMenuBit = 1) then Glcd_Write_Char('+', 114, Row7, Black) else Glcd_Write_Char('x', 114, Row7, Black);
0x39A0	0x212A40  	MOV	#lo_addr(_Confirm_LeakaMenuBit), W0
0x39A2	0xA61010  	BTSS	[W0], BitPos(_Confirm_LeakaMenuBit+0)
0x39A4	0x370006  	BRA	L__Password_Settings3970
0x39A6	0xB3C01D  	MOV.B	#1, W13
0x39A8	0xB3C06C  	MOV.B	#6, W12
0x39AA	0xB3C72B  	MOV.B	#114, W11
0x39AC	0xB3C2BA  	MOV.B	#43, W10
0x39AE	0x07F1E2  	RCALL	_Glcd_Write_Char
0x39B0	0x370005  	BRA	L__Password_Settings3971
L__Password_Settings3970:
0x39B2	0xB3C01D  	MOV.B	#1, W13
0x39B4	0xB3C06C  	MOV.B	#6, W12
0x39B6	0xB3C72B  	MOV.B	#114, W11
0x39B8	0xB3C78A  	MOV.B	#120, W10
0x39BA	0x07F1DC  	RCALL	_Glcd_Write_Char
L__Password_Settings3971:
;GRR3000LManagementPanel.mpas,8557 :: 		end;
L__Password_Settings3957:
;GRR3000LManagementPanel.mpas,8561 :: 		end;
0x39BC	0x37FFA9  	BRA	L__Password_Settings3941
L__Password_Settings3942:
;GRR3000LManagementPanel.mpas,8562 :: 		end;
L__Password_Settings3933:
;GRR3000LManagementPanel.mpas,8563 :: 		end;
0x39BE	0x37013D  	BRA	L__Password_Settings3745
L__Password_Settings3931:
;GRR3000LManagementPanel.mpas,8565 :: 		7: begin // sýcaklýk menu
0x39C0	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x39C2	0x784010  	MOV.B	[W0], W0
0x39C4	0xE10467  	CP.B	W0, #7
0x39C6	0x3A0061  	BRA NZ	L__Password_Settings3974
L__Password_Settings5637:
;GRR3000LManagementPanel.mpas,8567 :: 		if (Ok_Button =0) then
0x39C8	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x39CA	0x37005E  	BRA	L__Password_Settings3976
;GRR3000LManagementPanel.mpas,8569 :: 		while (Ok_Button =0) do
L__Password_Settings3979:
0x39CC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x39CE	0x370002  	BRA	L__Password_Settings3980
;GRR3000LManagementPanel.mpas,8571 :: 		asm ClrWDT; end;
0x39D0	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8572 :: 		end;
0x39D2	0x37FFFC  	BRA	L__Password_Settings3979
L__Password_Settings3980:
;GRR3000LManagementPanel.mpas,8575 :: 		Chng[6] := 1;
0x39D4	0x212511  	MOV	#lo_addr(_Chng+5), W1
0x39D6	0xB3C010  	MOV.B	#1, W0
0x39D8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8577 :: 		While (Chng[6] =1) do
L__Password_Settings3984:
0x39DA	0x212510  	MOV	#lo_addr(_Chng+5), W0
0x39DC	0x784010  	MOV.B	[W0], W0
0x39DE	0xE10461  	CP.B	W0, #1
0x39E0	0x3A0053  	BRA NZ	L__Password_Settings3985
L__Password_Settings5638:
;GRR3000LManagementPanel.mpas,8579 :: 		asm ClrWDT; end;
0x39E2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8581 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x39E4	0xA90004  	BCLR	W2, #0
0x39E6	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x39E8	0xA80004  	BSET	W2, #0
0x39EA	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x39EC	0xA80042  	BSET	SR, #0
0x39EE	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x39F0	0xA90042  	BCLR	SR, #0
0x39F2	0xAE0004  	BTSS	W2, #0
0x39F4	0xAF0042  	BTSC	SR, #0
0x39F6	0x370002  	BRA	L__Password_Settings5639
0x39F8	0xA90004  	BCLR	W2, #0
0x39FA	0x370001  	BRA	L__Password_Settings5642
L__Password_Settings5639:
0x39FC	0xA80004  	BSET	W2, #0
L__Password_Settings5642:
0x39FE	0xAE0004  	BTSS	W2, #0
0x3A00	0x370014  	BRA	L__Password_Settings3989
;GRR3000LManagementPanel.mpas,8583 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings3992:
0x3A02	0xA90004  	BCLR	W2, #0
0x3A04	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3A06	0xA80004  	BSET	W2, #0
0x3A08	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3A0A	0xA80042  	BSET	SR, #0
0x3A0C	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3A0E	0xA90042  	BCLR	SR, #0
0x3A10	0xAE0004  	BTSS	W2, #0
0x3A12	0xAF0042  	BTSC	SR, #0
0x3A14	0x370002  	BRA	L__Password_Settings5643
0x3A16	0xA90004  	BCLR	W2, #0
0x3A18	0x370001  	BRA	L__Password_Settings5646
L__Password_Settings5643:
0x3A1A	0xA80004  	BSET	W2, #0
L__Password_Settings5646:
0x3A1C	0xAE0004  	BTSS	W2, #0
0x3A1E	0x370002  	BRA	L__Password_Settings3993
;GRR3000LManagementPanel.mpas,8585 :: 		asm ClrWDT; end;
0x3A20	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8586 :: 		end;
0x3A22	0x37FFEF  	BRA	L__Password_Settings3992
L__Password_Settings3993:
;GRR3000LManagementPanel.mpas,8588 :: 		Confirm_TempeMenuBit := not Confirm_TempeMenuBit;
0x3A24	0x212A41  	MOV	#lo_addr(_Confirm_TempeMenuBit), W1
0x3A26	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0x3A28	0xA23010  	BTG	[W0], BitPos(_Confirm_TempeMenuBit+0)
;GRR3000LManagementPanel.mpas,8590 :: 		end;
L__Password_Settings3989:
;GRR3000LManagementPanel.mpas,8592 :: 		if (Confirm_TempeMenuBit = 1) then Glcd_Write_Char('+', 114, Row8, White) else Glcd_Write_Char('x', 114, Row8, White);
0x3A2A	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0x3A2C	0xA63010  	BTSS	[W0], BitPos(_Confirm_TempeMenuBit+0)
0x3A2E	0x370006  	BRA	L__Password_Settings3997
0x3A30	0xEF201A  	CLR	W13
0x3A32	0xB3C07C  	MOV.B	#7, W12
0x3A34	0xB3C72B  	MOV.B	#114, W11
0x3A36	0xB3C2BA  	MOV.B	#43, W10
0x3A38	0x07F19D  	RCALL	_Glcd_Write_Char
0x3A3A	0x370005  	BRA	L__Password_Settings3998
L__Password_Settings3997:
0x3A3C	0xEF201A  	CLR	W13
0x3A3E	0xB3C07C  	MOV.B	#7, W12
0x3A40	0xB3C72B  	MOV.B	#114, W11
0x3A42	0xB3C78A  	MOV.B	#120, W10
0x3A44	0x07F197  	RCALL	_Glcd_Write_Char
L__Password_Settings3998:
;GRR3000LManagementPanel.mpas,8594 :: 		if (Ok_Button =0) then
0x3A46	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3A48	0x37001E  	BRA	L__Password_Settings4000
;GRR3000LManagementPanel.mpas,8596 :: 		while (Ok_Button =0) do
L__Password_Settings4003:
0x3A4A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3A4C	0x370002  	BRA	L__Password_Settings4004
;GRR3000LManagementPanel.mpas,8598 :: 		asm ClrWDT; end;
0x3A4E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8599 :: 		end;
0x3A50	0x37FFFC  	BRA	L__Password_Settings4003
L__Password_Settings4004:
;GRR3000LManagementPanel.mpas,8601 :: 		EEPROM_Write(EE_ConfirmTempMenuEeAddr, Confirm_TempeMenuBit);
0x3A52	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0x3A54	0xEF2018  	CLR	W12
0x3A56	0xA73010  	BTSC	[W0], BitPos(_Confirm_TempeMenuBit+0)
0x3A58	0xEC2018  	INC	W12
0x3A5A	0x2F068A  	MOV	#61544, W10
0x3A5C	0x2007FB  	MOV	#127, W11
0x3A5E	0x07EC9B  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8602 :: 		while(WR_bit) do begin end;
L__Password_Settings4008:
0x3A60	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3A62	0x37FFFE  	BRA	L__Password_Settings4008
;GRR3000LManagementPanel.mpas,8603 :: 		Chng[6] := 0;
0x3A64	0x212511  	MOV	#lo_addr(_Chng+5), W1
0x3A66	0xEF2000  	CLR	W0
0x3A68	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8604 :: 		if (Confirm_TempeMenuBit = 1) then Glcd_Write_Char('+', 114, Row8, Black) else Glcd_Write_Char('x', 114, Row8, Black);
0x3A6A	0x212A40  	MOV	#lo_addr(_Confirm_TempeMenuBit), W0
0x3A6C	0xA63010  	BTSS	[W0], BitPos(_Confirm_TempeMenuBit+0)
0x3A6E	0x370006  	BRA	L__Password_Settings4013
0x3A70	0xB3C01D  	MOV.B	#1, W13
0x3A72	0xB3C07C  	MOV.B	#7, W12
0x3A74	0xB3C72B  	MOV.B	#114, W11
0x3A76	0xB3C2BA  	MOV.B	#43, W10
0x3A78	0x07F17D  	RCALL	_Glcd_Write_Char
0x3A7A	0x370005  	BRA	L__Password_Settings4014
L__Password_Settings4013:
0x3A7C	0xB3C01D  	MOV.B	#1, W13
0x3A7E	0xB3C07C  	MOV.B	#7, W12
0x3A80	0xB3C72B  	MOV.B	#114, W11
0x3A82	0xB3C78A  	MOV.B	#120, W10
0x3A84	0x07F177  	RCALL	_Glcd_Write_Char
L__Password_Settings4014:
;GRR3000LManagementPanel.mpas,8606 :: 		end;
L__Password_Settings4000:
;GRR3000LManagementPanel.mpas,8610 :: 		end;
0x3A86	0x37FFA9  	BRA	L__Password_Settings3984
L__Password_Settings3985:
;GRR3000LManagementPanel.mpas,8611 :: 		end;
L__Password_Settings3976:
;GRR3000LManagementPanel.mpas,8612 :: 		end;
0x3A88	0x3700D8  	BRA	L__Password_Settings3745
L__Password_Settings3974:
;GRR3000LManagementPanel.mpas,8614 :: 		8: begin // saat menu
0x3A8A	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3A8C	0x784010  	MOV.B	[W0], W0
0x3A8E	0xE10468  	CP.B	W0, #8
0x3A90	0x3A0061  	BRA NZ	L__Password_Settings4017
L__Password_Settings5647:
;GRR3000LManagementPanel.mpas,8616 :: 		if (Ok_Button =0) then
0x3A92	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3A94	0x37005E  	BRA	L__Password_Settings4019
;GRR3000LManagementPanel.mpas,8618 :: 		while (Ok_Button =0) do
L__Password_Settings4022:
0x3A96	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3A98	0x370002  	BRA	L__Password_Settings4023
;GRR3000LManagementPanel.mpas,8620 :: 		asm ClrWDT; end;
0x3A9A	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8621 :: 		end;
0x3A9C	0x37FFFC  	BRA	L__Password_Settings4022
L__Password_Settings4023:
;GRR3000LManagementPanel.mpas,8624 :: 		Chng[7] := 1;
0x3A9E	0x212521  	MOV	#lo_addr(_Chng+6), W1
0x3AA0	0xB3C010  	MOV.B	#1, W0
0x3AA2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8626 :: 		While (Chng[7] =1) do
L__Password_Settings4027:
0x3AA4	0x212520  	MOV	#lo_addr(_Chng+6), W0
0x3AA6	0x784010  	MOV.B	[W0], W0
0x3AA8	0xE10461  	CP.B	W0, #1
0x3AAA	0x3A0053  	BRA NZ	L__Password_Settings4028
L__Password_Settings5648:
;GRR3000LManagementPanel.mpas,8628 :: 		asm ClrWDT; end;
0x3AAC	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8630 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x3AAE	0xA90004  	BCLR	W2, #0
0x3AB0	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3AB2	0xA80004  	BSET	W2, #0
0x3AB4	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3AB6	0xA80042  	BSET	SR, #0
0x3AB8	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3ABA	0xA90042  	BCLR	SR, #0
0x3ABC	0xAE0004  	BTSS	W2, #0
0x3ABE	0xAF0042  	BTSC	SR, #0
0x3AC0	0x370002  	BRA	L__Password_Settings5649
0x3AC2	0xA90004  	BCLR	W2, #0
0x3AC4	0x370001  	BRA	L__Password_Settings5652
L__Password_Settings5649:
0x3AC6	0xA80004  	BSET	W2, #0
L__Password_Settings5652:
0x3AC8	0xAE0004  	BTSS	W2, #0
0x3ACA	0x370014  	BRA	L__Password_Settings4032
;GRR3000LManagementPanel.mpas,8632 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings4035:
0x3ACC	0xA90004  	BCLR	W2, #0
0x3ACE	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3AD0	0xA80004  	BSET	W2, #0
0x3AD2	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3AD4	0xA80042  	BSET	SR, #0
0x3AD6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3AD8	0xA90042  	BCLR	SR, #0
0x3ADA	0xAE0004  	BTSS	W2, #0
0x3ADC	0xAF0042  	BTSC	SR, #0
0x3ADE	0x370002  	BRA	L__Password_Settings5653
0x3AE0	0xA90004  	BCLR	W2, #0
0x3AE2	0x370001  	BRA	L__Password_Settings5656
L__Password_Settings5653:
0x3AE4	0xA80004  	BSET	W2, #0
L__Password_Settings5656:
0x3AE6	0xAE0004  	BTSS	W2, #0
0x3AE8	0x370002  	BRA	L__Password_Settings4036
;GRR3000LManagementPanel.mpas,8634 :: 		asm ClrWDT; end;
0x3AEA	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8635 :: 		end;
0x3AEC	0x37FFEF  	BRA	L__Password_Settings4035
L__Password_Settings4036:
;GRR3000LManagementPanel.mpas,8637 :: 		Confirm_ClockMenuBit := not Confirm_ClockMenuBit;
0x3AEE	0x212A41  	MOV	#lo_addr(_Confirm_ClockMenuBit), W1
0x3AF0	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0x3AF2	0xA25010  	BTG	[W0], BitPos(_Confirm_ClockMenuBit+0)
;GRR3000LManagementPanel.mpas,8639 :: 		end;
L__Password_Settings4032:
;GRR3000LManagementPanel.mpas,8641 :: 		if (Confirm_ClockMenuBit = 1) then Glcd_Write_Char('+', 114, Row2, White) else Glcd_Write_Char('x', 114, Row2, White);
0x3AF4	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0x3AF6	0xA65010  	BTSS	[W0], BitPos(_Confirm_ClockMenuBit+0)
0x3AF8	0x370006  	BRA	L__Password_Settings4040
0x3AFA	0xEF201A  	CLR	W13
0x3AFC	0xB3C01C  	MOV.B	#1, W12
0x3AFE	0xB3C72B  	MOV.B	#114, W11
0x3B00	0xB3C2BA  	MOV.B	#43, W10
0x3B02	0x07F138  	RCALL	_Glcd_Write_Char
0x3B04	0x370005  	BRA	L__Password_Settings4041
L__Password_Settings4040:
0x3B06	0xEF201A  	CLR	W13
0x3B08	0xB3C01C  	MOV.B	#1, W12
0x3B0A	0xB3C72B  	MOV.B	#114, W11
0x3B0C	0xB3C78A  	MOV.B	#120, W10
0x3B0E	0x07F132  	RCALL	_Glcd_Write_Char
L__Password_Settings4041:
;GRR3000LManagementPanel.mpas,8643 :: 		if (Ok_Button =0) then
0x3B10	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3B12	0x37001E  	BRA	L__Password_Settings4043
;GRR3000LManagementPanel.mpas,8645 :: 		while (Ok_Button =0) do
L__Password_Settings4046:
0x3B14	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3B16	0x370002  	BRA	L__Password_Settings4047
;GRR3000LManagementPanel.mpas,8647 :: 		asm ClrWDT; end;
0x3B18	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8648 :: 		end;
0x3B1A	0x37FFFC  	BRA	L__Password_Settings4046
L__Password_Settings4047:
;GRR3000LManagementPanel.mpas,8650 :: 		EEPROM_Write(EE_ConfirmClockMenuEeAddr, Confirm_ClockMenuBit);
0x3B1C	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0x3B1E	0xEF2018  	CLR	W12
0x3B20	0xA75010  	BTSC	[W0], BitPos(_Confirm_ClockMenuBit+0)
0x3B22	0xEC2018  	INC	W12
0x3B24	0x2F06AA  	MOV	#61546, W10
0x3B26	0x2007FB  	MOV	#127, W11
0x3B28	0x07EC36  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8651 :: 		while(WR_bit) do begin end;
L__Password_Settings4051:
0x3B2A	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3B2C	0x37FFFE  	BRA	L__Password_Settings4051
;GRR3000LManagementPanel.mpas,8652 :: 		Chng[7] := 0;
0x3B2E	0x212521  	MOV	#lo_addr(_Chng+6), W1
0x3B30	0xEF2000  	CLR	W0
0x3B32	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8653 :: 		if (Confirm_ClockMenuBit = 1) then Glcd_Write_Char('+', 114, Row2, Black) else Glcd_Write_Char('x', 114, Row2, Black);
0x3B34	0x212A40  	MOV	#lo_addr(_Confirm_ClockMenuBit), W0
0x3B36	0xA65010  	BTSS	[W0], BitPos(_Confirm_ClockMenuBit+0)
0x3B38	0x370006  	BRA	L__Password_Settings4056
0x3B3A	0xB3C01D  	MOV.B	#1, W13
0x3B3C	0xB3C01C  	MOV.B	#1, W12
0x3B3E	0xB3C72B  	MOV.B	#114, W11
0x3B40	0xB3C2BA  	MOV.B	#43, W10
0x3B42	0x07F118  	RCALL	_Glcd_Write_Char
0x3B44	0x370005  	BRA	L__Password_Settings4057
L__Password_Settings4056:
0x3B46	0xB3C01D  	MOV.B	#1, W13
0x3B48	0xB3C01C  	MOV.B	#1, W12
0x3B4A	0xB3C72B  	MOV.B	#114, W11
0x3B4C	0xB3C78A  	MOV.B	#120, W10
0x3B4E	0x07F112  	RCALL	_Glcd_Write_Char
L__Password_Settings4057:
;GRR3000LManagementPanel.mpas,8655 :: 		end;
L__Password_Settings4043:
;GRR3000LManagementPanel.mpas,8659 :: 		end;
0x3B50	0x37FFA9  	BRA	L__Password_Settings4027
L__Password_Settings4028:
;GRR3000LManagementPanel.mpas,8660 :: 		end;
L__Password_Settings4019:
;GRR3000LManagementPanel.mpas,8661 :: 		end;
0x3B52	0x370073  	BRA	L__Password_Settings3745
L__Password_Settings4017:
;GRR3000LManagementPanel.mpas,8663 :: 		9: begin // modbus menu
0x3B54	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3B56	0x784010  	MOV.B	[W0], W0
0x3B58	0xE10469  	CP.B	W0, #9
0x3B5A	0x3A0061  	BRA NZ	L__Password_Settings4060
L__Password_Settings5657:
;GRR3000LManagementPanel.mpas,8665 :: 		if (Ok_Button =0) then
0x3B5C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3B5E	0x37005E  	BRA	L__Password_Settings4062
;GRR3000LManagementPanel.mpas,8667 :: 		while (Ok_Button =0) do
L__Password_Settings4065:
0x3B60	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3B62	0x370002  	BRA	L__Password_Settings4066
;GRR3000LManagementPanel.mpas,8669 :: 		asm ClrWDT; end;
0x3B64	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8670 :: 		end;
0x3B66	0x37FFFC  	BRA	L__Password_Settings4065
L__Password_Settings4066:
;GRR3000LManagementPanel.mpas,8673 :: 		Chng[8] := 1;
0x3B68	0x212531  	MOV	#lo_addr(_Chng+7), W1
0x3B6A	0xB3C010  	MOV.B	#1, W0
0x3B6C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8675 :: 		While (Chng[8] =1) do
L__Password_Settings4070:
0x3B6E	0x212530  	MOV	#lo_addr(_Chng+7), W0
0x3B70	0x784010  	MOV.B	[W0], W0
0x3B72	0xE10461  	CP.B	W0, #1
0x3B74	0x3A0053  	BRA NZ	L__Password_Settings4071
L__Password_Settings5658:
;GRR3000LManagementPanel.mpas,8677 :: 		asm ClrWDT; end;
0x3B76	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8679 :: 		if ((Up_Button =0)or(Down_Button =0)) then
0x3B78	0xA90004  	BCLR	W2, #0
0x3B7A	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3B7C	0xA80004  	BSET	W2, #0
0x3B7E	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3B80	0xA80042  	BSET	SR, #0
0x3B82	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3B84	0xA90042  	BCLR	SR, #0
0x3B86	0xAE0004  	BTSS	W2, #0
0x3B88	0xAF0042  	BTSC	SR, #0
0x3B8A	0x370002  	BRA	L__Password_Settings5659
0x3B8C	0xA90004  	BCLR	W2, #0
0x3B8E	0x370001  	BRA	L__Password_Settings5662
L__Password_Settings5659:
0x3B90	0xA80004  	BSET	W2, #0
L__Password_Settings5662:
0x3B92	0xAE0004  	BTSS	W2, #0
0x3B94	0x370014  	BRA	L__Password_Settings4075
;GRR3000LManagementPanel.mpas,8681 :: 		while ((Up_Button =0)or(Down_Button=0)) do
L__Password_Settings4078:
0x3B96	0xA90004  	BCLR	W2, #0
0x3B98	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0x3B9A	0xA80004  	BSET	W2, #0
0x3B9C	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0x3B9E	0xA80042  	BSET	SR, #0
0x3BA0	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x3BA2	0xA90042  	BCLR	SR, #0
0x3BA4	0xAE0004  	BTSS	W2, #0
0x3BA6	0xAF0042  	BTSC	SR, #0
0x3BA8	0x370002  	BRA	L__Password_Settings5663
0x3BAA	0xA90004  	BCLR	W2, #0
0x3BAC	0x370001  	BRA	L__Password_Settings5666
L__Password_Settings5663:
0x3BAE	0xA80004  	BSET	W2, #0
L__Password_Settings5666:
0x3BB0	0xAE0004  	BTSS	W2, #0
0x3BB2	0x370002  	BRA	L__Password_Settings4079
;GRR3000LManagementPanel.mpas,8683 :: 		asm ClrWDT; end;
0x3BB4	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8684 :: 		end;
0x3BB6	0x37FFEF  	BRA	L__Password_Settings4078
L__Password_Settings4079:
;GRR3000LManagementPanel.mpas,8686 :: 		Confirm_ModbusMenuBit := not Confirm_ModbusMenuBit;
0x3BB8	0x212A41  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W1
0x3BBA	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0x3BBC	0xA24010  	BTG	[W0], BitPos(_Confirm_ModbusMenuBit+0)
;GRR3000LManagementPanel.mpas,8688 :: 		end;
L__Password_Settings4075:
;GRR3000LManagementPanel.mpas,8690 :: 		if (Confirm_ModbusMenuBit = 1) then Glcd_Write_Char('+', 114, Row3, White) else Glcd_Write_Char('x', 114, Row3, White);
0x3BBE	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0x3BC0	0xA64010  	BTSS	[W0], BitPos(_Confirm_ModbusMenuBit+0)
0x3BC2	0x370006  	BRA	L__Password_Settings4083
0x3BC4	0xEF201A  	CLR	W13
0x3BC6	0xB3C02C  	MOV.B	#2, W12
0x3BC8	0xB3C72B  	MOV.B	#114, W11
0x3BCA	0xB3C2BA  	MOV.B	#43, W10
0x3BCC	0x07F0D3  	RCALL	_Glcd_Write_Char
0x3BCE	0x370005  	BRA	L__Password_Settings4084
L__Password_Settings4083:
0x3BD0	0xEF201A  	CLR	W13
0x3BD2	0xB3C02C  	MOV.B	#2, W12
0x3BD4	0xB3C72B  	MOV.B	#114, W11
0x3BD6	0xB3C78A  	MOV.B	#120, W10
0x3BD8	0x07F0CD  	RCALL	_Glcd_Write_Char
L__Password_Settings4084:
;GRR3000LManagementPanel.mpas,8692 :: 		if (Ok_Button =0) then
0x3BDA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3BDC	0x37001E  	BRA	L__Password_Settings4086
;GRR3000LManagementPanel.mpas,8694 :: 		while (Ok_Button =0) do
L__Password_Settings4089:
0x3BDE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3BE0	0x370002  	BRA	L__Password_Settings4090
;GRR3000LManagementPanel.mpas,8696 :: 		asm ClrWDT; end;
0x3BE2	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8697 :: 		end;
0x3BE4	0x37FFFC  	BRA	L__Password_Settings4089
L__Password_Settings4090:
;GRR3000LManagementPanel.mpas,8699 :: 		EEPROM_Write(EE_ConfirmModbusMenuEeAddr, Confirm_ModbusMenuBit);
0x3BE6	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0x3BE8	0xEF2018  	CLR	W12
0x3BEA	0xA74010  	BTSC	[W0], BitPos(_Confirm_ModbusMenuBit+0)
0x3BEC	0xEC2018  	INC	W12
0x3BEE	0x2F06CA  	MOV	#61548, W10
0x3BF0	0x2007FB  	MOV	#127, W11
0x3BF2	0x07EBD1  	RCALL	_EEPROM_Write
;GRR3000LManagementPanel.mpas,8700 :: 		while(WR_bit) do begin end;
L__Password_Settings4094:
0x3BF4	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x3BF6	0x37FFFE  	BRA	L__Password_Settings4094
;GRR3000LManagementPanel.mpas,8701 :: 		Chng[8] := 0;
0x3BF8	0x212531  	MOV	#lo_addr(_Chng+7), W1
0x3BFA	0xEF2000  	CLR	W0
0x3BFC	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8702 :: 		if (Confirm_ModbusMenuBit = 1) then Glcd_Write_Char('+', 114, Row3, Black) else Glcd_Write_Char('x', 114, Row3, Black);
0x3BFE	0x212A40  	MOV	#lo_addr(_Confirm_ModbusMenuBit), W0
0x3C00	0xA64010  	BTSS	[W0], BitPos(_Confirm_ModbusMenuBit+0)
0x3C02	0x370006  	BRA	L__Password_Settings4099
0x3C04	0xB3C01D  	MOV.B	#1, W13
0x3C06	0xB3C02C  	MOV.B	#2, W12
0x3C08	0xB3C72B  	MOV.B	#114, W11
0x3C0A	0xB3C2BA  	MOV.B	#43, W10
0x3C0C	0x07F0B3  	RCALL	_Glcd_Write_Char
0x3C0E	0x370005  	BRA	L__Password_Settings4100
L__Password_Settings4099:
0x3C10	0xB3C01D  	MOV.B	#1, W13
0x3C12	0xB3C02C  	MOV.B	#2, W12
0x3C14	0xB3C72B  	MOV.B	#114, W11
0x3C16	0xB3C78A  	MOV.B	#120, W10
0x3C18	0x07F0AD  	RCALL	_Glcd_Write_Char
L__Password_Settings4100:
;GRR3000LManagementPanel.mpas,8704 :: 		end;
L__Password_Settings4086:
;GRR3000LManagementPanel.mpas,8708 :: 		end;
0x3C1A	0x37FFA9  	BRA	L__Password_Settings4070
L__Password_Settings4071:
;GRR3000LManagementPanel.mpas,8709 :: 		end;
L__Password_Settings4062:
;GRR3000LManagementPanel.mpas,8710 :: 		end;
0x3C1C	0x37000E  	BRA	L__Password_Settings3745
L__Password_Settings4060:
;GRR3000LManagementPanel.mpas,8712 :: 		10: begin // geri
0x3C1E	0x212750  	MOV	#lo_addr(_MenuSayac), W0
0x3C20	0x784010  	MOV.B	[W0], W0
0x3C22	0xE1046A  	CP.B	W0, #10
0x3C24	0x3A000A  	BRA NZ	L__Password_Settings4103
L__Password_Settings5667:
;GRR3000LManagementPanel.mpas,8714 :: 		if (Ok_Button =0) then
0x3C26	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3C28	0x370007  	BRA	L__Password_Settings4105
;GRR3000LManagementPanel.mpas,8716 :: 		while (Ok_Button =0) do
L__Password_Settings4108:
0x3C2A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x3C2C	0x370002  	BRA	L__Password_Settings4109
;GRR3000LManagementPanel.mpas,8718 :: 		asm ClrWDT; end;
0x3C2E	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8719 :: 		end;
0x3C30	0x37FFFC  	BRA	L__Password_Settings4108
L__Password_Settings4109:
;GRR3000LManagementPanel.mpas,8720 :: 		MenuExit := 1;
0x3C32	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x3C34	0xB3C010  	MOV.B	#1, W0
0x3C36	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8722 :: 		end;
L__Password_Settings4105:
;GRR3000LManagementPanel.mpas,8726 :: 		end;
0x3C38	0x370000  	BRA	L__Password_Settings3745
L__Password_Settings4103:
L__Password_Settings3745:
;GRR3000LManagementPanel.mpas,8732 :: 		end;
0x3C3A	0x37FBE5  	BRA	L__Password_Settings3705
L__Password_Settings3706:
;GRR3000LManagementPanel.mpas,8734 :: 		Glcd_Fill(0x00);
0x3C3C	0xEF2014  	CLR	W10
0x3C3E	0x072E46  	RCALL	_Glcd_Fill
;GRR3000LManagementPanel.mpas,8735 :: 		MenuSayacValue := 10;
0x3C40	0x212361  	MOV	#lo_addr(_MenuSayacValue), W1
0x3C42	0xB3C0A0  	MOV.B	#10, W0
0x3C44	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8737 :: 		end;
L_end_Password_Settings:
0x3C46	0x7806CF  	POP	W13
0x3C48	0x78064F  	POP	W12
0x3C4A	0x7805CF  	POP	W11
0x3C4C	0x78054F  	POP	W10
0x3C4E	0x060000  	RETURN
; end of _Password_Settings
_Password_Entry_Screen:
0x140C	0xFA0008  	LNK	#8
;GRR3000LManagementPanel.mpas,7727 :: 		begin
;GRR3000LManagementPanel.mpas,7732 :: 		Pass_Change_Counter := 1;
0x140E	0x781F8B  	PUSH	W11
0x1410	0x781F8C  	PUSH	W12
0x1412	0x781F8D  	PUSH	W13
0x1414	0xB3C010  	MOV.B	#1, W0
0x1416	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,7735 :: 		PasswordArray[1]    := 0;
0x1418	0x215F41  	MOV	#lo_addr(_PasswordArray), W1
0x141A	0xEF2000  	CLR	W0
0x141C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7736 :: 		PasswordArray[2]    := 0;
0x141E	0x215F51  	MOV	#lo_addr(_PasswordArray+1), W1
0x1420	0xEF2000  	CLR	W0
0x1422	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7737 :: 		PasswordArray[3]    := 0;
0x1424	0x215F61  	MOV	#lo_addr(_PasswordArray+2), W1
0x1426	0xEF2000  	CLR	W0
0x1428	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7738 :: 		PasswordArray[4]    := 0;
0x142A	0x215F71  	MOV	#lo_addr(_PasswordArray+3), W1
0x142C	0xEF2000  	CLR	W0
0x142E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7740 :: 		ChngA := 0;
0x1430	0x215F91  	MOV	#lo_addr(_ChngA), W1
0x1432	0xEF2000  	CLR	W0
0x1434	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7741 :: 		ChngB := 0;
0x1436	0x215F81  	MOV	#lo_addr(_ChngB), W1
0x1438	0xEF2000  	CLR	W0
0x143A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7742 :: 		ChngC := 0;
0x143C	0x215B81  	MOV	#lo_addr(_ChngC), W1
0x143E	0xEF2000  	CLR	W0
0x1440	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7743 :: 		ChngD := 0;
0x1442	0x215A51  	MOV	#lo_addr(_ChngD), W1
0x1444	0xEF2000  	CLR	W0
0x1446	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7744 :: 		TempText := '   ';
0x1448	0x4700E1  	ADD	W14, #1, W1
0x144A	0xB3C200  	MOV.B	#32, W0
0x144C	0x785880  	MOV.B	W0, [W1++]
0x144E	0xB3C200  	MOV.B	#32, W0
0x1450	0x785880  	MOV.B	W0, [W1++]
0x1452	0xB3C200  	MOV.B	#32, W0
0x1454	0x785880  	MOV.B	W0, [W1++]
0x1456	0xEF2000  	CLR	W0
0x1458	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7745 :: 		PassText := ' ';
0x145A	0x4700E5  	ADD	W14, #5, W1
0x145C	0xB3C200  	MOV.B	#32, W0
0x145E	0x785880  	MOV.B	W0, [W1++]
0x1460	0xEF2000  	CLR	W0
0x1462	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7747 :: 		Chng1 := 0;
0x1464	0xEF2000  	CLR	W0
0x1466	0x984770  	MOV.B	W0, [W14+7]
;GRR3000LManagementPanel.mpas,7749 :: 		Glcd_PartialImage(5, 15, 115, 41, 115, 41, @PasswordEntryBos);
0x1468	0x781F8A  	PUSH	W10
0x146A	0x20029D  	MOV	#41, W13
0x146C	0x20073C  	MOV	#115, W12
0x146E	0x2000FB  	MOV	#15, W11
0x1470	0x20005A  	MOV	#5, W10
0x1472	0x28A480  	MOV	#lo_addr(_PasswordEntryBos), W0
0x1474	0x200021  	MOV	#higher_addr(_PasswordEntryBos), W1
0x1476	0xBE9F80  	PUSH.D	W0
0x1478	0x200290  	MOV	#41, W0
0x147A	0x781F80  	PUSH	W0
0x147C	0x200730  	MOV	#115, W0
0x147E	0x781F80  	PUSH	W0
0x1480	0x076CCD  	RCALL	_Glcd_PartialImage
0x1482	0xB1008F  	SUB	#8, W15
;GRR3000LManagementPanel.mpas,7750 :: 		Glcd_Write_Char('x',48,row5,Black);
0x1484	0xB3C01D  	MOV.B	#1, W13
0x1486	0xB3C04C  	MOV.B	#4, W12
0x1488	0xB3C30B  	MOV.B	#48, W11
0x148A	0xB3C78A  	MOV.B	#120, W10
0x148C	0x070473  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7751 :: 		Glcd_Write_Char('x',54,row5,Black);
0x148E	0xB3C01D  	MOV.B	#1, W13
0x1490	0xB3C04C  	MOV.B	#4, W12
0x1492	0xB3C36B  	MOV.B	#54, W11
0x1494	0xB3C78A  	MOV.B	#120, W10
0x1496	0x07046E  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7752 :: 		Glcd_Write_Char('x',60,row5,Black);
0x1498	0xB3C01D  	MOV.B	#1, W13
0x149A	0xB3C04C  	MOV.B	#4, W12
0x149C	0xB3C3CB  	MOV.B	#60, W11
0x149E	0xB3C78A  	MOV.B	#120, W10
0x14A0	0x070469  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7753 :: 		Glcd_Write_Char('x',66,row5,Black);
0x14A2	0xB3C01D  	MOV.B	#1, W13
0x14A4	0xB3C04C  	MOV.B	#4, W12
0x14A6	0xB3C42B  	MOV.B	#66, W11
0x14A8	0xB3C78A  	MOV.B	#120, W10
0x14AA	0x070464  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7766 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x14AC	0xB3C01D  	MOV.B	#1, W13
0x14AE	0xB3C05C  	MOV.B	#5, W12
0x14B0	0xB3C54B  	MOV.B	#84, W11
0x14B2	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x14B4	0x07216A  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7767 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x14B6	0xB3C01D  	MOV.B	#1, W13
0x14B8	0xB3C05C  	MOV.B	#5, W12
0x14BA	0xB3C0CB  	MOV.B	#12, W11
0x14BC	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x14BE	0x072165  	RCALL	_Glcd_Write_Text
0x14C0	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7769 :: 		if (View = 0) then
0x14C2	0xE15460  	CP.B	W10, #0
0x14C4	0x3A0008  	BRA NZ	L__Password_Entry_Screen3436
L__Password_Entry_Screen5548:
;GRR3000LManagementPanel.mpas,7771 :: 		Glcd_Write_Text(PassNewText,12,row4,black);
0x14C6	0x781F8A  	PUSH	W10
0x14C8	0xB3C01D  	MOV.B	#1, W13
0x14CA	0xB3C03C  	MOV.B	#3, W12
0x14CC	0xB3C0CB  	MOV.B	#12, W11
0x14CE	0x215BFA  	MOV	#lo_addr(_PassNewText), W10
0x14D0	0x07215C  	RCALL	_Glcd_Write_Text
0x14D2	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7772 :: 		end else
0x14D4	0x370009  	BRA	L__Password_Entry_Screen3437
L__Password_Entry_Screen3436:
;GRR3000LManagementPanel.mpas,7773 :: 		if (View = 1) then
0x14D6	0xE15461  	CP.B	W10, #1
0x14D8	0x3A0007  	BRA NZ	L__Password_Entry_Screen3439
L__Password_Entry_Screen5549:
;GRR3000LManagementPanel.mpas,7775 :: 		Glcd_Write_Text(PassInputText, 12, row4 ,black);
0x14DA	0x781F8A  	PUSH	W10
0x14DC	0xB3C01D  	MOV.B	#1, W13
0x14DE	0xB3C03C  	MOV.B	#3, W12
0x14E0	0xB3C0CB  	MOV.B	#12, W11
0x14E2	0x215FAA  	MOV	#lo_addr(_PassInputText), W10
0x14E4	0x072152  	RCALL	_Glcd_Write_Text
0x14E6	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7776 :: 		end;
L__Password_Entry_Screen3439:
L__Password_Entry_Screen3437:
;GRR3000LManagementPanel.mpas,7779 :: 		while (Chng1 = 0) do
L__Password_Entry_Screen3442:
0x14E8	0x90407E  	MOV.B	[W14+7], W0
0x14EA	0xE10460  	CP.B	W0, #0
0x14EC	0x3A0302  	BRA NZ	L__Password_Entry_Screen3443
L__Password_Entry_Screen5550:
;GRR3000LManagementPanel.mpas,7782 :: 		asm ClrWDT; end;
0x14EE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7784 :: 		if (Down_Button =0) then
0x14F0	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x14F2	0x37000D  	BRA	L__Password_Entry_Screen3447
;GRR3000LManagementPanel.mpas,7786 :: 		while (Down_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3450:
0x14F4	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x14F6	0x370002  	BRA	L__Password_Entry_Screen3451
0x14F8	0xFE6000  	CLRWDT
0x14FA	0x37FFFC  	BRA	L__Password_Entry_Screen3450
L__Password_Entry_Screen3451:
;GRR3000LManagementPanel.mpas,7787 :: 		Pass_Change_Counter := Pass_Change_Counter + 1;
0x14FC	0x470060  	ADD	W14, #0, W0
0x14FE	0xFB0010  	SE	[W0], W0
0x1500	0xEC2000  	INC	W0
0x1502	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,7788 :: 		if (Pass_Change_Counter > 6) then Pass_Change_Counter := 1;
0x1504	0xE10466  	CP.B	W0, #6
0x1506	0x340002  	BRA LE	L__Password_Entry_Screen3455
L__Password_Entry_Screen5551:
0x1508	0xB3C010  	MOV.B	#1, W0
0x150A	0x984700  	MOV.B	W0, [W14+0]
L__Password_Entry_Screen3455:
;GRR3000LManagementPanel.mpas,7789 :: 		end else
0x150C	0x37000E  	BRA	L__Password_Entry_Screen3448
L__Password_Entry_Screen3447:
;GRR3000LManagementPanel.mpas,7790 :: 		if (Up_Button =0) then
0x150E	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x1510	0x37000C  	BRA	L__Password_Entry_Screen3458
;GRR3000LManagementPanel.mpas,7792 :: 		while (Up_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3461:
0x1512	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x1514	0x370002  	BRA	L__Password_Entry_Screen3462
0x1516	0xFE6000  	CLRWDT
0x1518	0x37FFFC  	BRA	L__Password_Entry_Screen3461
L__Password_Entry_Screen3462:
;GRR3000LManagementPanel.mpas,7793 :: 		Pass_Change_Counter := Pass_Change_Counter - 1;
0x151A	0x470060  	ADD	W14, #0, W0
0x151C	0xFB0010  	SE	[W0], W0
0x151E	0xED2000  	DEC	W0
0x1520	0x984700  	MOV.B	W0, [W14+0]
;GRR3000LManagementPanel.mpas,7794 :: 		if (Pass_Change_Counter < 1) then Pass_Change_Counter := 6;
0x1522	0xE10461  	CP.B	W0, #1
0x1524	0x3D0002  	BRA GE	L__Password_Entry_Screen3466
L__Password_Entry_Screen5552:
0x1526	0xB3C060  	MOV.B	#6, W0
0x1528	0x984700  	MOV.B	W0, [W14+0]
L__Password_Entry_Screen3466:
;GRR3000LManagementPanel.mpas,7795 :: 		end;
L__Password_Entry_Screen3458:
L__Password_Entry_Screen3448:
;GRR3000LManagementPanel.mpas,7798 :: 		1: begin  // þifrenin 4. karakteri
0x152A	0x90400E  	MOV.B	[W14+0], W0
0x152C	0xE10461  	CP.B	W0, #1
0x152E	0x3A007E  	BRA NZ	L__Password_Entry_Screen3471
L__Password_Entry_Screen5553:
;GRR3000LManagementPanel.mpas,7800 :: 		Glcd_Write_Char('X',48,row5,white);
0x1530	0x781F8A  	PUSH	W10
0x1532	0xEF201A  	CLR	W13
0x1534	0xB3C04C  	MOV.B	#4, W12
0x1536	0xB3C30B  	MOV.B	#48, W11
0x1538	0xB3C58A  	MOV.B	#88, W10
0x153A	0x07041C  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7801 :: 		Glcd_Write_Char('x',54,row5,Black);
0x153C	0xB3C01D  	MOV.B	#1, W13
0x153E	0xB3C04C  	MOV.B	#4, W12
0x1540	0xB3C36B  	MOV.B	#54, W11
0x1542	0xB3C78A  	MOV.B	#120, W10
0x1544	0x070417  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7802 :: 		Glcd_Write_Char('x',60,row5,Black);
0x1546	0xB3C01D  	MOV.B	#1, W13
0x1548	0xB3C04C  	MOV.B	#4, W12
0x154A	0xB3C3CB  	MOV.B	#60, W11
0x154C	0xB3C78A  	MOV.B	#120, W10
0x154E	0x070412  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7803 :: 		Glcd_Write_Char('x',66,row5,Black);
0x1550	0xB3C01D  	MOV.B	#1, W13
0x1552	0xB3C04C  	MOV.B	#4, W12
0x1554	0xB3C42B  	MOV.B	#66, W11
0x1556	0xB3C78A  	MOV.B	#120, W10
0x1558	0x07040D  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7816 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x155A	0xB3C01D  	MOV.B	#1, W13
0x155C	0xB3C05C  	MOV.B	#5, W12
0x155E	0xB3C54B  	MOV.B	#84, W11
0x1560	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x1562	0x072113  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7817 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x1564	0xB3C01D  	MOV.B	#1, W13
0x1566	0xB3C05C  	MOV.B	#5, W12
0x1568	0xB3C0CB  	MOV.B	#12, W11
0x156A	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x156C	0x07210E  	RCALL	_Glcd_Write_Text
0x156E	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7819 :: 		if (Ok_Button =0) then
0x1570	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1572	0x37005B  	BRA	L__Password_Entry_Screen3473
;GRR3000LManagementPanel.mpas,7821 :: 		ChngA := 1;
0x1574	0x215F91  	MOV	#lo_addr(_ChngA), W1
0x1576	0xB3C010  	MOV.B	#1, W0
0x1578	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7823 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3476:
0x157A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x157C	0x370002  	BRA	L__Password_Entry_Screen3477
0x157E	0xFE6000  	CLRWDT
0x1580	0x37FFFC  	BRA	L__Password_Entry_Screen3476
L__Password_Entry_Screen3477:
;GRR3000LManagementPanel.mpas,7824 :: 		Pause_ms(100);
0x1582	0x781F8A  	PUSH	W10
0x1584	0x20064A  	MOV	#100, W10
0x1586	0x076487  	RCALL	_Pause_Ms
0x1588	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7826 :: 		while (ChngA = 1) do
L__Password_Entry_Screen3481:
0x158A	0x215F90  	MOV	#lo_addr(_ChngA), W0
0x158C	0x784010  	MOV.B	[W0], W0
0x158E	0xE10461  	CP.B	W0, #1
0x1590	0x3A004C  	BRA NZ	L__Password_Entry_Screen3482
L__Password_Entry_Screen5554:
;GRR3000LManagementPanel.mpas,7829 :: 		asm ClrWDT; end;
0x1592	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7831 :: 		if (Up_Button =0) then
0x1594	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x1596	0x37000F  	BRA	L__Password_Entry_Screen3486
;GRR3000LManagementPanel.mpas,7833 :: 		while (Up_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3489:
0x1598	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x159A	0x370002  	BRA	L__Password_Entry_Screen3490
0x159C	0xFE6000  	CLRWDT
0x159E	0x37FFFC  	BRA	L__Password_Entry_Screen3489
L__Password_Entry_Screen3490:
;GRR3000LManagementPanel.mpas,7834 :: 		inc(PasswordArray[1]);
0x15A0	0xB3C011  	MOV.B	#1, W1
0x15A2	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x15A4	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7835 :: 		if (PasswordArray[1] > 9) then
0x15A6	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x15A8	0x784010  	MOV.B	[W0], W0
0x15AA	0xE10469  	CP.B	W0, #9
0x15AC	0x340003  	BRA LE	L__Password_Entry_Screen3494
L__Password_Entry_Screen5555:
;GRR3000LManagementPanel.mpas,7836 :: 		PasswordArray[1] := 0;
0x15AE	0x215F41  	MOV	#lo_addr(_PasswordArray), W1
0x15B0	0xEF2000  	CLR	W0
0x15B2	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3494:
;GRR3000LManagementPanel.mpas,7837 :: 		end else
0x15B4	0x370010  	BRA	L__Password_Entry_Screen3487
L__Password_Entry_Screen3486:
;GRR3000LManagementPanel.mpas,7838 :: 		if (Down_Button =0) then
0x15B6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x15B8	0x37000E  	BRA	L__Password_Entry_Screen3497
;GRR3000LManagementPanel.mpas,7840 :: 		while (Down_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3500:
0x15BA	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x15BC	0x370002  	BRA	L__Password_Entry_Screen3501
0x15BE	0xFE6000  	CLRWDT
0x15C0	0x37FFFC  	BRA	L__Password_Entry_Screen3500
L__Password_Entry_Screen3501:
;GRR3000LManagementPanel.mpas,7841 :: 		dec(PasswordArray[1]);
0x15C2	0xB3C011  	MOV.B	#1, W1
0x15C4	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x15C6	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7842 :: 		if (PasswordArray[1] < 0) then
0x15C8	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x15CA	0x784010  	MOV.B	[W0], W0
0x15CC	0xE10460  	CP.B	W0, #0
0x15CE	0x3D0003  	BRA GE	L__Password_Entry_Screen3505
L__Password_Entry_Screen5556:
;GRR3000LManagementPanel.mpas,7843 :: 		PasswordArray[1] := 9;
0x15D0	0x215F41  	MOV	#lo_addr(_PasswordArray), W1
0x15D2	0xB3C090  	MOV.B	#9, W0
0x15D4	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3505:
;GRR3000LManagementPanel.mpas,7844 :: 		end;
L__Password_Entry_Screen3497:
L__Password_Entry_Screen3487:
;GRR3000LManagementPanel.mpas,7846 :: 		ShortToStr(PasswordArray[1],TempText);
0x15D6	0x4700E1  	ADD	W14, #1, W1
0x15D8	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x15DA	0x781F8A  	PUSH	W10
0x15DC	0x780581  	MOV	W1, W11
0x15DE	0x784510  	MOV.B	[W0], W10
0x15E0	0x07F868  	RCALL	_ShortToStr
;GRR3000LManagementPanel.mpas,7847 :: 		ltrim(TempText);
0x15E2	0x470061  	ADD	W14, #1, W0
0x15E4	0x780500  	MOV	W0, W10
0x15E6	0x074666  	RCALL	_ltrim
0x15E8	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7848 :: 		PassText := TempText;
0x15EA	0x470065  	ADD	W14, #5, W0
0x15EC	0x4700E1  	ADD	W14, #1, W1
0x15EE	0x07592B  	RCALL	___CS2S
0x15F0	0x780080  	MOV	W0, W1
0x15F2	0xEF2000  	CLR	W0
0x15F4	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7849 :: 		Glcd_Write_Text(PassText,48,row5,white);
0x15F6	0x470065  	ADD	W14, #5, W0
0x15F8	0x781F8A  	PUSH	W10
0x15FA	0xEF201A  	CLR	W13
0x15FC	0xB3C04C  	MOV.B	#4, W12
0x15FE	0xB3C30B  	MOV.B	#48, W11
0x1600	0x780500  	MOV	W0, W10
0x1602	0x0720C3  	RCALL	_Glcd_Write_Text
0x1604	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7851 :: 		if (Ok_Button = 0) then
0x1606	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1608	0x37000F  	BRA	L__Password_Entry_Screen3508
;GRR3000LManagementPanel.mpas,7853 :: 		Pause_ms(100);
0x160A	0x781F8A  	PUSH	W10
0x160C	0x20064A  	MOV	#100, W10
0x160E	0x076443  	RCALL	_Pause_Ms
0x1610	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7854 :: 		while (ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3511:
0x1612	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1614	0x370002  	BRA	L__Password_Entry_Screen3512
0x1616	0xFE6000  	CLRWDT
0x1618	0x37FFFC  	BRA	L__Password_Entry_Screen3511
L__Password_Entry_Screen3512:
;GRR3000LManagementPanel.mpas,7855 :: 		ChngA := 0;
0x161A	0x215F91  	MOV	#lo_addr(_ChngA), W1
0x161C	0xEF2000  	CLR	W0
0x161E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7856 :: 		Pause_ms(100);
0x1620	0x781F8A  	PUSH	W10
0x1622	0x20064A  	MOV	#100, W10
0x1624	0x076438  	RCALL	_Pause_Ms
0x1626	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7857 :: 		end;
L__Password_Entry_Screen3508:
;GRR3000LManagementPanel.mpas,7858 :: 		end;
0x1628	0x37FFB0  	BRA	L__Password_Entry_Screen3481
L__Password_Entry_Screen3482:
;GRR3000LManagementPanel.mpas,7859 :: 		end;
L__Password_Entry_Screen3473:
;GRR3000LManagementPanel.mpas,7860 :: 		end;
0x162A	0x370262  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3471:
;GRR3000LManagementPanel.mpas,7862 :: 		2: begin // þifrenin 3. karakteri
0x162C	0x90400E  	MOV.B	[W14+0], W0
0x162E	0xE10462  	CP.B	W0, #2
0x1630	0x3A007E  	BRA NZ	L__Password_Entry_Screen3517
L__Password_Entry_Screen5557:
;GRR3000LManagementPanel.mpas,7864 :: 		Glcd_Write_Char('x',48,row5,black);
0x1632	0x781F8A  	PUSH	W10
0x1634	0xB3C01D  	MOV.B	#1, W13
0x1636	0xB3C04C  	MOV.B	#4, W12
0x1638	0xB3C30B  	MOV.B	#48, W11
0x163A	0xB3C78A  	MOV.B	#120, W10
0x163C	0x07039B  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7865 :: 		Glcd_Write_Char('X',54,row5,white);
0x163E	0xEF201A  	CLR	W13
0x1640	0xB3C04C  	MOV.B	#4, W12
0x1642	0xB3C36B  	MOV.B	#54, W11
0x1644	0xB3C58A  	MOV.B	#88, W10
0x1646	0x070396  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7866 :: 		Glcd_Write_Char('x',60,row5,Black);
0x1648	0xB3C01D  	MOV.B	#1, W13
0x164A	0xB3C04C  	MOV.B	#4, W12
0x164C	0xB3C3CB  	MOV.B	#60, W11
0x164E	0xB3C78A  	MOV.B	#120, W10
0x1650	0x070391  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7867 :: 		Glcd_Write_Char('x',66,row5,Black);
0x1652	0xB3C01D  	MOV.B	#1, W13
0x1654	0xB3C04C  	MOV.B	#4, W12
0x1656	0xB3C42B  	MOV.B	#66, W11
0x1658	0xB3C78A  	MOV.B	#120, W10
0x165A	0x07038C  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7881 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x165C	0xB3C01D  	MOV.B	#1, W13
0x165E	0xB3C05C  	MOV.B	#5, W12
0x1660	0xB3C54B  	MOV.B	#84, W11
0x1662	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x1664	0x072092  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7882 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x1666	0xB3C01D  	MOV.B	#1, W13
0x1668	0xB3C05C  	MOV.B	#5, W12
0x166A	0xB3C0CB  	MOV.B	#12, W11
0x166C	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x166E	0x07208D  	RCALL	_Glcd_Write_Text
0x1670	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7884 :: 		if (Ok_Button =0) then
0x1672	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1674	0x37005B  	BRA	L__Password_Entry_Screen3519
;GRR3000LManagementPanel.mpas,7886 :: 		ChngB := 1;
0x1676	0x215F81  	MOV	#lo_addr(_ChngB), W1
0x1678	0xB3C010  	MOV.B	#1, W0
0x167A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7888 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3522:
0x167C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x167E	0x370002  	BRA	L__Password_Entry_Screen3523
0x1680	0xFE6000  	CLRWDT
0x1682	0x37FFFC  	BRA	L__Password_Entry_Screen3522
L__Password_Entry_Screen3523:
;GRR3000LManagementPanel.mpas,7889 :: 		Pause_ms(100);
0x1684	0x781F8A  	PUSH	W10
0x1686	0x20064A  	MOV	#100, W10
0x1688	0x076406  	RCALL	_Pause_Ms
0x168A	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7891 :: 		while (ChngB = 1) do
L__Password_Entry_Screen3527:
0x168C	0x215F80  	MOV	#lo_addr(_ChngB), W0
0x168E	0x784010  	MOV.B	[W0], W0
0x1690	0xE10461  	CP.B	W0, #1
0x1692	0x3A004C  	BRA NZ	L__Password_Entry_Screen3528
L__Password_Entry_Screen5558:
;GRR3000LManagementPanel.mpas,7894 :: 		asm ClrWDT; end;
0x1694	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7896 :: 		if (Up_Button =0) then
0x1696	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x1698	0x37000F  	BRA	L__Password_Entry_Screen3532
;GRR3000LManagementPanel.mpas,7898 :: 		while (Up_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3535:
0x169A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x169C	0x370002  	BRA	L__Password_Entry_Screen3536
0x169E	0xFE6000  	CLRWDT
0x16A0	0x37FFFC  	BRA	L__Password_Entry_Screen3535
L__Password_Entry_Screen3536:
;GRR3000LManagementPanel.mpas,7899 :: 		inc(PasswordArray[2]);
0x16A2	0xB3C011  	MOV.B	#1, W1
0x16A4	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x16A6	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7900 :: 		if (PasswordArray[2] > 9) then
0x16A8	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x16AA	0x784010  	MOV.B	[W0], W0
0x16AC	0xE10469  	CP.B	W0, #9
0x16AE	0x340003  	BRA LE	L__Password_Entry_Screen3540
L__Password_Entry_Screen5559:
;GRR3000LManagementPanel.mpas,7901 :: 		PasswordArray[2] := 0;
0x16B0	0x215F51  	MOV	#lo_addr(_PasswordArray+1), W1
0x16B2	0xEF2000  	CLR	W0
0x16B4	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3540:
;GRR3000LManagementPanel.mpas,7902 :: 		end else
0x16B6	0x370010  	BRA	L__Password_Entry_Screen3533
L__Password_Entry_Screen3532:
;GRR3000LManagementPanel.mpas,7903 :: 		if (Down_Button =0) then
0x16B8	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x16BA	0x37000E  	BRA	L__Password_Entry_Screen3543
;GRR3000LManagementPanel.mpas,7905 :: 		while (Down_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3546:
0x16BC	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x16BE	0x370002  	BRA	L__Password_Entry_Screen3547
0x16C0	0xFE6000  	CLRWDT
0x16C2	0x37FFFC  	BRA	L__Password_Entry_Screen3546
L__Password_Entry_Screen3547:
;GRR3000LManagementPanel.mpas,7906 :: 		dec(PasswordArray[2]);
0x16C4	0xB3C011  	MOV.B	#1, W1
0x16C6	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x16C8	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7907 :: 		if (PasswordArray[2] < 0) then
0x16CA	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x16CC	0x784010  	MOV.B	[W0], W0
0x16CE	0xE10460  	CP.B	W0, #0
0x16D0	0x3D0003  	BRA GE	L__Password_Entry_Screen3551
L__Password_Entry_Screen5560:
;GRR3000LManagementPanel.mpas,7908 :: 		PasswordArray[2] := 9;
0x16D2	0x215F51  	MOV	#lo_addr(_PasswordArray+1), W1
0x16D4	0xB3C090  	MOV.B	#9, W0
0x16D6	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3551:
;GRR3000LManagementPanel.mpas,7909 :: 		end;
L__Password_Entry_Screen3543:
L__Password_Entry_Screen3533:
;GRR3000LManagementPanel.mpas,7911 :: 		ShortToStr(PasswordArray[2],TempText);
0x16D8	0x4700E1  	ADD	W14, #1, W1
0x16DA	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x16DC	0x781F8A  	PUSH	W10
0x16DE	0x780581  	MOV	W1, W11
0x16E0	0x784510  	MOV.B	[W0], W10
0x16E2	0x07F7E7  	RCALL	_ShortToStr
;GRR3000LManagementPanel.mpas,7912 :: 		ltrim(TempText);
0x16E4	0x470061  	ADD	W14, #1, W0
0x16E6	0x780500  	MOV	W0, W10
0x16E8	0x0745E5  	RCALL	_ltrim
0x16EA	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7913 :: 		PassText := TempText;
0x16EC	0x470065  	ADD	W14, #5, W0
0x16EE	0x4700E1  	ADD	W14, #1, W1
0x16F0	0x0758AA  	RCALL	___CS2S
0x16F2	0x780080  	MOV	W0, W1
0x16F4	0xEF2000  	CLR	W0
0x16F6	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7914 :: 		Glcd_Write_Text(PassText,54,row5,white);
0x16F8	0x470065  	ADD	W14, #5, W0
0x16FA	0x781F8A  	PUSH	W10
0x16FC	0xEF201A  	CLR	W13
0x16FE	0xB3C04C  	MOV.B	#4, W12
0x1700	0xB3C36B  	MOV.B	#54, W11
0x1702	0x780500  	MOV	W0, W10
0x1704	0x072042  	RCALL	_Glcd_Write_Text
0x1706	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7916 :: 		if (Ok_Button = 0) then
0x1708	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x170A	0x37000F  	BRA	L__Password_Entry_Screen3554
;GRR3000LManagementPanel.mpas,7918 :: 		Pause_ms(100);
0x170C	0x781F8A  	PUSH	W10
0x170E	0x20064A  	MOV	#100, W10
0x1710	0x0763C2  	RCALL	_Pause_Ms
0x1712	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7919 :: 		while (ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3557:
0x1714	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1716	0x370002  	BRA	L__Password_Entry_Screen3558
0x1718	0xFE6000  	CLRWDT
0x171A	0x37FFFC  	BRA	L__Password_Entry_Screen3557
L__Password_Entry_Screen3558:
;GRR3000LManagementPanel.mpas,7920 :: 		ChngB := 0;
0x171C	0x215F81  	MOV	#lo_addr(_ChngB), W1
0x171E	0xEF2000  	CLR	W0
0x1720	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7921 :: 		Pause_ms(100);
0x1722	0x781F8A  	PUSH	W10
0x1724	0x20064A  	MOV	#100, W10
0x1726	0x0763B7  	RCALL	_Pause_Ms
0x1728	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7922 :: 		end;
L__Password_Entry_Screen3554:
;GRR3000LManagementPanel.mpas,7923 :: 		end;
0x172A	0x37FFB0  	BRA	L__Password_Entry_Screen3527
L__Password_Entry_Screen3528:
;GRR3000LManagementPanel.mpas,7924 :: 		end;
L__Password_Entry_Screen3519:
;GRR3000LManagementPanel.mpas,7925 :: 		end;
0x172C	0x3701E1  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3517:
;GRR3000LManagementPanel.mpas,7926 :: 		3: begin // þifrenin 2. karakteri
0x172E	0x90400E  	MOV.B	[W14+0], W0
0x1730	0xE10463  	CP.B	W0, #3
0x1732	0x3A007E  	BRA NZ	L__Password_Entry_Screen3563
L__Password_Entry_Screen5561:
;GRR3000LManagementPanel.mpas,7928 :: 		Glcd_Write_Char('x',48,row5,black);
0x1734	0x781F8A  	PUSH	W10
0x1736	0xB3C01D  	MOV.B	#1, W13
0x1738	0xB3C04C  	MOV.B	#4, W12
0x173A	0xB3C30B  	MOV.B	#48, W11
0x173C	0xB3C78A  	MOV.B	#120, W10
0x173E	0x07031A  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7929 :: 		Glcd_Write_Char('x',54,row5,Black);
0x1740	0xB3C01D  	MOV.B	#1, W13
0x1742	0xB3C04C  	MOV.B	#4, W12
0x1744	0xB3C36B  	MOV.B	#54, W11
0x1746	0xB3C78A  	MOV.B	#120, W10
0x1748	0x070315  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7930 :: 		Glcd_Write_Char('X',60,row5,white);
0x174A	0xEF201A  	CLR	W13
0x174C	0xB3C04C  	MOV.B	#4, W12
0x174E	0xB3C3CB  	MOV.B	#60, W11
0x1750	0xB3C58A  	MOV.B	#88, W10
0x1752	0x070310  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7931 :: 		Glcd_Write_Char('x',66,row5,Black);
0x1754	0xB3C01D  	MOV.B	#1, W13
0x1756	0xB3C04C  	MOV.B	#4, W12
0x1758	0xB3C42B  	MOV.B	#66, W11
0x175A	0xB3C78A  	MOV.B	#120, W10
0x175C	0x07030B  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7944 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x175E	0xB3C01D  	MOV.B	#1, W13
0x1760	0xB3C05C  	MOV.B	#5, W12
0x1762	0xB3C54B  	MOV.B	#84, W11
0x1764	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x1766	0x072011  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,7945 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x1768	0xB3C01D  	MOV.B	#1, W13
0x176A	0xB3C05C  	MOV.B	#5, W12
0x176C	0xB3C0CB  	MOV.B	#12, W11
0x176E	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x1770	0x07200C  	RCALL	_Glcd_Write_Text
0x1772	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7947 :: 		if (Ok_Button =0) then
0x1774	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1776	0x37005B  	BRA	L__Password_Entry_Screen3565
;GRR3000LManagementPanel.mpas,7949 :: 		ChngC := 1;
0x1778	0x215B81  	MOV	#lo_addr(_ChngC), W1
0x177A	0xB3C010  	MOV.B	#1, W0
0x177C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7951 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3568:
0x177E	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1780	0x370002  	BRA	L__Password_Entry_Screen3569
0x1782	0xFE6000  	CLRWDT
0x1784	0x37FFFC  	BRA	L__Password_Entry_Screen3568
L__Password_Entry_Screen3569:
;GRR3000LManagementPanel.mpas,7952 :: 		Pause_ms(100);
0x1786	0x781F8A  	PUSH	W10
0x1788	0x20064A  	MOV	#100, W10
0x178A	0x076385  	RCALL	_Pause_Ms
0x178C	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7954 :: 		while (ChngC = 1) do
L__Password_Entry_Screen3573:
0x178E	0x215B80  	MOV	#lo_addr(_ChngC), W0
0x1790	0x784010  	MOV.B	[W0], W0
0x1792	0xE10461  	CP.B	W0, #1
0x1794	0x3A004C  	BRA NZ	L__Password_Entry_Screen3574
L__Password_Entry_Screen5562:
;GRR3000LManagementPanel.mpas,7957 :: 		asm ClrWDT; end;
0x1796	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,7959 :: 		if (Up_Button =0) then
0x1798	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x179A	0x37000F  	BRA	L__Password_Entry_Screen3578
;GRR3000LManagementPanel.mpas,7961 :: 		while (Up_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3581:
0x179C	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x179E	0x370002  	BRA	L__Password_Entry_Screen3582
0x17A0	0xFE6000  	CLRWDT
0x17A2	0x37FFFC  	BRA	L__Password_Entry_Screen3581
L__Password_Entry_Screen3582:
;GRR3000LManagementPanel.mpas,7962 :: 		inc(PasswordArray[3]);
0x17A4	0xB3C011  	MOV.B	#1, W1
0x17A6	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x17A8	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7963 :: 		if (PasswordArray[3] > 9) then
0x17AA	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x17AC	0x784010  	MOV.B	[W0], W0
0x17AE	0xE10469  	CP.B	W0, #9
0x17B0	0x340003  	BRA LE	L__Password_Entry_Screen3586
L__Password_Entry_Screen5563:
;GRR3000LManagementPanel.mpas,7964 :: 		PasswordArray[3] := 0;
0x17B2	0x215F61  	MOV	#lo_addr(_PasswordArray+2), W1
0x17B4	0xEF2000  	CLR	W0
0x17B6	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3586:
;GRR3000LManagementPanel.mpas,7965 :: 		end else
0x17B8	0x370010  	BRA	L__Password_Entry_Screen3579
L__Password_Entry_Screen3578:
;GRR3000LManagementPanel.mpas,7966 :: 		if (Down_Button =0) then
0x17BA	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x17BC	0x37000E  	BRA	L__Password_Entry_Screen3589
;GRR3000LManagementPanel.mpas,7968 :: 		while (Down_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3592:
0x17BE	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x17C0	0x370002  	BRA	L__Password_Entry_Screen3593
0x17C2	0xFE6000  	CLRWDT
0x17C4	0x37FFFC  	BRA	L__Password_Entry_Screen3592
L__Password_Entry_Screen3593:
;GRR3000LManagementPanel.mpas,7969 :: 		dec(PasswordArray[3]);
0x17C6	0xB3C011  	MOV.B	#1, W1
0x17C8	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x17CA	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,7970 :: 		if (PasswordArray[3] < 0) then
0x17CC	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x17CE	0x784010  	MOV.B	[W0], W0
0x17D0	0xE10460  	CP.B	W0, #0
0x17D2	0x3D0003  	BRA GE	L__Password_Entry_Screen3597
L__Password_Entry_Screen5564:
;GRR3000LManagementPanel.mpas,7971 :: 		PasswordArray[3] := 9;
0x17D4	0x215F61  	MOV	#lo_addr(_PasswordArray+2), W1
0x17D6	0xB3C090  	MOV.B	#9, W0
0x17D8	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3597:
;GRR3000LManagementPanel.mpas,7972 :: 		end;
L__Password_Entry_Screen3589:
L__Password_Entry_Screen3579:
;GRR3000LManagementPanel.mpas,7974 :: 		ShortToStr(PasswordArray[3],TempText);
0x17DA	0x4700E1  	ADD	W14, #1, W1
0x17DC	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x17DE	0x781F8A  	PUSH	W10
0x17E0	0x780581  	MOV	W1, W11
0x17E2	0x784510  	MOV.B	[W0], W10
0x17E4	0x07F766  	RCALL	_ShortToStr
;GRR3000LManagementPanel.mpas,7975 :: 		ltrim(TempText);
0x17E6	0x470061  	ADD	W14, #1, W0
0x17E8	0x780500  	MOV	W0, W10
0x17EA	0x074564  	RCALL	_ltrim
0x17EC	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7976 :: 		PassText := TempText;
0x17EE	0x470065  	ADD	W14, #5, W0
0x17F0	0x4700E1  	ADD	W14, #1, W1
0x17F2	0x075829  	RCALL	___CS2S
0x17F4	0x780080  	MOV	W0, W1
0x17F6	0xEF2000  	CLR	W0
0x17F8	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,7977 :: 		Glcd_Write_Text(PassText,60,row5,white);
0x17FA	0x470065  	ADD	W14, #5, W0
0x17FC	0x781F8A  	PUSH	W10
0x17FE	0xEF201A  	CLR	W13
0x1800	0xB3C04C  	MOV.B	#4, W12
0x1802	0xB3C3CB  	MOV.B	#60, W11
0x1804	0x780500  	MOV	W0, W10
0x1806	0x071FC1  	RCALL	_Glcd_Write_Text
0x1808	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7979 :: 		if (Ok_Button = 0) then
0x180A	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x180C	0x37000F  	BRA	L__Password_Entry_Screen3600
;GRR3000LManagementPanel.mpas,7981 :: 		Pause_ms(100);
0x180E	0x781F8A  	PUSH	W10
0x1810	0x20064A  	MOV	#100, W10
0x1812	0x076341  	RCALL	_Pause_Ms
0x1814	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7982 :: 		while (ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3603:
0x1816	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1818	0x370002  	BRA	L__Password_Entry_Screen3604
0x181A	0xFE6000  	CLRWDT
0x181C	0x37FFFC  	BRA	L__Password_Entry_Screen3603
L__Password_Entry_Screen3604:
;GRR3000LManagementPanel.mpas,7983 :: 		ChngC := 0;
0x181E	0x215B81  	MOV	#lo_addr(_ChngC), W1
0x1820	0xEF2000  	CLR	W0
0x1822	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,7984 :: 		Pause_ms(100);
0x1824	0x781F8A  	PUSH	W10
0x1826	0x20064A  	MOV	#100, W10
0x1828	0x076336  	RCALL	_Pause_Ms
0x182A	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,7985 :: 		end;
L__Password_Entry_Screen3600:
;GRR3000LManagementPanel.mpas,7988 :: 		end;
0x182C	0x37FFB0  	BRA	L__Password_Entry_Screen3573
L__Password_Entry_Screen3574:
;GRR3000LManagementPanel.mpas,7991 :: 		end;
L__Password_Entry_Screen3565:
;GRR3000LManagementPanel.mpas,7995 :: 		end;
0x182E	0x370160  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3563:
;GRR3000LManagementPanel.mpas,7996 :: 		4: begin  // þifrenin 1. karakteri
0x1830	0x90400E  	MOV.B	[W14+0], W0
0x1832	0xE10464  	CP.B	W0, #4
0x1834	0x3A007E  	BRA NZ	L__Password_Entry_Screen3609
L__Password_Entry_Screen5565:
;GRR3000LManagementPanel.mpas,7998 :: 		Glcd_Write_Char('x',48,row5,black);
0x1836	0x781F8A  	PUSH	W10
0x1838	0xB3C01D  	MOV.B	#1, W13
0x183A	0xB3C04C  	MOV.B	#4, W12
0x183C	0xB3C30B  	MOV.B	#48, W11
0x183E	0xB3C78A  	MOV.B	#120, W10
0x1840	0x070299  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,7999 :: 		Glcd_Write_Char('x',54,row5,Black);
0x1842	0xB3C01D  	MOV.B	#1, W13
0x1844	0xB3C04C  	MOV.B	#4, W12
0x1846	0xB3C36B  	MOV.B	#54, W11
0x1848	0xB3C78A  	MOV.B	#120, W10
0x184A	0x070294  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8000 :: 		Glcd_Write_Char('x',60,row5,Black);
0x184C	0xB3C01D  	MOV.B	#1, W13
0x184E	0xB3C04C  	MOV.B	#4, W12
0x1850	0xB3C3CB  	MOV.B	#60, W11
0x1852	0xB3C78A  	MOV.B	#120, W10
0x1854	0x07028F  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8001 :: 		Glcd_Write_Char('X',66,row5,white);
0x1856	0xEF201A  	CLR	W13
0x1858	0xB3C04C  	MOV.B	#4, W12
0x185A	0xB3C42B  	MOV.B	#66, W11
0x185C	0xB3C58A  	MOV.B	#88, W10
0x185E	0x07028A  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8015 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x1860	0xB3C01D  	MOV.B	#1, W13
0x1862	0xB3C05C  	MOV.B	#5, W12
0x1864	0xB3C54B  	MOV.B	#84, W11
0x1866	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x1868	0x071F90  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8016 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x186A	0xB3C01D  	MOV.B	#1, W13
0x186C	0xB3C05C  	MOV.B	#5, W12
0x186E	0xB3C0CB  	MOV.B	#12, W11
0x1870	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x1872	0x071F8B  	RCALL	_Glcd_Write_Text
0x1874	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8018 :: 		if (Ok_Button =0) then
0x1876	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1878	0x37005B  	BRA	L__Password_Entry_Screen3611
;GRR3000LManagementPanel.mpas,8020 :: 		ChngD := 1;
0x187A	0x215A51  	MOV	#lo_addr(_ChngD), W1
0x187C	0xB3C010  	MOV.B	#1, W0
0x187E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8022 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3614:
0x1880	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1882	0x370002  	BRA	L__Password_Entry_Screen3615
0x1884	0xFE6000  	CLRWDT
0x1886	0x37FFFC  	BRA	L__Password_Entry_Screen3614
L__Password_Entry_Screen3615:
;GRR3000LManagementPanel.mpas,8023 :: 		Pause_ms(100);
0x1888	0x781F8A  	PUSH	W10
0x188A	0x20064A  	MOV	#100, W10
0x188C	0x076304  	RCALL	_Pause_Ms
0x188E	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8025 :: 		while (ChngD = 1) do
L__Password_Entry_Screen3619:
0x1890	0x215A50  	MOV	#lo_addr(_ChngD), W0
0x1892	0x784010  	MOV.B	[W0], W0
0x1894	0xE10461  	CP.B	W0, #1
0x1896	0x3A004C  	BRA NZ	L__Password_Entry_Screen3620
L__Password_Entry_Screen5566:
;GRR3000LManagementPanel.mpas,8028 :: 		asm ClrWDT; end;
0x1898	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8030 :: 		if (Up_Button =0) then
0x189A	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x189C	0x37000F  	BRA	L__Password_Entry_Screen3624
;GRR3000LManagementPanel.mpas,8032 :: 		while (Up_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3627:
0x189E	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0x18A0	0x370002  	BRA	L__Password_Entry_Screen3628
0x18A2	0xFE6000  	CLRWDT
0x18A4	0x37FFFC  	BRA	L__Password_Entry_Screen3627
L__Password_Entry_Screen3628:
;GRR3000LManagementPanel.mpas,8033 :: 		inc(PasswordArray[4]);
0x18A6	0xB3C011  	MOV.B	#1, W1
0x18A8	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x18AA	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,8034 :: 		if (PasswordArray[4] > 9) then
0x18AC	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x18AE	0x784010  	MOV.B	[W0], W0
0x18B0	0xE10469  	CP.B	W0, #9
0x18B2	0x340003  	BRA LE	L__Password_Entry_Screen3632
L__Password_Entry_Screen5567:
;GRR3000LManagementPanel.mpas,8035 :: 		PasswordArray[4] := 0;
0x18B4	0x215F71  	MOV	#lo_addr(_PasswordArray+3), W1
0x18B6	0xEF2000  	CLR	W0
0x18B8	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3632:
;GRR3000LManagementPanel.mpas,8036 :: 		end else
0x18BA	0x370010  	BRA	L__Password_Entry_Screen3625
L__Password_Entry_Screen3624:
;GRR3000LManagementPanel.mpas,8037 :: 		if (Down_Button =0) then
0x18BC	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x18BE	0x37000E  	BRA	L__Password_Entry_Screen3635
;GRR3000LManagementPanel.mpas,8039 :: 		while (Down_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3638:
0x18C0	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0x18C2	0x370002  	BRA	L__Password_Entry_Screen3639
0x18C4	0xFE6000  	CLRWDT
0x18C6	0x37FFFC  	BRA	L__Password_Entry_Screen3638
L__Password_Entry_Screen3639:
;GRR3000LManagementPanel.mpas,8040 :: 		dec(PasswordArray[4]);
0x18C8	0xB3C011  	MOV.B	#1, W1
0x18CA	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x18CC	0x10C810  	SUBR.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,8041 :: 		if (PasswordArray[4] < 0) then
0x18CE	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x18D0	0x784010  	MOV.B	[W0], W0
0x18D2	0xE10460  	CP.B	W0, #0
0x18D4	0x3D0003  	BRA GE	L__Password_Entry_Screen3643
L__Password_Entry_Screen5568:
;GRR3000LManagementPanel.mpas,8042 :: 		PasswordArray[4] := 9;
0x18D6	0x215F71  	MOV	#lo_addr(_PasswordArray+3), W1
0x18D8	0xB3C090  	MOV.B	#9, W0
0x18DA	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3643:
;GRR3000LManagementPanel.mpas,8043 :: 		end;
L__Password_Entry_Screen3635:
L__Password_Entry_Screen3625:
;GRR3000LManagementPanel.mpas,8045 :: 		ShortToStr(PasswordArray[4],TempText);
0x18DC	0x4700E1  	ADD	W14, #1, W1
0x18DE	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x18E0	0x781F8A  	PUSH	W10
0x18E2	0x780581  	MOV	W1, W11
0x18E4	0x784510  	MOV.B	[W0], W10
0x18E6	0x07F6E5  	RCALL	_ShortToStr
;GRR3000LManagementPanel.mpas,8046 :: 		ltrim(TempText);
0x18E8	0x470061  	ADD	W14, #1, W0
0x18EA	0x780500  	MOV	W0, W10
0x18EC	0x0744E3  	RCALL	_ltrim
0x18EE	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8047 :: 		PassText := TempText;
0x18F0	0x470065  	ADD	W14, #5, W0
0x18F2	0x4700E1  	ADD	W14, #1, W1
0x18F4	0x0757A8  	RCALL	___CS2S
0x18F6	0x780080  	MOV	W0, W1
0x18F8	0xEF2000  	CLR	W0
0x18FA	0x785880  	MOV.B	W0, [W1++]
;GRR3000LManagementPanel.mpas,8048 :: 		Glcd_Write_Text(PassText,66,row5,white);
0x18FC	0x470065  	ADD	W14, #5, W0
0x18FE	0x781F8A  	PUSH	W10
0x1900	0xEF201A  	CLR	W13
0x1902	0xB3C04C  	MOV.B	#4, W12
0x1904	0xB3C42B  	MOV.B	#66, W11
0x1906	0x780500  	MOV	W0, W10
0x1908	0x071F40  	RCALL	_Glcd_Write_Text
0x190A	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8050 :: 		if (Ok_Button = 0) then
0x190C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x190E	0x37000F  	BRA	L__Password_Entry_Screen3646
;GRR3000LManagementPanel.mpas,8052 :: 		Pause_ms(100);
0x1910	0x781F8A  	PUSH	W10
0x1912	0x20064A  	MOV	#100, W10
0x1914	0x0762C0  	RCALL	_Pause_Ms
0x1916	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8053 :: 		while (ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3649:
0x1918	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x191A	0x370002  	BRA	L__Password_Entry_Screen3650
0x191C	0xFE6000  	CLRWDT
0x191E	0x37FFFC  	BRA	L__Password_Entry_Screen3649
L__Password_Entry_Screen3650:
;GRR3000LManagementPanel.mpas,8054 :: 		ChngD := 0;
0x1920	0x215A51  	MOV	#lo_addr(_ChngD), W1
0x1922	0xEF2000  	CLR	W0
0x1924	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8055 :: 		Pause_ms(100);
0x1926	0x781F8A  	PUSH	W10
0x1928	0x20064A  	MOV	#100, W10
0x192A	0x0762B5  	RCALL	_Pause_Ms
0x192C	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8056 :: 		end;
L__Password_Entry_Screen3646:
;GRR3000LManagementPanel.mpas,8059 :: 		end;
0x192E	0x37FFB0  	BRA	L__Password_Entry_Screen3619
L__Password_Entry_Screen3620:
;GRR3000LManagementPanel.mpas,8062 :: 		end;
L__Password_Entry_Screen3611:
;GRR3000LManagementPanel.mpas,8063 :: 		end;
0x1930	0x3700DF  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3609:
;GRR3000LManagementPanel.mpas,8064 :: 		5: begin  //  ok
0x1932	0x90400E  	MOV.B	[W14+0], W0
0x1934	0xE10465  	CP.B	W0, #5
0x1936	0x3A00A7  	BRA NZ	L__Password_Entry_Screen3655
L__Password_Entry_Screen5569:
;GRR3000LManagementPanel.mpas,8066 :: 		Glcd_Write_Char('x',48,row5,black);
0x1938	0x781F8A  	PUSH	W10
0x193A	0xB3C01D  	MOV.B	#1, W13
0x193C	0xB3C04C  	MOV.B	#4, W12
0x193E	0xB3C30B  	MOV.B	#48, W11
0x1940	0xB3C78A  	MOV.B	#120, W10
0x1942	0x070218  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8067 :: 		Glcd_Write_Char('x',54,row5,Black);
0x1944	0xB3C01D  	MOV.B	#1, W13
0x1946	0xB3C04C  	MOV.B	#4, W12
0x1948	0xB3C36B  	MOV.B	#54, W11
0x194A	0xB3C78A  	MOV.B	#120, W10
0x194C	0x070213  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8068 :: 		Glcd_Write_Char('x',60,row5,Black);
0x194E	0xB3C01D  	MOV.B	#1, W13
0x1950	0xB3C04C  	MOV.B	#4, W12
0x1952	0xB3C3CB  	MOV.B	#60, W11
0x1954	0xB3C78A  	MOV.B	#120, W10
0x1956	0x07020E  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8069 :: 		Glcd_Write_Char('x',66,row5,Black);
0x1958	0xB3C01D  	MOV.B	#1, W13
0x195A	0xB3C04C  	MOV.B	#4, W12
0x195C	0xB3C42B  	MOV.B	#66, W11
0x195E	0xB3C78A  	MOV.B	#120, W10
0x1960	0x070209  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8083 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,white);
0x1962	0xEF201A  	CLR	W13
0x1964	0xB3C05C  	MOV.B	#5, W12
0x1966	0xB3C54B  	MOV.B	#84, W11
0x1968	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x196A	0x071F0F  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8084 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,black);
0x196C	0xB3C01D  	MOV.B	#1, W13
0x196E	0xB3C05C  	MOV.B	#5, W12
0x1970	0xB3C0CB  	MOV.B	#12, W11
0x1972	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x1974	0x071F0A  	RCALL	_Glcd_Write_Text
0x1976	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8086 :: 		if (View = 0) then
0x1978	0xE15460  	CP.B	W10, #0
0x197A	0x3A002D  	BRA NZ	L__Password_Entry_Screen3657
L__Password_Entry_Screen5570:
;GRR3000LManagementPanel.mpas,8088 :: 		if (Ok_Button =0) then
0x197C	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x197E	0x37002A  	BRA	L__Password_Entry_Screen3660
;GRR3000LManagementPanel.mpas,8090 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3663:
0x1980	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1982	0x370002  	BRA	L__Password_Entry_Screen3664
0x1984	0xFE6000  	CLRWDT
0x1986	0x37FFFC  	BRA	L__Password_Entry_Screen3663
L__Password_Entry_Screen3664:
;GRR3000LManagementPanel.mpas,8091 :: 		Pause_ms(100);
0x1988	0x781F8A  	PUSH	W10
0x198A	0x20064A  	MOV	#100, W10
0x198C	0x076284  	RCALL	_Pause_Ms
;GRR3000LManagementPanel.mpas,8092 :: 		PasswordHam        := PasswordArray[1] * 1000;
0x198E	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x1990	0xFB0090  	SE	[W0], W1
0x1992	0x203E80  	MOV	#1000, W0
0x1994	0xB98900  	MUL.SS	W1, W0, W2
0x1996	0x88B1C2  	MOV	W2, _PasswordHam
;GRR3000LManagementPanel.mpas,8093 :: 		Temp_Word          := PasswordArray[2] * 100;
0x1998	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x199A	0xFB0090  	SE	[W0], W1
0x199C	0x200640  	MOV	#100, W0
0x199E	0xB98800  	MUL.SS	W1, W0, W0
;GRR3000LManagementPanel.mpas,8094 :: 		PasswordHam        := PasswordHam + Temp_Word;
0x19A0	0x410100  	ADD	W2, W0, W2
0x19A2	0x88B1C2  	MOV	W2, _PasswordHam
;GRR3000LManagementPanel.mpas,8095 :: 		Temp_Word          := PasswordArray[3] * 10;
0x19A4	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x19A6	0xFB0090  	SE	[W0], W1
0x19A8	0x2000A0  	MOV	#10, W0
0x19AA	0xB98800  	MUL.SS	W1, W0, W0
;GRR3000LManagementPanel.mpas,8096 :: 		PasswordHam        := PasswordHam + Temp_Word;
0x19AC	0x410080  	ADD	W2, W0, W1
0x19AE	0x88B1C1  	MOV	W1, _PasswordHam
;GRR3000LManagementPanel.mpas,8097 :: 		PasswordHam        := PasswordHam + PasswordArray[4];
0x19B0	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x19B2	0xFB0010  	SE	[W0], W0
0x19B4	0x408000  	ADD	W1, W0, W0
0x19B6	0x88B1C0  	MOV	W0, _PasswordHam
;GRR3000LManagementPanel.mpas,8099 :: 		EEPROM_Write(EE_PasswordEeAddr, PasswordHam);
0x19B8	0x780600  	MOV	W0, W12
0x19BA	0x2F070A  	MOV	#61552, W10
0x19BC	0x2007FB  	MOV	#127, W11
0x19BE	0x07FCEB  	RCALL	_EEPROM_Write
0x19C0	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8100 :: 		while (WR_bit) do begin end; // write/erase cycle waiting
L__Password_Entry_Screen3668:
0x19C2	0xAFE761  	BTSC	WR_bit, BitPos(WR_bit+0)
0x19C4	0x37FFFE  	BRA	L__Password_Entry_Screen3668
;GRR3000LManagementPanel.mpas,8101 :: 		Pause_ms(100);
0x19C6	0x781F8A  	PUSH	W10
0x19C8	0x20064A  	MOV	#100, W10
0x19CA	0x076265  	RCALL	_Pause_Ms
0x19CC	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8102 :: 		asm clrwdt; end;
0x19CE	0xFE6000  	CLRWDT
;GRR3000LManagementPanel.mpas,8108 :: 		Chng1 := 1;
0x19D0	0xB3C010  	MOV.B	#1, W0
0x19D2	0x984770  	MOV.B	W0, [W14+7]
;GRR3000LManagementPanel.mpas,8112 :: 		end;
L__Password_Entry_Screen3660:
;GRR3000LManagementPanel.mpas,8113 :: 		end else
0x19D4	0x370057  	BRA	L__Password_Entry_Screen3658
L__Password_Entry_Screen3657:
;GRR3000LManagementPanel.mpas,8114 :: 		if (View = 1) then
0x19D6	0xE15461  	CP.B	W10, #1
0x19D8	0x3A0055  	BRA NZ	L__Password_Entry_Screen3673
L__Password_Entry_Screen5571:
;GRR3000LManagementPanel.mpas,8116 :: 		if (Ok_Button =0) then
0x19DA	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x19DC	0x370053  	BRA	L__Password_Entry_Screen3676
;GRR3000LManagementPanel.mpas,8119 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3679:
0x19DE	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x19E0	0x370002  	BRA	L__Password_Entry_Screen3680
0x19E2	0xFE6000  	CLRWDT
0x19E4	0x37FFFC  	BRA	L__Password_Entry_Screen3679
L__Password_Entry_Screen3680:
;GRR3000LManagementPanel.mpas,8120 :: 		Pause_ms(100);
0x19E6	0x781F8A  	PUSH	W10
0x19E8	0x20064A  	MOV	#100, W10
0x19EA	0x076255  	RCALL	_Pause_Ms
0x19EC	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8122 :: 		PasswordHam        := PasswordArray[1] * 1000;
0x19EE	0x215F40  	MOV	#lo_addr(_PasswordArray), W0
0x19F0	0xFB0090  	SE	[W0], W1
0x19F2	0x203E80  	MOV	#1000, W0
0x19F4	0xB98900  	MUL.SS	W1, W0, W2
0x19F6	0x88B1C2  	MOV	W2, _PasswordHam
;GRR3000LManagementPanel.mpas,8123 :: 		Temp_Word          := PasswordArray[2] * 100;
0x19F8	0x215F50  	MOV	#lo_addr(_PasswordArray+1), W0
0x19FA	0xFB0090  	SE	[W0], W1
0x19FC	0x200640  	MOV	#100, W0
0x19FE	0xB98800  	MUL.SS	W1, W0, W0
;GRR3000LManagementPanel.mpas,8124 :: 		PasswordHam        := PasswordHam + Temp_Word;
0x1A00	0x410100  	ADD	W2, W0, W2
0x1A02	0x88B1C2  	MOV	W2, _PasswordHam
;GRR3000LManagementPanel.mpas,8125 :: 		Temp_Word          := PasswordArray[3] * 10;
0x1A04	0x215F60  	MOV	#lo_addr(_PasswordArray+2), W0
0x1A06	0xFB0090  	SE	[W0], W1
0x1A08	0x2000A0  	MOV	#10, W0
0x1A0A	0xB98800  	MUL.SS	W1, W0, W0
;GRR3000LManagementPanel.mpas,8126 :: 		PasswordHam        := PasswordHam + Temp_Word;
0x1A0C	0x410080  	ADD	W2, W0, W1
0x1A0E	0x88B1C1  	MOV	W1, _PasswordHam
;GRR3000LManagementPanel.mpas,8127 :: 		PasswordHam        := PasswordHam + PasswordArray[4];
0x1A10	0x215F70  	MOV	#lo_addr(_PasswordArray+3), W0
0x1A12	0xFB0010  	SE	[W0], W0
0x1A14	0x408100  	ADD	W1, W0, W2
0x1A16	0x88B1C2  	MOV	W2, _PasswordHam
;GRR3000LManagementPanel.mpas,8129 :: 		if ((PasswordHam = User_Password)or(PasswordHam = Gemta_Password)) then
0x1A18	0x215A80  	MOV	#lo_addr(_User_Password), W0
0x1A1A	0xE11010  	CP	W2, [W0]
0x1A1C	0xEF2002  	CLR	W1
0x1A1E	0x3A0001  	BRA NZ	L__Password_Entry_Screen5572
0x1A20	0xEEA002  	COM	W1
L__Password_Entry_Screen5572:
0x1A22	0x222850  	MOV	#8837, W0
0x1A24	0xE11000  	CP	W2, W0
0x1A26	0xEF2000  	CLR	W0
0x1A28	0x3A0001  	BRA NZ	L__Password_Entry_Screen5573
0x1A2A	0xEEA000  	COM	W0
L__Password_Entry_Screen5573:
0x1A2C	0x708000  	IOR	W1, W0, W0
0x1A2E	0x32000F  	BRA Z	L__Password_Entry_Screen3684
L__Password_Entry_Screen5574:
;GRR3000LManagementPanel.mpas,8138 :: 		Glcd_Write_Text(SubTitle_PassOk,0,row8,Black);
0x1A30	0x781F8A  	PUSH	W10
0x1A32	0xB3C01D  	MOV.B	#1, W13
0x1A34	0xB3C07C  	MOV.B	#7, W12
0x1A36	0xEF2016  	CLR	W11
0x1A38	0x21622A  	MOV	#lo_addr(_SubTitle_PassOk), W10
0x1A3A	0x071EA7  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8140 :: 		Pause_ms(500);
0x1A3C	0x201F4A  	MOV	#500, W10
0x1A3E	0x07622B  	RCALL	_Pause_Ms
0x1A40	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8141 :: 		Chng1 := 1;
0x1A42	0xB3C010  	MOV.B	#1, W0
0x1A44	0x984770  	MOV.B	W0, [W14+7]
;GRR3000LManagementPanel.mpas,8142 :: 		MenuExit    := 0x00;  // menüye gir
0x1A46	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x1A48	0xEF2000  	CLR	W0
0x1A4A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8143 :: 		end else
0x1A4C	0x37001B  	BRA	L__Password_Entry_Screen3685
L__Password_Entry_Screen3684:
;GRR3000LManagementPanel.mpas,8144 :: 		if ((PasswordHam <> User_Password)or(PasswordHam <> Gemta_Password)) then
0x1A4E	0x80B1C2  	MOV	_PasswordHam, W2
0x1A50	0x215A80  	MOV	#lo_addr(_User_Password), W0
0x1A52	0xE11010  	CP	W2, [W0]
0x1A54	0xEF2002  	CLR	W1
0x1A56	0x320001  	BRA Z	L__Password_Entry_Screen5575
0x1A58	0xEEA002  	COM	W1
L__Password_Entry_Screen5575:
0x1A5A	0x222850  	MOV	#8837, W0
0x1A5C	0xE11000  	CP	W2, W0
0x1A5E	0xEF2000  	CLR	W0
0x1A60	0x320001  	BRA Z	L__Password_Entry_Screen5576
0x1A62	0xEEA000  	COM	W0
L__Password_Entry_Screen5576:
0x1A64	0x708000  	IOR	W1, W0, W0
0x1A66	0x32000E  	BRA Z	L__Password_Entry_Screen3687
L__Password_Entry_Screen5577:
;GRR3000LManagementPanel.mpas,8153 :: 		Glcd_Write_Text(SubTitle_PassFlt,0,row8,Black);
0x1A68	0x781F8A  	PUSH	W10
0x1A6A	0xB3C01D  	MOV.B	#1, W13
0x1A6C	0xB3C07C  	MOV.B	#7, W12
0x1A6E	0xEF2016  	CLR	W11
0x1A70	0x2163AA  	MOV	#lo_addr(_SubTitle_PassFlt), W10
0x1A72	0x071E8B  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8154 :: 		Pause_ms(500);
0x1A74	0x201F4A  	MOV	#500, W10
0x1A76	0x07620F  	RCALL	_Pause_Ms
0x1A78	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8155 :: 		Chng1 := 1;
0x1A7A	0xB3C010  	MOV.B	#1, W0
0x1A7C	0x984770  	MOV.B	W0, [W14+7]
;GRR3000LManagementPanel.mpas,8156 :: 		MenuExit    := 0xFF;  // menüden çýk
0x1A7E	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x1A80	0xB3CFF0  	MOV.B	#255, W0
0x1A82	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,8157 :: 		end;
L__Password_Entry_Screen3687:
L__Password_Entry_Screen3685:
;GRR3000LManagementPanel.mpas,8159 :: 		end;
L__Password_Entry_Screen3676:
;GRR3000LManagementPanel.mpas,8160 :: 		end;
L__Password_Entry_Screen3673:
L__Password_Entry_Screen3658:
;GRR3000LManagementPanel.mpas,8162 :: 		end;
0x1A84	0x370035  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3655:
;GRR3000LManagementPanel.mpas,8164 :: 		6: begin  // geri
0x1A86	0x90400E  	MOV.B	[W14+0], W0
0x1A88	0xE10466  	CP.B	W0, #6
0x1A8A	0x3A0032  	BRA NZ	L__Password_Entry_Screen3691
L__Password_Entry_Screen5578:
;GRR3000LManagementPanel.mpas,8165 :: 		Glcd_Write_Char('x',48,row5,black);
0x1A8C	0x781F8A  	PUSH	W10
0x1A8E	0xB3C01D  	MOV.B	#1, W13
0x1A90	0xB3C04C  	MOV.B	#4, W12
0x1A92	0xB3C30B  	MOV.B	#48, W11
0x1A94	0xB3C78A  	MOV.B	#120, W10
0x1A96	0x07016E  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8166 :: 		Glcd_Write_Char('x',54,row5,Black);
0x1A98	0xB3C01D  	MOV.B	#1, W13
0x1A9A	0xB3C04C  	MOV.B	#4, W12
0x1A9C	0xB3C36B  	MOV.B	#54, W11
0x1A9E	0xB3C78A  	MOV.B	#120, W10
0x1AA0	0x070169  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8167 :: 		Glcd_Write_Char('x',60,row5,Black);
0x1AA2	0xB3C01D  	MOV.B	#1, W13
0x1AA4	0xB3C04C  	MOV.B	#4, W12
0x1AA6	0xB3C3CB  	MOV.B	#60, W11
0x1AA8	0xB3C78A  	MOV.B	#120, W10
0x1AAA	0x070164  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8168 :: 		Glcd_Write_Char('x',66,row5,Black);
0x1AAC	0xB3C01D  	MOV.B	#1, W13
0x1AAE	0xB3C04C  	MOV.B	#4, W12
0x1AB0	0xB3C42B  	MOV.B	#66, W11
0x1AB2	0xB3C78A  	MOV.B	#120, W10
0x1AB4	0x07015F  	RCALL	_Glcd_Write_Char
;GRR3000LManagementPanel.mpas,8182 :: 		Glcd_Write_Text(SubTitle_Ok,84,Row6,black);
0x1AB6	0xB3C01D  	MOV.B	#1, W13
0x1AB8	0xB3C05C  	MOV.B	#5, W12
0x1ABA	0xB3C54B  	MOV.B	#84, W11
0x1ABC	0x215B9A  	MOV	#lo_addr(_SubTitle_Ok), W10
0x1ABE	0x071E65  	RCALL	_Glcd_Write_Text
;GRR3000LManagementPanel.mpas,8183 :: 		Glcd_Write_Text(SubTitle_Cancel,12,row6,white);
0x1AC0	0xEF201A  	CLR	W13
0x1AC2	0xB3C05C  	MOV.B	#5, W12
0x1AC4	0xB3C0CB  	MOV.B	#12, W11
0x1AC6	0x215D1A  	MOV	#lo_addr(_SubTitle_Cancel), W10
0x1AC8	0x071E60  	RCALL	_Glcd_Write_Text
0x1ACA	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8185 :: 		if (Ok_Button =0) then
0x1ACC	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1ACE	0x37000F  	BRA	L__Password_Entry_Screen3693
;GRR3000LManagementPanel.mpas,8189 :: 		while (Ok_Button =0) do begin asm clrwdt; end; end;
L__Password_Entry_Screen3696:
0x1AD0	0xAF02D4  	BTSC	Ok_Button, BitPos(Ok_Button+0)
0x1AD2	0x370002  	BRA	L__Password_Entry_Screen3697
0x1AD4	0xFE6000  	CLRWDT
0x1AD6	0x37FFFC  	BRA	L__Password_Entry_Screen3696
L__Password_Entry_Screen3697:
;GRR3000LManagementPanel.mpas,8191 :: 		Pause_ms(100);
0x1AD8	0x781F8A  	PUSH	W10
0x1ADA	0x20064A  	MOV	#100, W10
0x1ADC	0x0761DC  	RCALL	_Pause_Ms
0x1ADE	0x78054F  	POP	W10
;GRR3000LManagementPanel.mpas,8193 :: 		Chng1 := 1;
0x1AE0	0xB3C010  	MOV.B	#1, W0
0x1AE2	0x984770  	MOV.B	W0, [W14+7]
;GRR3000LManagementPanel.mpas,8194 :: 		if View = 1 then MenuExit := 0xFF;
0x1AE4	0xE15461  	CP.B	W10, #1
0x1AE6	0x3A0003  	BRA NZ	L__Password_Entry_Screen3701
L__Password_Entry_Screen5579:
0x1AE8	0x214661  	MOV	#lo_addr(_MenuExit), W1
0x1AEA	0xB3CFF0  	MOV.B	#255, W0
0x1AEC	0x784880  	MOV.B	W0, [W1]
L__Password_Entry_Screen3701:
;GRR3000LManagementPanel.mpas,8196 :: 		end;
L__Password_Entry_Screen3693:
;GRR3000LManagementPanel.mpas,8198 :: 		end;
0x1AEE	0x370000  	BRA	L__Password_Entry_Screen3468
L__Password_Entry_Screen3691:
L__Password_Entry_Screen3468:
;GRR3000LManagementPanel.mpas,8202 :: 		end;
0x1AF0	0x37FCFB  	BRA	L__Password_Entry_Screen3442
L__Password_Entry_Screen3443:
;GRR3000LManagementPanel.mpas,8203 :: 		end;
L_end_Password_Entry_Screen:
0x1AF2	0x7806CF  	POP	W13
0x1AF4	0x78064F  	POP	W12
0x1AF6	0x7805CF  	POP	W11
0x1AF8	0xFA8000  	ULNK
0x1AFA	0x060000  	RETURN
; end of _Password_Entry_Screen
_ShortToStr:
0x06B2	0xFA0000  	LNK	#0
;__Lib_Conversions.mpas,164 :: 		
;__Lib_Conversions.mpas,165 :: 		
0x06B4	0xB3C800  	MOV.B	#128, W0
0x06B6	0xE15400  	CP.B	W10, W0
0x06B8	0x3A000C  	BRA NZ	L__ShortToStr32
L__ShortToStr238:
;__Lib_Conversions.mpas,167 :: 		
0x06BA	0x78008B  	MOV	W11, W1
0x06BC	0xB3C2D0  	MOV.B	#45, W0
0x06BE	0x785880  	MOV.B	W0, [W1++]
0x06C0	0xB3C310  	MOV.B	#49, W0
0x06C2	0x785880  	MOV.B	W0, [W1++]
0x06C4	0xB3C320  	MOV.B	#50, W0
0x06C6	0x785880  	MOV.B	W0, [W1++]
0x06C8	0xB3C380  	MOV.B	#56, W0
0x06CA	0x785880  	MOV.B	W0, [W1++]
0x06CC	0xEF2000  	CLR	W0
0x06CE	0x785880  	MOV.B	W0, [W1++]
;__Lib_Conversions.mpas,168 :: 		
0x06D0	0x37002A  	BRA	L_end__ShortToStr
;__Lib_Conversions.mpas,169 :: 		
L__ShortToStr32:
;__Lib_Conversions.mpas,171 :: 		
; negative start address is: 6 (W3)
0x06D2	0xEF2006  	CLR	W3
;__Lib_Conversions.mpas,172 :: 		
0x06D4	0xE15460  	CP.B	W10, #0
0x06D6	0x3D0005  	BRA GE	L__ShortToStr210
L__ShortToStr239:
;__Lib_Conversions.mpas,174 :: 		
0x06D8	0x2FFFF3  	MOV	#65535, W3
;__Lib_Conversions.mpas,175 :: 		
0x06DA	0xFB000A  	SE	W10, W0
0x06DC	0x100060  	SUBR	W0, #0, W0
0x06DE	0x784500  	MOV.B	W0, W10
; negative end address is: 6 (W3)
;__Lib_Conversions.mpas,176 :: 		
0x06E0	0x370000  	BRA	L__ShortToStr35
L__ShortToStr210:
;__Lib_Conversions.mpas,172 :: 		
;__Lib_Conversions.mpas,176 :: 		
L__ShortToStr35:
;__Lib_Conversions.mpas,178 :: 		
; negative start address is: 6 (W3)
0x06E2	0x78008B  	MOV	W11, W1
0x06E4	0xB3C200  	MOV.B	#32, W0
0x06E6	0x785880  	MOV.B	W0, [W1++]
0x06E8	0xB3C200  	MOV.B	#32, W0
0x06EA	0x785880  	MOV.B	W0, [W1++]
0x06EC	0xB3C200  	MOV.B	#32, W0
0x06EE	0x785880  	MOV.B	W0, [W1++]
0x06F0	0xB3C300  	MOV.B	#48, W0
0x06F2	0x785880  	MOV.B	W0, [W1++]
0x06F4	0xEF2000  	CLR	W0
0x06F6	0x785880  	MOV.B	W0, [W1++]
;__Lib_Conversions.mpas,179 :: 		
; ptr start address is: 8 (W4)
0x06F8	0x458263  	ADD	W11, #3, W4
; negative end address is: 6 (W3)
; ptr end address is: 8 (W4)
;__Lib_Conversions.mpas,180 :: 		
L__ShortToStr38:
; ptr start address is: 8 (W4)
; negative start address is: 6 (W3)
0x06FA	0xE15460  	CP.B	W10, #0
0x06FC	0x320010  	BRA Z	L__ShortToStr39
L__ShortToStr240:
;__Lib_Conversions.mpas,182 :: 		
0x06FE	0xFB000A  	SE	W10, W0
0x0700	0x2000A2  	MOV	#10, W2
0x0702	0x090011  	REPEAT	#17
0x0704	0xD80002  	DIV.S	W0, W2
0x0706	0x780001  	MOV	W1, W0
0x0708	0xFB8080  	ZE	W0, W1
0x070A	0x200300  	MOV	#48, W0
0x070C	0x408000  	ADD	W1, W0, W0
0x070E	0x784A00  	MOV.B	W0, [W4]
;__Lib_Conversions.mpas,183 :: 		
0x0710	0xFB000A  	SE	W10, W0
0x0712	0x2000A2  	MOV	#10, W2
0x0714	0x090011  	REPEAT	#17
0x0716	0xD80002  	DIV.S	W0, W2
0x0718	0x784500  	MOV.B	W0, W10
;__Lib_Conversions.mpas,184 :: 		
0x071A	0xED2008  	DEC	W4
;__Lib_Conversions.mpas,185 :: 		
0x071C	0x37FFEE  	BRA	L__ShortToStr38
L__ShortToStr39:
;__Lib_Conversions.mpas,187 :: 		
0x071E	0xE20006  	CP0	W3
0x0720	0x320002  	BRA Z	L__ShortToStr43
L__ShortToStr241:
; negative end address is: 6 (W3)
;__Lib_Conversions.mpas,189 :: 		
0x0722	0xB3C2D0  	MOV.B	#45, W0
0x0724	0x784A00  	MOV.B	W0, [W4]
; ptr end address is: 8 (W4)
;__Lib_Conversions.mpas,190 :: 		
L__ShortToStr43:
;__Lib_Conversions.mpas,191 :: 		
L_end__ShortToStr:
L_end_ShortToStr:
0x0726	0xFA8000  	ULNK
0x0728	0x060000  	RETURN
; end of _ShortToStr
__Lib_FAT32____?ag:
0xE83A	0xFA0000  	LNK	#0
L_end___Lib_FAT32___?ag:
0xE83C	0xFA8000  	ULNK
0xE83E	0x060000  	RETURN
; end of __Lib_FAT32____?ag
_Uart2_Interrupt:
0xF4DE	0xF80034  	PUSH	PSVPAG
0xF4E0	0xF80036  	PUSH	RCOUNT
0xF4E2	0x781F80  	PUSH	W0
0xF4E4	0x200020  	MOV	#2, W0
0xF4E6	0x09000C  	REPEAT	#12
0xF4E8	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,1959 :: 		begin
;GRR3000LManagementPanel.mpas,1961 :: 		RS485Master_Receive(ReceiveData);
0xF4EA	0x781F8A  	PUSH	W10
0xF4EC	0x214A8A  	MOV	#lo_addr(_ReceiveData), W10
0xF4EE	0x07F4D8  	RCALL	_Rs485master_Receive
;GRR3000LManagementPanel.mpas,1963 :: 		U2RXIF_bit := 0;                  // ensure interrupt not pending
0xF4F0	0xA90087  	BCLR	U2RXIF_bit, BitPos(U2RXIF_bit+0)
;GRR3000LManagementPanel.mpas,1968 :: 		end;
L_end_Uart2_Interrupt:
0xF4F2	0x78054F  	POP	W10
0xF4F4	0x2001A0  	MOV	#26, W0
0xF4F6	0x09000C  	REPEAT	#12
0xF4F8	0x78104F  	POP	[W0--]
0xF4FA	0x78004F  	POP	W0
0xF4FC	0xF90036  	POP	RCOUNT
0xF4FE	0xF90034  	POP	PSVPAG
0xF500	0x064000  	RETFIE
; end of _Uart2_Interrupt
_Rs485master_Receive:
0xDEA0	0xFA0000  	LNK	#0
;__Lib_RS485.mpas,384 :: 		
;__Lib_RS485.mpas,387 :: 		
0xDEA2	0x805390  	MOV	_UART_Rdy_Ptr, W0
0xDEA4	0x781F8A  	PUSH	W10
0xDEA6	0x010000  	CALL	W0
0xDEA8	0x78054F  	POP	W10
0xDEAA	0xE10060  	CP	W0, #0
0xDEAC	0x3A0001  	BRA NZ	L__Rs485master_Receive124
L__Rs485master_Receive248:
;__Lib_RS485.mpas,388 :: 		
0xDEAE	0x3700C8  	BRA	L_end__Rs485master_Receive
L__Rs485master_Receive124:
;__Lib_RS485.mpas,390 :: 		
0xDEB0	0x8053A0  	MOV	_UART_Rd_Ptr, W0
0xDEB2	0x781F8A  	PUSH	W10
0xDEB4	0x010000  	CALL	W0
0xDEB6	0x78054F  	POP	W10
0xDEB8	0x8853D0  	MOV	W0, __Lib_RS485_rec_M
;__Lib_RS485.mpas,394 :: 		
0xDEBA	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDEBC	0xE10061  	CP	W0, #1
0xDEBE	0x3A000A  	BRA NZ	L__Rs485master_Receive129
L__Rs485master_Receive249:
;__Lib_RS485.mpas,395 :: 		
0xDEC0	0x200961  	MOV	#150, W1
0xDEC2	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDEC4	0xE10810  	CP	W1, [W0]
0xDEC6	0x3A0005  	BRA NZ	L__Rs485master_Receive131
L__Rs485master_Receive250:
;__Lib_RS485.mpas,397 :: 		
0xDEC8	0x200020  	MOV	#2, W0
0xDECA	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,398 :: 		
0xDECC	0x209751  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W1
0xDECE	0xEF2000  	CLR	W0
0xDED0	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,399 :: 		
L__Rs485master_Receive131:
;__Lib_RS485.mpas,400 :: 		
0xDED2	0x3700B6  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive129:
;__Lib_RS485.mpas,403 :: 		
0xDED4	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDED6	0xE10062  	CP	W0, #2
0xDED8	0x3A000B  	BRA NZ	L__Rs485master_Receive135
L__Rs485master_Receive251:
;__Lib_RS485.mpas,404 :: 		
0xDEDA	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDEDC	0x8853E0  	MOV	W0, __Lib_RS485_addr_M
;__Lib_RS485.mpas,405 :: 		
0xDEDE	0x200030  	MOV	#3, W0
0xDEE0	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,406 :: 		
0xDEE2	0x4500E6  	ADD	W10, #6, W1
0xDEE4	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDEE6	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,407 :: 		
0xDEE8	0x8053D1  	MOV	__Lib_RS485_rec_M, W1
0xDEEA	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDEEC	0x68C810  	XOR.B	W1, [W0], [W0]
;__Lib_RS485.mpas,408 :: 		
0xDEEE	0x3700A8  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive135:
;__Lib_RS485.mpas,411 :: 		
0xDEF0	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDEF2	0xE10063  	CP	W0, #3
0xDEF4	0x3A0024  	BRA NZ	L__Rs485master_Receive138
L__Rs485master_Receive252:
;__Lib_RS485.mpas,412 :: 		
0xDEF6	0x200801  	MOV	#128, W1
0xDEF8	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDEFA	0x608010  	AND	W1, [W0], W0
0xDEFC	0xE10060  	CP	W0, #0
0xDEFE	0x3A0019  	BRA NZ	L__Rs485master_Receive140
L__Rs485master_Receive253:
;__Lib_RS485.mpas,414 :: 		
0xDF00	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDF02	0xA66010  	BTSS	[W0], #6
0xDF04	0x370004  	BRA	L__Rs485master_Receive143
;__Lib_RS485.mpas,415 :: 		
0xDF06	0x4500E6  	ADD	W10, #6, W1
0xDF08	0x8053E0  	MOV	__Lib_RS485_addr_M, W0
0xDF0A	0x680061  	XOR	W0, #1, W0
0xDF0C	0x784880  	MOV.B	W0, [W1]
L__Rs485master_Receive143:
;__Lib_RS485.mpas,416 :: 		
0xDF0E	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDF10	0x885400  	MOV	W0, __Lib_RS485_key_M
;__Lib_RS485.mpas,417 :: 		
0xDF12	0x8053D1  	MOV	__Lib_RS485_rec_M, W1
0xDF14	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDF16	0x68C810  	XOR.B	W1, [W0], [W0]
;__Lib_RS485.mpas,418 :: 		
0xDF18	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDF1A	0x600063  	AND	W0, #3, W0
0xDF1C	0x8853F0  	MOV	W0, __Lib_RS485_datalen_M
;__Lib_RS485.mpas,420 :: 		
0xDF1E	0xE10060  	CP	W0, #0
0xDF20	0x3A0003  	BRA NZ	L__Rs485master_Receive146
L__Rs485master_Receive254:
;__Lib_RS485.mpas,421 :: 		
0xDF22	0x200050  	MOV	#5, W0
0xDF24	0x884B60  	MOV	W0, __Lib_RS485_ms_state
0xDF26	0x370004  	BRA	L__Rs485master_Receive147
;__Lib_RS485.mpas,422 :: 		
L__Rs485master_Receive146:
;__Lib_RS485.mpas,424 :: 		
0xDF28	0x200010  	MOV	#1, W0
0xDF2A	0x8853C0  	MOV	W0, __Lib_RS485_i_M
;__Lib_RS485.mpas,425 :: 		
0xDF2C	0x200040  	MOV	#4, W0
0xDF2E	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,426 :: 		
L__Rs485master_Receive147:
;__Lib_RS485.mpas,427 :: 		
0xDF30	0x370005  	BRA	L__Rs485master_Receive141
;__Lib_RS485.mpas,429 :: 		
L__Rs485master_Receive140:
;__Lib_RS485.mpas,431 :: 		
0xDF32	0x4500E5  	ADD	W10, #5, W1
0xDF34	0xB3CFF0  	MOV.B	#255, W0
0xDF36	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,432 :: 		
0xDF38	0x200010  	MOV	#1, W0
0xDF3A	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,433 :: 		
L__Rs485master_Receive141:
;__Lib_RS485.mpas,434 :: 		
0xDF3C	0x370081  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive138:
;__Lib_RS485.mpas,437 :: 		
0xDF3E	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDF40	0xE10064  	CP	W0, #4
0xDF42	0x3A0025  	BRA NZ	L__Rs485master_Receive150
L__Rs485master_Receive255:
;__Lib_RS485.mpas,439 :: 		
0xDF44	0x200A91  	MOV	#169, W1
0xDF46	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDF48	0xE10810  	CP	W1, [W0]
0xDF4A	0x3A0006  	BRA NZ	L__Rs485master_Receive152
L__Rs485master_Receive256:
;__Lib_RS485.mpas,441 :: 		
0xDF4C	0x4500E5  	ADD	W10, #5, W1
0xDF4E	0xB3CFF0  	MOV.B	#255, W0
0xDF50	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,442 :: 		
0xDF52	0x200010  	MOV	#1, W0
0xDF54	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,443 :: 		
0xDF56	0x370074  	BRA	L_end__Rs485master_Receive
;__Lib_RS485.mpas,444 :: 		
L__Rs485master_Receive152:
;__Lib_RS485.mpas,447 :: 		
0xDF58	0x8053F1  	MOV	__Lib_RS485_datalen_M, W1
0xDF5A	0x20A780  	MOV	#lo_addr(__Lib_RS485_i_M), W0
0xDF5C	0x508010  	SUB	W1, [W0], W0
0xDF5E	0x32000C  	BRA Z	L__Rs485master_Receive155
L__Rs485master_Receive257:
;__Lib_RS485.mpas,449 :: 		
0xDF60	0x8053C0  	MOV	__Lib_RS485_i_M, W0
0xDF62	0xED2000  	DEC	W0
0xDF64	0x450080  	ADD	W10, W0, W1
0xDF66	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDF68	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,450 :: 		
0xDF6A	0x8053D1  	MOV	__Lib_RS485_rec_M, W1
0xDF6C	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDF6E	0x68C810  	XOR.B	W1, [W0], [W0]
;__Lib_RS485.mpas,451 :: 		
0xDF70	0x200011  	MOV	#1, W1
0xDF72	0x20A780  	MOV	#lo_addr(__Lib_RS485_i_M), W0
0xDF74	0x408810  	ADD	W1, [W0], [W0]
;__Lib_RS485.mpas,452 :: 		
0xDF76	0x37000A  	BRA	L__Rs485master_Receive156
;__Lib_RS485.mpas,453 :: 		
L__Rs485master_Receive155:
;__Lib_RS485.mpas,455 :: 		
0xDF78	0x8053C0  	MOV	__Lib_RS485_i_M, W0
0xDF7A	0xED2000  	DEC	W0
0xDF7C	0x450080  	ADD	W10, W0, W1
0xDF7E	0x8053D0  	MOV	__Lib_RS485_rec_M, W0
0xDF80	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,456 :: 		
0xDF82	0x200050  	MOV	#5, W0
0xDF84	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,457 :: 		
0xDF86	0x8053D1  	MOV	__Lib_RS485_rec_M, W1
0xDF88	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDF8A	0x68C810  	XOR.B	W1, [W0], [W0]
;__Lib_RS485.mpas,458 :: 		
L__Rs485master_Receive156:
;__Lib_RS485.mpas,459 :: 		
0xDF8C	0x370059  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive150:
;__Lib_RS485.mpas,462 :: 		
0xDF8E	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDF90	0xE10065  	CP	W0, #5
0xDF92	0x3A0022  	BRA NZ	L__Rs485master_Receive159
L__Rs485master_Receive258:
;__Lib_RS485.mpas,463 :: 		
0xDF94	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDF96	0x784010  	MOV.B	[W0], W0
0xDF98	0xEAC100  	COM.B	W0, W2
0xDF9A	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDF9C	0x784802  	MOV.B	W2, [W0]
;__Lib_RS485.mpas,464 :: 		
0xDF9E	0xB3C960  	MOV.B	#150, W0
0xDFA0	0xE11400  	CP.B	W2, W0
0xDFA2	0xEF2002  	CLR	W1
0xDFA4	0x3A0001  	BRA NZ	L__Rs485master_Receive259
0xDFA6	0xEEA002  	COM	W1
L__Rs485master_Receive259:
0xDFA8	0xB3CA90  	MOV.B	#169, W0
0xDFAA	0xE11400  	CP.B	W2, W0
0xDFAC	0xEF2000  	CLR	W0
0xDFAE	0x3A0001  	BRA NZ	L__Rs485master_Receive260
0xDFB0	0xEEA000  	COM	W0
L__Rs485master_Receive260:
0xDFB2	0x708000  	IOR	W1, W0, W0
0xDFB4	0x320003  	BRA Z	L__Rs485master_Receive161
L__Rs485master_Receive261:
;__Lib_RS485.mpas,465 :: 		
0xDFB6	0xB3C011  	MOV.B	#1, W1
0xDFB8	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDFBA	0x40C810  	ADD.B	W1, [W0], [W0]
L__Rs485master_Receive161:
;__Lib_RS485.mpas,466 :: 		
0xDFBC	0x209750  	MOV	#lo_addr(__Lib_RS485_crc_is_ok_M), W0
0xDFBE	0xFB8090  	ZE	[W0], W1
0xDFC0	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDFC2	0xE10810  	CP	W1, [W0]
0xDFC4	0x3A0003  	BRA NZ	L__Rs485master_Receive164
L__Rs485master_Receive262:
;__Lib_RS485.mpas,467 :: 		
0xDFC6	0x200060  	MOV	#6, W0
0xDFC8	0x884B60  	MOV	W0, __Lib_RS485_ms_state
0xDFCA	0x370005  	BRA	L__Rs485master_Receive165
;__Lib_RS485.mpas,468 :: 		
L__Rs485master_Receive164:
;__Lib_RS485.mpas,470 :: 		
0xDFCC	0x4500E5  	ADD	W10, #5, W1
0xDFCE	0xB3CFF0  	MOV.B	#255, W0
0xDFD0	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,471 :: 		
0xDFD2	0x200010  	MOV	#1, W0
0xDFD4	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,472 :: 		
L__Rs485master_Receive165:
;__Lib_RS485.mpas,473 :: 		
0xDFD6	0x370034  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive159:
;__Lib_RS485.mpas,476 :: 		
0xDFD8	0x804B60  	MOV	__Lib_RS485_ms_state, W0
0xDFDA	0xE10066  	CP	W0, #6
0xDFDC	0x3A002F  	BRA NZ	L__Rs485master_Receive168
L__Rs485master_Receive263:
;__Lib_RS485.mpas,477 :: 		
0xDFDE	0x200A91  	MOV	#169, W1
0xDFE0	0x20A7A0  	MOV	#lo_addr(__Lib_RS485_rec_M), W0
0xDFE2	0xE10810  	CP	W1, [W0]
0xDFE4	0x3A0025  	BRA NZ	L__Rs485master_Receive170
L__Rs485master_Receive264:
;__Lib_RS485.mpas,479 :: 		
0xDFE6	0x200010  	MOV	#1, W0
0xDFE8	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,480 :: 		
0xDFEA	0x4500E4  	ADD	W10, #4, W1
0xDFEC	0xB3CFF0  	MOV.B	#255, W0
0xDFEE	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,481 :: 		
0xDFF0	0x4500E3  	ADD	W10, #3, W1
0xDFF2	0x8053F0  	MOV	__Lib_RS485_datalen_M, W0
0xDFF4	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,482 :: 		
0xDFF6	0x200010  	MOV	#1, W0
0xDFF8	0x8853C0  	MOV	W0, __Lib_RS485_i_M
L__Rs485master_Receive172:
0xDFFA	0x8053C1  	MOV	__Lib_RS485_i_M, W1
0xDFFC	0x20A7E0  	MOV	#lo_addr(__Lib_RS485_datalen_M), W0
0xDFFE	0xE10810  	CP	W1, [W0]
0xE000	0x3E0016  	BRA GTU	L__Rs485master_Receive176
L__Rs485master_Receive265:
;__Lib_RS485.mpas,484 :: 		
0xE002	0x200020  	MOV	#2, W0
0xE004	0x8053C2  	MOV	__Lib_RS485_i_M, W2
0xE006	0xDD0002  	SL	W0, W2, W0
;__Lib_RS485.mpas,485 :: 		
0xE008	0xFB8080  	ZE	W0, W1
0xE00A	0x20A800  	MOV	#lo_addr(__Lib_RS485_key_M), W0
0xE00C	0x608010  	AND	W1, [W0], W0
0xE00E	0x320007  	BRA Z	L__Rs485master_Receive178
L__Rs485master_Receive266:
;__Lib_RS485.mpas,486 :: 		
0xE010	0x8053C0  	MOV	__Lib_RS485_i_M, W0
0xE012	0xED2000  	DEC	W0
0xE014	0x450080  	ADD	W10, W0, W1
0xE016	0x450000  	ADD	W10, W0, W0
0xE018	0xFB8010  	ZE	[W0], W0
0xE01A	0x680061  	XOR	W0, #1, W0
0xE01C	0x784880  	MOV.B	W0, [W1]
L__Rs485master_Receive178:
;__Lib_RS485.mpas,487 :: 		
0xE01E	0x8053C1  	MOV	__Lib_RS485_i_M, W1
0xE020	0x20A7E0  	MOV	#lo_addr(__Lib_RS485_datalen_M), W0
0xE022	0xE10810  	CP	W1, [W0]
0xE024	0x320004  	BRA Z	L__Rs485master_Receive176
L__Rs485master_Receive267:
0xE026	0x200011  	MOV	#1, W1
0xE028	0x20A780  	MOV	#lo_addr(__Lib_RS485_i_M), W0
0xE02A	0x408810  	ADD	W1, [W0], [W0]
0xE02C	0x37FFE6  	BRA	L__Rs485master_Receive172
L__Rs485master_Receive176:
;__Lib_RS485.mpas,488 :: 		
0xE02E	0x370005  	BRA	L__Rs485master_Receive171
;__Lib_RS485.mpas,489 :: 		
L__Rs485master_Receive170:
;__Lib_RS485.mpas,491 :: 		
0xE030	0x4500E5  	ADD	W10, #5, W1
0xE032	0xB3CFF0  	MOV.B	#255, W0
0xE034	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,492 :: 		
0xE036	0x200010  	MOV	#1, W0
0xE038	0x884B60  	MOV	W0, __Lib_RS485_ms_state
;__Lib_RS485.mpas,493 :: 		
L__Rs485master_Receive171:
;__Lib_RS485.mpas,503 :: 		
0xE03A	0x370002  	BRA	L__Rs485master_Receive126
L__Rs485master_Receive168:
;__Lib_RS485.mpas,504 :: 		
0xE03C	0x200010  	MOV	#1, W0
0xE03E	0x884B60  	MOV	W0, __Lib_RS485_ms_state
L__Rs485master_Receive126:
;__Lib_RS485.mpas,506 :: 		
L_end__Rs485master_Receive:
L_end_Rs485master_Receive:
0xE040	0xFA8000  	ULNK
0xE042	0x060000  	RETURN
; end of _Rs485master_Receive
_UART1_Read:
0x44BA	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,191 :: 		
;__Lib_UART_12_p30.mpas,192 :: 		
; Result start address is: 2 (W1)
0x44BC	0x801091  	MOV	U1RXREG, W1
;__Lib_UART_12_p30.mpas,193 :: 		
0x44BE	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Read:
0x44C0	0xFA8000  	ULNK
0x44C2	0x060000  	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
0x577C	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,186 :: 		
;__Lib_UART_12_p30.mpas,187 :: 		
; Result start address is: 2 (W1)
0x577E	0xEF2002  	CLR	W1
0x5780	0xAF020E  	BTSC	U1STA, #0
0x5782	0xEC2002  	INC	W1
;__Lib_UART_12_p30.mpas,188 :: 		
0x5784	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_Data_Ready:
0x5786	0xFA8000  	ULNK
0x5788	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_TX_Idle:
0x072A	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,196 :: 		
;__Lib_UART_12_p30.mpas,197 :: 		
; Result start address is: 2 (W1)
0x072C	0xEF2002  	CLR	W1
0x072E	0xAF020F  	BTSC	U1STA, #8
0x0730	0xEC2002  	INC	W1
;__Lib_UART_12_p30.mpas,198 :: 		
0x0732	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART1_TX_Idle:
0x0734	0xFA8000  	ULNK
0x0736	0x060000  	RETURN
; end of _UART1_TX_Idle
_UART2_Read:
0x06A8	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,345 :: 		
;__Lib_UART_12_p30.mpas,346 :: 		
; Result start address is: 2 (W1)
0x06AA	0x8010E1  	MOV	U2RXREG, W1
;__Lib_UART_12_p30.mpas,347 :: 		
0x06AC	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_Read:
0x06AE	0xFA8000  	ULNK
0x06B0	0x060000  	RETURN
; end of _UART2_Read
_UART2_Data_Ready:
0x0620	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,340 :: 		
;__Lib_UART_12_p30.mpas,341 :: 		
; Result start address is: 2 (W1)
0x0622	0xEF2002  	CLR	W1
0x0624	0xAF0218  	BTSC	U2STA, #0
0x0626	0xEC2002  	INC	W1
;__Lib_UART_12_p30.mpas,342 :: 		
0x0628	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_Data_Ready:
0x062A	0xFA8000  	ULNK
0x062C	0x060000  	RETURN
; end of _UART2_Data_Ready
_UART2_TX_Idle:
0x0644	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,350 :: 		
;__Lib_UART_12_p30.mpas,351 :: 		
; Result start address is: 2 (W1)
0x0646	0xEF2002  	CLR	W1
0x0648	0xAF0219  	BTSC	U2STA, #8
0x064A	0xEC2002  	INC	W1
;__Lib_UART_12_p30.mpas,352 :: 		
0x064C	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_UART2_TX_Idle:
0x064E	0xFA8000  	ULNK
0x0650	0x060000  	RETURN
; end of _UART2_TX_Idle
_Timer5Interrupt:
0xF652	0xF80034  	PUSH	PSVPAG
0xF654	0xF80036  	PUSH	RCOUNT
0xF656	0x781F80  	PUSH	W0
0xF658	0x200020  	MOV	#2, W0
0xF65A	0x09000C  	REPEAT	#12
0xF65C	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,2621 :: 		begin
;GRR3000LManagementPanel.mpas,2623 :: 		IEC1.6 := 0;
0xF65E	0xA9C08E  	BCLR	IEC1, #6
;GRR3000LManagementPanel.mpas,2624 :: 		T5CON  := 0x0000;
0xF660	0xEF2120  	CLR	T5CON
;GRR3000LManagementPanel.mpas,2626 :: 		Check_Modbus();
0xF662	0x07F41B  	RCALL	_Check_Modbus
;GRR3000LManagementPanel.mpas,2628 :: 		IFS1.6 :=0;
0xF664	0xA9C086  	BCLR	IFS1, #6
;GRR3000LManagementPanel.mpas,2629 :: 		IEC1.6 :=1;
0xF666	0xA8C08E  	BSET	IEC1, #6
;GRR3000LManagementPanel.mpas,2630 :: 		T5CON := 0x8000; //start TMR5
0xF668	0x280000  	MOV	#32768, W0
0xF66A	0xB7A120  	MOV	WREG, T5CON
;GRR3000LManagementPanel.mpas,2631 :: 		end;
L_end_Timer5Interrupt:
0xF66C	0x2001A0  	MOV	#26, W0
0xF66E	0x09000C  	REPEAT	#12
0xF670	0x78104F  	POP	[W0--]
0xF672	0x78004F  	POP	W0
0xF674	0xF90036  	POP	RCOUNT
0xF676	0xF90034  	POP	PSVPAG
0xF678	0x064000  	RETFIE
; end of _Timer5Interrupt
_Check_Modbus:
;Modbus.mpas,680 :: 		begin
;Modbus.mpas,682 :: 		asm ClrWDT; end;
0xDE9A	0xFE6000  	CLRWDT
;Modbus.mpas,805 :: 		asm ClrWDT; end;
0xDE9C	0xFE6000  	CLRWDT
;Modbus.mpas,807 :: 		end;
L_end_Check_Modbus:
0xDE9E	0x060000  	RETURN
; end of _Check_Modbus
_Timer4Interrupt:
0xF090	0xF80034  	PUSH	PSVPAG
0xF092	0xF80036  	PUSH	RCOUNT
0xF094	0x781F80  	PUSH	W0
0xF096	0x200020  	MOV	#2, W0
0xF098	0x09000C  	REPEAT	#12
0xF09A	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,2634 :: 		begin
;GRR3000LManagementPanel.mpas,2635 :: 		IEC1.5 :=0;
0xF09C	0x781F8A  	PUSH	W10
0xF09E	0xA9A08E  	BCLR	IEC1, #5
;GRR3000LManagementPanel.mpas,2636 :: 		T4CON := %0000000000000000; //stop TMR3
0xF0A0	0xEF211E  	CLR	T4CON
;GRR3000LManagementPanel.mpas,2638 :: 		if (Up_Button =0) then
0xF0A2	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xF0A4	0x37000F  	BRA	L__Timer4Interrupt422
;GRR3000LManagementPanel.mpas,2641 :: 		UP_PressBit := 1;
0xF0A6	0x208040  	MOV	#lo_addr(_UP_PressBit), W0
0xF0A8	0xA0A010  	BSET	[W0], BitPos(_UP_PressBit+0)
;GRR3000LManagementPanel.mpas,2642 :: 		Inc(UpButonCounter);
0xF0AA	0x200011  	MOV	#1, W1
0xF0AC	0x208400  	MOV	#lo_addr(_UpButonCounter), W0
0xF0AE	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2643 :: 		if (UpButonCounter > 2000) then // 2sn den fazla basýlmýþsa sadece lcd ekranda ac akým ve gerilim ekranýný deðiþtir
0xF0B0	0x804201  	MOV	_UpButonCounter, W1
0xF0B2	0x207D00  	MOV	#2000, W0
0xF0B4	0xE10800  	CP	W1, W0
0xF0B6	0x360005  	BRA LEU	L__Timer4Interrupt425
L__Timer4Interrupt5090:
;GRR3000LManagementPanel.mpas,2645 :: 		AcViewScreenBit := not AcViewScreenBit;
0xF0B8	0x208CE1  	MOV	#lo_addr(_AcViewScreenBit), W1
0xF0BA	0x208CE0  	MOV	#lo_addr(_AcViewScreenBit), W0
0xF0BC	0xA26010  	BTG	[W0], BitPos(_AcViewScreenBit+0)
;GRR3000LManagementPanel.mpas,2646 :: 		UpButonCounter  := 0;
0xF0BE	0xEF2000  	CLR	W0
0xF0C0	0x884200  	MOV	W0, _UpButonCounter
;GRR3000LManagementPanel.mpas,2647 :: 		end;
L__Timer4Interrupt425:
;GRR3000LManagementPanel.mpas,2649 :: 		end else
0xF0C2	0x370012  	BRA	L__Timer4Interrupt423
L__Timer4Interrupt422:
;GRR3000LManagementPanel.mpas,2650 :: 		if (Up_Button) then
0xF0C4	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xF0C6	0x370010  	BRA	L__Timer4Interrupt428
;GRR3000LManagementPanel.mpas,2652 :: 		if (UP_PressBit = 1) then // butona basýlarak geldiyse
0xF0C8	0x208040  	MOV	#lo_addr(_UP_PressBit), W0
0xF0CA	0xA6A010  	BTSS	[W0], BitPos(_UP_PressBit+0)
0xF0CC	0x37000D  	BRA	L__Timer4Interrupt431
;GRR3000LManagementPanel.mpas,2654 :: 		if (UpButonCounter < 2000) then // 2sn den az basýlmýþsa sadece voltmetre-ampermetre ekranýný deðiþtir
0xF0CE	0x804201  	MOV	_UpButonCounter, W1
0xF0D0	0x207D00  	MOV	#2000, W0
0xF0D2	0xE10800  	CP	W1, W0
0xF0D4	0x310005  	BRA GEU	L__Timer4Interrupt434
L__Timer4Interrupt5091:
;GRR3000LManagementPanel.mpas,2656 :: 		ScreenView      := not ScreenView;
0xF0D6	0x208CE1  	MOV	#lo_addr(_ScreenView), W1
0xF0D8	0x208CE0  	MOV	#lo_addr(_ScreenView), W0
0xF0DA	0xA24010  	BTG	[W0], BitPos(_ScreenView+0)
;GRR3000LManagementPanel.mpas,2657 :: 		UpButonCounter  := 0;
0xF0DC	0xEF2000  	CLR	W0
0xF0DE	0x884200  	MOV	W0, _UpButonCounter
;GRR3000LManagementPanel.mpas,2658 :: 		end;{else
L__Timer4Interrupt434:
;GRR3000LManagementPanel.mpas,2665 :: 		UP_PressBit     := 0;
0xF0E0	0x208040  	MOV	#lo_addr(_UP_PressBit), W0
0xF0E2	0xA1A010  	BCLR	[W0], BitPos(_UP_PressBit+0)
;GRR3000LManagementPanel.mpas,2666 :: 		UpButonCounter  := 0;
0xF0E4	0xEF2000  	CLR	W0
0xF0E6	0x884200  	MOV	W0, _UpButonCounter
;GRR3000LManagementPanel.mpas,2667 :: 		end;
L__Timer4Interrupt431:
;GRR3000LManagementPanel.mpas,2668 :: 		end;
L__Timer4Interrupt428:
L__Timer4Interrupt423:
;GRR3000LManagementPanel.mpas,2670 :: 		Inc(Start_Counter);
0xF0E8	0x200011  	MOV	#1, W1
0xF0EA	0x2157E0  	MOV	#lo_addr(_Start_Counter), W0
0xF0EC	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2671 :: 		if (Start_Counter >= 20000) then // program açýldýktan 20sn sonra hatalarý yazmaya baþlayacak  45000
0xF0EE	0x80ABF1  	MOV	_Start_Counter, W1
0xF0F0	0x24E200  	MOV	#20000, W0
0xF0F2	0xE10800  	CP	W1, W0
0xF0F4	0x390004  	BRA LTU	L__Timer4Interrupt437
L__Timer4Interrupt5092:
;GRR3000LManagementPanel.mpas,2673 :: 		Start_Counter := 45000;
0xF0F6	0x2AFC80  	MOV	#45000, W0
0xF0F8	0x88ABF0  	MOV	W0, _Start_Counter
;GRR3000LManagementPanel.mpas,2674 :: 		Start_Bit     := 1;
0xF0FA	0x212A40  	MOV	#lo_addr(_Start_Bit), W0
0xF0FC	0xA0E010  	BSET	[W0], BitPos(_Start_Bit+0)
;GRR3000LManagementPanel.mpas,2675 :: 		end;
L__Timer4Interrupt437:
;GRR3000LManagementPanel.mpas,2677 :: 		Inc(ScreenCounter);
0xF0FE	0x200011  	MOV	#1, W1
0xF100	0x208D40  	MOV	#lo_addr(_ScreenCounter), W0
0xF102	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2679 :: 		if (posleakbit = 0) then
0xF104	0x208CE0  	MOV	#lo_addr(_posleakbit), W0
0xF106	0xA73010  	BTSC	[W0], BitPos(_posleakbit+0)
0xF108	0x37000C  	BRA	L__Timer4Interrupt440
;GRR3000LManagementPanel.mpas,2681 :: 		inc(PosCounter);
0xF10A	0x200011  	MOV	#1, W1
0xF10C	0x208DA0  	MOV	#lo_addr(_PosCounter), W0
0xF10E	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2682 :: 		if (PosCounter > 2000) then
0xF110	0x8046D1  	MOV	_PosCounter, W1
0xF112	0x207D00  	MOV	#2000, W0
0xF114	0xE10800  	CP	W1, W0
0xF116	0x360004  	BRA LEU	L__Timer4Interrupt443
L__Timer4Interrupt5093:
;GRR3000LManagementPanel.mpas,2684 :: 		Pos_Leakage_bit := 0;
0xF118	0x2092C0  	MOV	#lo_addr(_Pos_Leakage_bit), W0
0xF11A	0xA17010  	BCLR	[W0], BitPos(_Pos_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,2685 :: 		PosCounter      := 2000;
0xF11C	0x207D00  	MOV	#2000, W0
0xF11E	0x8846D0  	MOV	W0, _PosCounter
;GRR3000LManagementPanel.mpas,2686 :: 		end;
L__Timer4Interrupt443:
;GRR3000LManagementPanel.mpas,2687 :: 		end else
0xF120	0x370004  	BRA	L__Timer4Interrupt441
L__Timer4Interrupt440:
;GRR3000LManagementPanel.mpas,2689 :: 		PosCounter      := 0;
0xF122	0xEF2000  	CLR	W0
0xF124	0x8846D0  	MOV	W0, _PosCounter
;GRR3000LManagementPanel.mpas,2690 :: 		Pos_Leakage_bit := 1;
0xF126	0x2092C0  	MOV	#lo_addr(_Pos_Leakage_bit), W0
0xF128	0xA07010  	BSET	[W0], BitPos(_Pos_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,2692 :: 		end;
L__Timer4Interrupt441:
;GRR3000LManagementPanel.mpas,2694 :: 		if (negleakbit = 0) then
0xF12A	0x208CE0  	MOV	#lo_addr(_negleakbit), W0
0xF12C	0xA75010  	BTSC	[W0], BitPos(_negleakbit+0)
0xF12E	0x37000C  	BRA	L__Timer4Interrupt446
;GRR3000LManagementPanel.mpas,2696 :: 		inc(NegCounter);
0xF130	0x200011  	MOV	#1, W1
0xF132	0x208DC0  	MOV	#lo_addr(_NegCounter), W0
0xF134	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2697 :: 		if (NegCounter > 2000) then
0xF136	0x8046E1  	MOV	_NegCounter, W1
0xF138	0x207D00  	MOV	#2000, W0
0xF13A	0xE10800  	CP	W1, W0
0xF13C	0x360004  	BRA LEU	L__Timer4Interrupt449
L__Timer4Interrupt5094:
;GRR3000LManagementPanel.mpas,2699 :: 		Neg_Leakage_bit := 0;
0xF13E	0x2092C0  	MOV	#lo_addr(_Neg_Leakage_bit), W0
0xF140	0xA16010  	BCLR	[W0], BitPos(_Neg_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,2700 :: 		NegCounter      := 2000;
0xF142	0x207D00  	MOV	#2000, W0
0xF144	0x8846E0  	MOV	W0, _NegCounter
;GRR3000LManagementPanel.mpas,2701 :: 		end;
L__Timer4Interrupt449:
;GRR3000LManagementPanel.mpas,2702 :: 		end else
0xF146	0x370004  	BRA	L__Timer4Interrupt447
L__Timer4Interrupt446:
;GRR3000LManagementPanel.mpas,2704 :: 		NegCounter      := 0;
0xF148	0xEF2000  	CLR	W0
0xF14A	0x8846E0  	MOV	W0, _NegCounter
;GRR3000LManagementPanel.mpas,2705 :: 		Neg_Leakage_bit := 1;
0xF14C	0x2092C0  	MOV	#lo_addr(_Neg_Leakage_bit), W0
0xF14E	0xA06010  	BSET	[W0], BitPos(_Neg_Leakage_bit+0)
;GRR3000LManagementPanel.mpas,2707 :: 		end;
L__Timer4Interrupt447:
;GRR3000LManagementPanel.mpas,2710 :: 		if (Bat_Service_Timer_bit = 1) then
0xF150	0x208040  	MOV	#lo_addr(_Bat_Service_Timer_bit), W0
0xF152	0xA69010  	BTSS	[W0], BitPos(_Bat_Service_Timer_bit+0)
0xF154	0x370003  	BRA	L__Timer4Interrupt452
;GRR3000LManagementPanel.mpas,2711 :: 		Inc(Bat_Service_Timer);
0xF156	0x200011  	MOV	#1, W1
0xF158	0x208D00  	MOV	#lo_addr(_Bat_Service_Timer), W0
0xF15A	0x408810  	ADD	W1, [W0], [W0]
L__Timer4Interrupt452:
;GRR3000LManagementPanel.mpas,2713 :: 		if (Bakim_Start = 1) then
0xF15C	0x208040  	MOV	#lo_addr(_Bakim_Start), W0
0xF15E	0xA62010  	BTSS	[W0], BitPos(_Bakim_Start+0)
0xF160	0x370034  	BRA	L__Timer4Interrupt455
;GRR3000LManagementPanel.mpas,2715 :: 		Inc(QuitTimeCounter);
0xF162	0x200011  	MOV	#1, W1
0xF164	0x200002  	MOV	#0, W2
0xF166	0x208180  	MOV	#lo_addr(_QuitTimeCounter), W0
0xF168	0x409810  	ADD	W1, [W0], [W0++]
0xF16A	0x491010  	ADDC	W2, [W0], [W0--]
;GRR3000LManagementPanel.mpas,2716 :: 		if ((QuitTimeCounter >= QuitTime_Sec)or(QuitVoltBit = 1)) then // bakým süresi dolmuþsa veya deþarj olmuþsa
0xF16C	0x8040C2  	MOV	_QuitTimeCounter, W2
0xF16E	0x8040D3  	MOV	_QuitTimeCounter+2, W3
0xF170	0x212300  	MOV	#lo_addr(_QuitTime_Sec), W0
0xF172	0xE11030  	CP	W2, [W0++]
0xF174	0xE19820  	CPB	W3, [W0--]
0xF176	0xEF2002  	CLR	W1
0xF178	0x350001  	BRA LT	L__Timer4Interrupt5095
0xF17A	0xEEA002  	COM	W1
L__Timer4Interrupt5095:
0xF17C	0x208040  	MOV	#lo_addr(_QuitVoltBit), W0
0xF17E	0xA65010  	BTSS	[W0], BitPos(_QuitVoltBit+0)
0xF180	0xA90042  	BCLR	SR, #0
0xF182	0xA75010  	BTSC	[W0], BitPos(_QuitVoltBit+0)
0xF184	0xA80042  	BSET	SR, #0
0xF186	0xEF6000  	CLR.B	W0
0xF188	0xAF0042  	BTSC	SR, #0
0xF18A	0xEC6000  	INC.B	W0
0xF18C	0xFB8000  	ZE	W0, W0
0xF18E	0x708000  	IOR	W1, W0, W0
0xF190	0x32001B  	BRA Z	L__Timer4Interrupt458
L__Timer4Interrupt5096:
;GRR3000LManagementPanel.mpas,2718 :: 		QuitTimeCounter         := 0;
0xF192	0xEF2000  	CLR	W0
0xF194	0xEF2002  	CLR	W1
0xF196	0x8840C0  	MOV	W0, _QuitTimeCounter
0xF198	0x8840D1  	MOV	W1, _QuitTimeCounter+2
;GRR3000LManagementPanel.mpas,2719 :: 		BakimControlBit         := 0; // yeniden bakým kontrolü yapýlsýn
0xF19A	0x212A40  	MOV	#lo_addr(_BakimControlBit), W0
0xF19C	0xA1A010  	BCLR	[W0], BitPos(_BakimControlBit+0)
;GRR3000LManagementPanel.mpas,2720 :: 		BakimStartBit           := 0; // bakýmý durdur
0xF19E	0x208040  	MOV	#lo_addr(_BakimStartBit), W0
0xF1A0	0xA13010  	BCLR	[W0], BitPos(_BakimStartBit+0)
;GRR3000LManagementPanel.mpas,2721 :: 		Bakim_Start             := 0;
0xF1A2	0x208040  	MOV	#lo_addr(_Bakim_Start), W0
0xF1A4	0xA12010  	BCLR	[W0], BitPos(_Bakim_Start+0)
;GRR3000LManagementPanel.mpas,2722 :: 		BakimLockBit            := 1;
0xF1A6	0x208040  	MOV	#lo_addr(_BakimLockBit), W0
0xF1A8	0xA04010  	BSET	[W0], BitPos(_BakimLockBit+0)
;GRR3000LManagementPanel.mpas,2723 :: 		Bat_Service_Unit1       := 1;
0xF1AA	0x208CE0  	MOV	#lo_addr(_Bat_Service_Unit1), W0
0xF1AC	0xA01010  	BSET	[W0], BitPos(_Bat_Service_Unit1+0)
;GRR3000LManagementPanel.mpas,2724 :: 		Bat_Service_Unit2       := 1;
0xF1AE	0x208CE0  	MOV	#lo_addr(_Bat_Service_Unit2), W0
0xF1B0	0xA00010  	BSET	[W0], BitPos(_Bat_Service_Unit2+0)
;GRR3000LManagementPanel.mpas,2725 :: 		Bat_Service_Timer       := 0;
0xF1B2	0xEF2000  	CLR	W0
0xF1B4	0x884680  	MOV	W0, _Bat_Service_Timer
;GRR3000LManagementPanel.mpas,2726 :: 		Bat_Service_Timer_bit   := 0;
0xF1B6	0x208040  	MOV	#lo_addr(_Bat_Service_Timer_bit), W0
0xF1B8	0xA19010  	BCLR	[W0], BitPos(_Bat_Service_Timer_bit+0)
;GRR3000LManagementPanel.mpas,2727 :: 		BakimInitBit            := 0;
0xF1BA	0x208CE0  	MOV	#lo_addr(_BakimInitBit), W0
0xF1BC	0xA12010  	BCLR	[W0], BitPos(_BakimInitBit+0)
;GRR3000LManagementPanel.mpas,2728 :: 		Service_Charge_StateBit := 10;
0xF1BE	0x208141  	MOV	#lo_addr(_Service_Charge_StateBit), W1
0xF1C0	0xB3C0A0  	MOV.B	#10, W0
0xF1C2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2730 :: 		StopBit   := 0;
0xF1C4	0x212A40  	MOV	#lo_addr(_StopBit), W0
0xF1C6	0xA1F010  	BCLR	[W0], BitPos(_StopBit+0)
;GRR3000LManagementPanel.mpas,2733 :: 		end;
L__Timer4Interrupt458:
;GRR3000LManagementPanel.mpas,2734 :: 		end else QuitTimeCounter := 0;
0xF1C8	0x370004  	BRA	L__Timer4Interrupt456
L__Timer4Interrupt455:
0xF1CA	0xEF2000  	CLR	W0
0xF1CC	0xEF2002  	CLR	W1
0xF1CE	0x8840C0  	MOV	W0, _QuitTimeCounter
0xF1D0	0x8840D1  	MOV	W1, _QuitTimeCounter+2
L__Timer4Interrupt456:
;GRR3000LManagementPanel.mpas,2741 :: 		if ((Ok_Button =0)or(Down_Button =0)or(Up_Button =0)) then
0xF1D2	0xA90008  	BCLR	W4, #0
0xF1D4	0xAE02D4  	BTSS	Ok_Button, BitPos(Ok_Button+0)
0xF1D6	0xA80008  	BSET	W4, #0
0xF1D8	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xF1DA	0xA80042  	BSET	SR, #0
0xF1DC	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xF1DE	0xA90042  	BCLR	SR, #0
0xF1E0	0xAE0008  	BTSS	W4, #0
0xF1E2	0xAF0042  	BTSC	SR, #0
0xF1E4	0x370002  	BRA	L__Timer4Interrupt5097
0xF1E6	0xA90008  	BCLR	W4, #0
0xF1E8	0x370001  	BRA	L__Timer4Interrupt5100
L__Timer4Interrupt5097:
0xF1EA	0xA80008  	BSET	W4, #0
L__Timer4Interrupt5100:
0xF1EC	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xF1EE	0xA80042  	BSET	SR, #0
0xF1F0	0xAFA2CF  	BTSC	RC13_bit, BitPos(RC13_bit+0)
0xF1F2	0xA90042  	BCLR	SR, #0
0xF1F4	0xAE0008  	BTSS	W4, #0
0xF1F6	0xAF0042  	BTSC	SR, #0
0xF1F8	0x370002  	BRA	L__Timer4Interrupt5101
0xF1FA	0xA90008  	BCLR	W4, #0
0xF1FC	0x370001  	BRA	L__Timer4Interrupt5104
L__Timer4Interrupt5101:
0xF1FE	0xA80008  	BSET	W4, #0
L__Timer4Interrupt5104:
0xF200	0xAE0008  	BTSS	W4, #0
0xF202	0x370009  	BRA	L__Timer4Interrupt461
;GRR3000LManagementPanel.mpas,2743 :: 		MenuExitCounter           := 0;
0xF204	0xEF2000  	CLR	W0
0xF206	0xEF2002  	CLR	W1
0xF208	0x88A660  	MOV	W0, _MenuExitCounter
0xF20A	0x88A671  	MOV	W1, _MenuExitCounter+2
;GRR3000LManagementPanel.mpas,2744 :: 		Bat_Curve_Scan_State_bit  := 10;
0xF20C	0x208C31  	MOV	#lo_addr(_Bat_Curve_Scan_State_bit), W1
0xF20E	0xB3C0A0  	MOV.B	#10, W0
0xF210	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2745 :: 		bat_curve_scan_fail       := 0;
0xF212	0x208040  	MOV	#lo_addr(_bat_curve_scan_fail), W0
0xF214	0xA1F010  	BCLR	[W0], BitPos(_bat_curve_scan_fail+0)
;GRR3000LManagementPanel.mpas,2746 :: 		end;
L__Timer4Interrupt461:
;GRR3000LManagementPanel.mpas,2748 :: 		Inc(MenuExitCounter);
0xF216	0x200011  	MOV	#1, W1
0xF218	0x200002  	MOV	#0, W2
0xF21A	0x214CC0  	MOV	#lo_addr(_MenuExitCounter), W0
0xF21C	0x409810  	ADD	W1, [W0], [W0++]
0xF21E	0x491010  	ADDC	W2, [W0], [W0--]
;GRR3000LManagementPanel.mpas,2749 :: 		if (MenuExitCounter > MenuExitValue) then // menuden otomatik çýkma sayacý
0xF220	0x275301  	MOV	#30000, W1
0xF222	0x200002  	MOV	#0, W2
0xF224	0x214CC0  	MOV	#lo_addr(_MenuExitCounter), W0
0xF226	0xE10830  	CP	W1, [W0++]
0xF228	0xE19020  	CPB	W2, [W0--]
0xF22A	0x3D0033  	BRA GE	L__Timer4Interrupt464
L__Timer4Interrupt5105:
;GRR3000LManagementPanel.mpas,2751 :: 		MainMenuExit         := 255;
0xF22C	0x213881  	MOV	#lo_addr(_MainMenuExit), W1
0xF22E	0xB3CFF0  	MOV.B	#255, W0
0xF230	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2752 :: 		MenuExit             := 255;
0xF232	0x214661  	MOV	#lo_addr(_MenuExit), W1
0xF234	0xB3CFF0  	MOV.B	#255, W0
0xF236	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2753 :: 		Chng[1]              := 0;
0xF238	0x2124C1  	MOV	#lo_addr(_Chng), W1
0xF23A	0xEF2000  	CLR	W0
0xF23C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2754 :: 		Chng[2]              := 0;
0xF23E	0x2124D1  	MOV	#lo_addr(_Chng+1), W1
0xF240	0xEF2000  	CLR	W0
0xF242	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2755 :: 		Chng[3]              := 0;
0xF244	0x2124E1  	MOV	#lo_addr(_Chng+2), W1
0xF246	0xEF2000  	CLR	W0
0xF248	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2756 :: 		Chng[4]              := 0;
0xF24A	0x2124F1  	MOV	#lo_addr(_Chng+3), W1
0xF24C	0xEF2000  	CLR	W0
0xF24E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2757 :: 		Chng[5]              := 0;
0xF250	0x212501  	MOV	#lo_addr(_Chng+4), W1
0xF252	0xEF2000  	CLR	W0
0xF254	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2758 :: 		Chng[6]              := 0;
0xF256	0x212511  	MOV	#lo_addr(_Chng+5), W1
0xF258	0xEF2000  	CLR	W0
0xF25A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2759 :: 		Chng[7]              := 0;
0xF25C	0x212521  	MOV	#lo_addr(_Chng+6), W1
0xF25E	0xEF2000  	CLR	W0
0xF260	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2760 :: 		Chng[8]              := 0;
0xF262	0x212531  	MOV	#lo_addr(_Chng+7), W1
0xF264	0xEF2000  	CLR	W0
0xF266	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2761 :: 		Chng[9]              := 0;
0xF268	0x212541  	MOV	#lo_addr(_Chng+8), W1
0xF26A	0xEF2000  	CLR	W0
0xF26C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2762 :: 		Chng[10]             := 0;
0xF26E	0x212551  	MOV	#lo_addr(_Chng+9), W1
0xF270	0xEF2000  	CLR	W0
0xF272	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2763 :: 		Chng[11]             := 0;
0xF274	0x212561  	MOV	#lo_addr(_Chng+10), W1
0xF276	0xEF2000  	CLR	W0
0xF278	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2764 :: 		Chng[12]             := 0;
0xF27A	0x212571  	MOV	#lo_addr(_Chng+11), W1
0xF27C	0xEF2000  	CLR	W0
0xF27E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2765 :: 		Chng[13]             := 0;
0xF280	0x212581  	MOV	#lo_addr(_Chng+12), W1
0xF282	0xEF2000  	CLR	W0
0xF284	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2766 :: 		Chng[14]             := 0;
0xF286	0x212591  	MOV	#lo_addr(_Chng+13), W1
0xF288	0xEF2000  	CLR	W0
0xF28A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2767 :: 		Chng[15]             := 0;
0xF28C	0x2125A1  	MOV	#lo_addr(_Chng+14), W1
0xF28E	0xEF2000  	CLR	W0
0xF290	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2768 :: 		end;
L__Timer4Interrupt464:
;GRR3000LManagementPanel.mpas,2770 :: 		if (Program_StartBit =1) then
0xF292	0x215960  	MOV	#lo_addr(_Program_StartBit), W0
0xF294	0xA61010  	BTSS	[W0], BitPos(_Program_StartBit+0)
0xF296	0x370014  	BRA	L__Timer4Interrupt467
;GRR3000LManagementPanel.mpas,2773 :: 		if ((MenuBit =0)and(Start_Bit = 1)) then
0xF298	0x212A40  	MOV	#lo_addr(_MenuBit), W0
0xF29A	0xA90008  	BCLR	W4, #0
0xF29C	0xA6C010  	BTSS	[W0], BitPos(_MenuBit+0)
0xF29E	0xA80008  	BSET	W4, #0
0xF2A0	0x212A40  	MOV	#lo_addr(_Start_Bit), W0
0xF2A2	0xA6E010  	BTSS	[W0], BitPos(_Start_Bit+0)
0xF2A4	0xA90042  	BCLR	SR, #0
0xF2A6	0xA7E010  	BTSC	[W0], BitPos(_Start_Bit+0)
0xF2A8	0xA80042  	BSET	SR, #0
0xF2AA	0xAF0008  	BTSC	W4, #0
0xF2AC	0xAE0042  	BTSS	SR, #0
0xF2AE	0x370002  	BRA	L__Timer4Interrupt5107
0xF2B0	0xA80008  	BSET	W4, #0
0xF2B2	0x370001  	BRA	L__Timer4Interrupt5109
L__Timer4Interrupt5107:
0xF2B4	0xA90008  	BCLR	W4, #0
L__Timer4Interrupt5109:
0xF2B6	0xAE0008  	BTSS	W4, #0
0xF2B8	0x370002  	BRA	L__Timer4Interrupt470
;GRR3000LManagementPanel.mpas,2775 :: 		Dropper_Control();
0xF2BA	0x07EACD  	RCALL	_Dropper_Control
;GRR3000LManagementPanel.mpas,2776 :: 		Led_RelayControl();
0xF2BC	0x07EC9B  	RCALL	_Led_RelayControl
;GRR3000LManagementPanel.mpas,2777 :: 		end;
L__Timer4Interrupt470:
;GRR3000LManagementPanel.mpas,2779 :: 		Fan_Heat_Control();
0xF2BE	0x07EF7A  	RCALL	_Fan_Heat_Control
;GRR3000LManagementPanel.mpas,2781 :: 		end;
L__Timer4Interrupt467:
;GRR3000LManagementPanel.mpas,2784 :: 		Modbus_Reg_Data_Fill();
0xF2C0	0x07EB36  	RCALL	_Modbus_Reg_Data_Fill
;GRR3000LManagementPanel.mpas,2786 :: 		if (BCTimeCountBit = 255) then // hýzlý þarj sayacý izni verildiyse
0xF2C2	0x2091E0  	MOV	#lo_addr(_BCTimeCountBit), W0
0xF2C4	0x784090  	MOV.B	[W0], W1
0xF2C6	0xB3CFF0  	MOV.B	#255, W0
0xF2C8	0xE10C00  	CP.B	W1, W0
0xF2CA	0x3A0016  	BRA NZ	L__Timer4Interrupt473
L__Timer4Interrupt5110:
;GRR3000LManagementPanel.mpas,2788 :: 		inc(BCTimeCounter);
0xF2CC	0x200011  	MOV	#1, W1
0xF2CE	0x2091C0  	MOV	#lo_addr(_BCTimeCounter), W0
0xF2D0	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2789 :: 		if (BCTimeCounter > 60000) then // 60 sn olmuþsa  60000
0xF2D2	0x8048E1  	MOV	_BCTimeCounter, W1
0xF2D4	0x2EA600  	MOV	#60000, W0
0xF2D6	0xE10800  	CP	W1, W0
0xF2D8	0x36000F  	BRA LEU	L__Timer4Interrupt476
L__Timer4Interrupt5111:
;GRR3000LManagementPanel.mpas,2791 :: 		BCTimeCounter   := 0;
0xF2DA	0xEF2000  	CLR	W0
0xF2DC	0x8848E0  	MOV	W0, _BCTimeCounter
;GRR3000LManagementPanel.mpas,2792 :: 		BoostChargeTime := BoostChargeTime - 1; // hýzlý þarj süresini bir azalt
0xF2DE	0x200011  	MOV	#1, W1
0xF2E0	0x200002  	MOV	#0, W2
0xF2E2	0x215860  	MOV	#lo_addr(_BoostChargeTime), W0
0xF2E4	0x109810  	SUBR	W1, [W0], [W0++]
0xF2E6	0x191010  	SUBBR	W2, [W0], [W0--]
;GRR3000LManagementPanel.mpas,2793 :: 		if (BoostChargeTime < 1) then
0xF2E8	0x80AC30  	MOV	_BoostChargeTime, W0
0xF2EA	0x80AC41  	MOV	_BoostChargeTime+2, W1
0xF2EC	0xE10061  	CP	W0, #1
0xF2EE	0xE18860  	CPB	W1, #0
0xF2F0	0x3D0003  	BRA GE	L__Timer4Interrupt479
L__Timer4Interrupt5112:
;GRR3000LManagementPanel.mpas,2795 :: 		BCTimeCountBit := 0;// sayýcý izni devredýþý býrakýldý
0xF2F2	0x2091E1  	MOV	#lo_addr(_BCTimeCountBit), W1
0xF2F4	0xEF2000  	CLR	W0
0xF2F6	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2796 :: 		end;
L__Timer4Interrupt479:
;GRR3000LManagementPanel.mpas,2797 :: 		end;
L__Timer4Interrupt476:
;GRR3000LManagementPanel.mpas,2798 :: 		end;
L__Timer4Interrupt473:
;GRR3000LManagementPanel.mpas,2801 :: 		Inc(TimeScreenCounter);
0xF2F8	0x200011  	MOV	#1, W1
0xF2FA	0x214A60  	MOV	#lo_addr(_TimeScreenCounter), W0
0xF2FC	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2804 :: 		if (Program_StartBit = 1) then // program çalýþmaya baþlamýþsa
0xF2FE	0x215960  	MOV	#lo_addr(_Program_StartBit), W0
0xF300	0xA61010  	BTSS	[W0], BitPos(_Program_StartBit+0)
0xF302	0x370025  	BRA	L__Timer4Interrupt482
;GRR3000LManagementPanel.mpas,2807 :: 		if (Haberlesme_izni = 255) then
0xF304	0x214790  	MOV	#lo_addr(_Haberlesme_izni), W0
0xF306	0x784090  	MOV.B	[W0], W1
0xF308	0xB3CFF0  	MOV.B	#255, W0
0xF30A	0xE10C00  	CP.B	W1, W0
0xF30C	0x3A0006  	BRA NZ	L__Timer4Interrupt485
L__Timer4Interrupt5113:
;GRR3000LManagementPanel.mpas,2809 :: 		Uart_Communication_Function(Request_Counter);
0xF30E	0x80A40A  	MOV	_Request_Counter, W10
0xF310	0x07EF93  	RCALL	_Uart_Communication_Function
;GRR3000LManagementPanel.mpas,2810 :: 		Haberlesme_izni := 0;
0xF312	0x214791  	MOV	#lo_addr(_Haberlesme_izni), W1
0xF314	0xEF2000  	CLR	W0
0xF316	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2811 :: 		end else
0xF318	0x370010  	BRA	L__Timer4Interrupt486
L__Timer4Interrupt485:
;GRR3000LManagementPanel.mpas,2812 :: 		if (Haberlesme_izni =0) then
0xF31A	0x214790  	MOV	#lo_addr(_Haberlesme_izni), W0
0xF31C	0x784010  	MOV.B	[W0], W0
0xF31E	0xE10460  	CP.B	W0, #0
0xF320	0x3A000C  	BRA NZ	L__Timer4Interrupt488
L__Timer4Interrupt5114:
;GRR3000LManagementPanel.mpas,2814 :: 		Inc(Request_RepeatCounter);
0xF322	0x200011  	MOV	#1, W1
0xF324	0x214740  	MOV	#lo_addr(_Request_RepeatCounter), W0
0xF326	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2815 :: 		if (Request_RepeatCounter > 100) then
0xF328	0x200641  	MOV	#100, W1
0xF32A	0x214740  	MOV	#lo_addr(_Request_RepeatCounter), W0
0xF32C	0xE10810  	CP	W1, [W0]
0xF32E	0x310005  	BRA GEU	L__Timer4Interrupt491
L__Timer4Interrupt5115:
;GRR3000LManagementPanel.mpas,2817 :: 		Request_RepeatCounter := 0;
0xF330	0xEF2000  	CLR	W0
0xF332	0x88A3A0  	MOV	W0, _Request_RepeatCounter
;GRR3000LManagementPanel.mpas,2818 :: 		Haberlesme_izni       := 255;
0xF334	0x214791  	MOV	#lo_addr(_Haberlesme_izni), W1
0xF336	0xB3CFF0  	MOV.B	#255, W0
0xF338	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2819 :: 		end;
L__Timer4Interrupt491:
;GRR3000LManagementPanel.mpas,2820 :: 		end;
L__Timer4Interrupt488:
L__Timer4Interrupt486:
;GRR3000LManagementPanel.mpas,2822 :: 		if (ReceiveData[4] <> 0) then // veri alýndýysa
0xF33A	0x214AC0  	MOV	#lo_addr(_ReceiveData+4), W0
0xF33C	0x784010  	MOV.B	[W0], W0
0xF33E	0xE10460  	CP.B	W0, #0
0xF340	0x320006  	BRA Z	L__Timer4Interrupt494
L__Timer4Interrupt5116:
;GRR3000LManagementPanel.mpas,2824 :: 		ReceiveData[4]   := 0;
0xF342	0x214AC1  	MOV	#lo_addr(_ReceiveData+4), W1
0xF344	0xEF2000  	CLR	W0
0xF346	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2825 :: 		Haberlesme_izni  := 255;
0xF348	0x214791  	MOV	#lo_addr(_Haberlesme_izni), W1
0xF34A	0xB3CFF0  	MOV.B	#255, W0
0xF34C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2826 :: 		end;
L__Timer4Interrupt494:
;GRR3000LManagementPanel.mpas,2829 :: 		end; //
L__Timer4Interrupt482:
;GRR3000LManagementPanel.mpas,2831 :: 		ButonTimer(); // buton sayacý
0xF34E	0x07F0C6  	RCALL	_ButonTimer
;GRR3000LManagementPanel.mpas,2833 :: 		Comm_Fault_Check();
0xF350	0x07F05F  	RCALL	_Comm_Fault_Check
;GRR3000LManagementPanel.mpas,2835 :: 		if (Comm_FaultModbus =0) then // Modbus da hata yoksa
0xF352	0x209720  	MOV	#lo_addr(_Comm_FaultModbus), W0
0xF354	0x784010  	MOV.B	[W0], W0
0xF356	0xE10460  	CP.B	W0, #0
0xF358	0x3A0005  	BRA NZ	L__Timer4Interrupt497
L__Timer4Interrupt5117:
;GRR3000LManagementPanel.mpas,2837 :: 		Comm_ModbusFaultCounter := 0;
0xF35A	0xEF2000  	CLR	W0
0xF35C	0x884990  	MOV	W0, _Comm_ModbusFaultCounter
;GRR3000LManagementPanel.mpas,2838 :: 		Modbus_FaultBit         := 0;
0xF35E	0x2092C0  	MOV	#lo_addr(_Modbus_FaultBit), W0
0xF360	0xA12010  	BCLR	[W0], BitPos(_Modbus_FaultBit+0)
;GRR3000LManagementPanel.mpas,2839 :: 		end else
0xF362	0x370010  	BRA	L__Timer4Interrupt498
L__Timer4Interrupt497:
;GRR3000LManagementPanel.mpas,2840 :: 		if (Comm_FaultModbus = 255) then
0xF364	0x209720  	MOV	#lo_addr(_Comm_FaultModbus), W0
0xF366	0x784090  	MOV.B	[W0], W1
0xF368	0xB3CFF0  	MOV.B	#255, W0
0xF36A	0xE10C00  	CP.B	W1, W0
0xF36C	0x3A000B  	BRA NZ	L__Timer4Interrupt500
L__Timer4Interrupt5118:
;GRR3000LManagementPanel.mpas,2842 :: 		Inc(Comm_ModbusFaultCounter);
0xF36E	0x200011  	MOV	#1, W1
0xF370	0x209320  	MOV	#lo_addr(_Comm_ModbusFaultCounter), W0
0xF372	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2843 :: 		if (Comm_ModbusFaultCounter > 2000) then
0xF374	0x804991  	MOV	_Comm_ModbusFaultCounter, W1
0xF376	0x207D00  	MOV	#2000, W0
0xF378	0xE10800  	CP	W1, W0
0xF37A	0x360004  	BRA LEU	L__Timer4Interrupt503
L__Timer4Interrupt5119:
;GRR3000LManagementPanel.mpas,2845 :: 		Modbus_FaultBit := 1;
0xF37C	0x2092C0  	MOV	#lo_addr(_Modbus_FaultBit), W0
0xF37E	0xA02010  	BSET	[W0], BitPos(_Modbus_FaultBit+0)
;GRR3000LManagementPanel.mpas,2846 :: 		Comm_ModbusFaultCounter := 2100;
0xF380	0x208340  	MOV	#2100, W0
0xF382	0x884990  	MOV	W0, _Comm_ModbusFaultCounter
;GRR3000LManagementPanel.mpas,2847 :: 		end;
L__Timer4Interrupt503:
;GRR3000LManagementPanel.mpas,2848 :: 		end;
L__Timer4Interrupt500:
L__Timer4Interrupt498:
;GRR3000LManagementPanel.mpas,2850 :: 		Inc(AlarmSiraCounter);
0xF384	0x200011  	MOV	#1, W1
0xF386	0x208F20  	MOV	#lo_addr(_AlarmSiraCounter), W0
0xF388	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2851 :: 		if (AlarmSiraCounter >= 750) then
0xF38A	0x804791  	MOV	_AlarmSiraCounter, W1
0xF38C	0x202EE0  	MOV	#750, W0
0xF38E	0xE10800  	CP	W1, W0
0xF390	0x39000F  	BRA LTU	L__Timer4Interrupt506
L__Timer4Interrupt5120:
;GRR3000LManagementPanel.mpas,2853 :: 		Comm_FaultModbus   := 255;
0xF392	0x209721  	MOV	#lo_addr(_Comm_FaultModbus), W1
0xF394	0xB3CFF0  	MOV.B	#255, W0
0xF396	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2854 :: 		AlarmSiraCounter := 0;
0xF398	0xEF2000  	CLR	W0
0xF39A	0x884790  	MOV	W0, _AlarmSiraCounter
;GRR3000LManagementPanel.mpas,2855 :: 		Inc(AlarmSira);
0xF39C	0xB3C011  	MOV.B	#1, W1
0xF39E	0x2091F0  	MOV	#lo_addr(_AlarmSira), W0
0xF3A0	0x40C810  	ADD.B	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2856 :: 		if (AlarmSira >= 24) then AlarmSira := 0;
0xF3A2	0x2091F0  	MOV	#lo_addr(_AlarmSira), W0
0xF3A4	0x784010  	MOV.B	[W0], W0
0xF3A6	0xE10478  	CP.B	W0, #24
0xF3A8	0x390003  	BRA LTU	L__Timer4Interrupt509
L__Timer4Interrupt5121:
0xF3AA	0x2091F1  	MOV	#lo_addr(_AlarmSira), W1
0xF3AC	0xEF2000  	CLR	W0
0xF3AE	0x784880  	MOV.B	W0, [W1]
L__Timer4Interrupt509:
;GRR3000LManagementPanel.mpas,2857 :: 		end;
L__Timer4Interrupt506:
;GRR3000LManagementPanel.mpas,2859 :: 		if (Buzzer_AllowBit = 1) then // Buzzer izni verildiyse bu iþi yap
0xF3B0	0x208CE0  	MOV	#lo_addr(_Buzzer_AllowBit), W0
0xF3B2	0xA67010  	BTSS	[W0], BitPos(_Buzzer_AllowBit+0)
0xF3B4	0x370024  	BRA	L__Timer4Interrupt512
;GRR3000LManagementPanel.mpas,2861 :: 		if (BuzzerBit = 1) then
0xF3B6	0x208CE0  	MOV	#lo_addr(_BuzzerBit), W0
0xF3B8	0xA68010  	BTSS	[W0], BitPos(_BuzzerBit+0)
0xF3BA	0x37001A  	BRA	L__Timer4Interrupt515
;GRR3000LManagementPanel.mpas,2863 :: 		Inc(Buzzer_Counter);
0xF3BC	0x200011  	MOV	#1, W1
0xF3BE	0x208F00  	MOV	#lo_addr(_Buzzer_Counter), W0
0xF3C0	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2865 :: 		if ((Buzzer_Counter > 2000)and(Buzzer_Counter < 2500)) then
0xF3C2	0x804782  	MOV	_Buzzer_Counter, W2
0xF3C4	0x207D00  	MOV	#2000, W0
0xF3C6	0xE11000  	CP	W2, W0
0xF3C8	0xEF2002  	CLR	W1
0xF3CA	0x360001  	BRA LEU	L__Timer4Interrupt5122
0xF3CC	0xEEA002  	COM	W1
L__Timer4Interrupt5122:
0xF3CE	0x209C40  	MOV	#2500, W0
0xF3D0	0xE11000  	CP	W2, W0
0xF3D2	0xEF2000  	CLR	W0
0xF3D4	0x310001  	BRA GEU	L__Timer4Interrupt5123
0xF3D6	0xEEA000  	COM	W0
L__Timer4Interrupt5123:
0xF3D8	0x608000  	AND	W1, W0, W0
0xF3DA	0x320002  	BRA Z	L__Timer4Interrupt518
L__Timer4Interrupt5124:
;GRR3000LManagementPanel.mpas,2867 :: 		Buzzer := 1;
0xF3DC	0xA8E2C3  	BSET	RA15_bit, BitPos(RA15_bit+0)
;GRR3000LManagementPanel.mpas,2868 :: 		end else
0xF3DE	0x370007  	BRA	L__Timer4Interrupt519
L__Timer4Interrupt518:
;GRR3000LManagementPanel.mpas,2869 :: 		if (Buzzer_Counter > 2500) then
0xF3E0	0x804781  	MOV	_Buzzer_Counter, W1
0xF3E2	0x209C40  	MOV	#2500, W0
0xF3E4	0xE10800  	CP	W1, W0
0xF3E6	0x360003  	BRA LEU	L__Timer4Interrupt521
L__Timer4Interrupt5125:
;GRR3000LManagementPanel.mpas,2871 :: 		Buzzer         := 0;
0xF3E8	0xA9E2C3  	BCLR	RA15_bit, BitPos(RA15_bit+0)
;GRR3000LManagementPanel.mpas,2872 :: 		Buzzer_Counter := 0;
0xF3EA	0xEF2000  	CLR	W0
0xF3EC	0x884780  	MOV	W0, _Buzzer_Counter
;GRR3000LManagementPanel.mpas,2873 :: 		end;
L__Timer4Interrupt521:
L__Timer4Interrupt519:
;GRR3000LManagementPanel.mpas,2874 :: 		end else
0xF3EE	0x370006  	BRA	L__Timer4Interrupt516
L__Timer4Interrupt515:
;GRR3000LManagementPanel.mpas,2875 :: 		if (BuzzerBit =0) then
0xF3F0	0x208CE0  	MOV	#lo_addr(_BuzzerBit), W0
0xF3F2	0xA78010  	BTSC	[W0], BitPos(_BuzzerBit+0)
0xF3F4	0x370003  	BRA	L__Timer4Interrupt524
;GRR3000LManagementPanel.mpas,2877 :: 		Buzzer         := 0;
0xF3F6	0xA9E2C3  	BCLR	RA15_bit, BitPos(RA15_bit+0)
;GRR3000LManagementPanel.mpas,2878 :: 		Buzzer_Counter := 0;
0xF3F8	0xEF2000  	CLR	W0
0xF3FA	0x884780  	MOV	W0, _Buzzer_Counter
;GRR3000LManagementPanel.mpas,2879 :: 		end;
L__Timer4Interrupt524:
L__Timer4Interrupt516:
;GRR3000LManagementPanel.mpas,2880 :: 		end else
0xF3FC	0x370003  	BRA	L__Timer4Interrupt513
L__Timer4Interrupt512:
;GRR3000LManagementPanel.mpas,2882 :: 		Buzzer         := 0;
0xF3FE	0xA9E2C3  	BCLR	RA15_bit, BitPos(RA15_bit+0)
;GRR3000LManagementPanel.mpas,2883 :: 		Buzzer_Counter := 0;
0xF400	0xEF2000  	CLR	W0
0xF402	0x884780  	MOV	W0, _Buzzer_Counter
;GRR3000LManagementPanel.mpas,2884 :: 		end;
L__Timer4Interrupt513:
;GRR3000LManagementPanel.mpas,2886 :: 		IFS1.5 :=0;
0xF404	0xA9A086  	BCLR	IFS1, #5
;GRR3000LManagementPanel.mpas,2887 :: 		IEC1.5 :=1;
0xF406	0xA8A08E  	BSET	IEC1, #5
;GRR3000LManagementPanel.mpas,2888 :: 		T4CON := %1000000000000000; //start TMR3
0xF408	0x280000  	MOV	#32768, W0
0xF40A	0xB7A11E  	MOV	WREG, T4CON
;GRR3000LManagementPanel.mpas,2889 :: 		end;
L_end_Timer4Interrupt:
0xF40C	0x78054F  	POP	W10
0xF40E	0x2001A0  	MOV	#26, W0
0xF410	0x09000C  	REPEAT	#12
0xF412	0x78104F  	POP	[W0--]
0xF414	0x78004F  	POP	W0
0xF416	0xF90036  	POP	RCOUNT
0xF418	0xF90034  	POP	PSVPAG
0xF41A	0x064000  	RETFIE
; end of _Timer4Interrupt
_Dropper_Control:
;GRR3000LManagementPanel.mpas,2536 :: 		begin
;GRR3000LManagementPanel.mpas,2538 :: 		if (Dropper_OutStatus <> 2) then  // dropper durumu devredýþý deðilse, dropper özelliði aktif
0xC856	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC858	0x784010  	MOV.B	[W0], W0
0xC85A	0xE10462  	CP.B	W0, #2
0xC85C	0x320058  	BRA Z	L__Dropper_Control380
L__Dropper_Control5074:
;GRR3000LManagementPanel.mpas,2540 :: 		DropperCloseCounter := 0;
0xC85E	0xEF2000  	CLR	W0
0xC860	0x884970  	MOV	W0, _DropperCloseCounter
;GRR3000LManagementPanel.mpas,2541 :: 		if (Read_LoadVolt > (HucreSayisi * 23)) then // gerilim %110' dan büyükse
0xC862	0x809FF1  	MOV	_HucreSayisi, W1
0xC864	0x200170  	MOV	#23, W0
0xC866	0xB80900  	MUL.UU	W1, W0, W2
0xC868	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xC86A	0xE11010  	CP	W2, [W0]
0xC86C	0x310025  	BRA GEU	L__Dropper_Control383
L__Dropper_Control5075:
;GRR3000LManagementPanel.mpas,2543 :: 		Inc(DropperInitCounter1);
0xC86E	0x200011  	MOV	#1, W1
0xC870	0x2093E0  	MOV	#lo_addr(_DropperInitCounter1), W0
0xC872	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2545 :: 		DropperInitCounter3 := 0;
0xC874	0xEF2000  	CLR	W0
0xC876	0x884A00  	MOV	W0, _DropperInitCounter3
;GRR3000LManagementPanel.mpas,2546 :: 		DropperInitCounter4 := 0;
0xC878	0xEF2000  	CLR	W0
0xC87A	0x884980  	MOV	W0, _DropperInitCounter4
;GRR3000LManagementPanel.mpas,2548 :: 		if (DropperInitCounter1 > DropperSayac) then
0xC87C	0x200FA1  	MOV	#250, W1
0xC87E	0x2093E0  	MOV	#lo_addr(_DropperInitCounter1), W0
0xC880	0xE10810  	CP	W1, [W0]
0xC882	0x310019  	BRA GEU	L__Dropper_Control386
L__Dropper_Control5076:
;GRR3000LManagementPanel.mpas,2550 :: 		DropperInitCounter1 := DropperSayac;
0xC884	0x200FA0  	MOV	#250, W0
0xC886	0x8849F0  	MOV	W0, _DropperInitCounter1
;GRR3000LManagementPanel.mpas,2551 :: 		Dropper_Out_1       := 0; // dropper 1 devrede
0xC888	0xA962D0  	BCLR	LATC3_bit, BitPos(LATC3_bit+0)
;GRR3000LManagementPanel.mpas,2553 :: 		if (Dropper_OutStatus = 3) then // dropper tamamý aktif ise burayý kullan, bypass ise sadece 1 çýkýþý kullan
0xC88A	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC88C	0x784010  	MOV.B	[W0], W0
0xC88E	0xE10463  	CP.B	W0, #3
0xC890	0x3A0012  	BRA NZ	L__Dropper_Control389
L__Dropper_Control5077:
;GRR3000LManagementPanel.mpas,2555 :: 		if (Read_LoadVolt > (HucreSayisi *23)) then // gerilim hala %110' dan büyükse
0xC892	0x809FF1  	MOV	_HucreSayisi, W1
0xC894	0x200170  	MOV	#23, W0
0xC896	0xB80900  	MUL.UU	W1, W0, W2
0xC898	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xC89A	0xE11010  	CP	W2, [W0]
0xC89C	0x31000C  	BRA GEU	L__Dropper_Control392
L__Dropper_Control5078:
;GRR3000LManagementPanel.mpas,2557 :: 		Inc(DropperInitCounter2);
0xC89E	0x200011  	MOV	#1, W1
0xC8A0	0x209420  	MOV	#lo_addr(_DropperInitCounter2), W0
0xC8A2	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2558 :: 		if (DropperInitCounter2 > DropperSayac) then
0xC8A4	0x200FA1  	MOV	#250, W1
0xC8A6	0x209420  	MOV	#lo_addr(_DropperInitCounter2), W0
0xC8A8	0xE10810  	CP	W1, [W0]
0xC8AA	0x310005  	BRA GEU	L__Dropper_Control395
L__Dropper_Control5079:
;GRR3000LManagementPanel.mpas,2560 :: 		DropperInitCounter2 := 1100;
0xC8AC	0x2044C0  	MOV	#1100, W0
0xC8AE	0x884A10  	MOV	W0, _DropperInitCounter2
;GRR3000LManagementPanel.mpas,2561 :: 		DropperInitCounter1 := 0;
0xC8B0	0xEF2000  	CLR	W0
0xC8B2	0x8849F0  	MOV	W0, _DropperInitCounter1
;GRR3000LManagementPanel.mpas,2562 :: 		Dropper_Out_2       := 0; // dropper 2 de devrede
0xC8B4	0xA942D0  	BCLR	LATC2_bit, BitPos(LATC2_bit+0)
;GRR3000LManagementPanel.mpas,2563 :: 		end;
L__Dropper_Control395:
;GRR3000LManagementPanel.mpas,2564 :: 		end;
L__Dropper_Control392:
;GRR3000LManagementPanel.mpas,2565 :: 		end;
L__Dropper_Control389:
;GRR3000LManagementPanel.mpas,2566 :: 		end;
L__Dropper_Control386:
;GRR3000LManagementPanel.mpas,2567 :: 		end else
0xC8B6	0x37002A  	BRA	L__Dropper_Control384
L__Dropper_Control383:
;GRR3000LManagementPanel.mpas,2568 :: 		if (Read_LoadVolt < (HucreSayisi * 20)) then // gerilim %100' den küçükse
0xC8B8	0x809FF1  	MOV	_HucreSayisi, W1
0xC8BA	0x200140  	MOV	#20, W0
0xC8BC	0xB80900  	MUL.UU	W1, W0, W2
0xC8BE	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xC8C0	0xE11010  	CP	W2, [W0]
0xC8C2	0x360024  	BRA LEU	L__Dropper_Control398
L__Dropper_Control5080:
;GRR3000LManagementPanel.mpas,2570 :: 		Inc(DropperInitCounter3);
0xC8C4	0x200011  	MOV	#1, W1
0xC8C6	0x209400  	MOV	#lo_addr(_DropperInitCounter3), W0
0xC8C8	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2572 :: 		DropperInitCounter1 := 0;
0xC8CA	0xEF2000  	CLR	W0
0xC8CC	0x8849F0  	MOV	W0, _DropperInitCounter1
;GRR3000LManagementPanel.mpas,2573 :: 		DropperInitCounter2 := 0;
0xC8CE	0xEF2000  	CLR	W0
0xC8D0	0x884A10  	MOV	W0, _DropperInitCounter2
;GRR3000LManagementPanel.mpas,2575 :: 		if (DropperInitCounter3 > DropperSayac) then
0xC8D2	0x200FA1  	MOV	#250, W1
0xC8D4	0x209400  	MOV	#lo_addr(_DropperInitCounter3), W0
0xC8D6	0xE10810  	CP	W1, [W0]
0xC8D8	0x310019  	BRA GEU	L__Dropper_Control401
L__Dropper_Control5081:
;GRR3000LManagementPanel.mpas,2577 :: 		DropperInitCounter3  := DropperSayac;
0xC8DA	0x200FA0  	MOV	#250, W0
0xC8DC	0x884A00  	MOV	W0, _DropperInitCounter3
;GRR3000LManagementPanel.mpas,2578 :: 		Dropper_Out_2        := 1; // dropper 2 yi devreden çýkar
0xC8DE	0xA842D0  	BSET	LATC2_bit, BitPos(LATC2_bit+0)
;GRR3000LManagementPanel.mpas,2580 :: 		if (Dropper_OutStatus = 3) then // dropper tamamý aktif ise burayý kullan, bypass ise sadece 1 çýkýþý kullan
0xC8E0	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC8E2	0x784010  	MOV.B	[W0], W0
0xC8E4	0xE10463  	CP.B	W0, #3
0xC8E6	0x3A0012  	BRA NZ	L__Dropper_Control404
L__Dropper_Control5082:
;GRR3000LManagementPanel.mpas,2582 :: 		if (Read_LoadVolt < (HucreSayisi * 20)) then // gerilim hala %100' den küçükse
0xC8E8	0x809FF1  	MOV	_HucreSayisi, W1
0xC8EA	0x200140  	MOV	#20, W0
0xC8EC	0xB80900  	MUL.UU	W1, W0, W2
0xC8EE	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xC8F0	0xE11010  	CP	W2, [W0]
0xC8F2	0x36000C  	BRA LEU	L__Dropper_Control407
L__Dropper_Control5083:
;GRR3000LManagementPanel.mpas,2584 :: 		Inc(DropperInitCounter4);
0xC8F4	0x200011  	MOV	#1, W1
0xC8F6	0x209300  	MOV	#lo_addr(_DropperInitCounter4), W0
0xC8F8	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2585 :: 		if (DropperInitCounter4 > DropperSayac) then
0xC8FA	0x200FA1  	MOV	#250, W1
0xC8FC	0x209300  	MOV	#lo_addr(_DropperInitCounter4), W0
0xC8FE	0xE10810  	CP	W1, [W0]
0xC900	0x310005  	BRA GEU	L__Dropper_Control410
L__Dropper_Control5084:
;GRR3000LManagementPanel.mpas,2587 :: 		DropperInitCounter4 := DropperSayac;
0xC902	0x200FA0  	MOV	#250, W0
0xC904	0x884980  	MOV	W0, _DropperInitCounter4
;GRR3000LManagementPanel.mpas,2588 :: 		DropperInitCounter3 := 0;
0xC906	0xEF2000  	CLR	W0
0xC908	0x884A00  	MOV	W0, _DropperInitCounter3
;GRR3000LManagementPanel.mpas,2589 :: 		Dropper_Out_1       := 1; // dropper 1 i devreden çýkar
0xC90A	0xA862D0  	BSET	LATC3_bit, BitPos(LATC3_bit+0)
;GRR3000LManagementPanel.mpas,2590 :: 		end;
L__Dropper_Control410:
;GRR3000LManagementPanel.mpas,2592 :: 		end;
L__Dropper_Control407:
;GRR3000LManagementPanel.mpas,2593 :: 		end;
L__Dropper_Control404:
;GRR3000LManagementPanel.mpas,2594 :: 		end;
L__Dropper_Control401:
;GRR3000LManagementPanel.mpas,2595 :: 		end;
L__Dropper_Control398:
L__Dropper_Control384:
;GRR3000LManagementPanel.mpas,2596 :: 		end else
0xC90C	0x37000F  	BRA	L__Dropper_Control381
L__Dropper_Control380:
;GRR3000LManagementPanel.mpas,2597 :: 		if (Dropper_OutStatus = 2) then // kapalý ise
0xC90E	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xC910	0x784010  	MOV.B	[W0], W0
0xC912	0xE10462  	CP.B	W0, #2
0xC914	0x3A000B  	BRA NZ	L__Dropper_Control413
L__Dropper_Control5085:
;GRR3000LManagementPanel.mpas,2599 :: 		Dropper_Out_1 := 1;
0xC916	0xA862D0  	BSET	LATC3_bit, BitPos(LATC3_bit+0)
;GRR3000LManagementPanel.mpas,2600 :: 		Inc(DropperCloseCounter);
0xC918	0x200011  	MOV	#1, W1
0xC91A	0x2092E0  	MOV	#lo_addr(_DropperCloseCounter), W0
0xC91C	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2601 :: 		if (DropperCloseCounter > DropperSayac) then  // ikisi ayný anda çalýþmasýn 2sn sonra çalýþsýn
0xC91E	0x200FA1  	MOV	#250, W1
0xC920	0x2092E0  	MOV	#lo_addr(_DropperCloseCounter), W0
0xC922	0xE10810  	CP	W1, [W0]
0xC924	0x310003  	BRA GEU	L__Dropper_Control416
L__Dropper_Control5086:
;GRR3000LManagementPanel.mpas,2603 :: 		DropperCloseCounter := 0;
0xC926	0xEF2000  	CLR	W0
0xC928	0x884970  	MOV	W0, _DropperCloseCounter
;GRR3000LManagementPanel.mpas,2604 :: 		Dropper_Out_2       := 1;
0xC92A	0xA842D0  	BSET	LATC2_bit, BitPos(LATC2_bit+0)
;GRR3000LManagementPanel.mpas,2605 :: 		end;
L__Dropper_Control416:
;GRR3000LManagementPanel.mpas,2606 :: 		end;
L__Dropper_Control413:
L__Dropper_Control381:
;GRR3000LManagementPanel.mpas,2608 :: 		end;
L_end_Dropper_Control:
0xC92C	0x060000  	RETURN
; end of _Dropper_Control
_Led_RelayControl:
0xCBF4	0xFA0004  	LNK	#4
;GRR3000LManagementPanel.mpas,2145 :: 		begin
;GRR3000LManagementPanel.mpas,2147 :: 		if (Read_LoadVolt < DeepDischargeVolt) then
0xCBF6	0x781F8A  	PUSH	W10
0xCBF8	0x804A91  	MOV	_Read_LoadVolt, W1
0xCBFA	0x215920  	MOV	#lo_addr(_DeepDischargeVolt), W0
0xCBFC	0xE10810  	CP	W1, [W0]
0xCBFE	0x310014  	BRA GEU	L__Led_RelayControl249
L__Led_RelayControl5010:
;GRR3000LManagementPanel.mpas,2149 :: 		Inc(DDischargeCounter);
0xCC00	0x200011  	MOV	#1, W1
0xCC02	0x209240  	MOV	#lo_addr(_DDischargeCounter), W0
0xCC04	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2150 :: 		if (DDischargeCounter > FltTime) then
0xCC06	0x804921  	MOV	_DDischargeCounter, W1
0xCC08	0x20BB80  	MOV	#3000, W0
0xCC0A	0xE10800  	CP	W1, W0
0xCC0C	0x36000D  	BRA LEU	L__Led_RelayControl252
L__Led_RelayControl5011:
;GRR3000LManagementPanel.mpas,2152 :: 		Led2_Group.Led2_BattReverse           := 1;
0xCC0E	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xCC10	0xA04410  	BSET.B	[W0], #4
;GRR3000LManagementPanel.mpas,2153 :: 		Relay_Out_Data.RlyOut_11_BattReverse  := 1;
0xCC12	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCC14	0xA0A010  	BSET	[W0], #10
;GRR3000LManagementPanel.mpas,2154 :: 		Rly_BattReverseBit                    := 1;
0xCC16	0x209200  	MOV	#lo_addr(_Rly_BattReverseBit), W0
0xCC18	0xA07010  	BSET	[W0], BitPos(_Rly_BattReverseBit+0)
;GRR3000LManagementPanel.mpas,2155 :: 		DDischargeCounter                     := FltTime + 5;
0xCC1A	0x20BBD0  	MOV	#3005, W0
0xCC1C	0x884920  	MOV	W0, _DDischargeCounter
;GRR3000LManagementPanel.mpas,2156 :: 		DDschargeBit                          := 1;
0xCC1E	0x209200  	MOV	#lo_addr(_DDschargeBit), W0
0xCC20	0xA0E010  	BSET	[W0], BitPos(_DDschargeBit+0)
;GRR3000LManagementPanel.mpas,2157 :: 		DDschargeControlBit                   := 1;
0xCC22	0x208040  	MOV	#lo_addr(_DDschargeControlBit), W0
0xCC24	0xA00010  	BSET	[W0], BitPos(_DDschargeControlBit+0)
;GRR3000LManagementPanel.mpas,2159 :: 		DischargeProtect_Pin                  := 0; // derin deþarj koruma rölesi aktif yani kontaktör býrakýldý yük ayrýldý
0xCC26	0xA962C8  	BCLR	RB3_bit, BitPos(RB3_bit+0)
;GRR3000LManagementPanel.mpas,2161 :: 		end;
L__Led_RelayControl252:
;GRR3000LManagementPanel.mpas,2162 :: 		end;
L__Led_RelayControl249:
;GRR3000LManagementPanel.mpas,2164 :: 		if (DDschargeControlBit = 1) then // sistem derin deþarja girmiþse
0xCC28	0x208040  	MOV	#lo_addr(_DDschargeControlBit), W0
0xCC2A	0xA60010  	BTSS	[W0], BitPos(_DDschargeControlBit+0)
0xCC2C	0x37002F  	BRA	L__Led_RelayControl255
;GRR3000LManagementPanel.mpas,2166 :: 		if (Read_LoadVolt >= ((HucreSayisi*2)*(F_ChargePercentHi * 0.1))) then // derin deþarjdan çýkmak için nominal þarj gerilimine ulaþsýn ((55x2)*(115x0,1)) = 126,5
0xCC2E	0x809FF0  	MOV	_HucreSayisi, W0
0xCC30	0xDD0041  	SL	W0, #1, W0
0xCC32	0x980700  	MOV	W0, [W14+0]
0xCC34	0x809710  	MOV	_F_ChargePercentHi, W0
0xCC36	0xEB0080  	CLR	W1
0xCC38	0x07E6F8  	RCALL	__Long2Float
0xCC3A	0x2CCCD2  	MOV	#52429, W2
0xCC3C	0x23DCC3  	MOV	#15820, W3
0xCC3E	0x07E750  	RCALL	__Mul_FP
0xCC40	0x90010E  	MOV	[W14+0], W2
0xCC42	0x980700  	MOV	W0, [W14+0]
0xCC44	0x980711  	MOV	W1, [W14+2]
0xCC46	0x780002  	MOV	W2, W0
0xCC48	0xEB0080  	CLR	W1
0xCC4A	0x07E6EF  	RCALL	__Long2Float
0xCC4C	0x90010E  	MOV	[W14+0], W2
0xCC4E	0x90019E  	MOV	[W14+2], W3
0xCC50	0x07E747  	RCALL	__Mul_FP
0xCC52	0x980700  	MOV	W0, [W14+0]
0xCC54	0x980711  	MOV	W1, [W14+2]
0xCC56	0x804A90  	MOV	_Read_LoadVolt, W0
0xCC58	0xEB0080  	CLR	W1
0xCC5A	0x07E6E7  	RCALL	__Long2Float
0xCC5C	0x90010E  	MOV	[W14+0], W2
0xCC5E	0x90019E  	MOV	[W14+2], W3
0xCC60	0x07FDDB  	RCALL	__Compare_Ge_Fp
0xCC62	0xE00000  	CP0	W0
0xCC64	0xEF2000  	CLR	W0
0xCC66	0x350001  	BRA LT	L__Led_RelayControl5012
0xCC68	0xEEA000  	COM	W0
L__Led_RelayControl5012:
0xCC6A	0xE20000  	CP0	W0
0xCC6C	0x32000F  	BRA Z	L__Led_RelayControl258
L__Led_RelayControl5013:
;GRR3000LManagementPanel.mpas,2168 :: 		Led2_Group.Led2_BattReverse          := 0;
0xCC6E	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xCC70	0xA14410  	BCLR.B	[W0], #4
;GRR3000LManagementPanel.mpas,2169 :: 		Relay_Out_Data.RlyOut_11_BattReverse := 0;
0xCC72	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCC74	0xA1A010  	BCLR	[W0], #10
;GRR3000LManagementPanel.mpas,2170 :: 		Rly_BattReverseBit                   := 0;
0xCC76	0x209200  	MOV	#lo_addr(_Rly_BattReverseBit), W0
0xCC78	0xA17010  	BCLR	[W0], BitPos(_Rly_BattReverseBit+0)
;GRR3000LManagementPanel.mpas,2171 :: 		DDischargeCounter                    := 0;
0xCC7A	0xEF2000  	CLR	W0
0xCC7C	0x884920  	MOV	W0, _DDischargeCounter
;GRR3000LManagementPanel.mpas,2172 :: 		DDschargeBit                         := 0;
0xCC7E	0x209200  	MOV	#lo_addr(_DDschargeBit), W0
0xCC80	0xA1E010  	BCLR	[W0], BitPos(_DDschargeBit+0)
;GRR3000LManagementPanel.mpas,2173 :: 		LogBit_DdschFault                    := 0;
0xCC82	0x20E1E0  	MOV	#lo_addr(_LogBit_DdschFault), W0
0xCC84	0xA16010  	BCLR	[W0], BitPos(_LogBit_DdschFault+0)
;GRR3000LManagementPanel.mpas,2174 :: 		DDschargeControlBit                  := 0;
0xCC86	0x208040  	MOV	#lo_addr(_DDschargeControlBit), W0
0xCC88	0xA10010  	BCLR	[W0], BitPos(_DDschargeControlBit+0)
;GRR3000LManagementPanel.mpas,2176 :: 		DischargeProtect_Pin                 := 1; // derin deþarj koruma rölesi kapalý yani kontaktör çekildi yük devrede
0xCC8A	0xA862C8  	BSET	RB3_bit, BitPos(RB3_bit+0)
;GRR3000LManagementPanel.mpas,2178 :: 		end;
L__Led_RelayControl258:
;GRR3000LManagementPanel.mpas,2179 :: 		end;
L__Led_RelayControl255:
;GRR3000LManagementPanel.mpas,2181 :: 		if ((Read_U1Volt > ACMaxVoltSet)or(Read_U2Volt > ACMaxVoltSet)or(Read_U3Volt > ACMaxVoltSet)) then
0xCC8C	0x80A7A1  	MOV	_Read_U1Volt, W1
0xCC8E	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xCC90	0xE10810  	CP	W1, [W0]
0xCC92	0xEF2004  	CLR	W2
0xCC94	0x360001  	BRA LEU	L__Led_RelayControl5014
0xCC96	0xEEA004  	COM	W2
L__Led_RelayControl5014:
0xCC98	0x80A7C1  	MOV	_Read_U2Volt, W1
0xCC9A	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xCC9C	0xE10810  	CP	W1, [W0]
0xCC9E	0xEF2000  	CLR	W0
0xCCA0	0x360001  	BRA LEU	L__Led_RelayControl5015
0xCCA2	0xEEA000  	COM	W0
L__Led_RelayControl5015:
0xCCA4	0x710100  	IOR	W2, W0, W2
0xCCA6	0x80A7F1  	MOV	_Read_U3Volt, W1
0xCCA8	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xCCAA	0xE10810  	CP	W1, [W0]
0xCCAC	0xEF2000  	CLR	W0
0xCCAE	0x360001  	BRA LEU	L__Led_RelayControl5016
0xCCB0	0xEEA000  	COM	W0
L__Led_RelayControl5016:
0xCCB2	0x710000  	IOR	W2, W0, W0
0xCCB4	0x320012  	BRA Z	L__Led_RelayControl261
L__Led_RelayControl5017:
;GRR3000LManagementPanel.mpas,2183 :: 		Inc(ACFltCounter1);
0xCCB6	0x200011  	MOV	#1, W1
0xCCB8	0x209460  	MOV	#lo_addr(_ACFltCounter1), W0
0xCCBA	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2184 :: 		if (ACFltCounter1 > FltTime) then
0xCCBC	0x804A31  	MOV	_ACFltCounter1, W1
0xCCBE	0x20BB80  	MOV	#3000, W0
0xCCC0	0xE10800  	CP	W1, W0
0xCCC2	0x36000A  	BRA LEU	L__Led_RelayControl264
L__Led_RelayControl5018:
;GRR3000LManagementPanel.mpas,2186 :: 		Led1_Group.Led1_AcHigh := 1;
0xCCC4	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCCC6	0xA06410  	BSET.B	[W0], #6
;GRR3000LManagementPanel.mpas,2187 :: 		Relay_Out_Data.RlyOut_1_AcHigh := 1;
0xCCC8	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCCCA	0xA00010  	BSET	[W0], #0
;GRR3000LManagementPanel.mpas,2188 :: 		Rly_AcHighBit                  := 1;
0xCCCC	0x209200  	MOV	#lo_addr(_Rly_AcHighBit), W0
0xCCCE	0xA00010  	BSET	[W0], BitPos(_Rly_AcHighBit+0)
;GRR3000LManagementPanel.mpas,2189 :: 		ACFltCounter1          := FltTime + 5; // fazlasý yazýlýr sürekli burada kalsýn diye
0xCCD0	0x20BBD0  	MOV	#3005, W0
0xCCD2	0x884A30  	MOV	W0, _ACFltCounter1
;GRR3000LManagementPanel.mpas,2190 :: 		AcHighFaultBit             := 1;
0xCCD4	0x209200  	MOV	#lo_addr(_AcHighFaultBit), W0
0xCCD6	0xA0D010  	BSET	[W0], BitPos(_AcHighFaultBit+0)
;GRR3000LManagementPanel.mpas,2191 :: 		end;
L__Led_RelayControl264:
;GRR3000LManagementPanel.mpas,2193 :: 		end else
0xCCD8	0x37000C  	BRA	L__Led_RelayControl262
L__Led_RelayControl261:
;GRR3000LManagementPanel.mpas,2195 :: 		Led1_Group.Led1_AcHigh         := 0;
0xCCDA	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCCDC	0xA16410  	BCLR.B	[W0], #6
;GRR3000LManagementPanel.mpas,2196 :: 		Relay_Out_Data.RlyOut_1_AcHigh := 0;
0xCCDE	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCCE0	0xA10010  	BCLR	[W0], #0
;GRR3000LManagementPanel.mpas,2197 :: 		Rly_AcHighBit                  := 0;
0xCCE2	0x209200  	MOV	#lo_addr(_Rly_AcHighBit), W0
0xCCE4	0xA10010  	BCLR	[W0], BitPos(_Rly_AcHighBit+0)
;GRR3000LManagementPanel.mpas,2198 :: 		ACFltCounter1                  := 0;
0xCCE6	0xEF2000  	CLR	W0
0xCCE8	0x884A30  	MOV	W0, _ACFltCounter1
;GRR3000LManagementPanel.mpas,2199 :: 		AcHighFaultBit                 := 0;
0xCCEA	0x209200  	MOV	#lo_addr(_AcHighFaultBit), W0
0xCCEC	0xA1D010  	BCLR	[W0], BitPos(_AcHighFaultBit+0)
;GRR3000LManagementPanel.mpas,2200 :: 		LogBit_AcHigh                  := 0; // olay kaydedicisi için
0xCCEE	0x20E1E0  	MOV	#lo_addr(_LogBit_AcHigh), W0
0xCCF0	0xA12010  	BCLR	[W0], BitPos(_LogBit_AcHigh+0)
;GRR3000LManagementPanel.mpas,2201 :: 		end;
L__Led_RelayControl262:
;GRR3000LManagementPanel.mpas,2203 :: 		if ((Read_U1Volt < ACMinVoltSet)or(Read_U2Volt < ACMinVoltSet)or(Read_U3Volt < ACMinVoltSet)) then
0xCCF2	0x80A7A1  	MOV	_Read_U1Volt, W1
0xCCF4	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xCCF6	0xE10810  	CP	W1, [W0]
0xCCF8	0xEF2004  	CLR	W2
0xCCFA	0x310001  	BRA GEU	L__Led_RelayControl5019
0xCCFC	0xEEA004  	COM	W2
L__Led_RelayControl5019:
0xCCFE	0x80A7C1  	MOV	_Read_U2Volt, W1
0xCD00	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xCD02	0xE10810  	CP	W1, [W0]
0xCD04	0xEF2000  	CLR	W0
0xCD06	0x310001  	BRA GEU	L__Led_RelayControl5020
0xCD08	0xEEA000  	COM	W0
L__Led_RelayControl5020:
0xCD0A	0x710100  	IOR	W2, W0, W2
0xCD0C	0x80A7F1  	MOV	_Read_U3Volt, W1
0xCD0E	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xCD10	0xE10810  	CP	W1, [W0]
0xCD12	0xEF2000  	CLR	W0
0xCD14	0x310001  	BRA GEU	L__Led_RelayControl5021
0xCD16	0xEEA000  	COM	W0
L__Led_RelayControl5021:
0xCD18	0x710000  	IOR	W2, W0, W0
0xCD1A	0x32002F  	BRA Z	L__Led_RelayControl267
L__Led_RelayControl5022:
;GRR3000LManagementPanel.mpas,2205 :: 		Inc(ACFltCounter2);
0xCD1C	0x200011  	MOV	#1, W1
0xCD1E	0x2094E0  	MOV	#lo_addr(_ACFltCounter2), W0
0xCD20	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2206 :: 		Inc(AcOnCounter);
0xCD22	0x200011  	MOV	#1, W1
0xCD24	0x209560  	MOV	#lo_addr(_AcOnCounter), W0
0xCD26	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2207 :: 		if (ACFltCounter2 > FltTime) then
0xCD28	0x804A71  	MOV	_ACFltCounter2, W1
0xCD2A	0x20BB80  	MOV	#3000, W0
0xCD2C	0xE10800  	CP	W1, W0
0xCD2E	0x36000C  	BRA LEU	L__Led_RelayControl270
L__Led_RelayControl5023:
;GRR3000LManagementPanel.mpas,2209 :: 		Led1_Group.Led1_AcLow := 1;
0xCD30	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCD32	0xA05410  	BSET.B	[W0], #5
;GRR3000LManagementPanel.mpas,2210 :: 		Relay_Out_Data.RlyOut_2_AcLow   := 1;
0xCD34	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCD36	0xA01010  	BSET	[W0], #1
;GRR3000LManagementPanel.mpas,2211 :: 		Rly_AcLowBit                    := 1;
0xCD38	0x208CE0  	MOV	#lo_addr(_Rly_AcLowBit), W0
0xCD3A	0xA0F010  	BSET	[W0], BitPos(_Rly_AcLowBit+0)
;GRR3000LManagementPanel.mpas,2212 :: 		Relay_Out_Data.RlyOut_16_ExtOut := 0;
0xCD3C	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCD3E	0xA1F010  	BCLR	[W0], #15
;GRR3000LManagementPanel.mpas,2213 :: 		ACFltCounter2         := FltTime + 5; // fazlasý yazýlýr sürekli burada kalsýn diye
0xCD40	0x20BBD0  	MOV	#3005, W0
0xCD42	0x884A70  	MOV	W0, _ACFltCounter2
;GRR3000LManagementPanel.mpas,2214 :: 		AclowFaultBit            := 1;
0xCD44	0x2092C0  	MOV	#lo_addr(_AcLowFaultBit), W0
0xCD46	0xA01010  	BSET	[W0], BitPos(_AcLowFaultBit+0)
;GRR3000LManagementPanel.mpas,2216 :: 		end;
L__Led_RelayControl270:
;GRR3000LManagementPanel.mpas,2218 :: 		if ((AcOnCounter > 500)and(AcOnCounter < 1000)) then
0xCD48	0x804AB2  	MOV	_AcOnCounter, W2
0xCD4A	0x201F40  	MOV	#500, W0
0xCD4C	0xE11000  	CP	W2, W0
0xCD4E	0xEF2002  	CLR	W1
0xCD50	0x360001  	BRA LEU	L__Led_RelayControl5024
0xCD52	0xEEA002  	COM	W1
L__Led_RelayControl5024:
0xCD54	0x203E80  	MOV	#1000, W0
0xCD56	0xE11000  	CP	W2, W0
0xCD58	0xEF2000  	CLR	W0
0xCD5A	0x310001  	BRA GEU	L__Led_RelayControl5025
0xCD5C	0xEEA000  	COM	W0
L__Led_RelayControl5025:
0xCD5E	0x608000  	AND	W1, W0, W0
0xCD60	0x320003  	BRA Z	L__Led_RelayControl273
L__Led_RelayControl5026:
;GRR3000LManagementPanel.mpas,2220 :: 		Led1_Group.Led1_AcOn  := 1;
0xCD62	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCD64	0xA07410  	BSET.B	[W0], #7
;GRR3000LManagementPanel.mpas,2221 :: 		end else
0xCD66	0x370008  	BRA	L__Led_RelayControl274
L__Led_RelayControl273:
;GRR3000LManagementPanel.mpas,2222 :: 		if (AcOnCounter > 1000) then
0xCD68	0x804AB1  	MOV	_AcOnCounter, W1
0xCD6A	0x203E80  	MOV	#1000, W0
0xCD6C	0xE10800  	CP	W1, W0
0xCD6E	0x360004  	BRA LEU	L__Led_RelayControl276
L__Led_RelayControl5027:
;GRR3000LManagementPanel.mpas,2224 :: 		Led1_Group.Led1_AcOn  := 0;
0xCD70	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCD72	0xA17410  	BCLR.B	[W0], #7
;GRR3000LManagementPanel.mpas,2225 :: 		AcOnCounter           := 0;
0xCD74	0xEF2000  	CLR	W0
0xCD76	0x884AB0  	MOV	W0, _AcOnCounter
;GRR3000LManagementPanel.mpas,2226 :: 		end;
L__Led_RelayControl276:
L__Led_RelayControl274:
;GRR3000LManagementPanel.mpas,2229 :: 		end else
0xCD78	0x370010  	BRA	L__Led_RelayControl268
L__Led_RelayControl267:
;GRR3000LManagementPanel.mpas,2231 :: 		Led1_Group.Led1_AcLow           := 0;
0xCD7A	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCD7C	0xA15410  	BCLR.B	[W0], #5
;GRR3000LManagementPanel.mpas,2232 :: 		Relay_Out_Data.RlyOut_2_AcLow   := 0;
0xCD7E	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCD80	0xA11010  	BCLR	[W0], #1
;GRR3000LManagementPanel.mpas,2233 :: 		Rly_AcLowBit                    := 0;
0xCD82	0x208CE0  	MOV	#lo_addr(_Rly_AcLowBit), W0
0xCD84	0xA1F010  	BCLR	[W0], BitPos(_Rly_AcLowBit+0)
;GRR3000LManagementPanel.mpas,2234 :: 		Led1_Group.Led1_AcOn            := 1; // ac düþük deðilse AC gerilim var ve sürekli yan
0xCD86	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCD88	0xA07410  	BSET.B	[W0], #7
;GRR3000LManagementPanel.mpas,2235 :: 		Relay_Out_Data.RlyOut_16_ExtOut := 1;
0xCD8A	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCD8C	0xA0F010  	BSET	[W0], #15
;GRR3000LManagementPanel.mpas,2236 :: 		ACFltCounter2                   := 0;
0xCD8E	0xEF2000  	CLR	W0
0xCD90	0x884A70  	MOV	W0, _ACFltCounter2
;GRR3000LManagementPanel.mpas,2237 :: 		AclowFaultBit                   := 0;
0xCD92	0x2092C0  	MOV	#lo_addr(_AcLowFaultBit), W0
0xCD94	0xA11010  	BCLR	[W0], BitPos(_AcLowFaultBit+0)
;GRR3000LManagementPanel.mpas,2238 :: 		LogBit_AcLow                    := 0; // olay kaydedicisi için
0xCD96	0x2092C0  	MOV	#lo_addr(_LogBit_AcLow), W0
0xCD98	0xA1E010  	BCLR	[W0], BitPos(_LogBit_AcLow+0)
;GRR3000LManagementPanel.mpas,2239 :: 		end;
L__Led_RelayControl268:
;GRR3000LManagementPanel.mpas,2241 :: 		if (AC_ProtectBit = 1) then // AC Koruma aktifse
0xCD9A	0x212A40  	MOV	#lo_addr(_AC_ProtectBit), W0
0xCD9C	0xA66010  	BTSS	[W0], BitPos(_AC_ProtectBit+0)
0xCD9E	0x370039  	BRA	L__Led_RelayControl279
;GRR3000LManagementPanel.mpas,2244 :: 		if ((abs(U1Volt_Diff) > ACVolt_Different) or (abs(U2Volt_Diff) > ACVolt_Different) or (abs(U3Volt_Diff) > ACVolt_Different) or(AcHighFaultBit = 1)or(AcLowFaultBit = 1)) then
0xCDA0	0x80421A  	MOV	_U1Volt_Diff, W10
0xCDA2	0x07AB8B  	RCALL	_abs
0xCDA4	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xCDA6	0xFB8091  	ZE	[W1], W1
0xCDA8	0xE10001  	CP	W0, W1
0xCDAA	0xEF2000  	CLR	W0
0xCDAC	0x340001  	BRA LE	L__Led_RelayControl5028
0xCDAE	0xEEA000  	COM	W0
L__Led_RelayControl5028:
0xCDB0	0x980700  	MOV	W0, [W14+0]
0xCDB2	0x80429A  	MOV	_U2Volt_Diff, W10
0xCDB4	0x07AB82  	RCALL	_abs
0xCDB6	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xCDB8	0xFB8091  	ZE	[W1], W1
0xCDBA	0xE10001  	CP	W0, W1
0xCDBC	0xEF2002  	CLR	W1
0xCDBE	0x340001  	BRA LE	L__Led_RelayControl5029
0xCDC0	0xEEA002  	COM	W1
L__Led_RelayControl5029:
0xCDC2	0x90000E  	MOV	[W14+0], W0
0xCDC4	0x700001  	IOR	W0, W1, W0
0xCDC6	0x980700  	MOV	W0, [W14+0]
0xCDC8	0x80462A  	MOV	_U3Volt_Diff, W10
0xCDCA	0x07AB77  	RCALL	_abs
0xCDCC	0x212A31  	MOV	#lo_addr(_ACVolt_Different), W1
0xCDCE	0xFB8091  	ZE	[W1], W1
0xCDD0	0xE10001  	CP	W0, W1
0xCDD2	0xEF2002  	CLR	W1
0xCDD4	0x340001  	BRA LE	L__Led_RelayControl5030
0xCDD6	0xEEA002  	COM	W1
L__Led_RelayControl5030:
0xCDD8	0x90000E  	MOV	[W14+0], W0
0xCDDA	0x700081  	IOR	W0, W1, W1
0xCDDC	0x209200  	MOV	#lo_addr(_AcHighFaultBit), W0
0xCDDE	0xA6D010  	BTSS	[W0], BitPos(_AcHighFaultBit+0)
0xCDE0	0xA90042  	BCLR	SR, #0
0xCDE2	0xA7D010  	BTSC	[W0], BitPos(_AcHighFaultBit+0)
0xCDE4	0xA80042  	BSET	SR, #0
0xCDE6	0xEF6000  	CLR.B	W0
0xCDE8	0xAF0042  	BTSC	SR, #0
0xCDEA	0xEC6000  	INC.B	W0
0xCDEC	0xFB8000  	ZE	W0, W0
0xCDEE	0x708080  	IOR	W1, W0, W1
0xCDF0	0x2092C0  	MOV	#lo_addr(_AcLowFaultBit), W0
0xCDF2	0xA61010  	BTSS	[W0], BitPos(_AcLowFaultBit+0)
0xCDF4	0xA90042  	BCLR	SR, #0
0xCDF6	0xA71010  	BTSC	[W0], BitPos(_AcLowFaultBit+0)
0xCDF8	0xA80042  	BSET	SR, #0
0xCDFA	0xEF6000  	CLR.B	W0
0xCDFC	0xAF0042  	BTSC	SR, #0
0xCDFE	0xEC6000  	INC.B	W0
0xCE00	0xFB8000  	ZE	W0, W0
0xCE02	0x708000  	IOR	W1, W0, W0
0xCE04	0x320003  	BRA Z	L__Led_RelayControl282
L__Led_RelayControl5031:
;GRR3000LManagementPanel.mpas,2245 :: 		ACVoltDifferentBit := 1 else ACVoltDifferentBit := 0;
0xCE06	0x208040  	MOV	#lo_addr(_ACVoltDifferentBit), W0
0xCE08	0xA0B010  	BSET	[W0], BitPos(_ACVoltDifferentBit+0)
0xCE0A	0x370002  	BRA	L__Led_RelayControl283
L__Led_RelayControl282:
0xCE0C	0x208040  	MOV	#lo_addr(_ACVoltDifferentBit), W0
0xCE0E	0xA1B010  	BCLR	[W0], BitPos(_ACVoltDifferentBit+0)
L__Led_RelayControl283:
;GRR3000LManagementPanel.mpas,2247 :: 		end else ACVoltDifferentBit := 0;
0xCE10	0x370002  	BRA	L__Led_RelayControl280
L__Led_RelayControl279:
0xCE12	0x208040  	MOV	#lo_addr(_ACVoltDifferentBit), W0
0xCE14	0xA1B010  	BCLR	[W0], BitPos(_ACVoltDifferentBit+0)
L__Led_RelayControl280:
;GRR3000LManagementPanel.mpas,2253 :: 		if ((StopBit = 0)or((OperationMode = 1)or(OperationMode = 3))) then // redresör çalýþýyorsa veya redresör tekli çalýþýyorsa
0xCE16	0x212A40  	MOV	#lo_addr(_StopBit), W0
0xCE18	0xA90008  	BCLR	W4, #0
0xCE1A	0xA6F010  	BTSS	[W0], BitPos(_StopBit+0)
0xCE1C	0xA80008  	BSET	W4, #0
0xCE1E	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xCE20	0x784010  	MOV.B	[W0], W0
0xCE22	0xE10461  	CP.B	W0, #1
0xCE24	0xEF2002  	CLR	W1
0xCE26	0x3A0001  	BRA NZ	L__Led_RelayControl5032
0xCE28	0xEEA002  	COM	W1
L__Led_RelayControl5032:
0xCE2A	0x212D70  	MOV	#lo_addr(_OperationMode), W0
0xCE2C	0x784010  	MOV.B	[W0], W0
0xCE2E	0xE10463  	CP.B	W0, #3
0xCE30	0xEF2000  	CLR	W0
0xCE32	0x3A0001  	BRA NZ	L__Led_RelayControl5033
0xCE34	0xEEA000  	COM	W0
L__Led_RelayControl5033:
0xCE36	0x708080  	IOR	W1, W0, W1
0xCE38	0xEF6000  	CLR.B	W0
0xCE3A	0xAF0008  	BTSC	W4, #0
0xCE3C	0xEC6000  	INC.B	W0
0xCE3E	0xFB8000  	ZE	W0, W0
0xCE40	0x700001  	IOR	W0, W1, W0
0xCE42	0x3200AD  	BRA Z	L__Led_RelayControl285
L__Led_RelayControl5034:
;GRR3000LManagementPanel.mpas,2256 :: 		RedVolt_HighPercent10Bit := (RectifierVoltage_Set*1.1);
0xCE44	0x80A450  	MOV	_RectifierVoltage_Set, W0
0xCE46	0xEB0080  	CLR	W1
0xCE48	0x07E5F0  	RCALL	__Long2Float
0xCE4A	0x980700  	MOV	W0, [W14+0]
0xCE4C	0x980711  	MOV	W1, [W14+2]
0xCE4E	0x2CCCD2  	MOV	#52429, W2
0xCE50	0x23F8C3  	MOV	#16268, W3
0xCE52	0x07E646  	RCALL	__Mul_FP
0xCE54	0x8849D0  	MOV	W0, _RedVolt_HighPercent10Bit
0xCE56	0x8849E1  	MOV	W1, _RedVolt_HighPercent10Bit+2
;GRR3000LManagementPanel.mpas,2257 :: 		RedVolt_LowPercent10Bit  := (RectifierVoltage_Set*0.9);
0xCE58	0x90000E  	MOV	[W14+0], W0
0xCE5A	0x90009E  	MOV	[W14+2], W1
0xCE5C	0x266662  	MOV	#26214, W2
0xCE5E	0x23F663  	MOV	#16230, W3
0xCE60	0x07E63F  	RCALL	__Mul_FP
0xCE62	0x8849B0  	MOV	W0, _RedVolt_LowPercent10Bit
0xCE64	0x8849C1  	MOV	W1, _RedVolt_LowPercent10Bit+2
;GRR3000LManagementPanel.mpas,2259 :: 		if ((BattAmpsLimitBit =0)and(RedAmpsLimitBit =0)) then // redresör ya da akü akým sýnýrlamaya girmemiþse kontrol et
0xCE66	0x2092C0  	MOV	#lo_addr(_BattAmpsLimitBit), W0
0xCE68	0xA90008  	BCLR	W4, #0
0xCE6A	0xA60010  	BTSS	[W0], BitPos(_BattAmpsLimitBit+0)
0xCE6C	0xA80008  	BSET	W4, #0
0xCE6E	0x209200  	MOV	#lo_addr(_RedAmpsLimitBit), W0
0xCE70	0xA6F010  	BTSS	[W0], BitPos(_RedAmpsLimitBit+0)
0xCE72	0xA80042  	BSET	SR, #0
0xCE74	0xA7F010  	BTSC	[W0], BitPos(_RedAmpsLimitBit+0)
0xCE76	0xA90042  	BCLR	SR, #0
0xCE78	0xAF0008  	BTSC	W4, #0
0xCE7A	0xAE0042  	BTSS	SR, #0
0xCE7C	0x370002  	BRA	L__Led_RelayControl5036
0xCE7E	0xA80008  	BSET	W4, #0
0xCE80	0x370001  	BRA	L__Led_RelayControl5038
L__Led_RelayControl5036:
0xCE82	0xA90008  	BCLR	W4, #0
L__Led_RelayControl5038:
0xCE84	0xAE0008  	BTSS	W4, #0
0xCE86	0x37008B  	BRA	L__Led_RelayControl288
;GRR3000LManagementPanel.mpas,2261 :: 		if ((Read_RedVolt > MaxvoltSet)or(Read_RedVolt > RedVolt_HighPercent10Bit)) then // ayarlanan gerilimden yüksekse ve ya set edilen deðerin %10'nundan fazla ise
0xCE88	0x80A721  	MOV	_Read_RedVolt, W1
0xCE8A	0x212F20  	MOV	#lo_addr(_MaxvoltSet), W0
0xCE8C	0xE10810  	CP	W1, [W0]
0xCE8E	0xEF2000  	CLR	W0
0xCE90	0x360001  	BRA LEU	L__Led_RelayControl5039
0xCE92	0xEEA000  	COM	W0
L__Led_RelayControl5039:
0xCE94	0x980700  	MOV	W0, [W14+0]
0xCE96	0x80A720  	MOV	_Read_RedVolt, W0
0xCE98	0xEB0080  	CLR	W1
0xCE9A	0x07E5C7  	RCALL	__Long2Float
0xCE9C	0x8049D2  	MOV	_RedVolt_HighPercent10Bit, W2
0xCE9E	0x8049E3  	MOV	_RedVolt_HighPercent10Bit+2, W3
0xCEA0	0x07FCBB  	RCALL	__Compare_Ge_Fp
0xCEA2	0xE00000  	CP0	W0
0xCEA4	0xEF2000  	CLR	W0
0xCEA6	0x340001  	BRA LE	L__Led_RelayControl5040
0xCEA8	0xEEA000  	COM	W0
L__Led_RelayControl5040:
0xCEAA	0x90008E  	MOV	[W14+0], W1
0xCEAC	0x708000  	IOR	W1, W0, W0
0xCEAE	0x320020  	BRA Z	L__Led_RelayControl291
L__Led_RelayControl5041:
;GRR3000LManagementPanel.mpas,2263 :: 		Inc(DcFaultRelayTime);
0xCEB0	0x200011  	MOV	#1, W1
0xCEB2	0x208F40  	MOV	#lo_addr(_DcFaultRelayTime), W0
0xCEB4	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2264 :: 		if (DcFaultRelayTime > (FltTime+2000)) then // burasý diðerlerinden farklý olarak 5sn sonra çalýþacak
0xCEB6	0x8047A1  	MOV	_DcFaultRelayTime, W1
0xCEB8	0x213880  	MOV	#5000, W0
0xCEBA	0xE10800  	CP	W1, W0
0xCEBC	0x360018  	BRA LEU	L__Led_RelayControl294
L__Led_RelayControl5042:
;GRR3000LManagementPanel.mpas,2266 :: 		DcFaultRelayTime := FltTime + 5;
0xCEBE	0x20BBD0  	MOV	#3005, W0
0xCEC0	0x8847A0  	MOV	W0, _DcFaultRelayTime
;GRR3000LManagementPanel.mpas,2267 :: 		Led1_Group.Led1_DcHigh             := 1;
0xCEC2	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCEC4	0xA04410  	BSET.B	[W0], #4
;GRR3000LManagementPanel.mpas,2268 :: 		Led1_Group.Led1_DcLow              := 0;
0xCEC6	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCEC8	0xA13410  	BCLR.B	[W0], #3
;GRR3000LManagementPanel.mpas,2269 :: 		Relay_Out_Data.RlyOut_3_DcHigh     := 1;
0xCECA	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCECC	0xA02010  	BSET	[W0], #2
;GRR3000LManagementPanel.mpas,2270 :: 		Relay_Out_Data.RlyOut_4_DcLow      := 0;
0xCECE	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCED0	0xA13010  	BCLR	[W0], #3
;GRR3000LManagementPanel.mpas,2271 :: 		Rly_DcHighBit                      := 1;
0xCED2	0x208CE0  	MOV	#lo_addr(_Rly_DcHighBit), W0
0xCED4	0xA0A010  	BSET	[W0], BitPos(_Rly_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2272 :: 		Rly_DcLowBit                       := 0;
0xCED6	0x208CE0  	MOV	#lo_addr(_Rly_DcLowBit), W0
0xCED8	0xA19010  	BCLR	[W0], BitPos(_Rly_DcLowBit+0)
;GRR3000LManagementPanel.mpas,2273 :: 		Relay_Out_Data.RlyOut_15_RedFault  := 1;
0xCEDA	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCEDC	0xA0E010  	BSET	[W0], #14
;GRR3000LManagementPanel.mpas,2274 :: 		Rly_RedGenFaultBit                 := 1;
0xCEDE	0x209200  	MOV	#lo_addr(_Rly_RedGenFaultBit), W0
0xCEE0	0xA02010  	BSET	[W0], BitPos(_Rly_RedGenFaultBit+0)
;GRR3000LManagementPanel.mpas,2275 :: 		Led3_Group.Led3_RedFault           := 1;
0xCEE2	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xCEE4	0xA02410  	BSET.B	[W0], #2
;GRR3000LManagementPanel.mpas,2276 :: 		RedFaultBit                        := 1;
0xCEE6	0x212A40  	MOV	#lo_addr(_RedFaultBit), W0
0xCEE8	0xA0D010  	BSET	[W0], BitPos(_RedFaultBit+0)
;GRR3000LManagementPanel.mpas,2277 :: 		DcHighBit                          := 1;
0xCEEA	0x209200  	MOV	#lo_addr(_DcHighBit), W0
0xCEEC	0xA0C010  	BSET	[W0], BitPos(_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2278 :: 		end;
L__Led_RelayControl294:
;GRR3000LManagementPanel.mpas,2279 :: 		end else
0xCEEE	0x370057  	BRA	L__Led_RelayControl292
L__Led_RelayControl291:
;GRR3000LManagementPanel.mpas,2280 :: 		if ((Read_RedVolt < MinVoltSet)or(Read_RedVolt < RedVolt_LowPercent10Bit)) then // ayarlanan gerilimden küçükse ve ya set edilen deðerin %10 altýnda ise
0xCEF0	0x80A721  	MOV	_Read_RedVolt, W1
0xCEF2	0x212F60  	MOV	#lo_addr(_MinVoltSet), W0
0xCEF4	0xE10810  	CP	W1, [W0]
0xCEF6	0xEF2000  	CLR	W0
0xCEF8	0x310001  	BRA GEU	L__Led_RelayControl5043
0xCEFA	0xEEA000  	COM	W0
L__Led_RelayControl5043:
0xCEFC	0x980700  	MOV	W0, [W14+0]
0xCEFE	0x80A720  	MOV	_Read_RedVolt, W0
0xCF00	0xEB0080  	CLR	W1
0xCF02	0x07E593  	RCALL	__Long2Float
0xCF04	0x8049B2  	MOV	_RedVolt_LowPercent10Bit, W2
0xCF06	0x8049C3  	MOV	_RedVolt_LowPercent10Bit+2, W3
0xCF08	0x07FC8C  	RCALL	__Compare_Le_Fp
0xCF0A	0xE00000  	CP0	W0
0xCF0C	0xEF2000  	CLR	W0
0xCF0E	0x3D0001  	BRA GE	L__Led_RelayControl5044
0xCF10	0xEEA000  	COM	W0
L__Led_RelayControl5044:
0xCF12	0x90008E  	MOV	[W14+0], W1
0xCF14	0x708000  	IOR	W1, W0, W0
0xCF16	0x320020  	BRA Z	L__Led_RelayControl297
L__Led_RelayControl5045:
;GRR3000LManagementPanel.mpas,2282 :: 		Inc(DcFaultRelayTime);
0xCF18	0x200011  	MOV	#1, W1
0xCF1A	0x208F40  	MOV	#lo_addr(_DcFaultRelayTime), W0
0xCF1C	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2283 :: 		if (DcFaultRelayTime > (FltTime+2000)) then  // burasý diðerlerinden farklý olarak 5sn sonra çalýþacak
0xCF1E	0x8047A1  	MOV	_DcFaultRelayTime, W1
0xCF20	0x213880  	MOV	#5000, W0
0xCF22	0xE10800  	CP	W1, W0
0xCF24	0x360018  	BRA LEU	L__Led_RelayControl300
L__Led_RelayControl5046:
;GRR3000LManagementPanel.mpas,2285 :: 		DcFaultRelayTime := FltTime + 5;
0xCF26	0x20BBD0  	MOV	#3005, W0
0xCF28	0x8847A0  	MOV	W0, _DcFaultRelayTime
;GRR3000LManagementPanel.mpas,2286 :: 		Led1_Group.Led1_DcLow              := 1;
0xCF2A	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCF2C	0xA03410  	BSET.B	[W0], #3
;GRR3000LManagementPanel.mpas,2287 :: 		Led1_Group.Led1_DcHigh             := 0;
0xCF2E	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCF30	0xA14410  	BCLR.B	[W0], #4
;GRR3000LManagementPanel.mpas,2288 :: 		Led3_Group.Led3_RedFault           := 1;
0xCF32	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xCF34	0xA02410  	BSET.B	[W0], #2
;GRR3000LManagementPanel.mpas,2289 :: 		Relay_Out_Data.RlyOut_4_DcLow      := 1;
0xCF36	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF38	0xA03010  	BSET	[W0], #3
;GRR3000LManagementPanel.mpas,2290 :: 		Relay_Out_Data.RlyOut_3_DcHigh     := 0;
0xCF3A	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF3C	0xA12010  	BCLR	[W0], #2
;GRR3000LManagementPanel.mpas,2291 :: 		Rly_DCHighBit                      := 0;
0xCF3E	0x208CE0  	MOV	#lo_addr(_Rly_DcHighBit), W0
0xCF40	0xA1A010  	BCLR	[W0], BitPos(_Rly_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2292 :: 		Relay_Out_Data.RlyOut_15_RedFault  := 1;
0xCF42	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF44	0xA0E010  	BSET	[W0], #14
;GRR3000LManagementPanel.mpas,2293 :: 		Rly_RedGenFaultBit                 := 1;
0xCF46	0x209200  	MOV	#lo_addr(_Rly_RedGenFaultBit), W0
0xCF48	0xA02010  	BSET	[W0], BitPos(_Rly_RedGenFaultBit+0)
;GRR3000LManagementPanel.mpas,2294 :: 		RedFaultBit                        := 1;
0xCF4A	0x212A40  	MOV	#lo_addr(_RedFaultBit), W0
0xCF4C	0xA0D010  	BSET	[W0], BitPos(_RedFaultBit+0)
;GRR3000LManagementPanel.mpas,2295 :: 		DcLowBit                           := 1;
0xCF4E	0x209200  	MOV	#lo_addr(_DcLowBit), W0
0xCF50	0xA0B010  	BSET	[W0], BitPos(_DcLowBit+0)
;GRR3000LManagementPanel.mpas,2296 :: 		DcHighBit                          := 0;
0xCF52	0x209200  	MOV	#lo_addr(_DcHighBit), W0
0xCF54	0xA1C010  	BCLR	[W0], BitPos(_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2297 :: 		end;
L__Led_RelayControl300:
;GRR3000LManagementPanel.mpas,2298 :: 		end else
0xCF56	0x370023  	BRA	L__Led_RelayControl298
L__Led_RelayControl297:
;GRR3000LManagementPanel.mpas,2300 :: 		DcFaultRelayTime                  := 0;
0xCF58	0xEF2000  	CLR	W0
0xCF5A	0x8847A0  	MOV	W0, _DcFaultRelayTime
;GRR3000LManagementPanel.mpas,2301 :: 		Led1_Group.Led1_DcLow             := 0;
0xCF5C	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCF5E	0xA13410  	BCLR.B	[W0], #3
;GRR3000LManagementPanel.mpas,2302 :: 		Relay_Out_Data.RlyOut_4_DcLow     := 0;
0xCF60	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF62	0xA13010  	BCLR	[W0], #3
;GRR3000LManagementPanel.mpas,2303 :: 		Rly_DcLowBit                      := 0;
0xCF64	0x208CE0  	MOV	#lo_addr(_Rly_DcLowBit), W0
0xCF66	0xA19010  	BCLR	[W0], BitPos(_Rly_DcLowBit+0)
;GRR3000LManagementPanel.mpas,2304 :: 		Led1_Group.Led1_DcHigh            := 0;
0xCF68	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCF6A	0xA14410  	BCLR.B	[W0], #4
;GRR3000LManagementPanel.mpas,2305 :: 		Relay_Out_Data.RlyOut_3_DcHigh    := 0;
0xCF6C	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF6E	0xA12010  	BCLR	[W0], #2
;GRR3000LManagementPanel.mpas,2306 :: 		Rly_DCHighBit                     := 0;
0xCF70	0x208CE0  	MOV	#lo_addr(_Rly_DcHighBit), W0
0xCF72	0xA1A010  	BCLR	[W0], BitPos(_Rly_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2307 :: 		Relay_Out_Data.RlyOut_15_RedFault := 0;
0xCF74	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCF76	0xA1E010  	BCLR	[W0], #14
;GRR3000LManagementPanel.mpas,2308 :: 		Led3_Group.Led3_RedFault          := 0;
0xCF78	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xCF7A	0xA12410  	BCLR.B	[W0], #2
;GRR3000LManagementPanel.mpas,2309 :: 		Rly_RedGenFaultBit                := 0;
0xCF7C	0x209200  	MOV	#lo_addr(_Rly_RedGenFaultBit), W0
0xCF7E	0xA12010  	BCLR	[W0], BitPos(_Rly_RedGenFaultBit+0)
;GRR3000LManagementPanel.mpas,2310 :: 		if (Read_Temp =0) then RedFaultBit:= 0;
0xCF80	0x80A7B0  	MOV	_Read_Temp, W0
0xCF82	0xE10060  	CP	W0, #0
0xCF84	0x3A0002  	BRA NZ	L__Led_RelayControl303
L__Led_RelayControl5047:
0xCF86	0x212A40  	MOV	#lo_addr(_RedFaultBit), W0
0xCF88	0xA1D010  	BCLR	[W0], BitPos(_RedFaultBit+0)
L__Led_RelayControl303:
;GRR3000LManagementPanel.mpas,2311 :: 		DcHighBit                         := 0;
0xCF8A	0x209200  	MOV	#lo_addr(_DcHighBit), W0
0xCF8C	0xA1C010  	BCLR	[W0], BitPos(_DcHighBit+0)
;GRR3000LManagementPanel.mpas,2312 :: 		DcLowBit                          := 0;
0xCF8E	0x209200  	MOV	#lo_addr(_DcLowBit), W0
0xCF90	0xA1B010  	BCLR	[W0], BitPos(_DcLowBit+0)
;GRR3000LManagementPanel.mpas,2313 :: 		LogBit_DcHigh                     := 0; // olay kaydedicisi için
0xCF92	0x2092C0  	MOV	#lo_addr(_LogBit_DcHigh), W0
0xCF94	0xA1D010  	BCLR	[W0], BitPos(_LogBit_DcHigh+0)
;GRR3000LManagementPanel.mpas,2314 :: 		LogBit_DcLow                      := 0; // olay kaydedicisi için
0xCF96	0x2092C0  	MOV	#lo_addr(_LogBit_DcLow), W0
0xCF98	0xA1F010  	BCLR	[W0], BitPos(_LogBit_DcLow+0)
;GRR3000LManagementPanel.mpas,2315 :: 		LogBit_RedFault                   := 0;
0xCF9A	0x20E1E0  	MOV	#lo_addr(_LogBit_RedFault), W0
0xCF9C	0xA14010  	BCLR	[W0], BitPos(_LogBit_RedFault+0)
;GRR3000LManagementPanel.mpas,2316 :: 		end;
L__Led_RelayControl298:
L__Led_RelayControl292:
;GRR3000LManagementPanel.mpas,2317 :: 		end;
L__Led_RelayControl288:
;GRR3000LManagementPanel.mpas,2318 :: 		end;
L__Led_RelayControl285:
;GRR3000LManagementPanel.mpas,2322 :: 		if (Read_LoadVolt > 100) then // 10,0V' dan küçükse kaçak akýmlara bakma
0xCF9E	0x200641  	MOV	#100, W1
0xCFA0	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xCFA2	0xE10810  	CP	W1, [W0]
0xCFA4	0x31003B  	BRA GEU	L__Led_RelayControl306
L__Led_RelayControl5048:
;GRR3000LManagementPanel.mpas,2324 :: 		if (Pos_Leakage_bit = 1) then // + kaçak gelmiþse
0xCFA6	0x2092C0  	MOV	#lo_addr(_Pos_Leakage_bit), W0
0xCFA8	0xA67010  	BTSS	[W0], BitPos(_Pos_Leakage_bit+0)
0xCFAA	0x370012  	BRA	L__Led_RelayControl309
;GRR3000LManagementPanel.mpas,2326 :: 		Inc(LeakFltCounter1);
0xCFAC	0x200011  	MOV	#1, W1
0xCFAE	0x209540  	MOV	#lo_addr(_LeakFltCounter1), W0
0xCFB0	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2327 :: 		if (LeakFltCounter1 > FltTime) then
0xCFB2	0x804AA1  	MOV	_LeakFltCounter1, W1
0xCFB4	0x20BB80  	MOV	#3000, W0
0xCFB6	0xE10800  	CP	W1, W0
0xCFB8	0x36000A  	BRA LEU	L__Led_RelayControl312
L__Led_RelayControl5049:
;GRR3000LManagementPanel.mpas,2329 :: 		Led1_Group.Led1_PLeakage         := 1;
0xCFBA	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCFBC	0xA02410  	BSET.B	[W0], #2
;GRR3000LManagementPanel.mpas,2330 :: 		Relay_Out_Data.RlyOut_5_PLeakage := 1;
0xCFBE	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCFC0	0xA04010  	BSET	[W0], #4
;GRR3000LManagementPanel.mpas,2331 :: 		Rly_PosLeakageBit                := 1;
0xCFC2	0x208CE0  	MOV	#lo_addr(_Rly_PosLeakageBit), W0
0xCFC4	0xA0B010  	BSET	[W0], BitPos(_Rly_PosLeakageBit+0)
;GRR3000LManagementPanel.mpas,2332 :: 		LeakFltCounter1                  := FltTime + 5; // fazlasý yazýlýr sürekli burada kalsýn diye
0xCFC6	0x20BBD0  	MOV	#3005, W0
0xCFC8	0x884AA0  	MOV	W0, _LeakFltCounter1
;GRR3000LManagementPanel.mpas,2333 :: 		P_LeakBit                        := 1;
0xCFCA	0x208040  	MOV	#lo_addr(_P_LeakBit), W0
0xCFCC	0xA07010  	BSET	[W0], BitPos(_P_LeakBit+0)
;GRR3000LManagementPanel.mpas,2334 :: 		end;
L__Led_RelayControl312:
;GRR3000LManagementPanel.mpas,2335 :: 		end else
0xCFCE	0x370008  	BRA	L__Led_RelayControl310
L__Led_RelayControl309:
;GRR3000LManagementPanel.mpas,2337 :: 		Led1_Group.Led1_PLeakage         := 0;
0xCFD0	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCFD2	0xA12410  	BCLR.B	[W0], #2
;GRR3000LManagementPanel.mpas,2338 :: 		Relay_Out_Data.RlyOut_5_PLeakage := 0;
0xCFD4	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCFD6	0xA14010  	BCLR	[W0], #4
;GRR3000LManagementPanel.mpas,2339 :: 		Rly_PosLeakageBit                := 0;
0xCFD8	0x208CE0  	MOV	#lo_addr(_Rly_PosLeakageBit), W0
0xCFDA	0xA1B010  	BCLR	[W0], BitPos(_Rly_PosLeakageBit+0)
;GRR3000LManagementPanel.mpas,2340 :: 		LeakFltCounter1                  := 0;
0xCFDC	0xEF2000  	CLR	W0
0xCFDE	0x884AA0  	MOV	W0, _LeakFltCounter1
;GRR3000LManagementPanel.mpas,2341 :: 		end;
L__Led_RelayControl310:
;GRR3000LManagementPanel.mpas,2343 :: 		if (Neg_Leakage_bit = 1) then // - kaçak gelmiþse
0xCFE0	0x2092C0  	MOV	#lo_addr(_Neg_Leakage_bit), W0
0xCFE2	0xA66010  	BTSS	[W0], BitPos(_Neg_Leakage_bit+0)
0xCFE4	0x370012  	BRA	L__Led_RelayControl315
;GRR3000LManagementPanel.mpas,2345 :: 		Inc(LeakFltCounter2);
0xCFE6	0x200011  	MOV	#1, W1
0xCFE8	0x209580  	MOV	#lo_addr(_LeakFltCounter2), W0
0xCFEA	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2346 :: 		if (LeakFltCounter2 > FltTime) then
0xCFEC	0x804AC1  	MOV	_LeakFltCounter2, W1
0xCFEE	0x20BB80  	MOV	#3000, W0
0xCFF0	0xE10800  	CP	W1, W0
0xCFF2	0x36000A  	BRA LEU	L__Led_RelayControl318
L__Led_RelayControl5050:
;GRR3000LManagementPanel.mpas,2348 :: 		Led1_Group.Led1_NLeakage         := 1;
0xCFF4	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xCFF6	0xA01410  	BSET.B	[W0], #1
;GRR3000LManagementPanel.mpas,2349 :: 		Relay_Out_Data.RlyOut_6_NLeakage := 1;
0xCFF8	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xCFFA	0xA05010  	BSET	[W0], #5
;GRR3000LManagementPanel.mpas,2350 :: 		Rly_NegLeakageBit                := 1;
0xCFFC	0x208CE0  	MOV	#lo_addr(_Rly_NegLeakageBit), W0
0xCFFE	0xA0D010  	BSET	[W0], BitPos(_Rly_NegLeakageBit+0)
;GRR3000LManagementPanel.mpas,2351 :: 		LeakFltCounter2                  := FltTime + 5; // fazlasý yazýlýr sürekli burada kalsýn diye
0xD000	0x20BBD0  	MOV	#3005, W0
0xD002	0x884AC0  	MOV	W0, _LeakFltCounter2
;GRR3000LManagementPanel.mpas,2352 :: 		N_LeakBit                        := 1;
0xD004	0x208040  	MOV	#lo_addr(_N_LeakBit), W0
0xD006	0xA08010  	BSET	[W0], BitPos(_N_LeakBit+0)
;GRR3000LManagementPanel.mpas,2353 :: 		end;
L__Led_RelayControl318:
;GRR3000LManagementPanel.mpas,2354 :: 		end else
0xD008	0x370008  	BRA	L__Led_RelayControl316
L__Led_RelayControl315:
;GRR3000LManagementPanel.mpas,2356 :: 		Led1_Group.Led1_NLeakage         := 0;
0xD00A	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xD00C	0xA11410  	BCLR.B	[W0], #1
;GRR3000LManagementPanel.mpas,2357 :: 		Relay_Out_Data.RlyOut_6_NLeakage := 0;
0xD00E	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD010	0xA15010  	BCLR	[W0], #5
;GRR3000LManagementPanel.mpas,2358 :: 		Rly_NegLeakageBit                := 0;
0xD012	0x208CE0  	MOV	#lo_addr(_Rly_NegLeakageBit), W0
0xD014	0xA1D010  	BCLR	[W0], BitPos(_Rly_NegLeakageBit+0)
;GRR3000LManagementPanel.mpas,2359 :: 		LeakFltCounter2                  := 0;
0xD016	0xEF2000  	CLR	W0
0xD018	0x884AC0  	MOV	W0, _LeakFltCounter2
;GRR3000LManagementPanel.mpas,2360 :: 		end;
L__Led_RelayControl316:
;GRR3000LManagementPanel.mpas,2361 :: 		end else
0xD01A	0x370018  	BRA	L__Led_RelayControl307
L__Led_RelayControl306:
;GRR3000LManagementPanel.mpas,2363 :: 		Led1_Group.Led1_PLeakage         := 0;
0xD01C	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xD01E	0xA12410  	BCLR.B	[W0], #2
;GRR3000LManagementPanel.mpas,2364 :: 		Relay_Out_Data.RlyOut_5_PLeakage := 0;
0xD020	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD022	0xA14010  	BCLR	[W0], #4
;GRR3000LManagementPanel.mpas,2365 :: 		Rly_PosLeakageBit                := 0;
0xD024	0x208CE0  	MOV	#lo_addr(_Rly_PosLeakageBit), W0
0xD026	0xA1B010  	BCLR	[W0], BitPos(_Rly_PosLeakageBit+0)
;GRR3000LManagementPanel.mpas,2366 :: 		Rly_NegLeakageBit                := 0;
0xD028	0x208CE0  	MOV	#lo_addr(_Rly_NegLeakageBit), W0
0xD02A	0xA1D010  	BCLR	[W0], BitPos(_Rly_NegLeakageBit+0)
;GRR3000LManagementPanel.mpas,2367 :: 		LeakFltCounter1                  := 0;
0xD02C	0xEF2000  	CLR	W0
0xD02E	0x884AA0  	MOV	W0, _LeakFltCounter1
;GRR3000LManagementPanel.mpas,2368 :: 		Led1_Group.Led1_NLeakage         := 0;
0xD030	0x209450  	MOV	#lo_addr(_Led1_Group), W0
0xD032	0xA11410  	BCLR.B	[W0], #1
;GRR3000LManagementPanel.mpas,2369 :: 		Relay_Out_Data.RlyOut_6_NLeakage := 0;
0xD034	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD036	0xA15010  	BCLR	[W0], #5
;GRR3000LManagementPanel.mpas,2370 :: 		LeakFltCounter2                  := 0;
0xD038	0xEF2000  	CLR	W0
0xD03A	0x884AC0  	MOV	W0, _LeakFltCounter2
;GRR3000LManagementPanel.mpas,2371 :: 		P_Leakbit                        := 0;
0xD03C	0x208040  	MOV	#lo_addr(_P_LeakBit), W0
0xD03E	0xA17010  	BCLR	[W0], BitPos(_P_LeakBit+0)
;GRR3000LManagementPanel.mpas,2372 :: 		N_Leakbit                        := 0;
0xD040	0x208040  	MOV	#lo_addr(_N_LeakBit), W0
0xD042	0xA18010  	BCLR	[W0], BitPos(_N_LeakBit+0)
;GRR3000LManagementPanel.mpas,2373 :: 		LogBit_Pleak                     := 0;
0xD044	0x20E1E0  	MOV	#lo_addr(_LogBit_Pleak), W0
0xD046	0xA11010  	BCLR	[W0], BitPos(_LogBit_Pleak+0)
;GRR3000LManagementPanel.mpas,2374 :: 		LogBit_Nleak                     := 0;
0xD048	0x20E1E0  	MOV	#lo_addr(_LogBit_Nleak), W0
0xD04A	0xA10010  	BCLR	[W0], BitPos(_LogBit_Nleak+0)
;GRR3000LManagementPanel.mpas,2375 :: 		end;
L__Led_RelayControl307:
;GRR3000LManagementPanel.mpas,2378 :: 		if (TempHighBit = 1) then
0xD04C	0x2092C0  	MOV	#lo_addr(_TempHighBit), W0
0xD04E	0xA64010  	BTSS	[W0], BitPos(_TempHighBit+0)
0xD050	0x370012  	BRA	L__Led_RelayControl321
;GRR3000LManagementPanel.mpas,2380 :: 		Inc(TempFltCounter);
0xD052	0x200011  	MOV	#1, W1
0xD054	0x2095A0  	MOV	#lo_addr(_TempFltCounter), W0
0xD056	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2381 :: 		if (TempFltCounter > FltTime) then
0xD058	0x804AD1  	MOV	_TempFltCounter, W1
0xD05A	0x20BB80  	MOV	#3000, W0
0xD05C	0xE10800  	CP	W1, W0
0xD05E	0x36000A  	BRA LEU	L__Led_RelayControl324
L__Led_RelayControl5051:
;GRR3000LManagementPanel.mpas,2383 :: 		Led2_Group.Led2_HighTemp          := 1;
0xD060	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xD062	0xA05410  	BSET.B	[W0], #5
;GRR3000LManagementPanel.mpas,2384 :: 		Relay_Out_Data.RlyOut_10_HighTemp := 1;
0xD064	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD066	0xA09010  	BSET	[W0], #9
;GRR3000LManagementPanel.mpas,2385 :: 		Rly_HighTempBit                   := 1;
0xD068	0x209200  	MOV	#lo_addr(_Rly_HighTempBit), W0
0xD06A	0xA05010  	BSET	[W0], BitPos(_Rly_HighTempBit+0)
;GRR3000LManagementPanel.mpas,2386 :: 		TempFltCounter                    := FltTime + 5;
0xD06C	0x20BBD0  	MOV	#3005, W0
0xD06E	0x884AD0  	MOV	W0, _TempFltCounter
;GRR3000LManagementPanel.mpas,2387 :: 		HighTempBit                       := 1;
0xD070	0x2092C0  	MOV	#lo_addr(_HighTempBit), W0
0xD072	0xA05010  	BSET	[W0], BitPos(_HighTempBit+0)
;GRR3000LManagementPanel.mpas,2389 :: 		end;
L__Led_RelayControl324:
;GRR3000LManagementPanel.mpas,2391 :: 		end else
0xD074	0x37000C  	BRA	L__Led_RelayControl322
L__Led_RelayControl321:
;GRR3000LManagementPanel.mpas,2393 :: 		Led2_Group.Led2_HighTemp          := 0;
0xD076	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xD078	0xA15410  	BCLR.B	[W0], #5
;GRR3000LManagementPanel.mpas,2394 :: 		Relay_Out_Data.RlyOut_10_HighTemp := 0;
0xD07A	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD07C	0xA19010  	BCLR	[W0], #9
;GRR3000LManagementPanel.mpas,2395 :: 		Rly_HighTempBit                   := 0;
0xD07E	0x209200  	MOV	#lo_addr(_Rly_HighTempBit), W0
0xD080	0xA15010  	BCLR	[W0], BitPos(_Rly_HighTempBit+0)
;GRR3000LManagementPanel.mpas,2396 :: 		TempFltCounter                    := 0;
0xD082	0xEF2000  	CLR	W0
0xD084	0x884AD0  	MOV	W0, _TempFltCounter
;GRR3000LManagementPanel.mpas,2397 :: 		HighTempBit                       := 0;
0xD086	0x2092C0  	MOV	#lo_addr(_HighTempBit), W0
0xD088	0xA15010  	BCLR	[W0], BitPos(_HighTempBit+0)
;GRR3000LManagementPanel.mpas,2398 :: 		LogBit_HighTemp                   := 0;
0xD08A	0x20E1E0  	MOV	#lo_addr(_LogBit_HighTemp), W0
0xD08C	0xA15010  	BCLR	[W0], BitPos(_LogBit_HighTemp+0)
;GRR3000LManagementPanel.mpas,2400 :: 		end;
L__Led_RelayControl322:
;GRR3000LManagementPanel.mpas,2402 :: 		if (AC_MCB_Input =1) then // ac mcb sigortasý atýk
0xD08E	0xAEA2C3  	BTSS	RA13_bit, BitPos(RA13_bit+0)
0xD090	0x370009  	BRA	L__Led_RelayControl327
;GRR3000LManagementPanel.mpas,2404 :: 		Ac_MCB_Bit            := 1;
0xD092	0x2092C0  	MOV	#lo_addr(_Ac_MCB_Bit), W0
0xD094	0xA0B010  	BSET	[W0], BitPos(_Ac_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2405 :: 		Led3_Group.Led3_AcMCB := 1;
0xD096	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD098	0xA01410  	BSET.B	[W0], #1
;GRR3000LManagementPanel.mpas,2406 :: 		Relay_Out_Data.RlyOut_12_AcMCB := 1;
0xD09A	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD09C	0xA0B010  	BSET	[W0], #11
;GRR3000LManagementPanel.mpas,2407 :: 		Rly_AcMcbBit                   := 1;
0xD09E	0x209200  	MOV	#lo_addr(_Rly_AcMcbBit), W0
0xD0A0	0xA09010  	BSET	[W0], BitPos(_Rly_AcMcbBit+0)
;GRR3000LManagementPanel.mpas,2408 :: 		end else
0xD0A2	0x37000A  	BRA	L__Led_RelayControl328
L__Led_RelayControl327:
;GRR3000LManagementPanel.mpas,2410 :: 		Ac_MCB_Bit            := 0;
0xD0A4	0x2092C0  	MOV	#lo_addr(_Ac_MCB_Bit), W0
0xD0A6	0xA1B010  	BCLR	[W0], BitPos(_Ac_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2411 :: 		Led3_Group.Led3_AcMCB := 0;
0xD0A8	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD0AA	0xA11410  	BCLR.B	[W0], #1
;GRR3000LManagementPanel.mpas,2412 :: 		Relay_Out_Data.RlyOut_12_AcMCB := 0;
0xD0AC	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD0AE	0xA1B010  	BCLR	[W0], #11
;GRR3000LManagementPanel.mpas,2413 :: 		Rly_AcMcbBit                   := 0;
0xD0B0	0x209200  	MOV	#lo_addr(_Rly_AcMcbBit), W0
0xD0B2	0xA19010  	BCLR	[W0], BitPos(_Rly_AcMcbBit+0)
;GRR3000LManagementPanel.mpas,2414 :: 		LogBit_AcMCB                   := 0;
0xD0B4	0x20E1E0  	MOV	#lo_addr(_LogBit_AcMCB), W0
0xD0B6	0xA1B010  	BCLR	[W0], BitPos(_LogBit_AcMCB+0)
;GRR3000LManagementPanel.mpas,2415 :: 		end;
L__Led_RelayControl328:
;GRR3000LManagementPanel.mpas,2417 :: 		if (Load_MCB_Input =1) then // yük mcb sigortasý atýk
0xD0B8	0xAE22E7  	BTSS	RG9_bit, BitPos(RG9_bit+0)
0xD0BA	0x370009  	BRA	L__Led_RelayControl330
;GRR3000LManagementPanel.mpas,2419 :: 		Load_MCB_Bit          := 1;
0xD0BC	0x2092C0  	MOV	#lo_addr(_Load_MCB_Bit), W0
0xD0BE	0xA09010  	BSET	[W0], BitPos(_Load_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2420 :: 		Led3_Group.Led3_DcMCB := 1;
0xD0C0	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD0C2	0xA04410  	BSET.B	[W0], #4
;GRR3000LManagementPanel.mpas,2421 :: 		Relay_Out_Data.RlyOut_13_DcMCB := 1;
0xD0C4	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD0C6	0xA0C010  	BSET	[W0], #12
;GRR3000LManagementPanel.mpas,2422 :: 		Rly_DcMcbBit                   := 1;
0xD0C8	0x209200  	MOV	#lo_addr(_Rly_DcMcbBit), W0
0xD0CA	0xA08010  	BSET	[W0], BitPos(_Rly_DcMcbBit+0)
;GRR3000LManagementPanel.mpas,2423 :: 		end else
0xD0CC	0x37000A  	BRA	L__Led_RelayControl331
L__Led_RelayControl330:
;GRR3000LManagementPanel.mpas,2425 :: 		Load_MCB_Bit          := 0;
0xD0CE	0x2092C0  	MOV	#lo_addr(_Load_MCB_Bit), W0
0xD0D0	0xA19010  	BCLR	[W0], BitPos(_Load_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2426 :: 		Led3_Group.Led3_DcMCB := 0;
0xD0D2	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD0D4	0xA14410  	BCLR.B	[W0], #4
;GRR3000LManagementPanel.mpas,2427 :: 		Relay_Out_Data.RlyOut_13_DcMCB := 0;
0xD0D6	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD0D8	0xA1C010  	BCLR	[W0], #12
;GRR3000LManagementPanel.mpas,2428 :: 		Rly_DcMcbBit                   := 0;
0xD0DA	0x209200  	MOV	#lo_addr(_Rly_DcMcbBit), W0
0xD0DC	0xA18010  	BCLR	[W0], BitPos(_Rly_DcMcbBit+0)
;GRR3000LManagementPanel.mpas,2429 :: 		LogBit_LoadMCB                 := 0;
0xD0DE	0x20E1E0  	MOV	#lo_addr(_LogBit_LoadMCB), W0
0xD0E0	0xA1D010  	BCLR	[W0], BitPos(_LogBit_LoadMCB+0)
;GRR3000LManagementPanel.mpas,2430 :: 		end;
L__Led_RelayControl331:
;GRR3000LManagementPanel.mpas,2432 :: 		if (Batt_MCB_Input =1) then // batt mcb sigortasý atýk
0xD0E2	0xAE82C3  	BTSS	RA12_bit, BitPos(RA12_bit+0)
0xD0E4	0x370009  	BRA	L__Led_RelayControl333
;GRR3000LManagementPanel.mpas,2434 :: 		Batt_MCB_Bit            := 1;
0xD0E6	0x2092C0  	MOV	#lo_addr(_Batt_MCB_Bit), W0
0xD0E8	0xA08010  	BSET	[W0], BitPos(_Batt_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2435 :: 		Led3_Group.Led3_BattMCB := 1;
0xD0EA	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD0EC	0xA03410  	BSET.B	[W0], #3
;GRR3000LManagementPanel.mpas,2436 :: 		Relay_Out_Data.RlyOut_14_BattMCB := 1;
0xD0EE	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD0F0	0xA0D010  	BSET	[W0], #13
;GRR3000LManagementPanel.mpas,2437 :: 		Rly_BattMcbBit                   := 1;
0xD0F2	0x209200  	MOV	#lo_addr(_Rly_BattMcbBit), W0
0xD0F4	0xA03010  	BSET	[W0], BitPos(_Rly_BattMcbBit+0)
;GRR3000LManagementPanel.mpas,2438 :: 		end else
0xD0F6	0x37000A  	BRA	L__Led_RelayControl334
L__Led_RelayControl333:
;GRR3000LManagementPanel.mpas,2440 :: 		Batt_MCB_Bit            := 0;
0xD0F8	0x2092C0  	MOV	#lo_addr(_Batt_MCB_Bit), W0
0xD0FA	0xA18010  	BCLR	[W0], BitPos(_Batt_MCB_Bit+0)
;GRR3000LManagementPanel.mpas,2441 :: 		Led3_Group.Led3_BattMCB := 0;
0xD0FC	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD0FE	0xA13410  	BCLR.B	[W0], #3
;GRR3000LManagementPanel.mpas,2442 :: 		Relay_Out_Data.RlyOut_14_BattMCB := 0;
0xD100	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD102	0xA1D010  	BCLR	[W0], #13
;GRR3000LManagementPanel.mpas,2443 :: 		Rly_BattMcbBit                   := 0;
0xD104	0x209200  	MOV	#lo_addr(_Rly_BattMcbBit), W0
0xD106	0xA13010  	BCLR	[W0], BitPos(_Rly_BattMcbBit+0)
;GRR3000LManagementPanel.mpas,2444 :: 		LogBit_BatMCB                    := 0;
0xD108	0x20E1E0  	MOV	#lo_addr(_LogBit_BatMCB), W0
0xD10A	0xA1C010  	BCLR	[W0], BitPos(_LogBit_BatMCB+0)
;GRR3000LManagementPanel.mpas,2445 :: 		end;
L__Led_RelayControl334:
;GRR3000LManagementPanel.mpas,2447 :: 		if (Dropper_OutStatus = 1) then // bypass ise
0xD10C	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xD10E	0x784010  	MOV.B	[W0], W0
0xD110	0xE10461  	CP.B	W0, #1
0xD112	0x3A001C  	BRA NZ	L__Led_RelayControl336
L__Led_RelayControl5052:
;GRR3000LManagementPanel.mpas,2449 :: 		Inc(DropCounter);
0xD114	0x200011  	MOV	#1, W1
0xD116	0x209500  	MOV	#lo_addr(_DropCounter), W0
0xD118	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2450 :: 		if ((DropCounter > 500)and(DropCounter < 1000)) then
0xD11A	0x804A82  	MOV	_DropCounter, W2
0xD11C	0x201F40  	MOV	#500, W0
0xD11E	0xE11000  	CP	W2, W0
0xD120	0xEF2002  	CLR	W1
0xD122	0x360001  	BRA LEU	L__Led_RelayControl5053
0xD124	0xEEA002  	COM	W1
L__Led_RelayControl5053:
0xD126	0x203E80  	MOV	#1000, W0
0xD128	0xE11000  	CP	W2, W0
0xD12A	0xEF2000  	CLR	W0
0xD12C	0x310001  	BRA GEU	L__Led_RelayControl5054
0xD12E	0xEEA000  	COM	W0
L__Led_RelayControl5054:
0xD130	0x608000  	AND	W1, W0, W0
0xD132	0x320003  	BRA Z	L__Led_RelayControl339
L__Led_RelayControl5055:
;GRR3000LManagementPanel.mpas,2452 :: 		Led3_Group.Led3_DropperStatus := 1;
0xD134	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD136	0xA05410  	BSET.B	[W0], #5
;GRR3000LManagementPanel.mpas,2453 :: 		end else
0xD138	0x370008  	BRA	L__Led_RelayControl340
L__Led_RelayControl339:
;GRR3000LManagementPanel.mpas,2454 :: 		if (DropCounter > 1000) then
0xD13A	0x804A81  	MOV	_DropCounter, W1
0xD13C	0x203E80  	MOV	#1000, W0
0xD13E	0xE10800  	CP	W1, W0
0xD140	0x360004  	BRA LEU	L__Led_RelayControl342
L__Led_RelayControl5056:
;GRR3000LManagementPanel.mpas,2456 :: 		Led3_Group.Led3_DropperStatus := 0;
0xD142	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD144	0xA15410  	BCLR.B	[W0], #5
;GRR3000LManagementPanel.mpas,2457 :: 		DropCounter                   := 0;
0xD146	0xEF2000  	CLR	W0
0xD148	0x884A80  	MOV	W0, _DropCounter
;GRR3000LManagementPanel.mpas,2458 :: 		end;
L__Led_RelayControl342:
L__Led_RelayControl340:
;GRR3000LManagementPanel.mpas,2459 :: 		end else
0xD14A	0x37000D  	BRA	L__Led_RelayControl337
L__Led_RelayControl336:
;GRR3000LManagementPanel.mpas,2460 :: 		if (Dropper_OutStatus = 2) then // disable ise
0xD14C	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xD14E	0x784010  	MOV.B	[W0], W0
0xD150	0xE10462  	CP.B	W0, #2
0xD152	0x3A0003  	BRA NZ	L__Led_RelayControl345
L__Led_RelayControl5057:
;GRR3000LManagementPanel.mpas,2462 :: 		Led3_Group.Led3_DropperStatus := 1;
0xD154	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD156	0xA05410  	BSET.B	[W0], #5
;GRR3000LManagementPanel.mpas,2463 :: 		end else
0xD158	0x370006  	BRA	L__Led_RelayControl346
L__Led_RelayControl345:
;GRR3000LManagementPanel.mpas,2464 :: 		if (Dropper_OutStatus = 3) then // devrede ise
0xD15A	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xD15C	0x784010  	MOV.B	[W0], W0
0xD15E	0xE10463  	CP.B	W0, #3
0xD160	0x3A0002  	BRA NZ	L__Led_RelayControl348
L__Led_RelayControl5058:
;GRR3000LManagementPanel.mpas,2466 :: 		Led3_Group.Led3_DropperStatus := 0;
0xD162	0x209350  	MOV	#lo_addr(_Led3_Group), W0
0xD164	0xA15410  	BCLR.B	[W0], #5
;GRR3000LManagementPanel.mpas,2467 :: 		end;
L__Led_RelayControl348:
L__Led_RelayControl346:
L__Led_RelayControl337:
;GRR3000LManagementPanel.mpas,2470 :: 		if (FanOnBit = 1) then
0xD166	0x2092C0  	MOV	#lo_addr(_FanOnBit), W0
0xD168	0xA6C010  	BTSS	[W0], BitPos(_FanOnBit+0)
0xD16A	0x370021  	BRA	L__Led_RelayControl351
;GRR3000LManagementPanel.mpas,2472 :: 		if (FanFaultBit = 1) then
0xD16C	0x2092C0  	MOV	#lo_addr(_FanFaultBit), W0
0xD16E	0xA6A010  	BTSS	[W0], BitPos(_FanFaultBit+0)
0xD170	0x370012  	BRA	L__Led_RelayControl354
;GRR3000LManagementPanel.mpas,2474 :: 		Inc(FanFaultCounter);
0xD172	0x200011  	MOV	#1, W1
0xD174	0x209260  	MOV	#lo_addr(_FanFaultCounter), W0
0xD176	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2475 :: 		if (FanFaultCounter > FltTime) then
0xD178	0x804931  	MOV	_FanFaultCounter, W1
0xD17A	0x20BB80  	MOV	#3000, W0
0xD17C	0xE10800  	CP	W1, W0
0xD17E	0x36000A  	BRA LEU	L__Led_RelayControl357
L__Led_RelayControl5059:
;GRR3000LManagementPanel.mpas,2477 :: 		FanFaultCounter := FltTime + 5;
0xD180	0x20BBD0  	MOV	#3005, W0
0xD182	0x884930  	MOV	W0, _FanFaultCounter
;GRR3000LManagementPanel.mpas,2478 :: 		Led2_Group.Led2_FanFault := 1;
0xD184	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xD186	0xA06410  	BSET.B	[W0], #6
;GRR3000LManagementPanel.mpas,2479 :: 		Relay_Out_Data.RlyOut_9_FanFault := 1;
0xD188	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD18A	0xA08010  	BSET	[W0], #8
;GRR3000LManagementPanel.mpas,2480 :: 		Rly_FanFaultBit                  := 1;
0xD18C	0x209200  	MOV	#lo_addr(_Rly_FanFaultBit), W0
0xD18E	0xA06010  	BSET	[W0], BitPos(_Rly_FanFaultBit+0)
;GRR3000LManagementPanel.mpas,2481 :: 		FanFltBit                        := 1;
0xD190	0x2092C0  	MOV	#lo_addr(_FanFltBit), W0
0xD192	0xA03010  	BSET	[W0], BitPos(_FanFltBit+0)
;GRR3000LManagementPanel.mpas,2482 :: 		end;
L__Led_RelayControl357:
;GRR3000LManagementPanel.mpas,2483 :: 		end else
0xD194	0x37000C  	BRA	L__Led_RelayControl355
L__Led_RelayControl354:
;GRR3000LManagementPanel.mpas,2485 :: 		FanFaultCounter := 0;
0xD196	0xEF2000  	CLR	W0
0xD198	0x884930  	MOV	W0, _FanFaultCounter
;GRR3000LManagementPanel.mpas,2486 :: 		Led2_Group.Led2_FanFault := 0;
0xD19A	0x209440  	MOV	#lo_addr(_Led2_Group), W0
0xD19C	0xA16410  	BCLR.B	[W0], #6
;GRR3000LManagementPanel.mpas,2487 :: 		Relay_Out_Data.RlyOut_9_FanFault := 0;
0xD19E	0x2148E0  	MOV	#lo_addr(_Relay_Out_Data), W0
0xD1A0	0xA18010  	BCLR	[W0], #8
;GRR3000LManagementPanel.mpas,2488 :: 		Rly_FanFaultBit                  := 0;
0xD1A2	0x209200  	MOV	#lo_addr(_Rly_FanFaultBit), W0
0xD1A4	0xA16010  	BCLR	[W0], BitPos(_Rly_FanFaultBit+0)
;GRR3000LManagementPanel.mpas,2489 :: 		FanFltBit                        := 0;
0xD1A6	0x2092C0  	MOV	#lo_addr(_FanFltBit), W0
0xD1A8	0xA13010  	BCLR	[W0], BitPos(_FanFltBit+0)
;GRR3000LManagementPanel.mpas,2490 :: 		LogBit_FanFault                  := 0;
0xD1AA	0x20E1E0  	MOV	#lo_addr(_LogBit_FanFault), W0
0xD1AC	0xA19010  	BCLR	[W0], BitPos(_LogBit_FanFault+0)
;GRR3000LManagementPanel.mpas,2491 :: 		end;
L__Led_RelayControl355:
;GRR3000LManagementPanel.mpas,2492 :: 		end;
L__Led_RelayControl351:
;GRR3000LManagementPanel.mpas,2494 :: 		end;
L_end_Led_RelayControl:
0xD1AE	0x78054F  	POP	W10
0xD1B0	0xFA8000  	ULNK
0xD1B2	0x060000  	RETURN
; end of _Led_RelayControl
_abs:
0x24BA	0xFA0000  	LNK	#0
;__Lib_CStdlib.mpas,57 :: 		
;__Lib_CStdlib.mpas,58 :: 		
0x24BC	0xE15060  	CP	W10, #0
0x24BE	0x3D0002  	BRA GE	L__abs2
L__abs22:
;__Lib_CStdlib.mpas,59 :: 		
; Result start address is: 2 (W1)
0x24C0	0x1500E0  	SUBR	W10, #0, W1
; Result end address is: 2 (W1)
0x24C2	0x370001  	BRA	L__abs3
;__Lib_CStdlib.mpas,60 :: 		
L__abs2:
;__Lib_CStdlib.mpas,61 :: 		
; Result start address is: 2 (W1)
0x24C4	0x78008A  	MOV	W10, W1
; Result end address is: 2 (W1)
L__abs3:
;__Lib_CStdlib.mpas,63 :: 		
; Result start address is: 2 (W1)
0x24C6	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_abs:
0x24C8	0xFA8000  	ULNK
0x24CA	0x060000  	RETURN
; end of _abs
_Fan_Heat_Control:
;GRR3000LManagementPanel.mpas,2497 :: 		begin
;GRR3000LManagementPanel.mpas,2499 :: 		if ((Dropper_Out_1 =0)or(Dropper_Out_2 =0)) then
0xD1B4	0xA90004  	BCLR	W2, #0
0xD1B6	0xAE62D0  	BTSS	LATC3_bit, BitPos(LATC3_bit+0)
0xD1B8	0xA80004  	BSET	W2, #0
0xD1BA	0xAE42D0  	BTSS	LATC2_bit, BitPos(LATC2_bit+0)
0xD1BC	0xA80042  	BSET	SR, #0
0xD1BE	0xAF42D0  	BTSC	LATC2_bit, BitPos(LATC2_bit+0)
0xD1C0	0xA90042  	BCLR	SR, #0
0xD1C2	0xAE0004  	BTSS	W2, #0
0xD1C4	0xAF0042  	BTSC	SR, #0
0xD1C6	0x370002  	BRA	L__Fan_Heat_Control5061
0xD1C8	0xA90004  	BCLR	W2, #0
0xD1CA	0x370001  	BRA	L__Fan_Heat_Control5064
L__Fan_Heat_Control5061:
0xD1CC	0xA80004  	BSET	W2, #0
L__Fan_Heat_Control5064:
0xD1CE	0xAE0004  	BTSS	W2, #0
0xD1D0	0x370002  	BRA	L__Fan_Heat_Control361
;GRR3000LManagementPanel.mpas,2501 :: 		Dropper_Out_3 := 1; // faný aç, bu çýkýþ dropperlarýn fan çýkýþý yapýldý
0xD1D2	0xA822D0  	BSET	LATC1_bit, BitPos(LATC1_bit+0)
;GRR3000LManagementPanel.mpas,2502 :: 		end else
0xD1D4	0x370010  	BRA	L__Fan_Heat_Control362
L__Fan_Heat_Control361:
;GRR3000LManagementPanel.mpas,2503 :: 		if ((Dropper_Out_1 =1)and(Dropper_Out_2 =1)) then
0xD1D6	0xA80004  	BSET	W2, #0
0xD1D8	0xAE62D0  	BTSS	LATC3_bit, BitPos(LATC3_bit+0)
0xD1DA	0xA90004  	BCLR	W2, #0
0xD1DC	0xAE42D0  	BTSS	LATC2_bit, BitPos(LATC2_bit+0)
0xD1DE	0xA90042  	BCLR	SR, #0
0xD1E0	0xAF42D0  	BTSC	LATC2_bit, BitPos(LATC2_bit+0)
0xD1E2	0xA80042  	BSET	SR, #0
0xD1E4	0xAF0004  	BTSC	W2, #0
0xD1E6	0xAE0042  	BTSS	SR, #0
0xD1E8	0x370002  	BRA	L__Fan_Heat_Control5066
0xD1EA	0xA80004  	BSET	W2, #0
0xD1EC	0x370001  	BRA	L__Fan_Heat_Control5068
L__Fan_Heat_Control5066:
0xD1EE	0xA90004  	BCLR	W2, #0
L__Fan_Heat_Control5068:
0xD1F0	0xAE0004  	BTSS	W2, #0
0xD1F2	0x370001  	BRA	L__Fan_Heat_Control364
;GRR3000LManagementPanel.mpas,2505 :: 		Dropper_Out_3 := 0; // faný aç, bu çýkýþ dropperlarýn fan çýkýþý yapýldý
0xD1F4	0xA922D0  	BCLR	LATC1_bit, BitPos(LATC1_bit+0)
;GRR3000LManagementPanel.mpas,2506 :: 		end;
L__Fan_Heat_Control364:
L__Fan_Heat_Control362:
;GRR3000LManagementPanel.mpas,2508 :: 		if (PCB_Temperature >= TempFanOnSet) then
0xD1F6	0x214BD0  	MOV	#lo_addr(_PCB_Temperature), W0
0xD1F8	0x784090  	MOV.B	[W0], W1
0xD1FA	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0xD1FC	0xE10C10  	CP.B	W1, [W0]
0xD1FE	0x390004  	BRA LTU	L__Fan_Heat_Control367
L__Fan_Heat_Control5069:
;GRR3000LManagementPanel.mpas,2510 :: 		Fan_Out := 1;
0xD200	0xA8E2E7  	BSET	RG15_bit, BitPos(RG15_bit+0)
;GRR3000LManagementPanel.mpas,2511 :: 		FanOnBit:= 1;
0xD202	0x2092C0  	MOV	#lo_addr(_FanOnBit), W0
0xD204	0xA0C010  	BSET	[W0], BitPos(_FanOnBit+0)
;GRR3000LManagementPanel.mpas,2512 :: 		end else
0xD206	0x370008  	BRA	L__Fan_Heat_Control368
L__Fan_Heat_Control367:
;GRR3000LManagementPanel.mpas,2513 :: 		if (PCB_Temperature <= TempFanOffSet) then
0xD208	0x214BD0  	MOV	#lo_addr(_PCB_Temperature), W0
0xD20A	0x784090  	MOV.B	[W0], W1
0xD20C	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0xD20E	0xE10C10  	CP.B	W1, [W0]
0xD210	0x3E0003  	BRA GTU	L__Fan_Heat_Control370
L__Fan_Heat_Control5070:
;GRR3000LManagementPanel.mpas,2515 :: 		Fan_Out := 0;
0xD212	0xA9E2E7  	BCLR	RG15_bit, BitPos(RG15_bit+0)
;GRR3000LManagementPanel.mpas,2516 :: 		FanOnBit:= 0;
0xD214	0x2092C0  	MOV	#lo_addr(_FanOnBit), W0
0xD216	0xA1C010  	BCLR	[W0], BitPos(_FanOnBit+0)
;GRR3000LManagementPanel.mpas,2517 :: 		end;
L__Fan_Heat_Control370:
L__Fan_Heat_Control368:
;GRR3000LManagementPanel.mpas,2521 :: 		if (PCB_Temperature < 10) then // kasa iç sýcaklýk 10C altýnda ýsýtýcýyý çalýþtýr
0xD218	0x214BD0  	MOV	#lo_addr(_PCB_Temperature), W0
0xD21A	0x784010  	MOV.B	[W0], W0
0xD21C	0xE1046A  	CP.B	W0, #10
0xD21E	0x310004  	BRA GEU	L__Fan_Heat_Control373
L__Fan_Heat_Control5071:
;GRR3000LManagementPanel.mpas,2523 :: 		Heater_Output       := 1;
0xD220	0xA822C3  	BSET	RA9_bit, BitPos(RA9_bit+0)
;GRR3000LManagementPanel.mpas,2524 :: 		CaseHeaterActiveBit := 1;
0xD222	0x208040  	MOV	#lo_addr(_CaseHeaterActiveBit), W0
0xD224	0xA0D010  	BSET	[W0], BitPos(_CaseHeaterActiveBit+0)
;GRR3000LManagementPanel.mpas,2525 :: 		end else
0xD226	0x370007  	BRA	L__Fan_Heat_Control374
L__Fan_Heat_Control373:
;GRR3000LManagementPanel.mpas,2526 :: 		if (PCB_Temperature > 15) then // kasa iç sýcaklýk 15C üstünde ýsýtýcýyý kapat
0xD228	0x214BD0  	MOV	#lo_addr(_PCB_Temperature), W0
0xD22A	0x784010  	MOV.B	[W0], W0
0xD22C	0xE1046F  	CP.B	W0, #15
0xD22E	0x360003  	BRA LEU	L__Fan_Heat_Control376
L__Fan_Heat_Control5072:
;GRR3000LManagementPanel.mpas,2528 :: 		Heater_Output       := 0;
0xD230	0xA922C3  	BCLR	RA9_bit, BitPos(RA9_bit+0)
;GRR3000LManagementPanel.mpas,2529 :: 		CaseHeaterActiveBit := 0;
0xD232	0x208040  	MOV	#lo_addr(_CaseHeaterActiveBit), W0
0xD234	0xA1D010  	BCLR	[W0], BitPos(_CaseHeaterActiveBit+0)
;GRR3000LManagementPanel.mpas,2530 :: 		end;
L__Fan_Heat_Control376:
L__Fan_Heat_Control374:
;GRR3000LManagementPanel.mpas,2533 :: 		end;
L_end_Fan_Heat_Control:
0xD236	0x060000  	RETURN
; end of _Fan_Heat_Control
_Modbus_Reg_Data_Fill:
;Modbus.mpas,357 :: 		begin
;Modbus.mpas,362 :: 		Modbus_Reg_Data[3] := hi(Read_RedVolt);          // 40 003
0xC92E	0x214E50  	MOV	#lo_addr(_Read_RedVolt+1), W0
0xC930	0xFB8010  	ZE	[W0], W0
0xC932	0x884BD0  	MOV	W0, _Modbus_Reg_data+4
;Modbus.mpas,363 :: 		Modbus_Reg_Data[4] := lo(Read_RedVolt);          // Redresör Gerilimi
0xC934	0x214E40  	MOV	#lo_addr(_Read_RedVolt), W0
0xC936	0xFB8010  	ZE	[W0], W0
0xC938	0x884BE0  	MOV	W0, _Modbus_Reg_data+6
;Modbus.mpas,365 :: 		Modbus_Reg_Data[5] := hi(Read_LoadVolt);         // 40 004
0xC93A	0x209530  	MOV	#lo_addr(_Read_LoadVolt+1), W0
0xC93C	0xFB8010  	ZE	[W0], W0
0xC93E	0x884BF0  	MOV	W0, _Modbus_Reg_data+8
;Modbus.mpas,366 :: 		Modbus_Reg_Data[6] := lo(Read_LoadVolt);         // yük gerilimi
0xC940	0x209520  	MOV	#lo_addr(_Read_LoadVolt), W0
0xC942	0xFB8010  	ZE	[W0], W0
0xC944	0x884C00  	MOV	W0, _Modbus_Reg_data+10
;Modbus.mpas,368 :: 		Modbus_Reg_Data[7] := hi(Read_BattAmps);         // 40 005  ///
0xC946	0x214C90  	MOV	#lo_addr(_Read_BattAmps+1), W0
0xC948	0xFB8010  	ZE	[W0], W0
0xC94A	0x884C10  	MOV	W0, _Modbus_Reg_data+12
;Modbus.mpas,369 :: 		Modbus_Reg_Data[8] := lo(Read_BattAmps);         // akü akýmý
0xC94C	0x214C80  	MOV	#lo_addr(_Read_BattAmps), W0
0xC94E	0xFB8010  	ZE	[W0], W0
0xC950	0x884C20  	MOV	W0, _Modbus_Reg_data+14
;Modbus.mpas,371 :: 		Modbus_Reg_Data[9]  := hi(Read_OutAmps);         // 40 006
0xC952	0x214CB0  	MOV	#lo_addr(_Read_OutAmps+1), W0
0xC954	0xFB8010  	ZE	[W0], W0
0xC956	0x884C30  	MOV	W0, _Modbus_Reg_data+16
;Modbus.mpas,372 :: 		Modbus_Reg_Data[10] := lo(Read_OutAmps);         // çýkýþ akýmý
0xC958	0x214CA0  	MOV	#lo_addr(_Read_OutAmps), W0
0xC95A	0xFB8010  	ZE	[W0], W0
0xC95C	0x884C40  	MOV	W0, _Modbus_Reg_data+18
;Modbus.mpas,374 :: 		Modbus_Reg_Data[11] := hi((Read_BattAmps+Read_OutAmps));            // 40 007
0xC95E	0x80A641  	MOV	_Read_BattAmps, W1
0xC960	0x214CA0  	MOV	#lo_addr(_Read_OutAmps), W0
0xC962	0x408090  	ADD	W1, [W0], W1
0xC964	0x200020  	MOV	#lo_addr(W1), W0
0xC966	0xEC2000  	INC	W0
0xC968	0x784010  	MOV.B	[W0], W0
0xC96A	0xFB8000  	ZE	W0, W0
0xC96C	0x884C50  	MOV	W0, _Modbus_Reg_data+20
;Modbus.mpas,375 :: 		Modbus_Reg_Data[12]:= lo((Read_BattAmps+Read_OutAmps));             // toplam akým
0xC96E	0xFB8001  	ZE	W1, W0
0xC970	0x884C60  	MOV	W0, _Modbus_Reg_data+22
;Modbus.mpas,377 :: 		Modbus_Reg_Data[13] := hi(Read_U1Volt);          // 40 008
0xC972	0x214F50  	MOV	#lo_addr(_Read_U1Volt+1), W0
0xC974	0xFB8010  	ZE	[W0], W0
0xC976	0x884C70  	MOV	W0, _Modbus_Reg_data+24
;Modbus.mpas,378 :: 		Modbus_Reg_Data[14] := lo(Read_U1Volt);          // u1 gerilim
0xC978	0x214F40  	MOV	#lo_addr(_Read_U1Volt), W0
0xC97A	0xFB8010  	ZE	[W0], W0
0xC97C	0x884C80  	MOV	W0, _Modbus_Reg_data+26
;Modbus.mpas,380 :: 		Modbus_Reg_Data[15]:= hi(Read_U2Volt);           // 40 009
0xC97E	0x214F90  	MOV	#lo_addr(_Read_U2Volt+1), W0
0xC980	0xFB8010  	ZE	[W0], W0
0xC982	0x884C90  	MOV	W0, _Modbus_Reg_data+28
;Modbus.mpas,381 :: 		Modbus_Reg_Data[16]:= lo(Read_U2Volt);           // u2 gerilim
0xC984	0x214F80  	MOV	#lo_addr(_Read_U2Volt), W0
0xC986	0xFB8010  	ZE	[W0], W0
0xC988	0x884CA0  	MOV	W0, _Modbus_Reg_data+30
;Modbus.mpas,383 :: 		Modbus_Reg_Data[17] := hi(Read_U3Volt);          // 40 010
0xC98A	0x214FF0  	MOV	#lo_addr(_Read_U3Volt+1), W0
0xC98C	0xFB8010  	ZE	[W0], W0
0xC98E	0x884CB0  	MOV	W0, _Modbus_Reg_data+32
;Modbus.mpas,384 :: 		Modbus_Reg_Data[18] := Lo(Read_U3Volt);          // u3 gerilim
0xC990	0x214FE0  	MOV	#lo_addr(_Read_U3Volt), W0
0xC992	0xFB8010  	ZE	[W0], W0
0xC994	0x884CC0  	MOV	W0, _Modbus_Reg_data+34
;Modbus.mpas,386 :: 		Modbus_Reg_Data[19] := hi(Read_U1Amps);          //40 011
0xC996	0x214EF0  	MOV	#lo_addr(_Read_U1Amps+1), W0
0xC998	0xFB8010  	ZE	[W0], W0
0xC99A	0x884CD0  	MOV	W0, _Modbus_Reg_data+36
;Modbus.mpas,387 :: 		Modbus_Reg_Data[20] := lo(Read_U1Amps);          // u1 akým
0xC99C	0x214EE0  	MOV	#lo_addr(_Read_U1Amps), W0
0xC99E	0xFB8010  	ZE	[W0], W0
0xC9A0	0x884CE0  	MOV	W0, _Modbus_Reg_data+38
;Modbus.mpas,389 :: 		Modbus_Reg_Data[21] := hi(Read_U2Amps);          // u2 akým
0xC9A2	0x214F30  	MOV	#lo_addr(_Read_U2Amps+1), W0
0xC9A4	0xFB8010  	ZE	[W0], W0
0xC9A6	0x884CF0  	MOV	W0, _Modbus_Reg_data+40
;Modbus.mpas,390 :: 		Modbus_Reg_Data[22] := lo(Read_U2Amps);          // 40 012
0xC9A8	0x214F20  	MOV	#lo_addr(_Read_U2Amps), W0
0xC9AA	0xFB8010  	ZE	[W0], W0
0xC9AC	0x884D00  	MOV	W0, _Modbus_Reg_data+42
;Modbus.mpas,392 :: 		Modbus_Reg_Data[23] := hi(Read_U3Amps);          // u3 amps
0xC9AE	0x214F10  	MOV	#lo_addr(_Read_U3Amps+1), W0
0xC9B0	0xFB8010  	ZE	[W0], W0
0xC9B2	0x884D10  	MOV	W0, _Modbus_Reg_data+44
;Modbus.mpas,393 :: 		Modbus_Reg_Data[24] := lo(Read_U3Amps);          // 40 013
0xC9B4	0x214F00  	MOV	#lo_addr(_Read_U3Amps), W0
0xC9B6	0xFB8010  	ZE	[W0], W0
0xC9B8	0x884D20  	MOV	W0, _Modbus_Reg_data+46
;Modbus.mpas,395 :: 		Modbus_Reg_Data[25] := hi(Read_Freq);            // frekans
0xC9BA	0x2147F0  	MOV	#lo_addr(_Read_Freq+1), W0
0xC9BC	0xFB8010  	ZE	[W0], W0
0xC9BE	0x884D30  	MOV	W0, _Modbus_Reg_data+48
;Modbus.mpas,396 :: 		Modbus_Reg_Data[26] := lo(Read_Freq);            // 40 014
0xC9C0	0x2147E0  	MOV	#lo_addr(_Read_Freq), W0
0xC9C2	0xFB8010  	ZE	[W0], W0
0xC9C4	0x884D40  	MOV	W0, _Modbus_Reg_data+50
;Modbus.mpas,398 :: 		Modbus_Reg_Data[27] := 0;                        // þarj modu
0xC9C6	0xEF2000  	CLR	W0
0xC9C8	0x884D50  	MOV	W0, _Modbus_Reg_data+52
;Modbus.mpas,399 :: 		Modbus_Reg_Data[28] := ChargeMode;               // 40 015
0xC9CA	0x211F90  	MOV	#lo_addr(_ChargeMode), W0
0xC9CC	0xFB8010  	ZE	[W0], W0
0xC9CE	0x884D60  	MOV	W0, _Modbus_Reg_data+54
;Modbus.mpas,401 :: 		Modbus_Reg_Data[29] := hi(BoostChargeTimeSet);   // ayarlanan hýzlý þarj süresi
0xC9D0	0x2158B0  	MOV	#lo_addr(_BoostChargeTimeSet+1), W0
0xC9D2	0xFB8010  	ZE	[W0], W0
0xC9D4	0x884D70  	MOV	W0, _Modbus_Reg_data+56
;Modbus.mpas,402 :: 		Modbus_Reg_Data[30] := lo(BoostChargeTimeSet);   // 40 016
0xC9D6	0x2158A0  	MOV	#lo_addr(_BoostChargeTimeSet), W0
0xC9D8	0xFB8010  	ZE	[W0], W0
0xC9DA	0x884D80  	MOV	W0, _Modbus_Reg_data+58
;Modbus.mpas,404 :: 		Modbus_Reg_Data[31] := hi(BoostChargeTime);      // kalan hýzlý þarj süresi
0xC9DC	0x215870  	MOV	#lo_addr(_BoostChargeTime+1), W0
0xC9DE	0xFB8010  	ZE	[W0], W0
0xC9E0	0x884D90  	MOV	W0, _Modbus_Reg_data+60
;Modbus.mpas,405 :: 		Modbus_Reg_Data[32] := lo(BoostChargeTime);      // 40 017
0xC9E2	0x215860  	MOV	#lo_addr(_BoostChargeTime), W0
0xC9E4	0xFB8010  	ZE	[W0], W0
0xC9E6	0x884DA0  	MOV	W0, _Modbus_Reg_data+62
;Modbus.mpas,407 :: 		Modbus_Reg_Data[33] := 0;                        // otomatik hýzlý þarj/normal þarj
0xC9E8	0xEF2000  	CLR	W0
0xC9EA	0x884DB0  	MOV	W0, _Modbus_Reg_data+64
;Modbus.mpas,408 :: 		Modbus_Reg_Data[34] := AutoBFMode;               // 40 018
0xC9EC	0x215961  	MOV	#lo_addr(_AutoBFMode), W1
0xC9EE	0x209B80  	MOV	#lo_addr(_Modbus_Reg_data+66), W0
0xC9F0	0xEB0800  	CLR	[W0]
0xC9F2	0xA70011  	BTSC	[W1], BitPos(_AutoBFMode+0)
0xC9F4	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,410 :: 		Modbus_Reg_Data[35] := hi(ACMaxVoltSet);         // AC max volt set deðeri
0xC9F6	0x212D90  	MOV	#lo_addr(_ACMaxVoltSet+1), W0
0xC9F8	0xFB8010  	ZE	[W0], W0
0xC9FA	0x884DD0  	MOV	W0, _Modbus_Reg_data+68
;Modbus.mpas,411 :: 		Modbus_Reg_Data[36] := lo(ACMaxVoltSet);         // 40 019
0xC9FC	0x212D80  	MOV	#lo_addr(_ACMaxVoltSet), W0
0xC9FE	0xFB8010  	ZE	[W0], W0
0xCA00	0x884DE0  	MOV	W0, _Modbus_Reg_data+70
;Modbus.mpas,413 :: 		Modbus_Reg_Data[37] := hi(ACMinVoltSet);         // AC min volt set deðeri
0xCA02	0x212DB0  	MOV	#lo_addr(_ACMinVoltSet+1), W0
0xCA04	0xFB8010  	ZE	[W0], W0
0xCA06	0x884DF0  	MOV	W0, _Modbus_Reg_data+72
;Modbus.mpas,414 :: 		Modbus_Reg_Data[38] := lo(ACMinVoltSet);         // 40 020
0xCA08	0x212DA0  	MOV	#lo_addr(_ACMinVoltSet), W0
0xCA0A	0xFB8010  	ZE	[W0], W0
0xCA0C	0x884E00  	MOV	W0, _Modbus_Reg_data+74
;Modbus.mpas,416 :: 		Modbus_Reg_Data[39] := 0;                        // ac tepki süresi
0xCA0E	0xEF2000  	CLR	W0
0xCA10	0x884E10  	MOV	W0, _Modbus_Reg_data+76
;Modbus.mpas,417 :: 		Modbus_Reg_Data[40] := 0;//ACSetResponseTime;        // 40 021
0xCA12	0xEF2000  	CLR	W0
0xCA14	0x884E20  	MOV	W0, _Modbus_Reg_data+78
;Modbus.mpas,419 :: 		Modbus_Reg_Data[41] := hi(DCOutVoltSet);         // dc çýkýþ gerilimi set deðeri
0xCA16	0x213230  	MOV	#lo_addr(_DCOutVoltSet+1), W0
0xCA18	0xFB8010  	ZE	[W0], W0
0xCA1A	0x884E30  	MOV	W0, _Modbus_Reg_data+80
;Modbus.mpas,420 :: 		Modbus_Reg_Data[42] := lo(DCOutVoltSet);         // 40 022
0xCA1C	0x213220  	MOV	#lo_addr(_DCOutVoltSet), W0
0xCA1E	0xFB8010  	ZE	[W0], W0
0xCA20	0x884E40  	MOV	W0, _Modbus_Reg_data+82
;Modbus.mpas,422 :: 		Modbus_Reg_Data[43] := hi(DCOutAmpsSet);         // dc çýkýþ akýmý set deðeri
0xCA22	0x212EF0  	MOV	#lo_addr(_DcOutAmpsSet+1), W0
0xCA24	0xFB8010  	ZE	[W0], W0
0xCA26	0x884E50  	MOV	W0, _Modbus_Reg_data+84
;Modbus.mpas,423 :: 		Modbus_Reg_Data[44] := lo(DCOutAmpsSet);         // 40 023
0xCA28	0x212EE0  	MOV	#lo_addr(_DcOutAmpsSet), W0
0xCA2A	0xFB8010  	ZE	[W0], W0
0xCA2C	0x884E60  	MOV	W0, _Modbus_Reg_data+86
;Modbus.mpas,425 :: 		Modbus_Reg_Data[45] := hi(MaxvoltSet);           // max dc gerilim set deðeri
0xCA2E	0x212F30  	MOV	#lo_addr(_MaxvoltSet+1), W0
0xCA30	0xFB8010  	ZE	[W0], W0
0xCA32	0x884E70  	MOV	W0, _Modbus_Reg_data+88
;Modbus.mpas,426 :: 		Modbus_Reg_Data[46] := lo(MaxvoltSet);           // 40 024
0xCA34	0x212F20  	MOV	#lo_addr(_MaxvoltSet), W0
0xCA36	0xFB8010  	ZE	[W0], W0
0xCA38	0x884E80  	MOV	W0, _Modbus_Reg_data+90
;Modbus.mpas,428 :: 		Modbus_Reg_Data[47] := hi(MinVoltSet);           // min dc gerilim set deðeri
0xCA3A	0x212F70  	MOV	#lo_addr(_MinVoltSet+1), W0
0xCA3C	0xFB8010  	ZE	[W0], W0
0xCA3E	0x884E90  	MOV	W0, _Modbus_Reg_data+92
;Modbus.mpas,429 :: 		Modbus_Reg_Data[48] := lo(MinVoltSet);           // 40 025
0xCA40	0x212F60  	MOV	#lo_addr(_MinVoltSet), W0
0xCA42	0xFB8010  	ZE	[W0], W0
0xCA44	0x884EA0  	MOV	W0, _Modbus_Reg_data+94
;Modbus.mpas,431 :: 		Modbus_Reg_Data[49] := 0;                        // 40 026
0xCA46	0xEF2000  	CLR	W0
0xCA48	0x884EB0  	MOV	W0, _Modbus_Reg_data+96
;Modbus.mpas,432 :: 		Modbus_Reg_Data[50] := 0;//DCSetResponseTime;        // dc röle tepki süresi
0xCA4A	0xEF2000  	CLR	W0
0xCA4C	0x884EC0  	MOV	W0, _Modbus_Reg_data+98
;Modbus.mpas,434 :: 		Modbus_Reg_Data[51] := 0;                        // 40 027
0xCA4E	0xEF2000  	CLR	W0
0xCA50	0x884ED0  	MOV	W0, _Modbus_Reg_data+100
;Modbus.mpas,435 :: 		Modbus_Reg_Data[52] := Dropper_OutStatus;        // dropper durumu
0xCA52	0x212DC0  	MOV	#lo_addr(_Dropper_OutStatus), W0
0xCA54	0xFB8010  	ZE	[W0], W0
0xCA56	0x884EE0  	MOV	W0, _Modbus_Reg_data+102
;Modbus.mpas,437 :: 		Modbus_Reg_Data[53] := hi(BatteryAh);            // 40 028
0xCA58	0x2158D0  	MOV	#lo_addr(_BatteryAh+1), W0
0xCA5A	0xFB8010  	ZE	[W0], W0
0xCA5C	0x884EF0  	MOV	W0, _Modbus_Reg_data+104
;Modbus.mpas,438 :: 		Modbus_Reg_Data[54] := lo(BatteryAh);            // akü ah set deðeri
0xCA5E	0x2158C0  	MOV	#lo_addr(_BatteryAh), W0
0xCA60	0xFB8010  	ZE	[W0], W0
0xCA62	0x884F00  	MOV	W0, _Modbus_Reg_data+106
;Modbus.mpas,440 :: 		Modbus_Reg_Data[55] := hi(BatteryAmpsSet) ;      // 40 029
0xCA64	0x215830  	MOV	#lo_addr(_BatteryAmpsSet+1), W0
0xCA66	0xFB8010  	ZE	[W0], W0
0xCA68	0x884F10  	MOV	W0, _Modbus_Reg_data+108
;Modbus.mpas,441 :: 		Modbus_Reg_Data[56] := lo(BatteryAmpsSet);       // akü akým set deðeri
0xCA6A	0x215820  	MOV	#lo_addr(_BatteryAmpsSet), W0
0xCA6C	0xFB8010  	ZE	[W0], W0
0xCA6E	0x884F20  	MOV	W0, _Modbus_Reg_data+110
;Modbus.mpas,443 :: 		Modbus_Reg_Data[57] := hi(BoostChargeVoltage);   // 40 030
0xCA70	0x215810  	MOV	#lo_addr(_BoostChargeVoltage+1), W0
0xCA72	0xFB8010  	ZE	[W0], W0
0xCA74	0x884F30  	MOV	W0, _Modbus_Reg_data+112
;Modbus.mpas,444 :: 		Modbus_Reg_Data[58] := lo(BoostChargeVoltage);   // hýzlý þarj gerilim set deðeri
0xCA76	0x215800  	MOV	#lo_addr(_BoostChargeVoltage), W0
0xCA78	0xFB8010  	ZE	[W0], W0
0xCA7A	0x884F40  	MOV	W0, _Modbus_Reg_data+114
;Modbus.mpas,446 :: 		Modbus_Reg_Data[59] := hi(FloatChargeVoltage);   // 40 031
0xCA7C	0x215850  	MOV	#lo_addr(_FloatChargeVoltage+1), W0
0xCA7E	0xFB8010  	ZE	[W0], W0
0xCA80	0x884F50  	MOV	W0, _Modbus_Reg_data+116
;Modbus.mpas,447 :: 		Modbus_Reg_Data[60] := lo(FloatChargeVoltage);   // float þarj gerilim set deðeri
0xCA82	0x215840  	MOV	#lo_addr(_FloatChargeVoltage), W0
0xCA84	0xFB8010  	ZE	[W0], W0
0xCA86	0x884F60  	MOV	W0, _Modbus_Reg_data+118
;Modbus.mpas,449 :: 		Modbus_Reg_Data[61] := hi(DeepDischargeVolt);    // 40 032
0xCA88	0x215930  	MOV	#lo_addr(_DeepDischargeVolt+1), W0
0xCA8A	0xFB8010  	ZE	[W0], W0
0xCA8C	0x884F70  	MOV	W0, _Modbus_Reg_data+120
;Modbus.mpas,450 :: 		Modbus_Reg_Data[62] := lo(DeepDischargeVolt);    // derin deþarj geirlim set deðeri
0xCA8E	0x215920  	MOV	#lo_addr(_DeepDischargeVolt), W0
0xCA90	0xFB8010  	ZE	[W0], W0
0xCA92	0x884F80  	MOV	W0, _Modbus_Reg_data+122
;Modbus.mpas,452 :: 		Modbus_Reg_Data[63] := hi(BoostChargeLimit);     // 40 033
0xCA94	0x215910  	MOV	#lo_addr(_BoostChargeLimit+1), W0
0xCA96	0xFB8010  	ZE	[W0], W0
0xCA98	0x884F90  	MOV	W0, _Modbus_Reg_data+124
;Modbus.mpas,453 :: 		Modbus_Reg_Data[64] := lo(BoostChargeLimit);     // hýzlý þarj limit set deðeri
0xCA9A	0x215900  	MOV	#lo_addr(_BoostChargeLimit), W0
0xCA9C	0xFB8010  	ZE	[W0], W0
0xCA9E	0x884FA0  	MOV	W0, _Modbus_Reg_data+126
;Modbus.mpas,455 :: 		Modbus_Reg_Data[65] := hi(FloatChargeLimit);     // 40 034
0xCAA0	0x215950  	MOV	#lo_addr(_FloatChargeLimit+1), W0
0xCAA2	0xFB8010  	ZE	[W0], W0
0xCAA4	0x884FB0  	MOV	W0, _Modbus_Reg_data+128
;Modbus.mpas,456 :: 		Modbus_Reg_Data[66] := lo(FloatChargeLimit);     // float þarj limit set deðeri
0xCAA6	0x215940  	MOV	#lo_addr(_FloatChargeLimit), W0
0xCAA8	0xFB8010  	ZE	[W0], W0
0xCAAA	0x884FC0  	MOV	W0, _Modbus_Reg_data+130
;Modbus.mpas,458 :: 		Modbus_Reg_Data[67] := 0;                        // 40 035
0xCAAC	0xEF2000  	CLR	W0
0xCAAE	0x884FD0  	MOV	W0, _Modbus_Reg_data+132
;Modbus.mpas,459 :: 		Modbus_Reg_Data[68] := TempAlarmSet;             // sýcaklýk alarm set deðeri
0xCAB0	0x212280  	MOV	#lo_addr(_TempAlarmSet), W0
0xCAB2	0xFB8010  	ZE	[W0], W0
0xCAB4	0x884FE0  	MOV	W0, _Modbus_Reg_data+134
;Modbus.mpas,461 :: 		Modbus_Reg_Data[69] := 0;                        // 40 036
0xCAB6	0xEF2000  	CLR	W0
0xCAB8	0x884FF0  	MOV	W0, _Modbus_Reg_data+136
;Modbus.mpas,462 :: 		Modbus_Reg_Data[70] := TempFanOnSet;             // fan açma sýcaklýk set deðeri
0xCABA	0x212270  	MOV	#lo_addr(_TempFanOnSet), W0
0xCABC	0xFB8010  	ZE	[W0], W0
0xCABE	0x885000  	MOV	W0, _Modbus_Reg_data+138
;Modbus.mpas,464 :: 		Modbus_Reg_Data[71] := 0;                        // 40 037
0xCAC0	0xEF2000  	CLR	W0
0xCAC2	0x885010  	MOV	W0, _Modbus_Reg_data+140
;Modbus.mpas,465 :: 		Modbus_Reg_Data[72] := TempFanOffSet;            // fan kapatma sýcaklýk of deðeri
0xCAC4	0x212100  	MOV	#lo_addr(_TempFanOffSet), W0
0xCAC6	0xFB8010  	ZE	[W0], W0
0xCAC8	0x885020  	MOV	W0, _Modbus_Reg_data+142
;Modbus.mpas,467 :: 		Modbus_Reg_Data[73] := 0;                        // 40 038
0xCACA	0xEF2000  	CLR	W0
0xCACC	0x885030  	MOV	W0, _Modbus_Reg_data+144
;Modbus.mpas,468 :: 		Modbus_Reg_Data[74] := PCB_Temperature;          //kasa iç sýcaklýk bilgisi
0xCACE	0x214BD0  	MOV	#lo_addr(_PCB_Temperature), W0
0xCAD0	0xFB8010  	ZE	[W0], W0
0xCAD2	0x885040  	MOV	W0, _Modbus_Reg_data+146
;Modbus.mpas,470 :: 		Modbus_Reg_Data[75] := 0;                        // 40 039
0xCAD4	0xEF2000  	CLR	W0
0xCAD6	0x885050  	MOV	W0, _Modbus_Reg_data+148
;Modbus.mpas,471 :: 		Modbus_Reg_Data[76] := LanguageBit;              // dil set deðeri
0xCAD8	0x212E10  	MOV	#lo_addr(_LanguageBit), W0
0xCADA	0xFB8010  	ZE	[W0], W0
0xCADC	0x885060  	MOV	W0, _Modbus_Reg_data+150
;Modbus.mpas,473 :: 		Modbus_Reg_Data[77] := 0;                        // 40 040
0xCADE	0xEF2000  	CLR	W0
0xCAE0	0x885070  	MOV	W0, _Modbus_Reg_data+152
;Modbus.mpas,474 :: 		Modbus_Reg_Data[78] := Leakage_Pos_Set;          // + kaçak direnç set deðeri
0xCAE2	0x2128B0  	MOV	#lo_addr(_Leakage_Pos_Set), W0
0xCAE4	0xFB0010  	SE	[W0], W0
0xCAE6	0x885080  	MOV	W0, _Modbus_Reg_data+154
;Modbus.mpas,476 :: 		Modbus_Reg_Data[79] := 0;                        // 40 041
0xCAE8	0xEF2000  	CLR	W0
0xCAEA	0x885090  	MOV	W0, _Modbus_Reg_data+156
;Modbus.mpas,477 :: 		Modbus_Reg_Data[80] := Leakage_Neg_Set;          // - kaçak direnç set deðeri
0xCAEC	0x2129A0  	MOV	#lo_addr(_Leakage_Neg_Set), W0
0xCAEE	0xFB0010  	SE	[W0], W0
0xCAF0	0x8850A0  	MOV	W0, _Modbus_Reg_data+158
;Modbus.mpas,479 :: 		Modbus_Reg_Data[81] := 0;                        // 40 042
0xCAF2	0xEF2000  	CLR	W0
0xCAF4	0x8850B0  	MOV	W0, _Modbus_Reg_data+160
;Modbus.mpas,480 :: 		Modbus_Reg_Data[82] := Rly_AcHighBit;            // ac yüksek rölesi durumu
0xCAF6	0x209201  	MOV	#lo_addr(_Rly_AcHighBit), W1
0xCAF8	0x20A180  	MOV	#lo_addr(_Modbus_Reg_data+162), W0
0xCAFA	0xEB0800  	CLR	[W0]
0xCAFC	0xA70011  	BTSC	[W1], BitPos(_Rly_AcHighBit+0)
0xCAFE	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,482 :: 		Modbus_Reg_Data[83] := 0;                        // 40 043
0xCB00	0xEF2000  	CLR	W0
0xCB02	0x8850D0  	MOV	W0, _Modbus_Reg_data+164
;Modbus.mpas,483 :: 		Modbus_Reg_Data[84] := Rly_AcLowBit;             // ac düþük rölesi durumu
0xCB04	0x208CE1  	MOV	#lo_addr(_Rly_AcLowBit), W1
0xCB06	0x20A1C0  	MOV	#lo_addr(_Modbus_Reg_data+166), W0
0xCB08	0xEB0800  	CLR	[W0]
0xCB0A	0xA7F011  	BTSC	[W1], BitPos(_Rly_AcLowBit+0)
0xCB0C	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,485 :: 		Modbus_Reg_Data[85] := 0;                        // 40 044
0xCB0E	0xEF2000  	CLR	W0
0xCB10	0x8850F0  	MOV	W0, _Modbus_Reg_data+168
;Modbus.mpas,486 :: 		Modbus_Reg_Data[86] := Rly_DcHighBit;            // dc yüksek rölesi durumu
0xCB12	0x208CE1  	MOV	#lo_addr(_Rly_DcHighBit), W1
0xCB14	0x20A200  	MOV	#lo_addr(_Modbus_Reg_data+170), W0
0xCB16	0xEB0800  	CLR	[W0]
0xCB18	0xA7A011  	BTSC	[W1], BitPos(_Rly_DcHighBit+0)
0xCB1A	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,488 :: 		Modbus_Reg_Data[87] := 0;                        // 40 045
0xCB1C	0xEF2000  	CLR	W0
0xCB1E	0x885110  	MOV	W0, _Modbus_Reg_data+172
;Modbus.mpas,489 :: 		Modbus_Reg_Data[88] := Rly_DcLowBit;             // dc düþük rölesi durumu
0xCB20	0x208CE1  	MOV	#lo_addr(_Rly_DcLowBit), W1
0xCB22	0x20A240  	MOV	#lo_addr(_Modbus_Reg_data+174), W0
0xCB24	0xEB0800  	CLR	[W0]
0xCB26	0xA79011  	BTSC	[W1], BitPos(_Rly_DcLowBit+0)
0xCB28	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,491 :: 		Modbus_Reg_Data[89] := 0;                        // 40 046
0xCB2A	0xEF2000  	CLR	W0
0xCB2C	0x885130  	MOV	W0, _Modbus_Reg_data+176
;Modbus.mpas,492 :: 		Modbus_Reg_Data[90] := Rly_PosLeakageBit;        // + kaçak durumu
0xCB2E	0x208CE1  	MOV	#lo_addr(_Rly_PosLeakageBit), W1
0xCB30	0x20A280  	MOV	#lo_addr(_Modbus_Reg_data+178), W0
0xCB32	0xEB0800  	CLR	[W0]
0xCB34	0xA7B011  	BTSC	[W1], BitPos(_Rly_PosLeakageBit+0)
0xCB36	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,494 :: 		Modbus_Reg_Data[91] := 0;                        // 40 047
0xCB38	0xEF2000  	CLR	W0
0xCB3A	0x885150  	MOV	W0, _Modbus_Reg_data+180
;Modbus.mpas,495 :: 		Modbus_Reg_Data[92] := Rly_NegLeakageBit;        // - kaçak durumu
0xCB3C	0x208CE1  	MOV	#lo_addr(_Rly_NegLeakageBit), W1
0xCB3E	0x20A2C0  	MOV	#lo_addr(_Modbus_Reg_data+182), W0
0xCB40	0xEB0800  	CLR	[W0]
0xCB42	0xA7D011  	BTSC	[W1], BitPos(_Rly_NegLeakageBit+0)
0xCB44	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,497 :: 		Modbus_Reg_Data[93] := 0;                        // 40 048
0xCB46	0xEF2000  	CLR	W0
0xCB48	0x885170  	MOV	W0, _Modbus_Reg_data+184
;Modbus.mpas,498 :: 		Modbus_Reg_Data[94] := LeakageValue;             // kaçak akým deðeri
0xCB4A	0x209740  	MOV	#lo_addr(_LeakageValue), W0
0xCB4C	0xFB8010  	ZE	[W0], W0
0xCB4E	0x885180  	MOV	W0, _Modbus_Reg_data+186
;Modbus.mpas,500 :: 		Modbus_Reg_Data[95] := 0;                        // 40 049
0xCB50	0xEF2000  	CLR	W0
0xCB52	0x885190  	MOV	W0, _Modbus_Reg_data+188
;Modbus.mpas,501 :: 		Modbus_Reg_Data[96] := Rly_BattAmpsLimitBit;     // akü akým sýnýrlama deðeri
0xCB54	0x208CE1  	MOV	#lo_addr(_Rly_BattAmpsLimitBit), W1
0xCB56	0x20A340  	MOV	#lo_addr(_Modbus_Reg_data+190), W0
0xCB58	0xEB0800  	CLR	[W0]
0xCB5A	0xA7C011  	BTSC	[W1], BitPos(_Rly_BattAmpsLimitBit+0)
0xCB5C	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,503 :: 		Modbus_Reg_Data[97] := 0;                        // 40 050
0xCB5E	0xEF2000  	CLR	W0
0xCB60	0x8851B0  	MOV	W0, _Modbus_Reg_data+192
;Modbus.mpas,504 :: 		Modbus_Reg_Data[98] := Rly_RedAmpsLimitBit;      // redresör akým sýnýrlama deðeri
0xCB62	0x209201  	MOV	#lo_addr(_Rly_RedAmpsLimitBit), W1
0xCB64	0x20A380  	MOV	#lo_addr(_Modbus_Reg_data+194), W0
0xCB66	0xEB0800  	CLR	[W0]
0xCB68	0xA71011  	BTSC	[W1], BitPos(_Rly_RedAmpsLimitBit+0)
0xCB6A	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,506 :: 		Modbus_Reg_Data[99] := 0;                        // 40 051
0xCB6C	0xEF2000  	CLR	W0
0xCB6E	0x8851D0  	MOV	W0, _Modbus_Reg_data+196
;Modbus.mpas,507 :: 		Modbus_Reg_Data[100]:= Rly_FanFaultBit;          // fan hata deðeri
0xCB70	0x209201  	MOV	#lo_addr(_Rly_FanFaultBit), W1
0xCB72	0x20A3C0  	MOV	#lo_addr(_Modbus_Reg_data+198), W0
0xCB74	0xEB0800  	CLR	[W0]
0xCB76	0xA76011  	BTSC	[W1], BitPos(_Rly_FanFaultBit+0)
0xCB78	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,509 :: 		Modbus_Reg_Data[101] := 0;                       // 40 052
0xCB7A	0xEF2000  	CLR	W0
0xCB7C	0x8851F0  	MOV	W0, _Modbus_Reg_data+200
;Modbus.mpas,510 :: 		Modbus_Reg_Data[102] := Rly_HighTempBit;         // aþýrý sýcaklýk deðeri
0xCB7E	0x209201  	MOV	#lo_addr(_Rly_HighTempBit), W1
0xCB80	0x20A400  	MOV	#lo_addr(_Modbus_Reg_data+202), W0
0xCB82	0xEB0800  	CLR	[W0]
0xCB84	0xA75011  	BTSC	[W1], BitPos(_Rly_HighTempBit+0)
0xCB86	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,512 :: 		Modbus_Reg_Data[103] := 0;                        // 40 053
0xCB88	0xEF2000  	CLR	W0
0xCB8A	0x885210  	MOV	W0, _Modbus_Reg_data+204
;Modbus.mpas,513 :: 		Modbus_Reg_Data[104] := Rly_BattReverseBit;       // akü ters deðeri
0xCB8C	0x209201  	MOV	#lo_addr(_Rly_BattReverseBit), W1
0xCB8E	0x20A440  	MOV	#lo_addr(_Modbus_Reg_data+206), W0
0xCB90	0xEB0800  	CLR	[W0]
0xCB92	0xA77011  	BTSC	[W1], BitPos(_Rly_BattReverseBit+0)
0xCB94	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,516 :: 		Modbus_Reg_Data[105] := 0;                        // 40 054
0xCB96	0xEF2000  	CLR	W0
0xCB98	0x885230  	MOV	W0, _Modbus_Reg_data+208
;Modbus.mpas,517 :: 		Modbus_Reg_Data[106] := Rly_AcMcbBit;             // ac mcb deðeri
0xCB9A	0x209201  	MOV	#lo_addr(_Rly_AcMcbBit), W1
0xCB9C	0x20A480  	MOV	#lo_addr(_Modbus_Reg_data+210), W0
0xCB9E	0xEB0800  	CLR	[W0]
0xCBA0	0xA79011  	BTSC	[W1], BitPos(_Rly_AcMcbBit+0)
0xCBA2	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,520 :: 		Modbus_Reg_Data[107] := 0;                        // 40 055
0xCBA4	0xEF2000  	CLR	W0
0xCBA6	0x885250  	MOV	W0, _Modbus_Reg_data+212
;Modbus.mpas,521 :: 		Modbus_Reg_Data[108] := Rly_DcMcbBit;             // dc mcb deðeri
0xCBA8	0x209201  	MOV	#lo_addr(_Rly_DcMcbBit), W1
0xCBAA	0x20A4C0  	MOV	#lo_addr(_Modbus_Reg_data+214), W0
0xCBAC	0xEB0800  	CLR	[W0]
0xCBAE	0xA78011  	BTSC	[W1], BitPos(_Rly_DcMcbBit+0)
0xCBB0	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,524 :: 		Modbus_Reg_Data[109] := 0;                        // 40 056
0xCBB2	0xEF2000  	CLR	W0
0xCBB4	0x885270  	MOV	W0, _Modbus_Reg_data+216
;Modbus.mpas,525 :: 		Modbus_Reg_Data[110] := Rly_BattMcbBit;           // akü mcb deðeri
0xCBB6	0x209201  	MOV	#lo_addr(_Rly_BattMcbBit), W1
0xCBB8	0x20A500  	MOV	#lo_addr(_Modbus_Reg_data+218), W0
0xCBBA	0xEB0800  	CLR	[W0]
0xCBBC	0xA73011  	BTSC	[W1], BitPos(_Rly_BattMcbBit+0)
0xCBBE	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,528 :: 		Modbus_Reg_Data[111] := 0;                        // 40 057
0xCBC0	0xEF2000  	CLR	W0
0xCBC2	0x885290  	MOV	W0, _Modbus_Reg_data+220
;Modbus.mpas,529 :: 		Modbus_Reg_Data[112] := Rly_DeepDschBit;          // derin deþarj deðeri
0xCBC4	0x209201  	MOV	#lo_addr(_Rly_DeepDschBit), W1
0xCBC6	0x20A540  	MOV	#lo_addr(_Modbus_Reg_data+222), W0
0xCBC8	0xEB0800  	CLR	[W0]
0xCBCA	0xA74011  	BTSC	[W1], BitPos(_Rly_DeepDschBit+0)
0xCBCC	0xE80810  	INC	[W0], [W0]
;Modbus.mpas,532 :: 		Modbus_Reg_Data[113] := hi(HucreSayisi);          // 40 058
0xCBCE	0x213FF0  	MOV	#lo_addr(_HucreSayisi+1), W0
0xCBD0	0xFB8010  	ZE	[W0], W0
0xCBD2	0x8852B0  	MOV	W0, _Modbus_Reg_data+224
;Modbus.mpas,533 :: 		Modbus_Reg_Data[114] := lo(HucreSayisi);          // hucre sayýsý
0xCBD4	0x213FE0  	MOV	#lo_addr(_HucreSayisi), W0
0xCBD6	0xFB8010  	ZE	[W0], W0
0xCBD8	0x8852C0  	MOV	W0, _Modbus_Reg_data+226
;Modbus.mpas,535 :: 		Modbus_Reg_Data[115] := hi(NomHucreGerilim);      // 40 059
0xCBDA	0x213FB0  	MOV	#lo_addr(_NomHucreGerilim+1), W0
0xCBDC	0xFB8010  	ZE	[W0], W0
0xCBDE	0x8852D0  	MOV	W0, _Modbus_Reg_data+228
;Modbus.mpas,536 :: 		Modbus_Reg_Data[116] := lo(NomHucreGerilim);      // hücre gerilim
0xCBE0	0x213FA0  	MOV	#lo_addr(_NomHucreGerilim), W0
0xCBE2	0xFB8010  	ZE	[W0], W0
0xCBE4	0x8852E0  	MOV	W0, _Modbus_Reg_data+230
;Modbus.mpas,538 :: 		Modbus_Reg_Data[117] := hi(RedresorAkim);         // 40 060
0xCBE6	0x212F10  	MOV	#lo_addr(_RedresorAkim+1), W0
0xCBE8	0xFB8010  	ZE	[W0], W0
0xCBEA	0x8852F0  	MOV	W0, _Modbus_Reg_data+232
;Modbus.mpas,539 :: 		Modbus_Reg_Data[118] := lo(RedresorAkim);         // redresör akým
0xCBEC	0x212F00  	MOV	#lo_addr(_RedresorAkim), W0
0xCBEE	0xFB8010  	ZE	[W0], W0
0xCBF0	0x885300  	MOV	W0, _Modbus_Reg_data+234
;Modbus.mpas,553 :: 		end;
L_end_Modbus_Reg_Data_Fill:
0xCBF2	0x060000  	RETURN
; end of _Modbus_Reg_Data_Fill
_Uart_Communication_Function:
0xD238	0xFA0034  	LNK	#52
;GRR3000LManagementPanel.mpas,1975 :: 		begin
;GRR3000LManagementPanel.mpas,1978 :: 		Write_UartData[1]   := 0; // GTT-I Read_BattAmps
0xD23A	0x781F8A  	PUSH	W10
0xD23C	0x781F8B  	PUSH	W11
0xD23E	0x781F8C  	PUSH	W12
0xD240	0xEF2000  	CLR	W0
0xD242	0x980720  	MOV	W0, [W14+4]
;GRR3000LManagementPanel.mpas,1979 :: 		Write_UartData[2]   := 0; // GTT-I Read_TotalAmps
0xD244	0xEF2000  	CLR	W0
0xD246	0x980730  	MOV	W0, [W14+6]
;GRR3000LManagementPanel.mpas,1980 :: 		Write_UartData[3]   := 0; // GTT-I Read_RedVolt
0xD248	0xEF2000  	CLR	W0
0xD24A	0x980740  	MOV	W0, [W14+8]
;GRR3000LManagementPanel.mpas,1981 :: 		Write_UartData[4]   := 0; // GTT-I Read_Temp
0xD24C	0xEF2000  	CLR	W0
0xD24E	0x980750  	MOV	W0, [W14+10]
;GRR3000LManagementPanel.mpas,1982 :: 		Write_UartData[5]   := RectifierVoltage_Set;
0xD250	0x80A450  	MOV	_RectifierVoltage_Set, W0
0xD252	0x980760  	MOV	W0, [W14+12]
;GRR3000LManagementPanel.mpas,1983 :: 		Write_UartData[6]   := (HucreSayisi*20); // redresör nominal gerilimi  55*20=1100 þeklinde
0xD254	0x809FF1  	MOV	_HucreSayisi, W1
0xD256	0x200140  	MOV	#20, W0
0xD258	0xB80800  	MUL.UU	W1, W0, W0
0xD25A	0x980770  	MOV	W0, [W14+14]
;GRR3000LManagementPanel.mpas,1984 :: 		Write_UartData[7]   := (RedresorAkim*10);    // redresör nominal akým 60*10=600 þeklinde
0xD25C	0x809781  	MOV	_RedresorAkim, W1
0xD25E	0x2000A0  	MOV	#10, W0
0xD260	0xB80800  	MUL.UU	W1, W0, W0
0xD262	0x980F00  	MOV	W0, [W14+16]
;GRR3000LManagementPanel.mpas,1985 :: 		Write_UartData[8]   := BatteryAmpsSet;  // akü akým set
0xD264	0x80AC10  	MOV	_BatteryAmpsSet, W0
0xD266	0x980F10  	MOV	W0, [W14+18]
;GRR3000LManagementPanel.mpas,1986 :: 		Write_UartData[9]   := DcOutAmpsSet;    // dc çýkýþ akýmý set
0xD268	0x809770  	MOV	_DcOutAmpsSet, W0
0xD26A	0x980F20  	MOV	W0, [W14+20]
;GRR3000LManagementPanel.mpas,1987 :: 		Write_UartData[10]  := 0; // tristör kartý þarj deþarj bilgisi
0xD26C	0xEF2000  	CLR	W0
0xD26E	0x980F30  	MOV	W0, [W14+22]
;GRR3000LManagementPanel.mpas,1988 :: 		Write_UartData[11]  := 0; // GTT-I Alpha Deðeri
0xD270	0xEF2000  	CLR	W0
0xD272	0x980F40  	MOV	W0, [W14+24]
;GRR3000LManagementPanel.mpas,1989 :: 		Write_UartData[12]  := 0; // GTT-I Fazlar
0xD274	0xEF2000  	CLR	W0
0xD276	0x980F50  	MOV	W0, [W14+26]
;GRR3000LManagementPanel.mpas,1990 :: 		Write_UartData[13]  := 0; // GTT-I Dip-Switchler
0xD278	0xEF2000  	CLR	W0
0xD27A	0x980F60  	MOV	W0, [W14+28]
;GRR3000LManagementPanel.mpas,1991 :: 		Write_UartData[14]  := 0; // GTT-I NomVolt deðeri
0xD27C	0xEF2000  	CLR	W0
0xD27E	0x980F70  	MOV	W0, [W14+30]
;GRR3000LManagementPanel.mpas,1992 :: 		Write_UartData[15]  := 0; // GTT-I NomAmps deðeri
0xD280	0xEF2000  	CLR	W0
0xD282	0x981700  	MOV	W0, [W14+32]
;GRR3000LManagementPanel.mpas,1993 :: 		Write_UartData[16]  := 0; // GTT-I BatRawAmps
0xD284	0xEF2000  	CLR	W0
0xD286	0x981710  	MOV	W0, [W14+34]
;GRR3000LManagementPanel.mpas,1994 :: 		Write_UartData[17]  := 0; // GTT-I RedRawAmps
0xD288	0xEF2000  	CLR	W0
0xD28A	0x981720  	MOV	W0, [W14+36]
;GRR3000LManagementPanel.mpas,1995 :: 		Write_UartData[18]  := 0; // GTT-I RedRawVlt
0xD28C	0xEF2000  	CLR	W0
0xD28E	0x981730  	MOV	W0, [W14+38]
;GRR3000LManagementPanel.mpas,1996 :: 		Write_UartData[19]  := 0; // GTT-I RatedVolt  GTT-I'ye kaydedilen data
0xD290	0xEF2000  	CLR	W0
0xD292	0x981740  	MOV	W0, [W14+40]
;GRR3000LManagementPanel.mpas,1997 :: 		Write_UartData[20]  := 0; // GTT-I RatedAmps  GTT-I'ye kaydedilen data
0xD294	0xEF2000  	CLR	W0
0xD296	0x981750  	MOV	W0, [W14+42]
;GRR3000LManagementPanel.mpas,1998 :: 		Write_UartData[21]  := StopBit; // durdurma biti   1 = Dur, 0 = Çalýþ
0xD298	0x212A41  	MOV	#lo_addr(_StopBit), W1
0xD29A	0x2002C0  	MOV	#44, W0
0xD29C	0x470000  	ADD	W14, W0, W0
0xD29E	0xEB0800  	CLR	[W0]
0xD2A0	0xA7F011  	BTSC	[W1], BitPos(_StopBit+0)
0xD2A2	0xE80810  	INC	[W0], [W0]
;GRR3000LManagementPanel.mpas,1999 :: 		Write_UartData[22]  := CalibValue;
0xD2A4	0x208C20  	MOV	#lo_addr(_CalibValue), W0
0xD2A6	0xFB8010  	ZE	[W0], W0
0xD2A8	0x981770  	MOV	W0, [W14+46]
;GRR3000LManagementPanel.mpas,2000 :: 		Write_UartData[23]  := Relay_Out_Data; //
0xD2AA	0x80A470  	MOV	_Relay_Out_Data, W0
0xD2AC	0x981F00  	MOV	W0, [W14+48]
;GRR3000LManagementPanel.mpas,2001 :: 		Write_UartData[24]  := DiodeValue;
0xD2AE	0x2158F0  	MOV	#lo_addr(_DiodeValue), W0
0xD2B0	0xFB8010  	ZE	[W0], W0
0xD2B2	0x981F10  	MOV	W0, [W14+50]
;GRR3000LManagementPanel.mpas,2003 :: 		IstekByte     := _Request;
; IstekByte start address is: 6 (W3)
0xD2B4	0x78418A  	MOV.B	W10, W3
;GRR3000LManagementPanel.mpas,2004 :: 		Veri          := Write_UartData[_Request];
0xD2B6	0xFB800A  	ZE	W10, W0
0xD2B8	0xED2000  	DEC	W0
0xD2BA	0x4700E4  	ADD	W14, #4, W1
0xD2BC	0xDD0041  	SL	W0, #1, W0
0xD2BE	0x408000  	ADD	W1, W0, W0
; Veri start address is: 8 (W4)
0xD2C0	0x780210  	MOV	[W0], W4
;GRR3000LManagementPanel.mpas,2007 :: 		if ((IstekByte >0)and(IstekByte <23)) then Addr := Comm_ThrystorModule_Addr else
0xD2C2	0xE15460  	CP.B	W10, #0
0xD2C4	0xEF2002  	CLR	W1
0xD2C6	0x360001  	BRA LEU	L__Uart_Communication_Function4972
0xD2C8	0xEEA002  	COM	W1
L__Uart_Communication_Function4972:
0xD2CA	0xE15477  	CP.B	W10, #23
0xD2CC	0xEF2000  	CLR	W0
0xD2CE	0x310001  	BRA GEU	L__Uart_Communication_Function4973
0xD2D0	0xEEA000  	COM	W0
L__Uart_Communication_Function4973:
0xD2D2	0x608000  	AND	W1, W0, W0
0xD2D4	0x320003  	BRA Z	L__Uart_Communication_Function161
L__Uart_Communication_Function4974:
0xD2D6	0xB3C0A0  	MOV.B	#10, W0
0xD2D8	0x984700  	MOV.B	W0, [W14+0]
0xD2DA	0x370004  	BRA	L__Uart_Communication_Function162
L__Uart_Communication_Function161:
;GRR3000LManagementPanel.mpas,2008 :: 		if (IstekByte = 23) then Addr := Comm_RelayModule;
0xD2DC	0xE11C77  	CP.B	W3, #23
0xD2DE	0x3A0002  	BRA NZ	L__Uart_Communication_Function164
L__Uart_Communication_Function4975:
0xD2E0	0xB3C0D0  	MOV.B	#13, W0
0xD2E2	0x984700  	MOV.B	W0, [W14+0]
L__Uart_Communication_Function164:
L__Uart_Communication_Function162:
;GRR3000LManagementPanel.mpas,2009 :: 		if (IstekByte = 24) then Addr := Comm_ThrystorModule_Addr;
0xD2E4	0xE11C78  	CP.B	W3, #24
0xD2E6	0x3A0002  	BRA NZ	L__Uart_Communication_Function167
L__Uart_Communication_Function4976:
0xD2E8	0xB3C0A0  	MOV.B	#10, W0
0xD2EA	0x984700  	MOV.B	W0, [W14+0]
L__Uart_Communication_Function167:
;GRR3000LManagementPanel.mpas,2011 :: 		if ((ReceiveData[0] = IstekByte)and(ReceiveData[6] = Addr)) then // gelen data istenilen dataya eþit ise
0xD2EC	0x214A80  	MOV	#lo_addr(_ReceiveData), W0
0xD2EE	0xE11C10  	CP.B	W3, [W0]
0xD2F0	0xEF2004  	CLR	W2
0xD2F2	0x3A0001  	BRA NZ	L__Uart_Communication_Function4977
0xD2F4	0xEEA004  	COM	W2
L__Uart_Communication_Function4977:
0xD2F6	0x214AE0  	MOV	#lo_addr(_ReceiveData+6), W0
0xD2F8	0x784090  	MOV.B	[W0], W1
0xD2FA	0x470060  	ADD	W14, #0, W0
0xD2FC	0xE10C10  	CP.B	W1, [W0]
0xD2FE	0xEF2000  	CLR	W0
0xD300	0x3A0001  	BRA NZ	L__Uart_Communication_Function4978
0xD302	0xEEA000  	COM	W0
L__Uart_Communication_Function4978:
0xD304	0x610000  	AND	W2, W0, W0
0xD306	0xE20000  	CP0	W0
0xD308	0x32000C  	BRA Z	L__Uart_Communication_Function170
L__Uart_Communication_Function4979:
; Veri end address is: 8 (W4)
;GRR3000LManagementPanel.mpas,2013 :: 		Inc(Request_Counter);
0xD30A	0x200011  	MOV	#1, W1
0xD30C	0x214800  	MOV	#lo_addr(_Request_Counter), W0
0xD30E	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2014 :: 		SaveData := Collect(ReceiveData[1], ReceiveData[2]); // lo ve hi datalarý birleþtir
0xD310	0x214AA1  	MOV	#lo_addr(_ReceiveData+2), W1
0xD312	0x214A90  	MOV	#lo_addr(_ReceiveData+1), W0
0xD314	0x784591  	MOV.B	[W1], W11
0xD316	0x784510  	MOV.B	[W0], W10
0xD318	0x07AD92  	RCALL	_Collect
0xD31A	0x980710  	MOV	W0, [W14+2]
;GRR3000LManagementPanel.mpas,2015 :: 		RequestFault_Counter   := 0; // hata olmadý sayacý sýfýrla
0xD31C	0xEF2000  	CLR	W0
0xD31E	0x88A410  	MOV	W0, _RequestFault_Counter
;GRR3000LManagementPanel.mpas,2017 :: 		end else
0xD320	0x37001F  	BRA	L__Uart_Communication_Function171
L__Uart_Communication_Function170:
;GRR3000LManagementPanel.mpas,2018 :: 		if ((ReceiveData[0] <> IstekByte)or(ReceiveData[6] <> Addr)) then // gelen data istenilen dataya eþit deðil ise
; Veri start address is: 8 (W4)
0xD322	0x214A80  	MOV	#lo_addr(_ReceiveData), W0
0xD324	0xE11C10  	CP.B	W3, [W0]
0xD326	0xEF2004  	CLR	W2
0xD328	0x320001  	BRA Z	L__Uart_Communication_Function4980
0xD32A	0xEEA004  	COM	W2
L__Uart_Communication_Function4980:
0xD32C	0x214AE0  	MOV	#lo_addr(_ReceiveData+6), W0
0xD32E	0x784090  	MOV.B	[W0], W1
0xD330	0x470060  	ADD	W14, #0, W0
0xD332	0xE10C10  	CP.B	W1, [W0]
0xD334	0xEF2000  	CLR	W0
0xD336	0x320001  	BRA Z	L__Uart_Communication_Function4981
0xD338	0xEEA000  	COM	W0
L__Uart_Communication_Function4981:
0xD33A	0x710000  	IOR	W2, W0, W0
0xD33C	0x320011  	BRA Z	L__Uart_Communication_Function173
L__Uart_Communication_Function4982:
;GRR3000LManagementPanel.mpas,2020 :: 		Gemta_Uart_Write(_Request, Addr, Veri);
0xD33E	0x781F83  	PUSH	W3
; Veri end address is: 8 (W4)
0xD340	0x780604  	MOV	W4, W12
0xD342	0x90458E  	MOV.B	[W14+0], W11
0xD344	0x07AD82  	RCALL	_Gemta_Uart_Write
0xD346	0x7801CF  	POP	W3
;GRR3000LManagementPanel.mpas,2021 :: 		MCU_State_LED := not MCU_State_LED;
0xD348	0xAAC2C3  	BTG	RA14_bit, BitPos(RA14_bit+0)
;GRR3000LManagementPanel.mpas,2022 :: 		Inc(RequestFault_Counter);
0xD34A	0x200011  	MOV	#1, W1
0xD34C	0x214820  	MOV	#lo_addr(_RequestFault_Counter), W0
0xD34E	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2023 :: 		if (RequestFault_Counter > 2) then
0xD350	0x80A410  	MOV	_RequestFault_Counter, W0
0xD352	0xE10062  	CP	W0, #2
0xD354	0x360005  	BRA LEU	L__Uart_Communication_Function176
L__Uart_Communication_Function4983:
;GRR3000LManagementPanel.mpas,2025 :: 		RequestFault_Counter   := 0;
0xD356	0xEF2000  	CLR	W0
0xD358	0x88A410  	MOV	W0, _RequestFault_Counter
;GRR3000LManagementPanel.mpas,2026 :: 		Inc(Request_Counter);
0xD35A	0x200011  	MOV	#1, W1
0xD35C	0x214800  	MOV	#lo_addr(_Request_Counter), W0
0xD35E	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2027 :: 		end;
L__Uart_Communication_Function176:
;GRR3000LManagementPanel.mpas,2028 :: 		end;
L__Uart_Communication_Function173:
L__Uart_Communication_Function171:
;GRR3000LManagementPanel.mpas,2030 :: 		if (Request_Counter > 24) then Request_Counter := 1;
0xD360	0x80A400  	MOV	_Request_Counter, W0
0xD362	0xE10078  	CP	W0, #24
0xD364	0x360002  	BRA LEU	L__Uart_Communication_Function179
L__Uart_Communication_Function4984:
0xD366	0x200010  	MOV	#1, W0
0xD368	0x88A400  	MOV	W0, _Request_Counter
L__Uart_Communication_Function179:
;GRR3000LManagementPanel.mpas,2032 :: 		if (ReceiveData[6] = Comm_ThrystorModule_Addr) then
0xD36A	0x214AE0  	MOV	#lo_addr(_ReceiveData+6), W0
0xD36C	0x784010  	MOV.B	[W0], W0
0xD36E	0xE1046A  	CP.B	W0, #10
0xD370	0x3A004A  	BRA NZ	L__Uart_Communication_Function182
L__Uart_Communication_Function4985:
;GRR3000LManagementPanel.mpas,2034 :: 		if (IstekByte  = 1) then Read_BattAmps    := SaveData else
0xD372	0xE11C61  	CP.B	W3, #1
0xD374	0x3A0003  	BRA NZ	L__Uart_Communication_Function185
L__Uart_Communication_Function4986:
; IstekByte end address is: 6 (W3)
0xD376	0x90001E  	MOV	[W14+2], W0
0xD378	0x88A640  	MOV	W0, _Read_BattAmps
0xD37A	0x370045  	BRA	L__Uart_Communication_Function186
L__Uart_Communication_Function185:
;GRR3000LManagementPanel.mpas,2035 :: 		if (IstekByte = 2)  then Read_TotalAmps   := SaveData else
; IstekByte start address is: 6 (W3)
0xD37C	0xE11C62  	CP.B	W3, #2
0xD37E	0x3A0003  	BRA NZ	L__Uart_Communication_Function188
L__Uart_Communication_Function4987:
; IstekByte end address is: 6 (W3)
0xD380	0x90001E  	MOV	[W14+2], W0
0xD382	0x88A630  	MOV	W0, _Read_TotalAmps
0xD384	0x370040  	BRA	L__Uart_Communication_Function189
L__Uart_Communication_Function188:
;GRR3000LManagementPanel.mpas,2036 :: 		if (IstekByte = 3)  then Read_RedVolt     := SaveData else
; IstekByte start address is: 6 (W3)
0xD386	0xE11C63  	CP.B	W3, #3
0xD388	0x3A0003  	BRA NZ	L__Uart_Communication_Function191
L__Uart_Communication_Function4988:
; IstekByte end address is: 6 (W3)
0xD38A	0x90001E  	MOV	[W14+2], W0
0xD38C	0x88A720  	MOV	W0, _Read_RedVolt
0xD38E	0x37003B  	BRA	L__Uart_Communication_Function192
L__Uart_Communication_Function191:
;GRR3000LManagementPanel.mpas,2037 :: 		if (IstekByte = 4)  then Read_Temp        := SaveData else
; IstekByte start address is: 6 (W3)
0xD390	0xE11C64  	CP.B	W3, #4
0xD392	0x3A0003  	BRA NZ	L__Uart_Communication_Function194
L__Uart_Communication_Function4989:
; IstekByte end address is: 6 (W3)
0xD394	0x90001E  	MOV	[W14+2], W0
0xD396	0x88A7B0  	MOV	W0, _Read_Temp
0xD398	0x370036  	BRA	L__Uart_Communication_Function195
L__Uart_Communication_Function194:
;GRR3000LManagementPanel.mpas,2038 :: 		if (IstekByte = 10) then ChargeStatus     := savedata else
; IstekByte start address is: 6 (W3)
0xD39A	0xE11C6A  	CP.B	W3, #10
0xD39C	0x3A0003  	BRA NZ	L__Uart_Communication_Function197
L__Uart_Communication_Function4990:
; IstekByte end address is: 6 (W3)
0xD39E	0x90001E  	MOV	[W14+2], W0
0xD3A0	0x884770  	MOV	W0, _ChargeStatus
0xD3A2	0x370031  	BRA	L__Uart_Communication_Function198
L__Uart_Communication_Function197:
;GRR3000LManagementPanel.mpas,2039 :: 		if (IstekByte = 11) then Read_Alpha       := SaveData else
; IstekByte start address is: 6 (W3)
0xD3A4	0xE11C6B  	CP.B	W3, #11
0xD3A6	0x3A0003  	BRA NZ	L__Uart_Communication_Function200
L__Uart_Communication_Function4991:
; IstekByte end address is: 6 (W3)
0xD3A8	0x90001E  	MOV	[W14+2], W0
0xD3AA	0x8841E0  	MOV	W0, _Read_Alpha
0xD3AC	0x37002C  	BRA	L__Uart_Communication_Function201
L__Uart_Communication_Function200:
;GRR3000LManagementPanel.mpas,2040 :: 		if (IstekByte = 12) then Read_Phases      := SaveData else
; IstekByte start address is: 6 (W3)
0xD3AE	0xE11C6C  	CP.B	W3, #12
0xD3B0	0x3A0003  	BRA NZ	L__Uart_Communication_Function203
L__Uart_Communication_Function4992:
; IstekByte end address is: 6 (W3)
0xD3B2	0x90001E  	MOV	[W14+2], W0
0xD3B4	0x884170  	MOV	W0, _Read_Phases
0xD3B6	0x370027  	BRA	L__Uart_Communication_Function204
L__Uart_Communication_Function203:
;GRR3000LManagementPanel.mpas,2041 :: 		if (IstekByte = 13) then Read_DSW         := SaveData else
; IstekByte start address is: 6 (W3)
0xD3B8	0xE11C6D  	CP.B	W3, #13
0xD3BA	0x3A0003  	BRA NZ	L__Uart_Communication_Function206
L__Uart_Communication_Function4993:
; IstekByte end address is: 6 (W3)
0xD3BC	0x90001E  	MOV	[W14+2], W0
0xD3BE	0x884160  	MOV	W0, _Read_DSW
0xD3C0	0x370022  	BRA	L__Uart_Communication_Function207
L__Uart_Communication_Function206:
;GRR3000LManagementPanel.mpas,2042 :: 		if (IstekByte = 14) then Read_NomVolt     := SaveData else
; IstekByte start address is: 6 (W3)
0xD3C2	0xE11C6E  	CP.B	W3, #14
0xD3C4	0x3A0003  	BRA NZ	L__Uart_Communication_Function209
L__Uart_Communication_Function4994:
; IstekByte end address is: 6 (W3)
0xD3C6	0x90001E  	MOV	[W14+2], W0
0xD3C8	0x884180  	MOV	W0, _Read_NomVolt
0xD3CA	0x37001D  	BRA	L__Uart_Communication_Function210
L__Uart_Communication_Function209:
;GRR3000LManagementPanel.mpas,2043 :: 		if (IstekByte = 15) then Read_NomAmp      := SaveData else
; IstekByte start address is: 6 (W3)
0xD3CC	0xE11C6F  	CP.B	W3, #15
0xD3CE	0x3A0003  	BRA NZ	L__Uart_Communication_Function212
L__Uart_Communication_Function4995:
; IstekByte end address is: 6 (W3)
0xD3D0	0x90001E  	MOV	[W14+2], W0
0xD3D2	0x8841A0  	MOV	W0, _Read_NomAmp
0xD3D4	0x370018  	BRA	L__Uart_Communication_Function213
L__Uart_Communication_Function212:
;GRR3000LManagementPanel.mpas,2044 :: 		if (IstekByte = 16) then Read_BatRawAmp   := SaveData else
; IstekByte start address is: 6 (W3)
0xD3D6	0xE11C70  	CP.B	W3, #16
0xD3D8	0x3A0003  	BRA NZ	L__Uart_Communication_Function215
L__Uart_Communication_Function4996:
; IstekByte end address is: 6 (W3)
0xD3DA	0x90001E  	MOV	[W14+2], W0
0xD3DC	0x884050  	MOV	W0, _Read_BatRawAmp
0xD3DE	0x370013  	BRA	L__Uart_Communication_Function216
L__Uart_Communication_Function215:
;GRR3000LManagementPanel.mpas,2045 :: 		if (IstekByte = 17) then Read_RedRawAmp   := SaveData else
; IstekByte start address is: 6 (W3)
0xD3E0	0xE11C71  	CP.B	W3, #17
0xD3E2	0x3A0003  	BRA NZ	L__Uart_Communication_Function218
L__Uart_Communication_Function4997:
; IstekByte end address is: 6 (W3)
0xD3E4	0x90001E  	MOV	[W14+2], W0
0xD3E6	0x884060  	MOV	W0, _Read_RedRawAmp
0xD3E8	0x37000E  	BRA	L__Uart_Communication_Function219
L__Uart_Communication_Function218:
;GRR3000LManagementPanel.mpas,2046 :: 		if (IstekByte = 18) then Read_RedRawVlt   := SaveData else
; IstekByte start address is: 6 (W3)
0xD3EA	0xE11C72  	CP.B	W3, #18
0xD3EC	0x3A0003  	BRA NZ	L__Uart_Communication_Function221
L__Uart_Communication_Function4998:
; IstekByte end address is: 6 (W3)
0xD3EE	0x90001E  	MOV	[W14+2], W0
0xD3F0	0x884080  	MOV	W0, _Read_RedRawVlt
0xD3F2	0x370009  	BRA	L__Uart_Communication_Function222
L__Uart_Communication_Function221:
;GRR3000LManagementPanel.mpas,2047 :: 		if (IstekByte = 19) then Read_RatedVolt   := SaveData else
; IstekByte start address is: 6 (W3)
0xD3F4	0xE11C73  	CP.B	W3, #19
0xD3F6	0x3A0003  	BRA NZ	L__Uart_Communication_Function224
L__Uart_Communication_Function4999:
; IstekByte end address is: 6 (W3)
0xD3F8	0x90001E  	MOV	[W14+2], W0
0xD3FA	0x884010  	MOV	W0, _Read_RatedVolt
0xD3FC	0x370004  	BRA	L__Uart_Communication_Function225
L__Uart_Communication_Function224:
;GRR3000LManagementPanel.mpas,2048 :: 		if (IstekByte = 20) then Read_RatedAmps   := SaveData;
; IstekByte start address is: 6 (W3)
0xD3FE	0xE11C74  	CP.B	W3, #20
0xD400	0x3A0002  	BRA NZ	L__Uart_Communication_Function227
L__Uart_Communication_Function5000:
; IstekByte end address is: 6 (W3)
0xD402	0x90001E  	MOV	[W14+2], W0
0xD404	0x884000  	MOV	W0, _Read_RatedAmps
L__Uart_Communication_Function227:
L__Uart_Communication_Function225:
L__Uart_Communication_Function222:
L__Uart_Communication_Function219:
L__Uart_Communication_Function216:
L__Uart_Communication_Function213:
L__Uart_Communication_Function210:
L__Uart_Communication_Function207:
L__Uart_Communication_Function204:
L__Uart_Communication_Function201:
L__Uart_Communication_Function198:
L__Uart_Communication_Function195:
L__Uart_Communication_Function192:
L__Uart_Communication_Function189:
L__Uart_Communication_Function186:
;GRR3000LManagementPanel.mpas,2049 :: 		end;
L__Uart_Communication_Function182:
;GRR3000LManagementPanel.mpas,2051 :: 		end;
L_end_Uart_Communication_Function:
0xD406	0x78064F  	POP	W12
0xD408	0x7805CF  	POP	W11
0xD40A	0x78054F  	POP	W10
0xD40C	0xFA8000  	ULNK
0xD40E	0x060000  	RETURN
; end of _Uart_Communication_Function
_Collect:
;GRR3000LManagementPanel.mpas,1877 :: 		begin
;GRR3000LManagementPanel.mpas,1878 :: 		Temp_Word := _DataHi Shl 8;
0x2E3E	0xFB800B  	ZE	W11, W0
0x2E40	0xDD00C8  	SL	W0, #8, W1
;GRR3000LManagementPanel.mpas,1879 :: 		Result    := (Temp_Word or _DataLo);
0x2E42	0xFB800A  	ZE	W10, W0
; Result start address is: 2 (W1)
0x2E44	0x708080  	IOR	W1, W0, W1
;GRR3000LManagementPanel.mpas,1881 :: 		end;
0x2E46	0x780001  	MOV	W1, W0
; Result end address is: 2 (W1)
L_end_Collect:
0x2E48	0x060000  	RETURN
; end of _Collect
_Gemta_Uart_Write:
;GRR3000LManagementPanel.mpas,1935 :: 		begin
;GRR3000LManagementPanel.mpas,1943 :: 		MasterData[0]   := Buffer0;         // hangi verinin iþleneceði bilgisi
0x2E4A	0x781F8A  	PUSH	W10
0x2E4C	0x781F8B  	PUSH	W11
0x2E4E	0x781F8C  	PUSH	W12
0x2E50	0x214900  	MOV	#lo_addr(_MasterData), W0
0x2E52	0x78480A  	MOV.B	W10, [W0]
;GRR3000LManagementPanel.mpas,1944 :: 		MasterData[1]   := lo(Buffer1);     // yazýlacak verinin low byte' ý
0x2E54	0x214910  	MOV	#lo_addr(_MasterData+1), W0
0x2E56	0x78480C  	MOV.B	W12, [W0]
;GRR3000LManagementPanel.mpas,1945 :: 		MasterData[2]   := hi(Buffer1);     // yazýlacak verinin high byte' ý
0x2E58	0x200180  	MOV	#lo_addr(W12), W0
0x2E5A	0xEC2000  	INC	W0
0x2E5C	0x784090  	MOV.B	[W0], W1
0x2E5E	0x214920  	MOV	#lo_addr(_MasterData+2), W0
0x2E60	0x784801  	MOV.B	W1, [W0]
;GRR3000LManagementPanel.mpas,1946 :: 		MasterData[3]   := 3;               // 3 byte' lýk veri olduðu için
0x2E62	0x214931  	MOV	#lo_addr(_MasterData+3), W1
0x2E64	0xB3C030  	MOV.B	#3, W0
0x2E66	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1947 :: 		MasterData[4]   := 0;
0x2E68	0x214941  	MOV	#lo_addr(_MasterData+4), W1
0x2E6A	0xEF2000  	CLR	W0
0x2E6C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1948 :: 		MasterData[5]   := 0;
0x2E6E	0x214951  	MOV	#lo_addr(_MasterData+5), W1
0x2E70	0xEF2000  	CLR	W0
0x2E72	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1949 :: 		MasterData[6]   := Addr;
0x2E74	0x214960  	MOV	#lo_addr(_MasterData+6), W0
0x2E76	0x78480B  	MOV.B	W11, [W0]
;GRR3000LManagementPanel.mpas,1950 :: 		Rs485master_Send(MasterData, 3, Addr);
0x2E78	0x78460B  	MOV.B	W11, W12
0x2E7A	0xB3C03B  	MOV.B	#3, W11
0x2E7C	0x21490A  	MOV	#lo_addr(_MasterData), W10
0x2E7E	0x07F695  	RCALL	_Rs485master_Send
;GRR3000LManagementPanel.mpas,1952 :: 		ReceiveAddr := ReceiveData[6];
0x2E80	0x208D31  	MOV	#lo_addr(_ReceiveAddr), W1
0x2E82	0x214AE0  	MOV	#lo_addr(_ReceiveData+6), W0
0x2E84	0x784890  	MOV.B	[W0], [W1]
;GRR3000LManagementPanel.mpas,1953 :: 		ReceiveData[6] := 0;
0x2E86	0x214AE1  	MOV	#lo_addr(_ReceiveData+6), W1
0x2E88	0xEF2000  	CLR	W0
0x2E8A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1956 :: 		end;
L_end_Gemta_Uart_Write:
0x2E8C	0x78064F  	POP	W12
0x2E8E	0x7805CF  	POP	W11
0x2E90	0x78054F  	POP	W10
0x2E92	0x060000  	RETURN
; end of _Gemta_Uart_Write
_Rs485master_Send:
0x1BAA	0xFA0000  	LNK	#0
;__Lib_RS485.mpas,308 :: 		
;__Lib_RS485.mpas,309 :: 		
0x1BAC	0xA8E2D5  	BSET	rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0)
;__Lib_RS485.mpas,310 :: 		
0x1BAE	0x07F534  	RCALL	_Delay_10uS
;__Lib_RS485.mpas,311 :: 		
; len start address is: 4 (W2)
0x1BB0	0xFB810B  	ZE	W11, W2
;__Lib_RS485.mpas,314 :: 		
0x1BB2	0x781F82  	PUSH	W2
0x1BB4	0x781F8C  	PUSH	W12
0x1BB6	0xBE9F8A  	PUSH.D	W10
0x1BB8	0x20096A  	MOV	#150, W10
0x1BBA	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1BBC	0x010000  	CALL	W0
0x1BBE	0xBE054F  	POP.D	W10
0x1BC0	0x78064F  	POP	W12
0x1BC2	0x78014F  	POP	W2
;__Lib_RS485.mpas,316 :: 		
0x1BC4	0xB3C960  	MOV.B	#150, W0
0x1BC6	0xE16400  	CP.B	W12, W0
0x1BC8	0xEF2002  	CLR	W1
0x1BCA	0x3A0001  	BRA NZ	L__Rs485master_Send233
0x1BCC	0xEEA002  	COM	W1
L__Rs485master_Send233:
0x1BCE	0xB3CA90  	MOV.B	#169, W0
0x1BD0	0xE16400  	CP.B	W12, W0
0x1BD2	0xEF2000  	CLR	W0
0x1BD4	0x3A0001  	BRA NZ	L__Rs485master_Send234
0x1BD6	0xEEA000  	COM	W0
L__Rs485master_Send234:
0x1BD8	0x708000  	IOR	W1, W0, W0
0x1BDA	0x320007  	BRA Z	L__Rs485master_Send99
L__Rs485master_Send235:
;__Lib_RS485.mpas,318 :: 		
0x1BDC	0xFB800C  	ZE	W12, W0
0x1BDE	0x680061  	XOR	W0, #1, W0
0x1BE0	0x784600  	MOV.B	W0, W12
;__Lib_RS485.mpas,319 :: 		
0x1BE2	0xFB808B  	ZE	W11, W1
0x1BE4	0x200400  	MOV	#64, W0
0x1BE6	0x708000  	IOR	W1, W0, W0
0x1BE8	0x784580  	MOV.B	W0, W11
;__Lib_RS485.mpas,320 :: 		
L__Rs485master_Send99:
;__Lib_RS485.mpas,323 :: 		
0x1BEA	0x781F82  	PUSH	W2
0x1BEC	0x781F8C  	PUSH	W12
0x1BEE	0xBE9F8A  	PUSH.D	W10
0x1BF0	0xFB850C  	ZE	W12, W10
0x1BF2	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1BF4	0x010000  	CALL	W0
0x1BF6	0xBE054F  	POP.D	W10
0x1BF8	0x78064F  	POP	W12
0x1BFA	0x78014F  	POP	W2
;__Lib_RS485.mpas,324 :: 		
; len start address is: 6 (W3)
0x1BFC	0x5101E1  	SUB	W2, #1, W3
; len end address is: 4 (W2)
;__Lib_RS485.mpas,325 :: 		
; i start address is: 8 (W4)
0x1BFE	0xEF2008  	CLR	W4
; len end address is: 6 (W3)
; i end address is: 8 (W4)
L__Rs485master_Send101:
; i start address is: 8 (W4)
; len start address is: 6 (W3)
0x1C00	0xE12003  	CP	W4, W3
0x1C02	0x3E001F  	BRA GTU	L__Rs485master_Send105
L__Rs485master_Send236:
;__Lib_RS485.mpas,327 :: 		
0x1C04	0x450004  	ADD	W10, W4, W0
0x1C06	0x784090  	MOV.B	[W0], W1
0x1C08	0xB3C960  	MOV.B	#150, W0
0x1C0A	0xE10C00  	CP.B	W1, W0
0x1C0C	0xEF2004  	CLR	W2
0x1C0E	0x3A0001  	BRA NZ	L__Rs485master_Send237
0x1C10	0xEEA004  	COM	W2
L__Rs485master_Send237:
0x1C12	0x450004  	ADD	W10, W4, W0
0x1C14	0x784090  	MOV.B	[W0], W1
0x1C16	0xB3CA90  	MOV.B	#169, W0
0x1C18	0xE10C00  	CP.B	W1, W0
0x1C1A	0xEF2000  	CLR	W0
0x1C1C	0x3A0001  	BRA NZ	L__Rs485master_Send238
0x1C1E	0xEEA000  	COM	W0
L__Rs485master_Send238:
0x1C20	0x710000  	IOR	W2, W0, W0
0x1C22	0x32000B  	BRA Z	L__Rs485master_Send107
L__Rs485master_Send239:
;__Lib_RS485.mpas,329 :: 		
0x1C24	0x450084  	ADD	W10, W4, W1
0x1C26	0x450004  	ADD	W10, W4, W0
0x1C28	0xFB8010  	ZE	[W0], W0
0x1C2A	0x680061  	XOR	W0, #1, W0
0x1C2C	0x784880  	MOV.B	W0, [W1]
;__Lib_RS485.mpas,330 :: 		
0x1C2E	0x200040  	MOV	#4, W0
0x1C30	0xDD0004  	SL	W0, W4, W0
0x1C32	0xFB808B  	ZE	W11, W1
0x1C34	0xFB8000  	ZE	W0, W0
0x1C36	0x708000  	IOR	W1, W0, W0
0x1C38	0x784580  	MOV.B	W0, W11
;__Lib_RS485.mpas,331 :: 		
L__Rs485master_Send107:
;__Lib_RS485.mpas,332 :: 		
0x1C3A	0xE12003  	CP	W4, W3
0x1C3C	0x320002  	BRA Z	L__Rs485master_Send105
L__Rs485master_Send240:
; i start address is: 8 (W4)
0x1C3E	0xEC2008  	INC	W4
; i end address is: 8 (W4)
; i end address is: 8 (W4)
0x1C40	0x37FFDF  	BRA	L__Rs485master_Send101
L__Rs485master_Send105:
;__Lib_RS485.mpas,333 :: 		
0x1C42	0xFB808B  	ZE	W11, W1
0x1C44	0x200800  	MOV	#128, W0
0x1C46	0x708000  	IOR	W1, W0, W0
0x1C48	0x784580  	MOV.B	W0, W11
;__Lib_RS485.mpas,336 :: 		
0x1C4A	0x781F83  	PUSH	W3
0x1C4C	0x781F8C  	PUSH	W12
0x1C4E	0xBE9F8A  	PUSH.D	W10
0x1C50	0xFB8500  	ZE	W0, W10
0x1C52	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1C54	0x010000  	CALL	W0
0x1C56	0xBE054F  	POP.D	W10
0x1C58	0x78064F  	POP	W12
0x1C5A	0x7801CF  	POP	W3
;__Lib_RS485.mpas,339 :: 		
; crc_send start address is: 8 (W4)
0x1C5C	0x6DC20C  	XOR.B	W11, W12, W4
;__Lib_RS485.mpas,340 :: 		
; i start address is: 0 (W0)
0x1C5E	0xEF2000  	CLR	W0
; len end address is: 6 (W3)
; i end address is: 0 (W0)
; crc_send end address is: 8 (W4)
0x1C60	0x780083  	MOV	W3, W1
0x1C62	0x780180  	MOV	W0, W3
L__Rs485master_Send109:
; i start address is: 6 (W3)
; crc_send start address is: 8 (W4)
; len start address is: 2 (W1)
0x1C64	0xE11801  	CP	W3, W1
0x1C66	0x3E0017  	BRA GTU	L__Rs485master_Send184
L__Rs485master_Send241:
;__Lib_RS485.mpas,342 :: 		
0x1C68	0x450003  	ADD	W10, W3, W0
; crc_send start address is: 4 (W2)
0x1C6A	0x6A4110  	XOR.B	W4, [W0], W2
; crc_send end address is: 8 (W4)
;__Lib_RS485.mpas,343 :: 		
0x1C6C	0x450003  	ADD	W10, W3, W0
0x1C6E	0x781F82  	PUSH	W2
0x1C70	0x781F81  	PUSH	W1
0x1C72	0x781F83  	PUSH	W3
0x1C74	0x781F8C  	PUSH	W12
0x1C76	0xBE9F8A  	PUSH.D	W10
0x1C78	0xFB8510  	ZE	[W0], W10
0x1C7A	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1C7C	0x010000  	CALL	W0
0x1C7E	0xBE054F  	POP.D	W10
0x1C80	0x78064F  	POP	W12
0x1C82	0x7801CF  	POP	W3
0x1C84	0x7800CF  	POP	W1
0x1C86	0x78014F  	POP	W2
;__Lib_RS485.mpas,344 :: 		
0x1C88	0xE11801  	CP	W3, W1
0x1C8A	0x320003  	BRA Z	L__Rs485master_Send183
L__Rs485master_Send242:
; i start address is: 6 (W3)
0x1C8C	0xEC2006  	INC	W3
; i end address is: 6 (W3)
; len end address is: 2 (W1)
; crc_send end address is: 4 (W2)
; i end address is: 6 (W3)
0x1C8E	0x784202  	MOV.B	W2, W4
0x1C90	0x37FFE9  	BRA	L__Rs485master_Send109
L__Rs485master_Send183:
0x1C92	0x784082  	MOV.B	W2, W1
0x1C94	0x370001  	BRA	L__Rs485master_Send113
L__Rs485master_Send184:
;__Lib_RS485.mpas,340 :: 		
0x1C96	0x784084  	MOV.B	W4, W1
;__Lib_RS485.mpas,344 :: 		
L__Rs485master_Send113:
;__Lib_RS485.mpas,346 :: 		
; crc_send start address is: 2 (W1)
0x1C98	0x784001  	MOV.B	W1, W0
; crc_send end address is: 2 (W1)
0x1C9A	0xEAC100  	COM.B	W0, W2
; crc_send start address is: 6 (W3)
0x1C9C	0x784182  	MOV.B	W2, W3
;__Lib_RS485.mpas,347 :: 		
0x1C9E	0xB3C960  	MOV.B	#150, W0
0x1CA0	0xE11400  	CP.B	W2, W0
0x1CA2	0xEF2002  	CLR	W1
0x1CA4	0x3A0001  	BRA NZ	L__Rs485master_Send243
0x1CA6	0xEEA002  	COM	W1
L__Rs485master_Send243:
0x1CA8	0xB3CA90  	MOV.B	#169, W0
0x1CAA	0xE11400  	CP.B	W2, W0
0x1CAC	0xEF2000  	CLR	W0
0x1CAE	0x3A0001  	BRA NZ	L__Rs485master_Send244
0x1CB0	0xEEA000  	COM	W0
L__Rs485master_Send244:
0x1CB2	0x708000  	IOR	W1, W0, W0
0x1CB4	0x320002  	BRA Z	L__Rs485master_Send185
L__Rs485master_Send245:
;__Lib_RS485.mpas,348 :: 		
; crc_send start address is: 0 (W0)
0x1CB6	0x41C061  	ADD.B	W3, #1, W0
; crc_send end address is: 6 (W3)
; crc_send end address is: 0 (W0)
0x1CB8	0x370001  	BRA	L__Rs485master_Send115
L__Rs485master_Send185:
;__Lib_RS485.mpas,347 :: 		
0x1CBA	0x784003  	MOV.B	W3, W0
;__Lib_RS485.mpas,348 :: 		
L__Rs485master_Send115:
;__Lib_RS485.mpas,351 :: 		
; crc_send start address is: 0 (W0)
0x1CBC	0x781F8C  	PUSH	W12
; crc_send end address is: 0 (W0)
0x1CBE	0xBE9F8A  	PUSH.D	W10
0x1CC0	0xFB8500  	ZE	W0, W10
0x1CC2	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1CC4	0x010000  	CALL	W0
;__Lib_RS485.mpas,353 :: 		
0x1CC6	0x200A9A  	MOV	#169, W10
0x1CC8	0x8053B0  	MOV	_UART_Wr_Ptr, W0
0x1CCA	0x010000  	CALL	W0
0x1CCC	0xBE054F  	POP.D	W10
0x1CCE	0x78064F  	POP	W12
;__Lib_RS485.mpas,355 :: 		
L__Rs485master_Send118:
0x1CD0	0x805380  	MOV	_UART_TX_Idle_Ptr, W0
0x1CD2	0x781F8C  	PUSH	W12
0x1CD4	0xBE9F8A  	PUSH.D	W10
0x1CD6	0x010000  	CALL	W0
0x1CD8	0xBE054F  	POP.D	W10
0x1CDA	0x78064F  	POP	W12
0x1CDC	0xE10060  	CP	W0, #0
0x1CDE	0x32FFF8  	BRA Z	L__Rs485master_Send118
L__Rs485master_Send246:
;__Lib_RS485.mpas,359 :: 		
0x1CE0	0xA9E2D5  	BCLR	rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0)
;__Lib_RS485.mpas,361 :: 		
L_end_Rs485master_Send:
0x1CE2	0xFA8000  	ULNK
0x1CE4	0x060000  	RETURN
; end of _Rs485master_Send
_UART2_Write:
0x062E	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,333 :: 		
;__Lib_UART_12_p30.mpas,334 :: 		
L__UART2_Write56:
0x0630	0x8010C1  	MOV	U2STA, W1
0x0632	0x201000  	MOV	#256, W0
0x0634	0x608000  	AND	W1, W0, W0
0x0636	0xE10060  	CP	W0, #0
0x0638	0x3A0002  	BRA NZ	L__UART2_Write57
L__UART2_Write163:
;__Lib_UART_12_p30.mpas,335 :: 		
0x063A	0x000000  	NOP
0x063C	0x37FFF9  	BRA	L__UART2_Write56
L__UART2_Write57:
;__Lib_UART_12_p30.mpas,336 :: 		
0x063E	0x8810DA  	MOV	W10, U2TXREG
;__Lib_UART_12_p30.mpas,337 :: 		
L_end_UART2_Write:
0x0640	0xFA8000  	ULNK
0x0642	0x060000  	RETURN
; end of _UART2_Write
_ButonTimer:
;GRR3000LManagementPanel.mpas,1759 :: 		begin
;GRR3000LManagementPanel.mpas,1761 :: 		if ((Up_Button =0) or (Down_Button =0)) then
0xD4DC	0xA90006  	BCLR	W3, #0
0xD4DE	0xAEA2CF  	BTSS	RC13_bit, BitPos(RC13_bit+0)
0xD4E0	0xA80006  	BSET	W3, #0
0xD4E2	0xAE62D5  	BTSS	RD11_bit, BitPos(RD11_bit+0)
0xD4E4	0xA80042  	BSET	SR, #0
0xD4E6	0xAF62D5  	BTSC	RD11_bit, BitPos(RD11_bit+0)
0xD4E8	0xA90042  	BCLR	SR, #0
0xD4EA	0xAE0006  	BTSS	W3, #0
0xD4EC	0xAF0042  	BTSC	SR, #0
0xD4EE	0x370002  	BRA	L__ButonTimer4948
0xD4F0	0xA90006  	BCLR	W3, #0
0xD4F2	0x370001  	BRA	L__ButonTimer4951
L__ButonTimer4948:
0xD4F4	0xA80006  	BSET	W3, #0
L__ButonTimer4951:
0xD4F6	0xAE0006  	BTSS	W3, #0
0xD4F8	0x37002E  	BRA	L__ButonTimer122
;GRR3000LManagementPanel.mpas,1764 :: 		ButonStop := 0;
0xD4FA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD4FC	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1765 :: 		Inc(BtCounter1);
0xD4FE	0x200011  	MOV	#1, W1
0xD500	0x214720  	MOV	#lo_addr(_BtCounter1), W0
0xD502	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,1768 :: 		if (BtCounter1 < 2000) then
0xD504	0x80A391  	MOV	_BtCounter1, W1
0xD506	0x207D00  	MOV	#2000, W0
0xD508	0xE10800  	CP	W1, W0
0xD50A	0x310006  	BRA GEU	L__ButonTimer125
L__ButonTimer4952:
;GRR3000LManagementPanel.mpas,1770 :: 		ButonStart := 1;
0xD50C	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD50E	0xB3C010  	MOV.B	#1, W0
0xD510	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1771 :: 		ButonStop  := 0;
0xD512	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD514	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1772 :: 		end else
0xD516	0x37001E  	BRA	L__ButonTimer126
L__ButonTimer125:
;GRR3000LManagementPanel.mpas,1773 :: 		if ((BtCounter1 > 2000)and(BtCounter1 < 7000)) then
0xD518	0x80A392  	MOV	_BtCounter1, W2
0xD51A	0x207D00  	MOV	#2000, W0
0xD51C	0xE11000  	CP	W2, W0
0xD51E	0xEF2002  	CLR	W1
0xD520	0x360001  	BRA LEU	L__ButonTimer4953
0xD522	0xEEA002  	COM	W1
L__ButonTimer4953:
0xD524	0x21B580  	MOV	#7000, W0
0xD526	0xE11000  	CP	W2, W0
0xD528	0xEF2000  	CLR	W0
0xD52A	0x310001  	BRA GEU	L__ButonTimer4954
0xD52C	0xEEA000  	COM	W0
L__ButonTimer4954:
0xD52E	0x608000  	AND	W1, W0, W0
0xD530	0x320006  	BRA Z	L__ButonTimer128
L__ButonTimer4955:
;GRR3000LManagementPanel.mpas,1775 :: 		ButonStart := 2;
0xD532	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD534	0xB3C020  	MOV.B	#2, W0
0xD536	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1776 :: 		ButonStop  := 0;
0xD538	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD53A	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1777 :: 		end else
0xD53C	0x37000B  	BRA	L__ButonTimer129
L__ButonTimer128:
;GRR3000LManagementPanel.mpas,1778 :: 		if (BtCounter1 > 7000) then
0xD53E	0x80A391  	MOV	_BtCounter1, W1
0xD540	0x21B580  	MOV	#7000, W0
0xD542	0xE10800  	CP	W1, W0
0xD544	0x360007  	BRA LEU	L__ButonTimer131
L__ButonTimer4956:
;GRR3000LManagementPanel.mpas,1780 :: 		ButonStart := 3;
0xD546	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD548	0xB3C030  	MOV.B	#3, W0
0xD54A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1781 :: 		ButonStop  := 0;
0xD54C	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD54E	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1782 :: 		BtCounter1 := 7002;
0xD550	0x21B5A0  	MOV	#7002, W0
0xD552	0x88A390  	MOV	W0, _BtCounter1
;GRR3000LManagementPanel.mpas,1783 :: 		end;
L__ButonTimer131:
L__ButonTimer129:
L__ButonTimer126:
;GRR3000LManagementPanel.mpas,1785 :: 		end else
0xD554	0x370002  	BRA	L__ButonTimer123
L__ButonTimer122:
;GRR3000LManagementPanel.mpas,1787 :: 		BtCounter1 := 0;
0xD556	0xEF2000  	CLR	W0
0xD558	0x88A390  	MOV	W0, _BtCounter1
;GRR3000LManagementPanel.mpas,1788 :: 		end;
L__ButonTimer123:
;GRR3000LManagementPanel.mpas,1791 :: 		if (ButonStart = 1) then
0xD55A	0x214A50  	MOV	#lo_addr(_ButonStart), W0
0xD55C	0x784010  	MOV.B	[W0], W0
0xD55E	0xE10461  	CP.B	W0, #1
0xD560	0x3A0012  	BRA NZ	L__ButonTimer134
L__ButonTimer4957:
;GRR3000LManagementPanel.mpas,1793 :: 		Inc(BtCounterNormal);
0xD562	0x200011  	MOV	#1, W1
0xD564	0x212340  	MOV	#lo_addr(_BtCounterNormal), W0
0xD566	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,1794 :: 		if (BtCounterNormal > 300) then
0xD568	0x8091A1  	MOV	_BtCounterNormal, W1
0xD56A	0x2012C0  	MOV	#300, W0
0xD56C	0xE10800  	CP	W1, W0
0xD56E	0x360008  	BRA LEU	L__ButonTimer137
L__ButonTimer4958:
;GRR3000LManagementPanel.mpas,1796 :: 		BtCounterNormal := 0;
0xD570	0xEF2000  	CLR	W0
0xD572	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,1797 :: 		ButonStop       := 1;
0xD574	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD576	0xA0F010  	BSET	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1798 :: 		ButonStart      := 0;
0xD578	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD57A	0xEF2000  	CLR	W0
0xD57C	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1799 :: 		end else ButonStop  := 0;
0xD57E	0x370002  	BRA	L__ButonTimer138
L__ButonTimer137:
0xD580	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD582	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
L__ButonTimer138:
;GRR3000LManagementPanel.mpas,1800 :: 		end else
0xD584	0x37002D  	BRA	L__ButonTimer135
L__ButonTimer134:
;GRR3000LManagementPanel.mpas,1801 :: 		if (ButonStart = 2) then
0xD586	0x214A50  	MOV	#lo_addr(_ButonStart), W0
0xD588	0x784010  	MOV.B	[W0], W0
0xD58A	0xE10462  	CP.B	W0, #2
0xD58C	0x3A0012  	BRA NZ	L__ButonTimer140
L__ButonTimer4959:
;GRR3000LManagementPanel.mpas,1803 :: 		Inc(BtCounterNormal);
0xD58E	0x200011  	MOV	#1, W1
0xD590	0x212340  	MOV	#lo_addr(_BtCounterNormal), W0
0xD592	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,1804 :: 		if (BtCounterNormal > 50) then
0xD594	0x200321  	MOV	#50, W1
0xD596	0x212340  	MOV	#lo_addr(_BtCounterNormal), W0
0xD598	0xE10810  	CP	W1, [W0]
0xD59A	0x310008  	BRA GEU	L__ButonTimer143
L__ButonTimer4960:
;GRR3000LManagementPanel.mpas,1806 :: 		BtCounterNormal := 0;
0xD59C	0xEF2000  	CLR	W0
0xD59E	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,1807 :: 		ButonStop       := 1;
0xD5A0	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD5A2	0xA0F010  	BSET	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1808 :: 		ButonStart      := 0;
0xD5A4	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD5A6	0xEF2000  	CLR	W0
0xD5A8	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1809 :: 		end else ButonStop  := 0;
0xD5AA	0x370002  	BRA	L__ButonTimer144
L__ButonTimer143:
0xD5AC	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD5AE	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
L__ButonTimer144:
;GRR3000LManagementPanel.mpas,1810 :: 		end else
0xD5B0	0x370017  	BRA	L__ButonTimer141
L__ButonTimer140:
;GRR3000LManagementPanel.mpas,1811 :: 		if (ButonStart = 3) then
0xD5B2	0x214A50  	MOV	#lo_addr(_ButonStart), W0
0xD5B4	0x784010  	MOV.B	[W0], W0
0xD5B6	0xE10463  	CP.B	W0, #3
0xD5B8	0x3A0011  	BRA NZ	L__ButonTimer146
L__ButonTimer4961:
;GRR3000LManagementPanel.mpas,1813 :: 		Inc(BtCounterNormal);
0xD5BA	0x200011  	MOV	#1, W1
0xD5BC	0x212340  	MOV	#lo_addr(_BtCounterNormal), W0
0xD5BE	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,1814 :: 		if (BtCounterNormal > 5) then
0xD5C0	0x8091A0  	MOV	_BtCounterNormal, W0
0xD5C2	0xE10065  	CP	W0, #5
0xD5C4	0x360008  	BRA LEU	L__ButonTimer149
L__ButonTimer4962:
;GRR3000LManagementPanel.mpas,1816 :: 		BtCounterNormal := 0;
0xD5C6	0xEF2000  	CLR	W0
0xD5C8	0x8891A0  	MOV	W0, _BtCounterNormal
;GRR3000LManagementPanel.mpas,1817 :: 		ButonStop       := 1;
0xD5CA	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD5CC	0xA0F010  	BSET	[W0], BitPos(_ButonStop+0)
;GRR3000LManagementPanel.mpas,1818 :: 		ButonStart      := 0;
0xD5CE	0x214A51  	MOV	#lo_addr(_ButonStart), W1
0xD5D0	0xEF2000  	CLR	W0
0xD5D2	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,1819 :: 		end else ButonStop  := 0;
0xD5D4	0x370002  	BRA	L__ButonTimer150
L__ButonTimer149:
0xD5D6	0x20E1E0  	MOV	#lo_addr(_ButonStop), W0
0xD5D8	0xA1F010  	BCLR	[W0], BitPos(_ButonStop+0)
L__ButonTimer150:
;GRR3000LManagementPanel.mpas,1820 :: 		end else BtCounterNormal := 0;
0xD5DA	0x370002  	BRA	L__ButonTimer147
L__ButonTimer146:
0xD5DC	0xEF2000  	CLR	W0
0xD5DE	0x8891A0  	MOV	W0, _BtCounterNormal
L__ButonTimer147:
L__ButonTimer141:
L__ButonTimer135:
;GRR3000LManagementPanel.mpas,1822 :: 		end;
L_end_ButonTimer:
0xD5E0	0x060000  	RETURN
; end of _ButonTimer
_Comm_Fault_Check:
;GRR3000LManagementPanel.mpas,2054 :: 		begin
;GRR3000LManagementPanel.mpas,2056 :: 		if (ReceiveAddr <> Comm_ThrystorModule_Addr) then // tristör kartýndan haberleþme hatasý varsa
0xD410	0x208D30  	MOV	#lo_addr(_ReceiveAddr), W0
0xD412	0x784010  	MOV.B	[W0], W0
0xD414	0xE1046A  	CP.B	W0, #10
0xD416	0x32000D  	BRA Z	L__Comm_Fault_Check231
L__Comm_Fault_Check5002:
;GRR3000LManagementPanel.mpas,2058 :: 		Inc(ThryFaultCount); // tristör haberleþme hata sayacýný artýr
0xD418	0x200011  	MOV	#1, W1
0xD41A	0x214880  	MOV	#lo_addr(_ThryFaultCount), W0
0xD41C	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2059 :: 		if (ThryFaultCount > 5000) then // 2sn boyunca hata varsa
0xD41E	0x80A441  	MOV	_ThryFaultCount, W1
0xD420	0x213880  	MOV	#5000, W0
0xD422	0xE10800  	CP	W1, W0
0xD424	0x360005  	BRA LEU	L__Comm_Fault_Check234
L__Comm_Fault_Check5003:
;GRR3000LManagementPanel.mpas,2061 :: 		ThryFaultCount     := 0;
0xD426	0xEF2000  	CLR	W0
0xD428	0x88A440  	MOV	W0, _ThryFaultCount
;GRR3000LManagementPanel.mpas,2062 :: 		ThryCommFault      := 255;
0xD42A	0x214851  	MOV	#lo_addr(_ThryCommFault), W1
0xD42C	0xB3CFF0  	MOV.B	#255, W0
0xD42E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2063 :: 		end;
L__Comm_Fault_Check234:
;GRR3000LManagementPanel.mpas,2064 :: 		end else
0xD430	0x370007  	BRA	L__Comm_Fault_Check232
L__Comm_Fault_Check231:
;GRR3000LManagementPanel.mpas,2066 :: 		ThryFaultCount     := 0;
0xD432	0xEF2000  	CLR	W0
0xD434	0x88A440  	MOV	W0, _ThryFaultCount
;GRR3000LManagementPanel.mpas,2067 :: 		ThryCommFault      := 0;
0xD436	0x214851  	MOV	#lo_addr(_ThryCommFault), W1
0xD438	0xEF2000  	CLR	W0
0xD43A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2068 :: 		LogBit_GTTCommFault:= 0;
0xD43C	0x20E1E0  	MOV	#lo_addr(_LogBit_GTTCommFault), W0
0xD43E	0xA1E010  	BCLR	[W0], BitPos(_LogBit_GTTCommFault+0)
;GRR3000LManagementPanel.mpas,2069 :: 		end;
L__Comm_Fault_Check232:
;GRR3000LManagementPanel.mpas,2072 :: 		if (ReceiveAddr <> Comm_RelayModule) then // röle kartýndan haberleþme hatasý varsa
0xD440	0x208D30  	MOV	#lo_addr(_ReceiveAddr), W0
0xD442	0x784010  	MOV.B	[W0], W0
0xD444	0xE1046D  	CP.B	W0, #13
0xD446	0x32000D  	BRA Z	L__Comm_Fault_Check237
L__Comm_Fault_Check5004:
;GRR3000LManagementPanel.mpas,2074 :: 		Inc(RlyFaultCount); // röle haberleþme hata sayacýný artýr
0xD448	0x200011  	MOV	#1, W1
0xD44A	0x214860  	MOV	#lo_addr(_RlyFaultCount), W0
0xD44C	0x408810  	ADD	W1, [W0], [W0]
;GRR3000LManagementPanel.mpas,2075 :: 		if (RlyFaultCount > 5000) then // 2sn boyunca hata varsa
0xD44E	0x80A431  	MOV	_RlyFaultCount, W1
0xD450	0x213880  	MOV	#5000, W0
0xD452	0xE10800  	CP	W1, W0
0xD454	0x360005  	BRA LEU	L__Comm_Fault_Check240
L__Comm_Fault_Check5005:
;GRR3000LManagementPanel.mpas,2077 :: 		RlyFaultCount     := 0;
0xD456	0xEF2000  	CLR	W0
0xD458	0x88A430  	MOV	W0, _RlyFaultCount
;GRR3000LManagementPanel.mpas,2078 :: 		RlyCommFault      := 255;
0xD45A	0x2148C1  	MOV	#lo_addr(_RlyCommFault), W1
0xD45C	0xB3CFF0  	MOV.B	#255, W0
0xD45E	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2079 :: 		end;
L__Comm_Fault_Check240:
;GRR3000LManagementPanel.mpas,2080 :: 		end else
0xD460	0x370007  	BRA	L__Comm_Fault_Check238
L__Comm_Fault_Check237:
;GRR3000LManagementPanel.mpas,2082 :: 		RlyFaultCount      := 0;
0xD462	0xEF2000  	CLR	W0
0xD464	0x88A430  	MOV	W0, _RlyFaultCount
;GRR3000LManagementPanel.mpas,2083 :: 		RlyCommFault       := 0;
0xD466	0x2148C1  	MOV	#lo_addr(_RlyCommFault), W1
0xD468	0xEF2000  	CLR	W0
0xD46A	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2084 :: 		LogBit_RlyCommFault:= 0;
0xD46C	0x20E1E0  	MOV	#lo_addr(_LogBit_RlyCommFault), W0
0xD46E	0xA17010  	BCLR	[W0], BitPos(_LogBit_RlyCommFault+0)
;GRR3000LManagementPanel.mpas,2085 :: 		end;
L__Comm_Fault_Check238:
;GRR3000LManagementPanel.mpas,2087 :: 		end;
L_end_Comm_Fault_Check:
0xD470	0x060000  	RETURN
; end of _Comm_Fault_Check
_UART1_int:
0xF484	0xFA0002  	LNK	#2
0xF486	0xF80034  	PUSH	PSVPAG
0xF488	0xF80036  	PUSH	RCOUNT
0xF48A	0x781F80  	PUSH	W0
0xF48C	0x200020  	MOV	#2, W0
0xF48E	0x09000C  	REPEAT	#12
0xF490	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,2105 :: 		begin
;GRR3000LManagementPanel.mpas,2107 :: 		IEC0.7 :=0; // disable TMR3IF
0xF492	0x781F8A  	PUSH	W10
0xF494	0x781F8B  	PUSH	W11
0xF496	0x781F8C  	PUSH	W12
0xF498	0xA9E08C  	BCLR	IEC0, #7
;GRR3000LManagementPanel.mpas,2108 :: 		T3CON := %0000000000000000; //stop TMR3
0xF49A	0xEF2112  	CLR	T3CON
;GRR3000LManagementPanel.mpas,2112 :: 		Comm_Tmr := 0;
0xF49C	0x209731  	MOV	#lo_addr(_Comm_Tmr), W1
0xF49E	0xEF2000  	CLR	W0
0xF4A0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2114 :: 		UART1_Read_Text(test_Text,'*',10);
0xF4A2	0x4700E0  	ADD	W14, #0, W1
0xF4A4	0xB3C2A0  	MOV.B	#42, W0
0xF4A6	0x785880  	MOV.B	W0, [W1++]
0xF4A8	0xEF2000  	CLR	W0
0xF4AA	0x785880  	MOV.B	W0, [W1++]
0xF4AC	0x470060  	ADD	W14, #0, W0
0xF4AE	0xB3C0AC  	MOV.B	#10, W12
0xF4B0	0x780580  	MOV	W0, W11
0xF4B2	0x2160CA  	MOV	#lo_addr(_test_Text), W10
0xF4B4	0x07EFDE  	RCALL	_UART1_Read_Text
;GRR3000LManagementPanel.mpas,2135 :: 		PR3  := ModBus_TimeOut_Timer3_PR3;
0xF4B6	0x80A9E0  	MOV	_ModBus_TimeOut_Timer3_PR3, W0
0xF4B8	0xB7A10E  	MOV	WREG, PR3
;GRR3000LManagementPanel.mpas,2136 :: 		IEC0.7 :=1;
0xF4BA	0xA8E08C  	BSET	IEC0, #7
;GRR3000LManagementPanel.mpas,2137 :: 		ModBus_TimeOut := 0;    //' clear down frame timeout TIMER0 on char reception (>3.5 chars without a char is a frame timeout)
0xF4BC	0x2153E1  	MOV	#lo_addr(_ModBus_TimeOut), W1
0xF4BE	0xEF2000  	CLR	W0
0xF4C0	0x784880  	MOV.B	W0, [W1]
;GRR3000LManagementPanel.mpas,2138 :: 		T3CON := %1000000000000000; //start TMR2
0xF4C2	0x280000  	MOV	#32768, W0
0xF4C4	0xB7A112  	MOV	WREG, T3CON
;GRR3000LManagementPanel.mpas,2141 :: 		IFS0.const_UART1_RX_IF_IFS0 := 0 ; //ensure interrupt not pending
0xF4C6	0xA92085  	BCLR	IFS0, #9
;GRR3000LManagementPanel.mpas,2142 :: 		end;
L_end_UART1_int:
0xF4C8	0x78064F  	POP	W12
0xF4CA	0x7805CF  	POP	W11
0xF4CC	0x78054F  	POP	W10
0xF4CE	0x2001A0  	MOV	#26, W0
0xF4D0	0x09000C  	REPEAT	#12
0xF4D2	0x78104F  	POP	[W0--]
0xF4D4	0x78004F  	POP	W0
0xF4D6	0xF90036  	POP	RCOUNT
0xF4D8	0xF90034  	POP	PSVPAG
0xF4DA	0xFA8000  	ULNK
0xF4DC	0x064000  	RETFIE
; end of _UART1_int
_UART1_Read_Text:
0xD472	0xFA0000  	LNK	#0
;__Lib_UART_12_p30.mpas,217 :: 		
;__Lib_UART_12_p30.mpas,218 :: 		
; out_ptr start address is: 4 (W2)
0xD474	0x78010A  	MOV	W10, W2
;__Lib_UART_12_p30.mpas,219 :: 		
; delim_ptr start address is: 6 (W3)
0xD476	0x78018B  	MOV	W11, W3
;__Lib_UART_12_p30.mpas,220 :: 		
; delim_idx start address is: 0 (W0)
0xD478	0xEF2000  	CLR	W0
; out_ptr end address is: 4 (W2)
; delim_idx end address is: 0 (W0)
; delim_ptr end address is: 6 (W3)
0xD47A	0x784200  	MOV.B	W0, W4
;__Lib_UART_12_p30.mpas,222 :: 		
L__UART1_Read_Text25:
; delim_idx start address is: 8 (W4)
; delim_ptr start address is: 6 (W3)
; out_ptr start address is: 4 (W2)
0xD47C	0xE16460  	CP.B	W12, #0
0xD47E	0x32002A  	BRA Z	L__UART1_Read_Text26
L__UART1_Read_Text148:
;__Lib_UART_12_p30.mpas,224 :: 		
0xD480	0xB3CFF0  	MOV.B	#255, W0
0xD482	0xE16400  	CP.B	W12, W0
0xD484	0x320003  	BRA Z	L__UART1_Read_Text30
L__UART1_Read_Text149:
;__Lib_UART_12_p30.mpas,225 :: 		
0xD486	0xFB800C  	ZE	W12, W0
0xD488	0xED2000  	DEC	W0
0xD48A	0x784600  	MOV.B	W0, W12
L__UART1_Read_Text30:
;__Lib_UART_12_p30.mpas,227 :: 		
; delim_idx end address is: 8 (W4)
; delim_ptr end address is: 6 (W3)
L__UART1_Read_Text33:
; out_ptr end address is: 4 (W2)
; out_ptr start address is: 4 (W2)
; delim_ptr start address is: 6 (W3)
; delim_idx start address is: 8 (W4)
0xD48C	0x07C177  	RCALL	_UART1_Data_Ready
0xD48E	0xE10060  	CP	W0, #0
0xD490	0x3A0002  	BRA NZ	L__UART1_Read_Text34
L__UART1_Read_Text150:
0xD492	0x000000  	NOP
0xD494	0x37FFFB  	BRA	L__UART1_Read_Text33
L__UART1_Read_Text34:
;__Lib_UART_12_p30.mpas,229 :: 		
0xD496	0x07B811  	RCALL	_UART1_Read
; r_data start address is: 2 (W1)
0xD498	0x784080  	MOV.B	W0, W1
;__Lib_UART_12_p30.mpas,230 :: 		
0xD49A	0x784900  	MOV.B	W0, [W2]
;__Lib_UART_12_p30.mpas,231 :: 		
0xD49C	0xEC2004  	INC	W2
;__Lib_UART_12_p30.mpas,232 :: 		
0xD49E	0xE10C13  	CP.B	W1, [W3]
0xD4A0	0x3A0004  	BRA NZ	L__UART1_Read_Text38
L__UART1_Read_Text151:
; r_data end address is: 2 (W1)
;__Lib_UART_12_p30.mpas,233 :: 		
; delim_idx start address is: 0 (W0)
0xD4A2	0x424061  	ADD.B	W4, #1, W0
; delim_idx end address is: 8 (W4)
;__Lib_UART_12_p30.mpas,234 :: 		
0xD4A4	0xEC2006  	INC	W3
;__Lib_UART_12_p30.mpas,235 :: 		
; delim_idx end address is: 0 (W0)
; delim_ptr end address is: 6 (W3)
0xD4A6	0x784200  	MOV.B	W0, W4
0xD4A8	0x37000C  	BRA	L__UART1_Read_Text39
;__Lib_UART_12_p30.mpas,236 :: 		
L__UART1_Read_Text38:
;__Lib_UART_12_p30.mpas,238 :: 		
; delim_idx start address is: 8 (W4)
; r_data start address is: 2 (W1)
0xD4AA	0xEF2008  	CLR	W4
;__Lib_UART_12_p30.mpas,239 :: 		
; delim_ptr start address is: 6 (W3)
0xD4AC	0x78018B  	MOV	W11, W3
;__Lib_UART_12_p30.mpas,240 :: 		
0xD4AE	0x78401B  	MOV.B	[W11], W0
0xD4B0	0xE10401  	CP.B	W0, W1
0xD4B2	0x3A0003  	BRA NZ	L__UART1_Read_Text128
L__UART1_Read_Text152:
; r_data end address is: 2 (W1)
;__Lib_UART_12_p30.mpas,241 :: 		
; delim_idx start address is: 0 (W0)
0xD4B4	0x424061  	ADD.B	W4, #1, W0
; delim_idx end address is: 8 (W4)
;__Lib_UART_12_p30.mpas,242 :: 		
; delim_ptr start address is: 2 (W1)
0xD4B6	0x4180E1  	ADD	W3, #1, W1
; delim_ptr end address is: 6 (W3)
; delim_ptr end address is: 2 (W1)
; delim_idx end address is: 0 (W0)
;__Lib_UART_12_p30.mpas,243 :: 		
0xD4B8	0x370002  	BRA	L__UART1_Read_Text41
L__UART1_Read_Text128:
;__Lib_UART_12_p30.mpas,240 :: 		
0xD4BA	0x780083  	MOV	W3, W1
0xD4BC	0x784004  	MOV.B	W4, W0
;__Lib_UART_12_p30.mpas,243 :: 		
L__UART1_Read_Text41:
;__Lib_UART_12_p30.mpas,244 :: 		
; delim_ptr start address is: 2 (W1)
; delim_idx start address is: 0 (W0)
0xD4BE	0x780181  	MOV	W1, W3
; delim_ptr end address is: 2 (W1)
; delim_idx end address is: 0 (W0)
0xD4C0	0x784200  	MOV.B	W0, W4
L__UART1_Read_Text39:
;__Lib_UART_12_p30.mpas,246 :: 		
; delim_idx start address is: 8 (W4)
; delim_ptr start address is: 6 (W3)
0xD4C2	0x784013  	MOV.B	[W3], W0
0xD4C4	0xE10460  	CP.B	W0, #0
0xD4C6	0x3A0005  	BRA NZ	L__UART1_Read_Text44
L__UART1_Read_Text153:
; delim_ptr end address is: 6 (W3)
;__Lib_UART_12_p30.mpas,248 :: 		
0xD4C8	0xFB8004  	ZE	W4, W0
; delim_idx end address is: 8 (W4)
0xD4CA	0x510080  	SUB	W2, W0, W1
; out_ptr end address is: 4 (W2)
;__Lib_UART_12_p30.mpas,249 :: 		
0xD4CC	0xEF2000  	CLR	W0
0xD4CE	0x784880  	MOV.B	W0, [W1]
;__Lib_UART_12_p30.mpas,250 :: 		
0xD4D0	0x370003  	BRA	L_end__UART1_Read_Text
;__Lib_UART_12_p30.mpas,251 :: 		
L__UART1_Read_Text44:
;__Lib_UART_12_p30.mpas,252 :: 		
; delim_ptr start address is: 6 (W3)
; delim_idx start address is: 8 (W4)
; out_ptr start address is: 4 (W2)
; out_ptr end address is: 4 (W2)
; delim_idx end address is: 8 (W4)
; delim_ptr end address is: 6 (W3)
0xD4D2	0x37FFD4  	BRA	L__UART1_Read_Text25
L__UART1_Read_Text26:
;__Lib_UART_12_p30.mpas,253 :: 		
0xD4D4	0xEF2000  	CLR	W0
0xD4D6	0x784D00  	MOV.B	W0, [W10]
;__Lib_UART_12_p30.mpas,254 :: 		
L_end__UART1_Read_Text:
L_end_UART1_Read_Text:
0xD4D8	0xFA8000  	ULNK
0xD4DA	0x060000  	RETURN
; end of _UART1_Read_Text
_Timer3Int:
0xF44E	0xF80034  	PUSH	PSVPAG
0xF450	0xF80036  	PUSH	RCOUNT
0xF452	0x781F80  	PUSH	W0
0xF454	0x200020  	MOV	#2, W0
0xF456	0x09000C  	REPEAT	#12
0xF458	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,2090 :: 		begin
;GRR3000LManagementPanel.mpas,2092 :: 		IEC0.7 :=0;
0xF45A	0xA9E08C  	BCLR	IEC0, #7
;GRR3000LManagementPanel.mpas,2093 :: 		T3CON := %0000000000000000; //stop TMR2
0xF45C	0xEF2112  	CLR	T3CON
;GRR3000LManagementPanel.mpas,2095 :: 		if ModBus_TimeOut < 250 then
0xF45E	0x2153E0  	MOV	#lo_addr(_ModBus_TimeOut), W0
0xF460	0x784090  	MOV.B	[W0], W1
0xF462	0xB3CFA0  	MOV.B	#250, W0
0xF464	0xE10C00  	CP.B	W1, W0
0xF466	0x310003  	BRA GEU	L__Timer3Int244
L__Timer3Int5007:
;GRR3000LManagementPanel.mpas,2096 :: 		ModBus_TimeOut := ModBus_TimeOut+1;
0xF468	0xB3C011  	MOV.B	#1, W1
0xF46A	0x2153E0  	MOV	#lo_addr(_ModBus_TimeOut), W0
0xF46C	0x40C810  	ADD.B	W1, [W0], [W0]
L__Timer3Int244:
;GRR3000LManagementPanel.mpas,2098 :: 		IFS0.7 :=0;
0xF46E	0xA9E084  	BCLR	IFS0, #7
;GRR3000LManagementPanel.mpas,2099 :: 		IEC0.7 :=1;
0xF470	0xA8E08C  	BSET	IEC0, #7
;GRR3000LManagementPanel.mpas,2100 :: 		T3CON := %1000000000000000; //start TMR2
0xF472	0x280000  	MOV	#32768, W0
0xF474	0xB7A112  	MOV	WREG, T3CON
;GRR3000LManagementPanel.mpas,2102 :: 		end;
L_end_Timer3Int:
0xF476	0x2001A0  	MOV	#26, W0
0xF478	0x09000C  	REPEAT	#12
0xF47A	0x78104F  	POP	[W0--]
0xF47C	0x78004F  	POP	W0
0xF47E	0xF90036  	POP	RCOUNT
0xF480	0xF90034  	POP	PSVPAG
0xF482	0x064000  	RETFIE
; end of _Timer3Int
_Input1CaptureInt:
0xF41C	0xF80034  	PUSH	PSVPAG
0xF41E	0xF80036  	PUSH	RCOUNT
0xF420	0x781F80  	PUSH	W0
0xF422	0x200020  	MOV	#2, W0
0xF424	0x09000C  	REPEAT	#12
0xF426	0x781FB0  	PUSH	[W0++]
;GRR3000LManagementPanel.mpas,1849 :: 		begin
;GRR3000LManagementPanel.mpas,1851 :: 		TMR2 := 0X0000;
0xF428	0xEF2106  	CLR	TMR2
;GRR3000LManagementPanel.mpas,1852 :: 		IC1CON.0 := 0;
0xF42A	0xA90142  	BCLR	IC1CON, #0
;GRR3000LManagementPanel.mpas,1853 :: 		IC1CON.1 := 0;
0xF42C	0xA92142  	BCLR	IC1CON, #1
;GRR3000LManagementPanel.mpas,1854 :: 		IC1CON.2 := 0;
0xF42E	0xA94142  	BCLR	IC1CON, #2
;GRR3000LManagementPanel.mpas,1857 :: 		FreqHAM := IC1BUF ;
0xF430	0xBF8140  	MOV	IC1BUF, WREG
0xF432	0x8846C0  	MOV	W0, _FreqHAM
;GRR3000LManagementPanel.mpas,1858 :: 		FreqBit := 1;
0xF434	0x208040  	MOV	#lo_addr(_FreqBit), W0
0xF436	0xA0C010  	BSET	[W0], BitPos(_FreqBit+0)
;GRR3000LManagementPanel.mpas,1860 :: 		IFS0.1 := 0;      //Clear bit IC1IF (IFS<1>)
0xF438	0xA92084  	BCLR	IFS0, #1
;GRR3000LManagementPanel.mpas,1861 :: 		IC1CON.0 := 0;
0xF43A	0xA90142  	BCLR	IC1CON, #0
;GRR3000LManagementPanel.mpas,1862 :: 		IC1CON.1 := 0;
0xF43C	0xA92142  	BCLR	IC1CON, #1
;GRR3000LManagementPanel.mpas,1863 :: 		IC1CON.2 := 1;
0xF43E	0xA84142  	BSET	IC1CON, #2
;GRR3000LManagementPanel.mpas,1866 :: 		end;
L_end_Input1CaptureInt:
0xF440	0x2001A0  	MOV	#26, W0
0xF442	0x09000C  	REPEAT	#12
0xF444	0x78104F  	POP	[W0--]
0xF446	0x78004F  	POP	W0
0xF448	0xF90036  	POP	RCOUNT
0xF44A	0xF90034  	POP	PSVPAG
0xF44C	0x064000  	RETFIE
; end of _Input1CaptureInt
;__Lib_GlcdFonts.mpas,614 :: _font5x7 [480]
0x10000	0x0000 ;_font5x7+0
0x10002	0x0000 ;_font5x7+2
0x10004	0x0000 ;_font5x7+4
0x10006	0x5F00 ;_font5x7+6
0x10008	0x0000 ;_font5x7+8
0x1000A	0x0700 ;_font5x7+10
0x1000C	0x0700 ;_font5x7+12
0x1000E	0x1400 ;_font5x7+14
0x10010	0x147F ;_font5x7+16
0x10012	0x147F ;_font5x7+18
0x10014	0x2A24 ;_font5x7+20
0x10016	0x2A7F ;_font5x7+22
0x10018	0x2312 ;_font5x7+24
0x1001A	0x0813 ;_font5x7+26
0x1001C	0x6264 ;_font5x7+28
0x1001E	0x4936 ;_font5x7+30
0x10020	0x2255 ;_font5x7+32
0x10022	0x0050 ;_font5x7+34
0x10024	0x0305 ;_font5x7+36
0x10026	0x0000 ;_font5x7+38
0x10028	0x1C00 ;_font5x7+40
0x1002A	0x4122 ;_font5x7+42
0x1002C	0x0000 ;_font5x7+44
0x1002E	0x2241 ;_font5x7+46
0x10030	0x001C ;_font5x7+48
0x10032	0x2A08 ;_font5x7+50
0x10034	0x2A1C ;_font5x7+52
0x10036	0x0808 ;_font5x7+54
0x10038	0x3E08 ;_font5x7+56
0x1003A	0x0808 ;_font5x7+58
0x1003C	0x5000 ;_font5x7+60
0x1003E	0x0030 ;_font5x7+62
0x10040	0x0800 ;_font5x7+64
0x10042	0x0808 ;_font5x7+66
0x10044	0x0808 ;_font5x7+68
0x10046	0x3000 ;_font5x7+70
0x10048	0x0030 ;_font5x7+72
0x1004A	0x2000 ;_font5x7+74
0x1004C	0x0810 ;_font5x7+76
0x1004E	0x0204 ;_font5x7+78
0x10050	0x513E ;_font5x7+80
0x10052	0x4549 ;_font5x7+82
0x10054	0x003E ;_font5x7+84
0x10056	0x7F42 ;_font5x7+86
0x10058	0x0040 ;_font5x7+88
0x1005A	0x6142 ;_font5x7+90
0x1005C	0x4951 ;_font5x7+92
0x1005E	0x2146 ;_font5x7+94
0x10060	0x4541 ;_font5x7+96
0x10062	0x314B ;_font5x7+98
0x10064	0x1418 ;_font5x7+100
0x10066	0x7F12 ;_font5x7+102
0x10068	0x2710 ;_font5x7+104
0x1006A	0x4545 ;_font5x7+106
0x1006C	0x3945 ;_font5x7+108
0x1006E	0x4A3C ;_font5x7+110
0x10070	0x4949 ;_font5x7+112
0x10072	0x0130 ;_font5x7+114
0x10074	0x0971 ;_font5x7+116
0x10076	0x0305 ;_font5x7+118
0x10078	0x4936 ;_font5x7+120
0x1007A	0x4949 ;_font5x7+122
0x1007C	0x0636 ;_font5x7+124
0x1007E	0x4949 ;_font5x7+126
0x10080	0x1E29 ;_font5x7+128
0x10082	0x3600 ;_font5x7+130
0x10084	0x0036 ;_font5x7+132
0x10086	0x0000 ;_font5x7+134
0x10088	0x3656 ;_font5x7+136
0x1008A	0x0000 ;_font5x7+138
0x1008C	0x0800 ;_font5x7+140
0x1008E	0x2214 ;_font5x7+142
0x10090	0x1441 ;_font5x7+144
0x10092	0x1414 ;_font5x7+146
0x10094	0x1414 ;_font5x7+148
0x10096	0x2241 ;_font5x7+150
0x10098	0x0814 ;_font5x7+152
0x1009A	0x0200 ;_font5x7+154
0x1009C	0x5101 ;_font5x7+156
0x1009E	0x0609 ;_font5x7+158
0x100A0	0x4932 ;_font5x7+160
0x100A2	0x4179 ;_font5x7+162
0x100A4	0x7E3E ;_font5x7+164
0x100A6	0x1111 ;_font5x7+166
0x100A8	0x7E11 ;_font5x7+168
0x100AA	0x497F ;_font5x7+170
0x100AC	0x4949 ;_font5x7+172
0x100AE	0x3E36 ;_font5x7+174
0x100B0	0x4141 ;_font5x7+176
0x100B2	0x2241 ;_font5x7+178
0x100B4	0x417F ;_font5x7+180
0x100B6	0x2241 ;_font5x7+182
0x100B8	0x7F1C ;_font5x7+184
0x100BA	0x4949 ;_font5x7+186
0x100BC	0x4149 ;_font5x7+188
0x100BE	0x097F ;_font5x7+190
0x100C0	0x0109 ;_font5x7+192
0x100C2	0x3E01 ;_font5x7+194
0x100C4	0x4141 ;_font5x7+196
0x100C6	0x3251 ;_font5x7+198
0x100C8	0x087F ;_font5x7+200
0x100CA	0x0808 ;_font5x7+202
0x100CC	0x007F ;_font5x7+204
0x100CE	0x7F41 ;_font5x7+206
0x100D0	0x0041 ;_font5x7+208
0x100D2	0x4020 ;_font5x7+210
0x100D4	0x3F41 ;_font5x7+212
0x100D6	0x7F01 ;_font5x7+214
0x100D8	0x1408 ;_font5x7+216
0x100DA	0x4122 ;_font5x7+218
0x100DC	0x407F ;_font5x7+220
0x100DE	0x4040 ;_font5x7+222
0x100E0	0x7F40 ;_font5x7+224
0x100E2	0x0402 ;_font5x7+226
0x100E4	0x7F02 ;_font5x7+228
0x100E6	0x047F ;_font5x7+230
0x100E8	0x1008 ;_font5x7+232
0x100EA	0x3E7F ;_font5x7+234
0x100EC	0x4141 ;_font5x7+236
0x100EE	0x3E41 ;_font5x7+238
0x100F0	0x097F ;_font5x7+240
0x100F2	0x0909 ;_font5x7+242
0x100F4	0x3E06 ;_font5x7+244
0x100F6	0x5141 ;_font5x7+246
0x100F8	0x5E21 ;_font5x7+248
0x100FA	0x097F ;_font5x7+250
0x100FC	0x2919 ;_font5x7+252
0x100FE	0x4646 ;_font5x7+254
0x10100	0x4949 ;_font5x7+256
0x10102	0x3149 ;_font5x7+258
0x10104	0x0101 ;_font5x7+260
0x10106	0x017F ;_font5x7+262
0x10108	0x3F01 ;_font5x7+264
0x1010A	0x4040 ;_font5x7+266
0x1010C	0x3F40 ;_font5x7+268
0x1010E	0x201F ;_font5x7+270
0x10110	0x2040 ;_font5x7+272
0x10112	0x7F1F ;_font5x7+274
0x10114	0x1820 ;_font5x7+276
0x10116	0x7F20 ;_font5x7+278
0x10118	0x1463 ;_font5x7+280
0x1011A	0x1408 ;_font5x7+282
0x1011C	0x0363 ;_font5x7+284
0x1011E	0x7804 ;_font5x7+286
0x10120	0x0304 ;_font5x7+288
0x10122	0x5161 ;_font5x7+290
0x10124	0x4549 ;_font5x7+292
0x10126	0x0043 ;_font5x7+294
0x10128	0x7F00 ;_font5x7+296
0x1012A	0x4141 ;_font5x7+298
0x1012C	0x0402 ;_font5x7+300
0x1012E	0x1008 ;_font5x7+302
0x10130	0x4120 ;_font5x7+304
0x10132	0x7F41 ;_font5x7+306
0x10134	0x0000 ;_font5x7+308
0x10136	0x0204 ;_font5x7+310
0x10138	0x0201 ;_font5x7+312
0x1013A	0x4004 ;_font5x7+314
0x1013C	0x4040 ;_font5x7+316
0x1013E	0x4040 ;_font5x7+318
0x10140	0x0100 ;_font5x7+320
0x10142	0x0402 ;_font5x7+322
0x10144	0x2000 ;_font5x7+324
0x10146	0x5454 ;_font5x7+326
0x10148	0x7854 ;_font5x7+328
0x1014A	0x487F ;_font5x7+330
0x1014C	0x4444 ;_font5x7+332
0x1014E	0x3838 ;_font5x7+334
0x10150	0x4444 ;_font5x7+336
0x10152	0x2044 ;_font5x7+338
0x10154	0x4438 ;_font5x7+340
0x10156	0x4844 ;_font5x7+342
0x10158	0x387F ;_font5x7+344
0x1015A	0x5454 ;_font5x7+346
0x1015C	0x1854 ;_font5x7+348
0x1015E	0x7E08 ;_font5x7+350
0x10160	0x0109 ;_font5x7+352
0x10162	0x0802 ;_font5x7+354
0x10164	0x5414 ;_font5x7+356
0x10166	0x3C54 ;_font5x7+358
0x10168	0x087F ;_font5x7+360
0x1016A	0x0404 ;_font5x7+362
0x1016C	0x0078 ;_font5x7+364
0x1016E	0x7D44 ;_font5x7+366
0x10170	0x0040 ;_font5x7+368
0x10172	0x4020 ;_font5x7+370
0x10174	0x3D44 ;_font5x7+372
0x10176	0x0000 ;_font5x7+374
0x10178	0x107F ;_font5x7+376
0x1017A	0x4428 ;_font5x7+378
0x1017C	0x4100 ;_font5x7+380
0x1017E	0x407F ;_font5x7+382
0x10180	0x7C00 ;_font5x7+384
0x10182	0x1804 ;_font5x7+386
0x10184	0x7804 ;_font5x7+388
0x10186	0x087C ;_font5x7+390
0x10188	0x0404 ;_font5x7+392
0x1018A	0x3878 ;_font5x7+394
0x1018C	0x4444 ;_font5x7+396
0x1018E	0x3844 ;_font5x7+398
0x10190	0x147C ;_font5x7+400
0x10192	0x1414 ;_font5x7+402
0x10194	0x0808 ;_font5x7+404
0x10196	0x1414 ;_font5x7+406
0x10198	0x7C18 ;_font5x7+408
0x1019A	0x087C ;_font5x7+410
0x1019C	0x0404 ;_font5x7+412
0x1019E	0x4808 ;_font5x7+414
0x101A0	0x5454 ;_font5x7+416
0x101A2	0x2054 ;_font5x7+418
0x101A4	0x3F04 ;_font5x7+420
0x101A6	0x4044 ;_font5x7+422
0x101A8	0x3C20 ;_font5x7+424
0x101AA	0x4040 ;_font5x7+426
0x101AC	0x7C20 ;_font5x7+428
0x101AE	0x201C ;_font5x7+430
0x101B0	0x2040 ;_font5x7+432
0x101B2	0x3C1C ;_font5x7+434
0x101B4	0x3040 ;_font5x7+436
0x101B6	0x3C40 ;_font5x7+438
0x101B8	0x2844 ;_font5x7+440
0x101BA	0x2810 ;_font5x7+442
0x101BC	0x0C44 ;_font5x7+444
0x101BE	0x5050 ;_font5x7+446
0x101C0	0x3C50 ;_font5x7+448
0x101C2	0x6444 ;_font5x7+450
0x101C4	0x4C54 ;_font5x7+452
0x101C6	0x0044 ;_font5x7+454
0x101C8	0x3608 ;_font5x7+456
0x101CA	0x0041 ;_font5x7+458
0x101CC	0x0000 ;_font5x7+460
0x101CE	0x007F ;_font5x7+462
0x101D0	0x0000 ;_font5x7+464
0x101D2	0x3641 ;_font5x7+466
0x101D4	0x0008 ;_font5x7+468
0x101D6	0x0808 ;_font5x7+470
0x101D8	0x1C2A ;_font5x7+472
0x101DA	0x0808 ;_font5x7+474
0x101DC	0x2A1C ;_font5x7+476
0x101DE	0x0808 ;_font5x7+478
; end of _font5x7
;__Lib_FAT32.c,0 :: ?lstr_6___Lib_FAT32 [8]
0x101E0	0x2E33 ;?lstr_6___Lib_FAT32+0
0x101E2	0x2E32 ;?lstr_6___Lib_FAT32+2
0x101E4	0x2E32 ;?lstr_6___Lib_FAT32+4
0x101E6	0x0030 ;?lstr_6___Lib_FAT32+6
; end of ?lstr_6___Lib_FAT32
;Fonts.mpas,266 :: _NewFont5x7 [1120]
0x101E8	0x0000 ;_NewFont5x7+0
0x101EA	0x0000 ;_NewFont5x7+2
0x101EC	0x0000 ;_NewFont5x7+4
0x101EE	0x5F00 ;_NewFont5x7+6
0x101F0	0x0000 ;_NewFont5x7+8
0x101F2	0x0700 ;_NewFont5x7+10
0x101F4	0x0700 ;_NewFont5x7+12
0x101F6	0x1400 ;_NewFont5x7+14
0x101F8	0x147F ;_NewFont5x7+16
0x101FA	0x147F ;_NewFont5x7+18
0x101FC	0x2A24 ;_NewFont5x7+20
0x101FE	0x2A7F ;_NewFont5x7+22
0x10200	0x2312 ;_NewFont5x7+24
0x10202	0x0813 ;_NewFont5x7+26
0x10204	0x6264 ;_NewFont5x7+28
0x10206	0x4D32 ;_NewFont5x7+30
0x10208	0x3549 ;_NewFont5x7+32
0x1020A	0x003A ;_NewFont5x7+34
0x1020C	0x0700 ;_NewFont5x7+36
0x1020E	0x0000 ;_NewFont5x7+38
0x10210	0x221C ;_NewFont5x7+40
0x10212	0x0041 ;_NewFont5x7+42
0x10214	0x0000 ;_NewFont5x7+44
0x10216	0x4100 ;_NewFont5x7+46
0x10218	0x1C22 ;_NewFont5x7+48
0x1021A	0x1C18 ;_NewFont5x7+50
0x1021C	0x1C1E ;_NewFont5x7+52
0x1021E	0x0818 ;_NewFont5x7+54
0x10220	0x3E08 ;_NewFont5x7+56
0x10222	0x0808 ;_NewFont5x7+58
0x10224	0x0808 ;_NewFont5x7+60
0x10226	0x1C3E ;_NewFont5x7+62
0x10228	0x0808 ;_NewFont5x7+64
0x1022A	0x0808 ;_NewFont5x7+66
0x1022C	0x0808 ;_NewFont5x7+68
0x1022E	0x6000 ;_NewFont5x7+70
0x10230	0x0060 ;_NewFont5x7+72
0x10232	0x2000 ;_NewFont5x7+74
0x10234	0x0810 ;_NewFont5x7+76
0x10236	0x0204 ;_NewFont5x7+78
0x10238	0x513E ;_NewFont5x7+80
0x1023A	0x4549 ;_NewFont5x7+82
0x1023C	0x003E ;_NewFont5x7+84
0x1023E	0x7F42 ;_NewFont5x7+86
0x10240	0x0040 ;_NewFont5x7+88
0x10242	0x6142 ;_NewFont5x7+90
0x10244	0x4951 ;_NewFont5x7+92
0x10246	0x2146 ;_NewFont5x7+94
0x10248	0x4541 ;_NewFont5x7+96
0x1024A	0x314B ;_NewFont5x7+98
0x1024C	0x1418 ;_NewFont5x7+100
0x1024E	0x7F12 ;_NewFont5x7+102
0x10250	0x2710 ;_NewFont5x7+104
0x10252	0x4545 ;_NewFont5x7+106
0x10254	0x3945 ;_NewFont5x7+108
0x10256	0x4A3C ;_NewFont5x7+110
0x10258	0x4949 ;_NewFont5x7+112
0x1025A	0x0130 ;_NewFont5x7+114
0x1025C	0x7901 ;_NewFont5x7+116
0x1025E	0x0305 ;_NewFont5x7+118
0x10260	0x4936 ;_NewFont5x7+120
0x10262	0x4949 ;_NewFont5x7+122
0x10264	0x0636 ;_NewFont5x7+124
0x10266	0x4949 ;_NewFont5x7+126
0x10268	0x1E29 ;_NewFont5x7+128
0x1026A	0x3600 ;_NewFont5x7+130
0x1026C	0x0036 ;_NewFont5x7+132
0x1026E	0x4000 ;_NewFont5x7+134
0x10270	0x3676 ;_NewFont5x7+136
0x10272	0x0000 ;_NewFont5x7+138
0x10274	0x1C08 ;_NewFont5x7+140
0x10276	0x6336 ;_NewFont5x7+142
0x10278	0x1400 ;_NewFont5x7+144
0x1027A	0x1414 ;_NewFont5x7+146
0x1027C	0x1414 ;_NewFont5x7+148
0x1027E	0x7F7F ;_NewFont5x7+150
0x10280	0x1C3E ;_NewFont5x7+152
0x10282	0x0208 ;_NewFont5x7+154
0x10284	0x5101 ;_NewFont5x7+156
0x10286	0x0609 ;_NewFont5x7+158
0x10288	0x4932 ;_NewFont5x7+160
0x1028A	0x3149 ;_NewFont5x7+162
0x1028C	0x7E3E ;_NewFont5x7+164
0x1028E	0x1111 ;_NewFont5x7+166
0x10290	0x7E11 ;_NewFont5x7+168
0x10292	0x497F ;_NewFont5x7+170
0x10294	0x4949 ;_NewFont5x7+172
0x10296	0x3E36 ;_NewFont5x7+174
0x10298	0x4141 ;_NewFont5x7+176
0x1029A	0x2241 ;_NewFont5x7+178
0x1029C	0x417F ;_NewFont5x7+180
0x1029E	0x2241 ;_NewFont5x7+182
0x102A0	0x7F1C ;_NewFont5x7+184
0x102A2	0x4949 ;_NewFont5x7+186
0x102A4	0x4149 ;_NewFont5x7+188
0x102A6	0x097F ;_NewFont5x7+190
0x102A8	0x0909 ;_NewFont5x7+192
0x102AA	0x3E01 ;_NewFont5x7+194
0x102AC	0x4141 ;_NewFont5x7+196
0x102AE	0x3251 ;_NewFont5x7+198
0x102B0	0x087F ;_NewFont5x7+200
0x102B2	0x0808 ;_NewFont5x7+202
0x102B4	0x007F ;_NewFont5x7+204
0x102B6	0x7F41 ;_NewFont5x7+206
0x102B8	0x0041 ;_NewFont5x7+208
0x102BA	0x4100 ;_NewFont5x7+210
0x102BC	0x013F ;_NewFont5x7+212
0x102BE	0x7F00 ;_NewFont5x7+214
0x102C0	0x1408 ;_NewFont5x7+216
0x102C2	0x4122 ;_NewFont5x7+218
0x102C4	0x407F ;_NewFont5x7+220
0x102C6	0x4040 ;_NewFont5x7+222
0x102C8	0x7F40 ;_NewFont5x7+224
0x102CA	0x0804 ;_NewFont5x7+226
0x102CC	0x7F04 ;_NewFont5x7+228
0x102CE	0x047F ;_NewFont5x7+230
0x102D0	0x1008 ;_NewFont5x7+232
0x102D2	0x3E7F ;_NewFont5x7+234
0x102D4	0x4141 ;_NewFont5x7+236
0x102D6	0x3E41 ;_NewFont5x7+238
0x102D8	0x097F ;_NewFont5x7+240
0x102DA	0x0909 ;_NewFont5x7+242
0x102DC	0x3E06 ;_NewFont5x7+244
0x102DE	0x5141 ;_NewFont5x7+246
0x102E0	0x5E21 ;_NewFont5x7+248
0x102E2	0x097F ;_NewFont5x7+250
0x102E4	0x2919 ;_NewFont5x7+252
0x102E6	0x4646 ;_NewFont5x7+254
0x102E8	0x4949 ;_NewFont5x7+256
0x102EA	0x3149 ;_NewFont5x7+258
0x102EC	0x0101 ;_NewFont5x7+260
0x102EE	0x017F ;_NewFont5x7+262
0x102F0	0x3F01 ;_NewFont5x7+264
0x102F2	0x4040 ;_NewFont5x7+266
0x102F4	0x3F40 ;_NewFont5x7+268
0x102F6	0x201F ;_NewFont5x7+270
0x102F8	0x2040 ;_NewFont5x7+272
0x102FA	0x3F1F ;_NewFont5x7+274
0x102FC	0x7C40 ;_NewFont5x7+276
0x102FE	0x3F40 ;_NewFont5x7+278
0x10300	0x1463 ;_NewFont5x7+280
0x10302	0x1408 ;_NewFont5x7+282
0x10304	0x0363 ;_NewFont5x7+284
0x10306	0x7804 ;_NewFont5x7+286
0x10308	0x0304 ;_NewFont5x7+288
0x1030A	0x5161 ;_NewFont5x7+290
0x1030C	0x4549 ;_NewFont5x7+292
0x1030E	0x7F43 ;_NewFont5x7+294
0x10310	0x4141 ;_NewFont5x7+296
0x10312	0x0000 ;_NewFont5x7+298
0x10314	0x0402 ;_NewFont5x7+300
0x10316	0x1008 ;_NewFont5x7+302
0x10318	0x0020 ;_NewFont5x7+304
0x1031A	0x4100 ;_NewFont5x7+306
0x1031C	0x7F41 ;_NewFont5x7+308
0x1031E	0x0502 ;_NewFont5x7+310
0x10320	0x4832 ;_NewFont5x7+312
0x10322	0x4048 ;_NewFont5x7+314
0x10324	0x4040 ;_NewFont5x7+316
0x10326	0x4040 ;_NewFont5x7+318
0x10328	0x0000 ;_NewFont5x7+320
0x1032A	0x0201 ;_NewFont5x7+322
0x1032C	0x2000 ;_NewFont5x7+324
0x1032E	0x5454 ;_NewFont5x7+326
0x10330	0x7854 ;_NewFont5x7+328
0x10332	0x487F ;_NewFont5x7+330
0x10334	0x4444 ;_NewFont5x7+332
0x10336	0x3838 ;_NewFont5x7+334
0x10338	0x4444 ;_NewFont5x7+336
0x1033A	0x2844 ;_NewFont5x7+338
0x1033C	0x4438 ;_NewFont5x7+340
0x1033E	0x4844 ;_NewFont5x7+342
0x10340	0x387F ;_NewFont5x7+344
0x10342	0x5454 ;_NewFont5x7+346
0x10344	0x1854 ;_NewFont5x7+348
0x10346	0x7E08 ;_NewFont5x7+350
0x10348	0x0109 ;_NewFont5x7+352
0x1034A	0x0C02 ;_NewFont5x7+354
0x1034C	0x5252 ;_NewFont5x7+356
0x1034E	0x3C52 ;_NewFont5x7+358
0x10350	0x087F ;_NewFont5x7+360
0x10352	0x0808 ;_NewFont5x7+362
0x10354	0x0070 ;_NewFont5x7+364
0x10356	0x7A48 ;_NewFont5x7+366
0x10358	0x0040 ;_NewFont5x7+368
0x1035A	0x4020 ;_NewFont5x7+370
0x1035C	0x3D44 ;_NewFont5x7+372
0x1035E	0x7F00 ;_NewFont5x7+374
0x10360	0x2810 ;_NewFont5x7+376
0x10362	0x0044 ;_NewFont5x7+378
0x10364	0x4100 ;_NewFont5x7+380
0x10366	0x407F ;_NewFont5x7+382
0x10368	0x7C00 ;_NewFont5x7+384
0x1036A	0x1804 ;_NewFont5x7+386
0x1036C	0x7804 ;_NewFont5x7+388
0x1036E	0x087C ;_NewFont5x7+390
0x10370	0x0404 ;_NewFont5x7+392
0x10372	0x3878 ;_NewFont5x7+394
0x10374	0x4444 ;_NewFont5x7+396
0x10376	0x3844 ;_NewFont5x7+398
0x10378	0x127E ;_NewFont5x7+400
0x1037A	0x1212 ;_NewFont5x7+402
0x1037C	0x0C0C ;_NewFont5x7+404
0x1037E	0x1212 ;_NewFont5x7+406
0x10380	0x7E12 ;_NewFont5x7+408
0x10382	0x087C ;_NewFont5x7+410
0x10384	0x0404 ;_NewFont5x7+412
0x10386	0x4808 ;_NewFont5x7+414
0x10388	0x5454 ;_NewFont5x7+416
0x1038A	0x2454 ;_NewFont5x7+418
0x1038C	0x3F04 ;_NewFont5x7+420
0x1038E	0x4044 ;_NewFont5x7+422
0x10390	0x3C20 ;_NewFont5x7+424
0x10392	0x4040 ;_NewFont5x7+426
0x10394	0x3C40 ;_NewFont5x7+428
0x10396	0x201C ;_NewFont5x7+430
0x10398	0x2040 ;_NewFont5x7+432
0x1039A	0x3C1C ;_NewFont5x7+434
0x1039C	0x3040 ;_NewFont5x7+436
0x1039E	0x3C40 ;_NewFont5x7+438
0x103A0	0x2844 ;_NewFont5x7+440
0x103A2	0x2810 ;_NewFont5x7+442
0x103A4	0x0044 ;_NewFont5x7+444
0x103A6	0x500C ;_NewFont5x7+446
0x103A8	0x3C50 ;_NewFont5x7+448
0x103AA	0x6444 ;_NewFont5x7+450
0x103AC	0x4C54 ;_NewFont5x7+452
0x103AE	0x0844 ;_NewFont5x7+454
0x103B0	0x4136 ;_NewFont5x7+456
0x103B2	0x0000 ;_NewFont5x7+458
0x103B4	0x0000 ;_NewFont5x7+460
0x103B6	0x007F ;_NewFont5x7+462
0x103B8	0x0000 ;_NewFont5x7+464
0x103BA	0x4100 ;_NewFont5x7+466
0x103BC	0x0836 ;_NewFont5x7+468
0x103BE	0x0408 ;_NewFont5x7+470
0x103C0	0x0408 ;_NewFont5x7+472
0x103C2	0x0008 ;_NewFont5x7+474
0x103C4	0x223E ;_NewFont5x7+476
0x103C6	0x003E ;_NewFont5x7+478
0x103C8	0x3E14 ;_NewFont5x7+480
0x103CA	0x4155 ;_NewFont5x7+482
0x103CC	0x0000 ;_NewFont5x7+484
0x103CE	0x0000 ;_NewFont5x7+486
0x103D0	0x0000 ;_NewFont5x7+488
0x103D2	0x4000 ;_NewFont5x7+490
0x103D4	0x0020 ;_NewFont5x7+492
0x103D6	0x4000 ;_NewFont5x7+494
0x103D8	0x3E48 ;_NewFont5x7+496
0x103DA	0x0109 ;_NewFont5x7+498
0x103DC	0x0304 ;_NewFont5x7+500
0x103DE	0x0304 ;_NewFont5x7+502
0x103E0	0x4000 ;_NewFont5x7+504
0x103E2	0x4000 ;_NewFont5x7+506
0x103E4	0x4000 ;_NewFont5x7+508
0x103E6	0x0200 ;_NewFont5x7+510
0x103E8	0x027F ;_NewFont5x7+512
0x103EA	0x0000 ;_NewFont5x7+514
0x103EC	0x7F22 ;_NewFont5x7+516
0x103EE	0x0022 ;_NewFont5x7+518
0x103F0	0x0204 ;_NewFont5x7+520
0x103F2	0x0201 ;_NewFont5x7+522
0x103F4	0x2304 ;_NewFont5x7+524
0x103F6	0x6813 ;_NewFont5x7+526
0x103F8	0x6204 ;_NewFont5x7+528
0x103FA	0x0000 ;_NewFont5x7+530
0x103FC	0x0000 ;_NewFont5x7+532
0x103FE	0x0000 ;_NewFont5x7+534
0x10400	0x0000 ;_NewFont5x7+536
0x10402	0x0000 ;_NewFont5x7+538
0x10404	0x0000 ;_NewFont5x7+540
0x10406	0x0000 ;_NewFont5x7+542
0x10408	0x0000 ;_NewFont5x7+544
0x1040A	0x0000 ;_NewFont5x7+546
0x1040C	0x0000 ;_NewFont5x7+548
0x1040E	0x0000 ;_NewFont5x7+550
0x10410	0x0000 ;_NewFont5x7+552
0x10412	0x0000 ;_NewFont5x7+554
0x10414	0x0000 ;_NewFont5x7+556
0x10416	0x0000 ;_NewFont5x7+558
0x10418	0x0000 ;_NewFont5x7+560
0x1041A	0x0000 ;_NewFont5x7+562
0x1041C	0x0000 ;_NewFont5x7+564
0x1041E	0x0000 ;_NewFont5x7+566
0x10420	0x0000 ;_NewFont5x7+568
0x10422	0x0000 ;_NewFont5x7+570
0x10424	0x0000 ;_NewFont5x7+572
0x10426	0x0000 ;_NewFont5x7+574
0x10428	0x0000 ;_NewFont5x7+576
0x1042A	0x0000 ;_NewFont5x7+578
0x1042C	0x0000 ;_NewFont5x7+580
0x1042E	0x0000 ;_NewFont5x7+582
0x10430	0x1C00 ;_NewFont5x7+584
0x10432	0x3E3E ;_NewFont5x7+586
0x10434	0x1C3E ;_NewFont5x7+588
0x10436	0x1010 ;_NewFont5x7+590
0x10438	0x1010 ;_NewFont5x7+592
0x1043A	0x4010 ;_NewFont5x7+594
0x1043C	0x4040 ;_NewFont5x7+596
0x1043E	0x4040 ;_NewFont5x7+598
0x10440	0x0000 ;_NewFont5x7+600
0x10442	0x0000 ;_NewFont5x7+602
0x10444	0x0000 ;_NewFont5x7+604
0x10446	0x0000 ;_NewFont5x7+606
0x10448	0x0000 ;_NewFont5x7+608
0x1044A	0x0000 ;_NewFont5x7+610
0x1044C	0x0000 ;_NewFont5x7+612
0x1044E	0x0000 ;_NewFont5x7+614
0x10450	0x0000 ;_NewFont5x7+616
0x10452	0x0000 ;_NewFont5x7+618
0x10454	0x0000 ;_NewFont5x7+620
0x10456	0x0000 ;_NewFont5x7+622
0x10458	0x0000 ;_NewFont5x7+624
0x1045A	0x0000 ;_NewFont5x7+626
0x1045C	0x0000 ;_NewFont5x7+628
0x1045E	0x0000 ;_NewFont5x7+630
0x10460	0x0000 ;_NewFont5x7+632
0x10462	0x0000 ;_NewFont5x7+634
0x10464	0x0000 ;_NewFont5x7+636
0x10466	0x0000 ;_NewFont5x7+638
0x10468	0x0000 ;_NewFont5x7+640
0x1046A	0x0000 ;_NewFont5x7+642
0x1046C	0x0000 ;_NewFont5x7+644
0x1046E	0x7A48 ;_NewFont5x7+646
0x10470	0x0040 ;_NewFont5x7+648
0x10472	0x0000 ;_NewFont5x7+650
0x10474	0x0000 ;_NewFont5x7+652
0x10476	0x4800 ;_NewFont5x7+654
0x10478	0x293E ;_NewFont5x7+656
0x1047A	0x4241 ;_NewFont5x7+658
0x1047C	0x0000 ;_NewFont5x7+660
0x1047E	0x0000 ;_NewFont5x7+662
0x10480	0x0000 ;_NewFont5x7+664
0x10482	0x0000 ;_NewFont5x7+666
0x10484	0x0000 ;_NewFont5x7+668
0x10486	0x0000 ;_NewFont5x7+670
0x10488	0x0063 ;_NewFont5x7+672
0x1048A	0x0000 ;_NewFont5x7+674
0x1048C	0x0000 ;_NewFont5x7+676
0x1048E	0x0000 ;_NewFont5x7+678
0x10490	0x0000 ;_NewFont5x7+680
0x10492	0x0000 ;_NewFont5x7+682
0x10494	0x0000 ;_NewFont5x7+684
0x10496	0x0000 ;_NewFont5x7+686
0x10498	0x0000 ;_NewFont5x7+688
0x1049A	0x0000 ;_NewFont5x7+690
0x1049C	0x0000 ;_NewFont5x7+692
0x1049E	0x0000 ;_NewFont5x7+694
0x104A0	0x0000 ;_NewFont5x7+696
0x104A2	0x0000 ;_NewFont5x7+698
0x104A4	0x0000 ;_NewFont5x7+700
0x104A6	0x0000 ;_NewFont5x7+702
0x104A8	0x0000 ;_NewFont5x7+704
0x104AA	0x0000 ;_NewFont5x7+706
0x104AC	0x0000 ;_NewFont5x7+708
0x104AE	0x0000 ;_NewFont5x7+710
0x104B0	0x0000 ;_NewFont5x7+712
0x104B2	0x0000 ;_NewFont5x7+714
0x104B4	0x0000 ;_NewFont5x7+716
0x104B6	0x0000 ;_NewFont5x7+718
0x104B8	0x0906 ;_NewFont5x7+720
0x104BA	0x0909 ;_NewFont5x7+722
0x104BC	0x4406 ;_NewFont5x7+724
0x104BE	0x5F44 ;_NewFont5x7+726
0x104C0	0x4444 ;_NewFont5x7+728
0x104C2	0x0000 ;_NewFont5x7+730
0x104C4	0x0000 ;_NewFont5x7+732
0x104C6	0x0000 ;_NewFont5x7+734
0x104C8	0x0000 ;_NewFont5x7+736
0x104CA	0x0000 ;_NewFont5x7+738
0x104CC	0x0000 ;_NewFont5x7+740
0x104CE	0x0000 ;_NewFont5x7+742
0x104D0	0x7E00 ;_NewFont5x7+744
0x104D2	0x1804 ;_NewFont5x7+746
0x104D4	0x7E0C ;_NewFont5x7+748
0x104D6	0x0000 ;_NewFont5x7+750
0x104D8	0x0000 ;_NewFont5x7+752
0x104DA	0x0000 ;_NewFont5x7+754
0x104DC	0x0000 ;_NewFont5x7+756
0x104DE	0x0000 ;_NewFont5x7+758
0x104E0	0x0000 ;_NewFont5x7+760
0x104E2	0x0000 ;_NewFont5x7+762
0x104E4	0x0000 ;_NewFont5x7+764
0x104E6	0x0000 ;_NewFont5x7+766
0x104E8	0x0000 ;_NewFont5x7+768
0x104EA	0x0000 ;_NewFont5x7+770
0x104EC	0x0000 ;_NewFont5x7+772
0x104EE	0x0000 ;_NewFont5x7+774
0x104F0	0x0000 ;_NewFont5x7+776
0x104F2	0x0000 ;_NewFont5x7+778
0x104F4	0x0000 ;_NewFont5x7+780
0x104F6	0x0000 ;_NewFont5x7+782
0x104F8	0x0000 ;_NewFont5x7+784
0x104FA	0x0000 ;_NewFont5x7+786
0x104FC	0x0000 ;_NewFont5x7+788
0x104FE	0x0000 ;_NewFont5x7+790
0x10500	0x0000 ;_NewFont5x7+792
0x10502	0x0000 ;_NewFont5x7+794
0x10504	0x0000 ;_NewFont5x7+796
0x10506	0x0000 ;_NewFont5x7+798
0x10508	0x0000 ;_NewFont5x7+800
0x1050A	0x0000 ;_NewFont5x7+802
0x1050C	0x0000 ;_NewFont5x7+804
0x1050E	0x0000 ;_NewFont5x7+806
0x10510	0x0000 ;_NewFont5x7+808
0x10512	0x0000 ;_NewFont5x7+810
0x10514	0x0000 ;_NewFont5x7+812
0x10516	0x0000 ;_NewFont5x7+814
0x10518	0x0000 ;_NewFont5x7+816
0x1051A	0x0000 ;_NewFont5x7+818
0x1051C	0x0000 ;_NewFont5x7+820
0x1051E	0x0000 ;_NewFont5x7+822
0x10520	0x0000 ;_NewFont5x7+824
0x10522	0x0000 ;_NewFont5x7+826
0x10524	0x0000 ;_NewFont5x7+828
0x10526	0x0000 ;_NewFont5x7+830
0x10528	0x0000 ;_NewFont5x7+832
0x1052A	0x1E00 ;_NewFont5x7+834
0x1052C	0x6121 ;_NewFont5x7+836
0x1052E	0x1221 ;_NewFont5x7+838
0x10530	0x0000 ;_NewFont5x7+840
0x10532	0x0000 ;_NewFont5x7+842
0x10534	0x0000 ;_NewFont5x7+844
0x10536	0x0000 ;_NewFont5x7+846
0x10538	0x0000 ;_NewFont5x7+848
0x1053A	0x0000 ;_NewFont5x7+850
0x1053C	0x0000 ;_NewFont5x7+852
0x1053E	0x0000 ;_NewFont5x7+854
0x10540	0x0000 ;_NewFont5x7+856
0x10542	0x0000 ;_NewFont5x7+858
0x10544	0x0000 ;_NewFont5x7+860
0x10546	0x0000 ;_NewFont5x7+862
0x10548	0x0000 ;_NewFont5x7+864
0x1054A	0x0000 ;_NewFont5x7+866
0x1054C	0x0000 ;_NewFont5x7+868
0x1054E	0x0000 ;_NewFont5x7+870
0x10550	0x0000 ;_NewFont5x7+872
0x10552	0x0000 ;_NewFont5x7+874
0x10554	0x0000 ;_NewFont5x7+876
0x10556	0x0000 ;_NewFont5x7+878
0x10558	0x4538 ;_NewFont5x7+880
0x1055A	0x5555 ;_NewFont5x7+882
0x1055C	0x0030 ;_NewFont5x7+884
0x1055E	0x0000 ;_NewFont5x7+886
0x10560	0x0000 ;_NewFont5x7+888
0x10562	0x0000 ;_NewFont5x7+890
0x10564	0x0000 ;_NewFont5x7+892
0x10566	0x0000 ;_NewFont5x7+894
0x10568	0x0000 ;_NewFont5x7+896
0x1056A	0x0000 ;_NewFont5x7+898
0x1056C	0x0000 ;_NewFont5x7+900
0x1056E	0x0000 ;_NewFont5x7+902
0x10570	0x0000 ;_NewFont5x7+904
0x10572	0x0000 ;_NewFont5x7+906
0x10574	0x0000 ;_NewFont5x7+908
0x10576	0x4538 ;_NewFont5x7+910
0x10578	0x4544 ;_NewFont5x7+912
0x1057A	0x0038 ;_NewFont5x7+914
0x1057C	0x0000 ;_NewFont5x7+916
0x1057E	0x0000 ;_NewFont5x7+918
0x10580	0x0000 ;_NewFont5x7+920
0x10582	0x0000 ;_NewFont5x7+922
0x10584	0x0000 ;_NewFont5x7+924
0x10586	0x0000 ;_NewFont5x7+926
0x10588	0x0000 ;_NewFont5x7+928
0x1058A	0x0000 ;_NewFont5x7+930
0x1058C	0x0000 ;_NewFont5x7+932
0x1058E	0x0000 ;_NewFont5x7+934
0x10590	0x0000 ;_NewFont5x7+936
0x10592	0x0000 ;_NewFont5x7+938
0x10594	0x413C ;_NewFont5x7+940
0x10596	0x4140 ;_NewFont5x7+942
0x10598	0x003C ;_NewFont5x7+944
0x1059A	0x7D44 ;_NewFont5x7+946
0x1059C	0x0040 ;_NewFont5x7+948
0x1059E	0x4946 ;_NewFont5x7+950
0x105A0	0x4969 ;_NewFont5x7+952
0x105A2	0x0031 ;_NewFont5x7+954
0x105A4	0x0000 ;_NewFont5x7+956
0x105A6	0x0000 ;_NewFont5x7+958
0x105A8	0x0000 ;_NewFont5x7+960
0x105AA	0x0000 ;_NewFont5x7+962
0x105AC	0x0000 ;_NewFont5x7+964
0x105AE	0x0000 ;_NewFont5x7+966
0x105B0	0x0000 ;_NewFont5x7+968
0x105B2	0x0000 ;_NewFont5x7+970
0x105B4	0x0000 ;_NewFont5x7+972
0x105B6	0x0000 ;_NewFont5x7+974
0x105B8	0x0000 ;_NewFont5x7+976
0x105BA	0x0000 ;_NewFont5x7+978
0x105BC	0x0000 ;_NewFont5x7+980
0x105BE	0x0000 ;_NewFont5x7+982
0x105C0	0x0000 ;_NewFont5x7+984
0x105C2	0x0000 ;_NewFont5x7+986
0x105C4	0x0000 ;_NewFont5x7+988
0x105C6	0x0000 ;_NewFont5x7+990
0x105C8	0x0000 ;_NewFont5x7+992
0x105CA	0x1C00 ;_NewFont5x7+994
0x105CC	0x6222 ;_NewFont5x7+996
0x105CE	0x0022 ;_NewFont5x7+998
0x105D0	0x0000 ;_NewFont5x7+1000
0x105D2	0x0000 ;_NewFont5x7+1002
0x105D4	0x0000 ;_NewFont5x7+1004
0x105D6	0x0000 ;_NewFont5x7+1006
0x105D8	0x0000 ;_NewFont5x7+1008
0x105DA	0x0000 ;_NewFont5x7+1010
0x105DC	0x0000 ;_NewFont5x7+1012
0x105DE	0x0000 ;_NewFont5x7+1014
0x105E0	0x0000 ;_NewFont5x7+1016
0x105E2	0x0000 ;_NewFont5x7+1018
0x105E4	0x0000 ;_NewFont5x7+1020
0x105E6	0x0000 ;_NewFont5x7+1022
0x105E8	0x0000 ;_NewFont5x7+1024
0x105EA	0x0000 ;_NewFont5x7+1026
0x105EC	0x0000 ;_NewFont5x7+1028
0x105EE	0x0000 ;_NewFont5x7+1030
0x105F0	0x0000 ;_NewFont5x7+1032
0x105F2	0x0000 ;_NewFont5x7+1034
0x105F4	0x0000 ;_NewFont5x7+1036
0x105F6	0x0000 ;_NewFont5x7+1038
0x105F8	0x0000 ;_NewFont5x7+1040
0x105FA	0x0000 ;_NewFont5x7+1042
0x105FC	0x0000 ;_NewFont5x7+1044
0x105FE	0x0000 ;_NewFont5x7+1046
0x10600	0x0000 ;_NewFont5x7+1048
0x10602	0x0000 ;_NewFont5x7+1050
0x10604	0x0000 ;_NewFont5x7+1052
0x10606	0x0000 ;_NewFont5x7+1054
0x10608	0x0000 ;_NewFont5x7+1056
0x1060A	0x0000 ;_NewFont5x7+1058
0x1060C	0x0000 ;_NewFont5x7+1060
0x1060E	0x0000 ;_NewFont5x7+1062
0x10610	0x0000 ;_NewFont5x7+1064
0x10612	0x0000 ;_NewFont5x7+1066
0x10614	0x0000 ;_NewFont5x7+1068
0x10616	0x4A30 ;_NewFont5x7+1070
0x10618	0x4A48 ;_NewFont5x7+1072
0x1061A	0x0030 ;_NewFont5x7+1074
0x1061C	0x0000 ;_NewFont5x7+1076
0x1061E	0x0000 ;_NewFont5x7+1078
0x10620	0x0000 ;_NewFont5x7+1080
0x10622	0x0000 ;_NewFont5x7+1082
0x10624	0x0000 ;_NewFont5x7+1084
0x10626	0x0000 ;_NewFont5x7+1086
0x10628	0x0000 ;_NewFont5x7+1088
0x1062A	0x0000 ;_NewFont5x7+1090
0x1062C	0x0000 ;_NewFont5x7+1092
0x1062E	0x0000 ;_NewFont5x7+1094
0x10630	0x0000 ;_NewFont5x7+1096
0x10632	0x0000 ;_NewFont5x7+1098
0x10634	0x4238 ;_NewFont5x7+1100
0x10636	0x4240 ;_NewFont5x7+1102
0x10638	0x0038 ;_NewFont5x7+1104
0x1063A	0x7C44 ;_NewFont5x7+1106
0x1063C	0x0040 ;_NewFont5x7+1108
0x1063E	0x2A24 ;_NewFont5x7+1110
0x10640	0x2A6A ;_NewFont5x7+1112
0x10642	0x0012 ;_NewFont5x7+1114
0x10644	0x0000 ;_NewFont5x7+1116
0x10646	0x0000 ;_NewFont5x7+1118
; end of _NewFont5x7
;GRR3000LFonts.mpas,968 :: _notauthority [1024]
0x10648	0x0703 ;_notauthority+0
0x1064A	0x0F07 ;_notauthority+2
0x1064C	0x1E0E ;_notauthority+4
0x1064E	0x3C1C ;_notauthority+6
0x10650	0x7838 ;_notauthority+8
0x10652	0xF070 ;_notauthority+10
0x10654	0xE0E0 ;_notauthority+12
0x10656	0xC0C0 ;_notauthority+14
0x10658	0x8080 ;_notauthority+16
0x1065A	0x0000 ;_notauthority+18
0x1065C	0x0000 ;_notauthority+20
0x1065E	0x0000 ;_notauthority+22
0x10660	0x0000 ;_notauthority+24
0x10662	0x0000 ;_notauthority+26
0x10664	0x0000 ;_notauthority+28
0x10666	0x0000 ;_notauthority+30
0x10668	0x0000 ;_notauthority+32
0x1066A	0x0000 ;_notauthority+34
0x1066C	0x0000 ;_notauthority+36
0x1066E	0x0000 ;_notauthority+38
0x10670	0x0000 ;_notauthority+40
0x10672	0x0000 ;_notauthority+42
0x10674	0x0000 ;_notauthority+44
0x10676	0x0000 ;_notauthority+46
0x10678	0x0000 ;_notauthority+48
0x1067A	0x0000 ;_notauthority+50
0x1067C	0x0000 ;_notauthority+52
0x1067E	0x0000 ;_notauthority+54
0x10680	0x0000 ;_notauthority+56
0x10682	0x0000 ;_notauthority+58
0x10684	0x0000 ;_notauthority+60
0x10686	0x0000 ;_notauthority+62
0x10688	0x0000 ;_notauthority+64
0x1068A	0x0000 ;_notauthority+66
0x1068C	0x0000 ;_notauthority+68
0x1068E	0x0000 ;_notauthority+70
0x10690	0x0000 ;_notauthority+72
0x10692	0x0000 ;_notauthority+74
0x10694	0x0000 ;_notauthority+76
0x10696	0x0000 ;_notauthority+78
0x10698	0x0000 ;_notauthority+80
0x1069A	0x0000 ;_notauthority+82
0x1069C	0x0000 ;_notauthority+84
0x1069E	0x0000 ;_notauthority+86
0x106A0	0x0000 ;_notauthority+88
0x106A2	0x0000 ;_notauthority+90
0x106A4	0x0000 ;_notauthority+92
0x106A6	0x0000 ;_notauthority+94
0x106A8	0x0000 ;_notauthority+96
0x106AA	0x0000 ;_notauthority+98
0x106AC	0x0000 ;_notauthority+100
0x106AE	0x0000 ;_notauthority+102
0x106B0	0x0000 ;_notauthority+104
0x106B2	0x0000 ;_notauthority+106
0x106B4	0x0000 ;_notauthority+108
0x106B6	0x8080 ;_notauthority+110
0x106B8	0xC0C0 ;_notauthority+112
0x106BA	0xE0E0 ;_notauthority+114
0x106BC	0x70F0 ;_notauthority+116
0x106BE	0x3878 ;_notauthority+118
0x106C0	0x1C3C ;_notauthority+120
0x106C2	0x0E1E ;_notauthority+122
0x106C4	0x070F ;_notauthority+124
0x106C6	0x0307 ;_notauthority+126
0x106C8	0x0000 ;_notauthority+128
0x106CA	0x0000 ;_notauthority+130
0x106CC	0x0000 ;_notauthority+132
0x106CE	0x0000 ;_notauthority+134
0x106D0	0x0000 ;_notauthority+136
0x106D2	0x0000 ;_notauthority+138
0x106D4	0x0100 ;_notauthority+140
0x106D6	0x0301 ;_notauthority+142
0x106D8	0x0703 ;_notauthority+144
0x106DA	0x0F07 ;_notauthority+146
0x106DC	0x1E0E ;_notauthority+148
0x106DE	0x3C1C ;_notauthority+150
0x106E0	0x7838 ;_notauthority+152
0x106E2	0xF070 ;_notauthority+154
0x106E4	0xE0E0 ;_notauthority+156
0x106E6	0xC0C0 ;_notauthority+158
0x106E8	0x8080 ;_notauthority+160
0x106EA	0x0000 ;_notauthority+162
0x106EC	0x0000 ;_notauthority+164
0x106EE	0x0000 ;_notauthority+166
0x106F0	0x0000 ;_notauthority+168
0x106F2	0x0000 ;_notauthority+170
0x106F4	0x0000 ;_notauthority+172
0x106F6	0x0000 ;_notauthority+174
0x106F8	0x0000 ;_notauthority+176
0x106FA	0x0000 ;_notauthority+178
0x106FC	0x0000 ;_notauthority+180
0x106FE	0x0000 ;_notauthority+182
0x10700	0x0000 ;_notauthority+184
0x10702	0x0000 ;_notauthority+186
0x10704	0x0000 ;_notauthority+188
0x10706	0x0000 ;_notauthority+190
0x10708	0x0000 ;_notauthority+192
0x1070A	0x0000 ;_notauthority+194
0x1070C	0x0000 ;_notauthority+196
0x1070E	0x0000 ;_notauthority+198
0x10710	0x0000 ;_notauthority+200
0x10712	0x0000 ;_notauthority+202
0x10714	0x0000 ;_notauthority+204
0x10716	0x0000 ;_notauthority+206
0x10718	0x0000 ;_notauthority+208
0x1071A	0x0000 ;_notauthority+210
0x1071C	0x0000 ;_notauthority+212
0x1071E	0x0000 ;_notauthority+214
0x10720	0x0000 ;_notauthority+216
0x10722	0x0000 ;_notauthority+218
0x10724	0x0000 ;_notauthority+220
0x10726	0x8080 ;_notauthority+222
0x10728	0xC0C0 ;_notauthority+224
0x1072A	0xE0E0 ;_notauthority+226
0x1072C	0x70F0 ;_notauthority+228
0x1072E	0x3878 ;_notauthority+230
0x10730	0x1C3C ;_notauthority+232
0x10732	0x0E1E ;_notauthority+234
0x10734	0x070F ;_notauthority+236
0x10736	0x0307 ;_notauthority+238
0x10738	0x0103 ;_notauthority+240
0x1073A	0x0001 ;_notauthority+242
0x1073C	0x0000 ;_notauthority+244
0x1073E	0x0000 ;_notauthority+246
0x10740	0x0000 ;_notauthority+248
0x10742	0x0000 ;_notauthority+250
0x10744	0x0000 ;_notauthority+252
0x10746	0x0000 ;_notauthority+254
0x10748	0x0000 ;_notauthority+256
0x1074A	0x0000 ;_notauthority+258
0x1074C	0x0000 ;_notauthority+260
0x1074E	0x0000 ;_notauthority+262
0x10750	0x0000 ;_notauthority+264
0x10752	0x0000 ;_notauthority+266
0x10754	0x0000 ;_notauthority+268
0x10756	0x0000 ;_notauthority+270
0x10758	0x0000 ;_notauthority+272
0x1075A	0x0000 ;_notauthority+274
0x1075C	0x0000 ;_notauthority+276
0x1075E	0x0000 ;_notauthority+278
0x10760	0x0000 ;_notauthority+280
0x10762	0x0000 ;_notauthority+282
0x10764	0x0100 ;_notauthority+284
0x10766	0x0301 ;_notauthority+286
0x10768	0x0703 ;_notauthority+288
0x1076A	0x0F07 ;_notauthority+290
0x1076C	0x1E0E ;_notauthority+292
0x1076E	0x3C1C ;_notauthority+294
0x10770	0x7838 ;_notauthority+296
0x10772	0xF070 ;_notauthority+298
0x10774	0xE0E0 ;_notauthority+300
0x10776	0xC0C0 ;_notauthority+302
0x10778	0x8080 ;_notauthority+304
0x1077A	0x0000 ;_notauthority+306
0x1077C	0x0000 ;_notauthority+308
0x1077E	0x0000 ;_notauthority+310
0x10780	0xC080 ;_notauthority+312
0x10782	0xF0E0 ;_notauthority+314
0x10784	0xF8F8 ;_notauthority+316
0x10786	0x7878 ;_notauthority+318
0x10788	0xF878 ;_notauthority+320
0x1078A	0xF0F8 ;_notauthority+322
0x1078C	0xC0E0 ;_notauthority+324
0x1078E	0x0080 ;_notauthority+326
0x10790	0x0000 ;_notauthority+328
0x10792	0x0000 ;_notauthority+330
0x10794	0x0000 ;_notauthority+332
0x10796	0x8080 ;_notauthority+334
0x10798	0xC0C0 ;_notauthority+336
0x1079A	0xE0E0 ;_notauthority+338
0x1079C	0x7070 ;_notauthority+340
0x1079E	0x3838 ;_notauthority+342
0x107A0	0x1C1C ;_notauthority+344
0x107A2	0x0E0E ;_notauthority+346
0x107A4	0x0707 ;_notauthority+348
0x107A6	0x0303 ;_notauthority+350
0x107A8	0x0101 ;_notauthority+352
0x107AA	0x0001 ;_notauthority+354
0x107AC	0x0000 ;_notauthority+356
0x107AE	0x0000 ;_notauthority+358
0x107B0	0x0000 ;_notauthority+360
0x107B2	0x0000 ;_notauthority+362
0x107B4	0x0000 ;_notauthority+364
0x107B6	0x0000 ;_notauthority+366
0x107B8	0x0000 ;_notauthority+368
0x107BA	0x0000 ;_notauthority+370
0x107BC	0x0000 ;_notauthority+372
0x107BE	0x0000 ;_notauthority+374
0x107C0	0x0000 ;_notauthority+376
0x107C2	0x0000 ;_notauthority+378
0x107C4	0x0000 ;_notauthority+380
0x107C6	0x0000 ;_notauthority+382
0x107C8	0x0000 ;_notauthority+384
0x107CA	0x0000 ;_notauthority+386
0x107CC	0x0000 ;_notauthority+388
0x107CE	0x0000 ;_notauthority+390
0x107D0	0x0000 ;_notauthority+392
0x107D2	0x0000 ;_notauthority+394
0x107D4	0x0000 ;_notauthority+396
0x107D6	0x0000 ;_notauthority+398
0x107D8	0x0000 ;_notauthority+400
0x107DA	0x0000 ;_notauthority+402
0x107DC	0x0000 ;_notauthority+404
0x107DE	0x0000 ;_notauthority+406
0x107E0	0x0000 ;_notauthority+408
0x107E2	0x0000 ;_notauthority+410
0x107E4	0x0000 ;_notauthority+412
0x107E6	0x0000 ;_notauthority+414
0x107E8	0x0000 ;_notauthority+416
0x107EA	0x0000 ;_notauthority+418
0x107EC	0x0000 ;_notauthority+420
0x107EE	0x0000 ;_notauthority+422
0x107F0	0x0000 ;_notauthority+424
0x107F2	0x0000 ;_notauthority+426
0x107F4	0x0100 ;_notauthority+428
0x107F6	0x0301 ;_notauthority+430
0x107F8	0x0703 ;_notauthority+432
0x107FA	0x0F07 ;_notauthority+434
0x107FC	0x9E0E ;_notauthority+436
0x107FE	0xD8DC ;_notauthority+438
0x10800	0xDFDF ;_notauthority+440
0x10802	0xDFDF ;_notauthority+442
0x10804	0xC0C1 ;_notauthority+444
0x10806	0xC0C0 ;_notauthority+446
0x10808	0xC0C0 ;_notauthority+448
0x1080A	0xDFC1 ;_notauthority+450
0x1080C	0xDFDF ;_notauthority+452
0x1080E	0xD0DF ;_notauthority+454
0x10810	0xBCF8 ;_notauthority+456
0x10812	0x1E1C ;_notauthority+458
0x10814	0x0F0E ;_notauthority+460
0x10816	0x0707 ;_notauthority+462
0x10818	0x0101 ;_notauthority+464
0x1081A	0x0000 ;_notauthority+466
0x1081C	0x0000 ;_notauthority+468
0x1081E	0x0000 ;_notauthority+470
0x10820	0x0000 ;_notauthority+472
0x10822	0x0000 ;_notauthority+474
0x10824	0x0000 ;_notauthority+476
0x10826	0x0000 ;_notauthority+478
0x10828	0x0000 ;_notauthority+480
0x1082A	0x0000 ;_notauthority+482
0x1082C	0x0000 ;_notauthority+484
0x1082E	0x0000 ;_notauthority+486
0x10830	0x0000 ;_notauthority+488
0x10832	0x0000 ;_notauthority+490
0x10834	0x0000 ;_notauthority+492
0x10836	0x0000 ;_notauthority+494
0x10838	0x0000 ;_notauthority+496
0x1083A	0x0000 ;_notauthority+498
0x1083C	0x0000 ;_notauthority+500
0x1083E	0x0000 ;_notauthority+502
0x10840	0x0000 ;_notauthority+504
0x10842	0x0000 ;_notauthority+506
0x10844	0x0000 ;_notauthority+508
0x10846	0x0000 ;_notauthority+510
0x10848	0x0000 ;_notauthority+512
0x1084A	0x0000 ;_notauthority+514
0x1084C	0x0000 ;_notauthority+516
0x1084E	0x0000 ;_notauthority+518
0x10850	0x0000 ;_notauthority+520
0x10852	0x0000 ;_notauthority+522
0x10854	0x0000 ;_notauthority+524
0x10856	0x0000 ;_notauthority+526
0x10858	0x0000 ;_notauthority+528
0x1085A	0x0000 ;_notauthority+530
0x1085C	0x0000 ;_notauthority+532
0x1085E	0x0000 ;_notauthority+534
0x10860	0x0000 ;_notauthority+536
0x10862	0x0000 ;_notauthority+538
0x10864	0x0000 ;_notauthority+540
0x10866	0x0000 ;_notauthority+542
0x10868	0x0000 ;_notauthority+544
0x1086A	0x0000 ;_notauthority+546
0x1086C	0x0000 ;_notauthority+548
0x1086E	0x0000 ;_notauthority+550
0x10870	0x0000 ;_notauthority+552
0x10872	0x0000 ;_notauthority+554
0x10874	0x8000 ;_notauthority+556
0x10876	0xC080 ;_notauthority+558
0x10878	0xE0C0 ;_notauthority+560
0x1087A	0x70F0 ;_notauthority+562
0x1087C	0xFF70 ;_notauthority+564
0x1087E	0xFFFF ;_notauthority+566
0x10880	0xFFFF ;_notauthority+568
0x10882	0xFFFF ;_notauthority+570
0x10884	0xFFFF ;_notauthority+572
0x10886	0x0163 ;_notauthority+574
0x10888	0xFF63 ;_notauthority+576
0x1088A	0xFFFF ;_notauthority+578
0x1088C	0xFFFF ;_notauthority+580
0x1088E	0xFFFF ;_notauthority+582
0x10890	0xFFFF ;_notauthority+584
0x10892	0x7838 ;_notauthority+586
0x10894	0xF070 ;_notauthority+588
0x10896	0xC0E0 ;_notauthority+590
0x10898	0x8080 ;_notauthority+592
0x1089A	0x0000 ;_notauthority+594
0x1089C	0x0000 ;_notauthority+596
0x1089E	0x0000 ;_notauthority+598
0x108A0	0x0000 ;_notauthority+600
0x108A2	0x0000 ;_notauthority+602
0x108A4	0x0000 ;_notauthority+604
0x108A6	0x0000 ;_notauthority+606
0x108A8	0x0000 ;_notauthority+608
0x108AA	0x0000 ;_notauthority+610
0x108AC	0x0000 ;_notauthority+612
0x108AE	0x0000 ;_notauthority+614
0x108B0	0x0000 ;_notauthority+616
0x108B2	0x0000 ;_notauthority+618
0x108B4	0x0000 ;_notauthority+620
0x108B6	0x0000 ;_notauthority+622
0x108B8	0x0000 ;_notauthority+624
0x108BA	0x0000 ;_notauthority+626
0x108BC	0x0000 ;_notauthority+628
0x108BE	0x0000 ;_notauthority+630
0x108C0	0x0000 ;_notauthority+632
0x108C2	0x0000 ;_notauthority+634
0x108C4	0x0000 ;_notauthority+636
0x108C6	0x0000 ;_notauthority+638
0x108C8	0x0000 ;_notauthority+640
0x108CA	0x0000 ;_notauthority+642
0x108CC	0x0000 ;_notauthority+644
0x108CE	0x0000 ;_notauthority+646
0x108D0	0x0000 ;_notauthority+648
0x108D2	0x0000 ;_notauthority+650
0x108D4	0x0000 ;_notauthority+652
0x108D6	0x0000 ;_notauthority+654
0x108D8	0x0000 ;_notauthority+656
0x108DA	0x0000 ;_notauthority+658
0x108DC	0x0000 ;_notauthority+660
0x108DE	0x0000 ;_notauthority+662
0x108E0	0x0000 ;_notauthority+664
0x108E2	0x0000 ;_notauthority+666
0x108E4	0x8000 ;_notauthority+668
0x108E6	0xC080 ;_notauthority+670
0x108E8	0xE0C0 ;_notauthority+672
0x108EA	0xF0E0 ;_notauthority+674
0x108EC	0x7870 ;_notauthority+676
0x108EE	0x3C38 ;_notauthority+678
0x108F0	0x1E1C ;_notauthority+680
0x108F2	0x0F0E ;_notauthority+682
0x108F4	0x0707 ;_notauthority+684
0x108F6	0x0303 ;_notauthority+686
0x108F8	0x0101 ;_notauthority+688
0x108FA	0x0000 ;_notauthority+690
0x108FC	0x0700 ;_notauthority+692
0x108FE	0x1F0F ;_notauthority+694
0x10900	0x1F1F ;_notauthority+696
0x10902	0x1F1F ;_notauthority+698
0x10904	0x1F1F ;_notauthority+700
0x10906	0x1E1E ;_notauthority+702
0x10908	0x1F1E ;_notauthority+704
0x1090A	0x1F1F ;_notauthority+706
0x1090C	0x1F1F ;_notauthority+708
0x1090E	0x1F1F ;_notauthority+710
0x10910	0x070F ;_notauthority+712
0x10912	0x0000 ;_notauthority+714
0x10914	0x0000 ;_notauthority+716
0x10916	0x0101 ;_notauthority+718
0x10918	0x0303 ;_notauthority+720
0x1091A	0x0707 ;_notauthority+722
0x1091C	0x0E0E ;_notauthority+724
0x1091E	0x1C1C ;_notauthority+726
0x10920	0x3838 ;_notauthority+728
0x10922	0x7070 ;_notauthority+730
0x10924	0xE0E0 ;_notauthority+732
0x10926	0xC0C0 ;_notauthority+734
0x10928	0x8080 ;_notauthority+736
0x1092A	0x0080 ;_notauthority+738
0x1092C	0x0000 ;_notauthority+740
0x1092E	0x0000 ;_notauthority+742
0x10930	0x0000 ;_notauthority+744
0x10932	0x0000 ;_notauthority+746
0x10934	0x0000 ;_notauthority+748
0x10936	0x0000 ;_notauthority+750
0x10938	0x0000 ;_notauthority+752
0x1093A	0x0000 ;_notauthority+754
0x1093C	0x0000 ;_notauthority+756
0x1093E	0x0000 ;_notauthority+758
0x10940	0x0000 ;_notauthority+760
0x10942	0x0000 ;_notauthority+762
0x10944	0x0000 ;_notauthority+764
0x10946	0x0000 ;_notauthority+766
0x10948	0x0000 ;_notauthority+768
0x1094A	0x0000 ;_notauthority+770
0x1094C	0x0000 ;_notauthority+772
0x1094E	0x0000 ;_notauthority+774
0x10950	0x0000 ;_notauthority+776
0x10952	0x0000 ;_notauthority+778
0x10954	0x8000 ;_notauthority+780
0x10956	0xC080 ;_notauthority+782
0x10958	0xE0C0 ;_notauthority+784
0x1095A	0x70E0 ;_notauthority+786
0x1095C	0x3870 ;_notauthority+788
0x1095E	0x1C38 ;_notauthority+790
0x10960	0x0E1C ;_notauthority+792
0x10962	0x070E ;_notauthority+794
0x10964	0x0307 ;_notauthority+796
0x10966	0x0303 ;_notauthority+798
0x10968	0x0101 ;_notauthority+800
0x1096A	0x0000 ;_notauthority+802
0x1096C	0x0000 ;_notauthority+804
0x1096E	0x0000 ;_notauthority+806
0x10970	0x0000 ;_notauthority+808
0x10972	0x0000 ;_notauthority+810
0x10974	0x0000 ;_notauthority+812
0x10976	0x0000 ;_notauthority+814
0x10978	0x0000 ;_notauthority+816
0x1097A	0x0000 ;_notauthority+818
0x1097C	0x0000 ;_notauthority+820
0x1097E	0x0000 ;_notauthority+822
0x10980	0x0000 ;_notauthority+824
0x10982	0x0000 ;_notauthority+826
0x10984	0x0000 ;_notauthority+828
0x10986	0x0000 ;_notauthority+830
0x10988	0x0000 ;_notauthority+832
0x1098A	0x0000 ;_notauthority+834
0x1098C	0x0000 ;_notauthority+836
0x1098E	0x0000 ;_notauthority+838
0x10990	0x0000 ;_notauthority+840
0x10992	0x0000 ;_notauthority+842
0x10994	0x0000 ;_notauthority+844
0x10996	0x0000 ;_notauthority+846
0x10998	0x0000 ;_notauthority+848
0x1099A	0x0000 ;_notauthority+850
0x1099C	0x0000 ;_notauthority+852
0x1099E	0x0000 ;_notauthority+854
0x109A0	0x0000 ;_notauthority+856
0x109A2	0x0000 ;_notauthority+858
0x109A4	0x0000 ;_notauthority+860
0x109A6	0x0101 ;_notauthority+862
0x109A8	0x0303 ;_notauthority+864
0x109AA	0x0707 ;_notauthority+866
0x109AC	0x0E0F ;_notauthority+868
0x109AE	0x1C1E ;_notauthority+870
0x109B0	0x383C ;_notauthority+872
0x109B2	0x7078 ;_notauthority+874
0x109B4	0xE0F0 ;_notauthority+876
0x109B6	0xC0E0 ;_notauthority+878
0x109B8	0x80C0 ;_notauthority+880
0x109BA	0x0080 ;_notauthority+882
0x109BC	0x0000 ;_notauthority+884
0x109BE	0x0000 ;_notauthority+886
0x109C0	0x0000 ;_notauthority+888
0x109C2	0x0000 ;_notauthority+890
0x109C4	0x0000 ;_notauthority+892
0x109C6	0x0000 ;_notauthority+894
0x109C8	0xE0E0 ;_notauthority+896
0x109CA	0x70F0 ;_notauthority+898
0x109CC	0x3878 ;_notauthority+900
0x109CE	0x1C3C ;_notauthority+902
0x109D0	0x0E1C ;_notauthority+904
0x109D2	0x070E ;_notauthority+906
0x109D4	0x0307 ;_notauthority+908
0x109D6	0x0103 ;_notauthority+910
0x109D8	0x0001 ;_notauthority+912
0x109DA	0x0000 ;_notauthority+914
0x109DC	0x0000 ;_notauthority+916
0x109DE	0x0000 ;_notauthority+918
0x109E0	0x0000 ;_notauthority+920
0x109E2	0x0000 ;_notauthority+922
0x109E4	0x0000 ;_notauthority+924
0x109E6	0x0000 ;_notauthority+926
0x109E8	0x0000 ;_notauthority+928
0x109EA	0x0000 ;_notauthority+930
0x109EC	0x0000 ;_notauthority+932
0x109EE	0x0000 ;_notauthority+934
0x109F0	0x0000 ;_notauthority+936
0x109F2	0x0000 ;_notauthority+938
0x109F4	0x0000 ;_notauthority+940
0x109F6	0x0000 ;_notauthority+942
0x109F8	0x0000 ;_notauthority+944
0x109FA	0x0000 ;_notauthority+946
0x109FC	0x0000 ;_notauthority+948
0x109FE	0x0000 ;_notauthority+950
0x10A00	0x0000 ;_notauthority+952
0x10A02	0x0000 ;_notauthority+954
0x10A04	0x0000 ;_notauthority+956
0x10A06	0x0000 ;_notauthority+958
0x10A08	0x0000 ;_notauthority+960
0x10A0A	0x0000 ;_notauthority+962
0x10A0C	0x0000 ;_notauthority+964
0x10A0E	0x0000 ;_notauthority+966
0x10A10	0x0000 ;_notauthority+968
0x10A12	0x0000 ;_notauthority+970
0x10A14	0x0000 ;_notauthority+972
0x10A16	0x0000 ;_notauthority+974
0x10A18	0x0000 ;_notauthority+976
0x10A1A	0x0000 ;_notauthority+978
0x10A1C	0x0000 ;_notauthority+980
0x10A1E	0x0000 ;_notauthority+982
0x10A20	0x0000 ;_notauthority+984
0x10A22	0x0000 ;_notauthority+986
0x10A24	0x0000 ;_notauthority+988
0x10A26	0x0000 ;_notauthority+990
0x10A28	0x0000 ;_notauthority+992
0x10A2A	0x0000 ;_notauthority+994
0x10A2C	0x0000 ;_notauthority+996
0x10A2E	0x0000 ;_notauthority+998
0x10A30	0x0000 ;_notauthority+1000
0x10A32	0x0000 ;_notauthority+1002
0x10A34	0x0000 ;_notauthority+1004
0x10A36	0x0101 ;_notauthority+1006
0x10A38	0x0303 ;_notauthority+1008
0x10A3A	0x0707 ;_notauthority+1010
0x10A3C	0x0E0F ;_notauthority+1012
0x10A3E	0x1C1E ;_notauthority+1014
0x10A40	0x383C ;_notauthority+1016
0x10A42	0x7078 ;_notauthority+1018
0x10A44	0xE0F0 ;_notauthority+1020
0x10A46	0xC0E0 ;_notauthority+1022
; end of _notauthority
;GRR3000LFonts.mpas,880 :: _PasswordEntryBos [690]
0x10A48	0x01FF ;_PasswordEntryBos+0
0x10A4A	0x0101 ;_PasswordEntryBos+2
0x10A4C	0x0101 ;_PasswordEntryBos+4
0x10A4E	0x0101 ;_PasswordEntryBos+6
0x10A50	0x0101 ;_PasswordEntryBos+8
0x10A52	0x0101 ;_PasswordEntryBos+10
0x10A54	0x0101 ;_PasswordEntryBos+12
0x10A56	0x0101 ;_PasswordEntryBos+14
0x10A58	0x0101 ;_PasswordEntryBos+16
0x10A5A	0x0101 ;_PasswordEntryBos+18
0x10A5C	0x0101 ;_PasswordEntryBos+20
0x10A5E	0x0101 ;_PasswordEntryBos+22
0x10A60	0x0101 ;_PasswordEntryBos+24
0x10A62	0x0101 ;_PasswordEntryBos+26
0x10A64	0x0101 ;_PasswordEntryBos+28
0x10A66	0x0101 ;_PasswordEntryBos+30
0x10A68	0x0101 ;_PasswordEntryBos+32
0x10A6A	0x0101 ;_PasswordEntryBos+34
0x10A6C	0x0101 ;_PasswordEntryBos+36
0x10A6E	0x0101 ;_PasswordEntryBos+38
0x10A70	0x0101 ;_PasswordEntryBos+40
0x10A72	0x0101 ;_PasswordEntryBos+42
0x10A74	0x0101 ;_PasswordEntryBos+44
0x10A76	0x0101 ;_PasswordEntryBos+46
0x10A78	0x0101 ;_PasswordEntryBos+48
0x10A7A	0x0101 ;_PasswordEntryBos+50
0x10A7C	0x0101 ;_PasswordEntryBos+52
0x10A7E	0x0101 ;_PasswordEntryBos+54
0x10A80	0x0101 ;_PasswordEntryBos+56
0x10A82	0x0101 ;_PasswordEntryBos+58
0x10A84	0x0101 ;_PasswordEntryBos+60
0x10A86	0x0101 ;_PasswordEntryBos+62
0x10A88	0x0101 ;_PasswordEntryBos+64
0x10A8A	0x0101 ;_PasswordEntryBos+66
0x10A8C	0x0101 ;_PasswordEntryBos+68
0x10A8E	0x0101 ;_PasswordEntryBos+70
0x10A90	0x0101 ;_PasswordEntryBos+72
0x10A92	0x0101 ;_PasswordEntryBos+74
0x10A94	0x0101 ;_PasswordEntryBos+76
0x10A96	0x0101 ;_PasswordEntryBos+78
0x10A98	0x0101 ;_PasswordEntryBos+80
0x10A9A	0x0101 ;_PasswordEntryBos+82
0x10A9C	0x0101 ;_PasswordEntryBos+84
0x10A9E	0x0101 ;_PasswordEntryBos+86
0x10AA0	0x0101 ;_PasswordEntryBos+88
0x10AA2	0x0101 ;_PasswordEntryBos+90
0x10AA4	0x0101 ;_PasswordEntryBos+92
0x10AA6	0x0101 ;_PasswordEntryBos+94
0x10AA8	0x0101 ;_PasswordEntryBos+96
0x10AAA	0x0101 ;_PasswordEntryBos+98
0x10AAC	0x0101 ;_PasswordEntryBos+100
0x10AAE	0x0101 ;_PasswordEntryBos+102
0x10AB0	0x0101 ;_PasswordEntryBos+104
0x10AB2	0x0101 ;_PasswordEntryBos+106
0x10AB4	0x0101 ;_PasswordEntryBos+108
0x10AB6	0x0101 ;_PasswordEntryBos+110
0x10AB8	0x0101 ;_PasswordEntryBos+112
0x10ABA	0xFFFF ;_PasswordEntryBos+114
0x10ABC	0x0000 ;_PasswordEntryBos+116
0x10ABE	0x0000 ;_PasswordEntryBos+118
0x10AC0	0x0000 ;_PasswordEntryBos+120
0x10AC2	0x0000 ;_PasswordEntryBos+122
0x10AC4	0x0000 ;_PasswordEntryBos+124
0x10AC6	0x0000 ;_PasswordEntryBos+126
0x10AC8	0x0000 ;_PasswordEntryBos+128
0x10ACA	0x0000 ;_PasswordEntryBos+130
0x10ACC	0x0000 ;_PasswordEntryBos+132
0x10ACE	0x0000 ;_PasswordEntryBos+134
0x10AD0	0x0000 ;_PasswordEntryBos+136
0x10AD2	0x0000 ;_PasswordEntryBos+138
0x10AD4	0x0000 ;_PasswordEntryBos+140
0x10AD6	0x0000 ;_PasswordEntryBos+142
0x10AD8	0x0000 ;_PasswordEntryBos+144
0x10ADA	0x0000 ;_PasswordEntryBos+146
0x10ADC	0x0000 ;_PasswordEntryBos+148
0x10ADE	0x0000 ;_PasswordEntryBos+150
0x10AE0	0x0000 ;_PasswordEntryBos+152
0x10AE2	0x0000 ;_PasswordEntryBos+154
0x10AE4	0x0000 ;_PasswordEntryBos+156
0x10AE6	0x0000 ;_PasswordEntryBos+158
0x10AE8	0x0000 ;_PasswordEntryBos+160
0x10AEA	0x0000 ;_PasswordEntryBos+162
0x10AEC	0x0000 ;_PasswordEntryBos+164
0x10AEE	0x0000 ;_PasswordEntryBos+166
0x10AF0	0x0000 ;_PasswordEntryBos+168
0x10AF2	0x0000 ;_PasswordEntryBos+170
0x10AF4	0x0000 ;_PasswordEntryBos+172
0x10AF6	0x0000 ;_PasswordEntryBos+174
0x10AF8	0x0000 ;_PasswordEntryBos+176
0x10AFA	0x0000 ;_PasswordEntryBos+178
0x10AFC	0x0000 ;_PasswordEntryBos+180
0x10AFE	0x0000 ;_PasswordEntryBos+182
0x10B00	0x0000 ;_PasswordEntryBos+184
0x10B02	0x0000 ;_PasswordEntryBos+186
0x10B04	0x0000 ;_PasswordEntryBos+188
0x10B06	0x0000 ;_PasswordEntryBos+190
0x10B08	0x0000 ;_PasswordEntryBos+192
0x10B0A	0x0000 ;_PasswordEntryBos+194
0x10B0C	0x0000 ;_PasswordEntryBos+196
0x10B0E	0x0000 ;_PasswordEntryBos+198
0x10B10	0x0000 ;_PasswordEntryBos+200
0x10B12	0x0000 ;_PasswordEntryBos+202
0x10B14	0x0000 ;_PasswordEntryBos+204
0x10B16	0x0000 ;_PasswordEntryBos+206
0x10B18	0x0000 ;_PasswordEntryBos+208
0x10B1A	0x0000 ;_PasswordEntryBos+210
0x10B1C	0x0000 ;_PasswordEntryBos+212
0x10B1E	0x0000 ;_PasswordEntryBos+214
0x10B20	0x0000 ;_PasswordEntryBos+216
0x10B22	0x0000 ;_PasswordEntryBos+218
0x10B24	0x0000 ;_PasswordEntryBos+220
0x10B26	0x0000 ;_PasswordEntryBos+222
0x10B28	0x0000 ;_PasswordEntryBos+224
0x10B2A	0x0000 ;_PasswordEntryBos+226
0x10B2C	0xFF00 ;_PasswordEntryBos+228
0x10B2E	0x00FF ;_PasswordEntryBos+230
0x10B30	0x0000 ;_PasswordEntryBos+232
0x10B32	0x0000 ;_PasswordEntryBos+234
0x10B34	0x0000 ;_PasswordEntryBos+236
0x10B36	0x0000 ;_PasswordEntryBos+238
0x10B38	0x0000 ;_PasswordEntryBos+240
0x10B3A	0x0000 ;_PasswordEntryBos+242
0x10B3C	0x0000 ;_PasswordEntryBos+244
0x10B3E	0x0000 ;_PasswordEntryBos+246
0x10B40	0x0000 ;_PasswordEntryBos+248
0x10B42	0x0000 ;_PasswordEntryBos+250
0x10B44	0x0000 ;_PasswordEntryBos+252
0x10B46	0x0000 ;_PasswordEntryBos+254
0x10B48	0x0000 ;_PasswordEntryBos+256
0x10B4A	0x0000 ;_PasswordEntryBos+258
0x10B4C	0x0000 ;_PasswordEntryBos+260
0x10B4E	0x0000 ;_PasswordEntryBos+262
0x10B50	0x0000 ;_PasswordEntryBos+264
0x10B52	0x0000 ;_PasswordEntryBos+266
0x10B54	0x0000 ;_PasswordEntryBos+268
0x10B56	0x0000 ;_PasswordEntryBos+270
0x10B58	0x0000 ;_PasswordEntryBos+272
0x10B5A	0x0000 ;_PasswordEntryBos+274
0x10B5C	0x0000 ;_PasswordEntryBos+276
0x10B5E	0x0000 ;_PasswordEntryBos+278
0x10B60	0x0000 ;_PasswordEntryBos+280
0x10B62	0x0000 ;_PasswordEntryBos+282
0x10B64	0x0000 ;_PasswordEntryBos+284
0x10B66	0x0000 ;_PasswordEntryBos+286
0x10B68	0x0000 ;_PasswordEntryBos+288
0x10B6A	0x0000 ;_PasswordEntryBos+290
0x10B6C	0x0000 ;_PasswordEntryBos+292
0x10B6E	0x0000 ;_PasswordEntryBos+294
0x10B70	0x0000 ;_PasswordEntryBos+296
0x10B72	0x0000 ;_PasswordEntryBos+298
0x10B74	0x0000 ;_PasswordEntryBos+300
0x10B76	0x0000 ;_PasswordEntryBos+302
0x10B78	0x0000 ;_PasswordEntryBos+304
0x10B7A	0x0000 ;_PasswordEntryBos+306
0x10B7C	0x0000 ;_PasswordEntryBos+308
0x10B7E	0x0000 ;_PasswordEntryBos+310
0x10B80	0x0000 ;_PasswordEntryBos+312
0x10B82	0x0000 ;_PasswordEntryBos+314
0x10B84	0x0000 ;_PasswordEntryBos+316
0x10B86	0x0000 ;_PasswordEntryBos+318
0x10B88	0x0000 ;_PasswordEntryBos+320
0x10B8A	0x0000 ;_PasswordEntryBos+322
0x10B8C	0x0000 ;_PasswordEntryBos+324
0x10B8E	0x0000 ;_PasswordEntryBos+326
0x10B90	0x0000 ;_PasswordEntryBos+328
0x10B92	0x0000 ;_PasswordEntryBos+330
0x10B94	0x0000 ;_PasswordEntryBos+332
0x10B96	0x0000 ;_PasswordEntryBos+334
0x10B98	0x0000 ;_PasswordEntryBos+336
0x10B9A	0x0000 ;_PasswordEntryBos+338
0x10B9C	0x0000 ;_PasswordEntryBos+340
0x10B9E	0x0000 ;_PasswordEntryBos+342
0x10BA0	0xFFFF ;_PasswordEntryBos+344
0x10BA2	0x0000 ;_PasswordEntryBos+346
0x10BA4	0x0000 ;_PasswordEntryBos+348
0x10BA6	0x0000 ;_PasswordEntryBos+350
0x10BA8	0x0000 ;_PasswordEntryBos+352
0x10BAA	0x0000 ;_PasswordEntryBos+354
0x10BAC	0x0000 ;_PasswordEntryBos+356
0x10BAE	0x0000 ;_PasswordEntryBos+358
0x10BB0	0x0000 ;_PasswordEntryBos+360
0x10BB2	0x0000 ;_PasswordEntryBos+362
0x10BB4	0x0000 ;_PasswordEntryBos+364
0x10BB6	0x0000 ;_PasswordEntryBos+366
0x10BB8	0x0000 ;_PasswordEntryBos+368
0x10BBA	0x0000 ;_PasswordEntryBos+370
0x10BBC	0x0000 ;_PasswordEntryBos+372
0x10BBE	0x0000 ;_PasswordEntryBos+374
0x10BC0	0x0000 ;_PasswordEntryBos+376
0x10BC2	0x0000 ;_PasswordEntryBos+378
0x10BC4	0x0000 ;_PasswordEntryBos+380
0x10BC6	0x0000 ;_PasswordEntryBos+382
0x10BC8	0x0000 ;_PasswordEntryBos+384
0x10BCA	0x0000 ;_PasswordEntryBos+386
0x10BCC	0x0000 ;_PasswordEntryBos+388
0x10BCE	0x0000 ;_PasswordEntryBos+390
0x10BD0	0x0000 ;_PasswordEntryBos+392
0x10BD2	0x0000 ;_PasswordEntryBos+394
0x10BD4	0x0000 ;_PasswordEntryBos+396
0x10BD6	0x0000 ;_PasswordEntryBos+398
0x10BD8	0x0000 ;_PasswordEntryBos+400
0x10BDA	0x0000 ;_PasswordEntryBos+402
0x10BDC	0x0000 ;_PasswordEntryBos+404
0x10BDE	0x0000 ;_PasswordEntryBos+406
0x10BE0	0x0000 ;_PasswordEntryBos+408
0x10BE2	0x0000 ;_PasswordEntryBos+410
0x10BE4	0x0000 ;_PasswordEntryBos+412
0x10BE6	0x0000 ;_PasswordEntryBos+414
0x10BE8	0x0000 ;_PasswordEntryBos+416
0x10BEA	0x0000 ;_PasswordEntryBos+418
0x10BEC	0x0000 ;_PasswordEntryBos+420
0x10BEE	0x0000 ;_PasswordEntryBos+422
0x10BF0	0x0000 ;_PasswordEntryBos+424
0x10BF2	0x0000 ;_PasswordEntryBos+426
0x10BF4	0x0000 ;_PasswordEntryBos+428
0x10BF6	0x0000 ;_PasswordEntryBos+430
0x10BF8	0x0000 ;_PasswordEntryBos+432
0x10BFA	0x0000 ;_PasswordEntryBos+434
0x10BFC	0x0000 ;_PasswordEntryBos+436
0x10BFE	0x0000 ;_PasswordEntryBos+438
0x10C00	0x0000 ;_PasswordEntryBos+440
0x10C02	0x0000 ;_PasswordEntryBos+442
0x10C04	0x0000 ;_PasswordEntryBos+444
0x10C06	0x0000 ;_PasswordEntryBos+446
0x10C08	0x0000 ;_PasswordEntryBos+448
0x10C0A	0x0000 ;_PasswordEntryBos+450
0x10C0C	0x0000 ;_PasswordEntryBos+452
0x10C0E	0x0000 ;_PasswordEntryBos+454
0x10C10	0x0000 ;_PasswordEntryBos+456
0x10C12	0xFF00 ;_PasswordEntryBos+458
0x10C14	0x00FF ;_PasswordEntryBos+460
0x10C16	0x0000 ;_PasswordEntryBos+462
0x10C18	0x0000 ;_PasswordEntryBos+464
0x10C1A	0x0000 ;_PasswordEntryBos+466
0x10C1C	0x0000 ;_PasswordEntryBos+468
0x10C1E	0x0000 ;_PasswordEntryBos+470
0x10C20	0x0000 ;_PasswordEntryBos+472
0x10C22	0x0000 ;_PasswordEntryBos+474
0x10C24	0x0000 ;_PasswordEntryBos+476
0x10C26	0x0000 ;_PasswordEntryBos+478
0x10C28	0x0000 ;_PasswordEntryBos+480
0x10C2A	0x0000 ;_PasswordEntryBos+482
0x10C2C	0x0000 ;_PasswordEntryBos+484
0x10C2E	0x0000 ;_PasswordEntryBos+486
0x10C30	0x0000 ;_PasswordEntryBos+488
0x10C32	0x0000 ;_PasswordEntryBos+490
0x10C34	0x0000 ;_PasswordEntryBos+492
0x10C36	0x0000 ;_PasswordEntryBos+494
0x10C38	0x0000 ;_PasswordEntryBos+496
0x10C3A	0x0000 ;_PasswordEntryBos+498
0x10C3C	0x0000 ;_PasswordEntryBos+500
0x10C3E	0x0000 ;_PasswordEntryBos+502
0x10C40	0x0000 ;_PasswordEntryBos+504
0x10C42	0x0000 ;_PasswordEntryBos+506
0x10C44	0x0000 ;_PasswordEntryBos+508
0x10C46	0x0000 ;_PasswordEntryBos+510
0x10C48	0x0000 ;_PasswordEntryBos+512
0x10C4A	0x0000 ;_PasswordEntryBos+514
0x10C4C	0x0000 ;_PasswordEntryBos+516
0x10C4E	0x0000 ;_PasswordEntryBos+518
0x10C50	0x0000 ;_PasswordEntryBos+520
0x10C52	0x0000 ;_PasswordEntryBos+522
0x10C54	0x0000 ;_PasswordEntryBos+524
0x10C56	0x0000 ;_PasswordEntryBos+526
0x10C58	0x0000 ;_PasswordEntryBos+528
0x10C5A	0x0000 ;_PasswordEntryBos+530
0x10C5C	0x0000 ;_PasswordEntryBos+532
0x10C5E	0x0000 ;_PasswordEntryBos+534
0x10C60	0x0000 ;_PasswordEntryBos+536
0x10C62	0x0000 ;_PasswordEntryBos+538
0x10C64	0x0000 ;_PasswordEntryBos+540
0x10C66	0x0000 ;_PasswordEntryBos+542
0x10C68	0x0000 ;_PasswordEntryBos+544
0x10C6A	0x0000 ;_PasswordEntryBos+546
0x10C6C	0x0000 ;_PasswordEntryBos+548
0x10C6E	0x0000 ;_PasswordEntryBos+550
0x10C70	0x0000 ;_PasswordEntryBos+552
0x10C72	0x0000 ;_PasswordEntryBos+554
0x10C74	0x0000 ;_PasswordEntryBos+556
0x10C76	0x0000 ;_PasswordEntryBos+558
0x10C78	0x0000 ;_PasswordEntryBos+560
0x10C7A	0x0000 ;_PasswordEntryBos+562
0x10C7C	0x0000 ;_PasswordEntryBos+564
0x10C7E	0x0000 ;_PasswordEntryBos+566
0x10C80	0x0000 ;_PasswordEntryBos+568
0x10C82	0x0000 ;_PasswordEntryBos+570
0x10C84	0x0000 ;_PasswordEntryBos+572
0x10C86	0x01FF ;_PasswordEntryBos+574
0x10C88	0x0101 ;_PasswordEntryBos+576
0x10C8A	0x0101 ;_PasswordEntryBos+578
0x10C8C	0x0101 ;_PasswordEntryBos+580
0x10C8E	0x0101 ;_PasswordEntryBos+582
0x10C90	0x0101 ;_PasswordEntryBos+584
0x10C92	0x0101 ;_PasswordEntryBos+586
0x10C94	0x0101 ;_PasswordEntryBos+588
0x10C96	0x0101 ;_PasswordEntryBos+590
0x10C98	0x0101 ;_PasswordEntryBos+592
0x10C9A	0x0101 ;_PasswordEntryBos+594
0x10C9C	0x0101 ;_PasswordEntryBos+596
0x10C9E	0x0101 ;_PasswordEntryBos+598
0x10CA0	0x0101 ;_PasswordEntryBos+600
0x10CA2	0x0101 ;_PasswordEntryBos+602
0x10CA4	0x0101 ;_PasswordEntryBos+604
0x10CA6	0x0101 ;_PasswordEntryBos+606
0x10CA8	0x0101 ;_PasswordEntryBos+608
0x10CAA	0x0101 ;_PasswordEntryBos+610
0x10CAC	0x0101 ;_PasswordEntryBos+612
0x10CAE	0x0101 ;_PasswordEntryBos+614
0x10CB0	0x0101 ;_PasswordEntryBos+616
0x10CB2	0x0101 ;_PasswordEntryBos+618
0x10CB4	0x0101 ;_PasswordEntryBos+620
0x10CB6	0x0101 ;_PasswordEntryBos+622
0x10CB8	0x0101 ;_PasswordEntryBos+624
0x10CBA	0x0101 ;_PasswordEntryBos+626
0x10CBC	0x0101 ;_PasswordEntryBos+628
0x10CBE	0x0101 ;_PasswordEntryBos+630
0x10CC0	0x0101 ;_PasswordEntryBos+632
0x10CC2	0x0101 ;_PasswordEntryBos+634
0x10CC4	0x0101 ;_PasswordEntryBos+636
0x10CC6	0x0101 ;_PasswordEntryBos+638
0x10CC8	0x0101 ;_PasswordEntryBos+640
0x10CCA	0x0101 ;_PasswordEntryBos+642
0x10CCC	0x0101 ;_PasswordEntryBos+644
0x10CCE	0x0101 ;_PasswordEntryBos+646
0x10CD0	0x0101 ;_PasswordEntryBos+648
0x10CD2	0x0101 ;_PasswordEntryBos+650
0x10CD4	0x0101 ;_PasswordEntryBos+652
0x10CD6	0x0101 ;_PasswordEntryBos+654
0x10CD8	0x0101 ;_PasswordEntryBos+656
0x10CDA	0x0101 ;_PasswordEntryBos+658
0x10CDC	0x0101 ;_PasswordEntryBos+660
0x10CDE	0x0101 ;_PasswordEntryBos+662
0x10CE0	0x0101 ;_PasswordEntryBos+664
0x10CE2	0x0101 ;_PasswordEntryBos+666
0x10CE4	0x0101 ;_PasswordEntryBos+668
0x10CE6	0x0101 ;_PasswordEntryBos+670
0x10CE8	0x0101 ;_PasswordEntryBos+672
0x10CEA	0x0101 ;_PasswordEntryBos+674
0x10CEC	0x0101 ;_PasswordEntryBos+676
0x10CEE	0x0101 ;_PasswordEntryBos+678
0x10CF0	0x0101 ;_PasswordEntryBos+680
0x10CF2	0x0101 ;_PasswordEntryBos+682
0x10CF4	0x0101 ;_PasswordEntryBos+684
0x10CF6	0x0101 ;_PasswordEntryBos+686
0x10CF8	0x0101 ;_PasswordEntryBos+688
; end of _PasswordEntryBos
;GRR3000LFonts.mpas,152 :: _mainscreen [1024]
0x10CFA	0x0000 ;_mainscreen+0
0x10CFC	0x0000 ;_mainscreen+2
0x10CFE	0x0000 ;_mainscreen+4
0x10D00	0x0000 ;_mainscreen+6
0x10D02	0x0000 ;_mainscreen+8
0x10D04	0x0000 ;_mainscreen+10
0x10D06	0x0507 ;_mainscreen+12
0x10D08	0x0007 ;_mainscreen+14
0x10D0A	0x417F ;_mainscreen+16
0x10D0C	0x6341 ;_mainscreen+18
0x10D0E	0x0000 ;_mainscreen+20
0x10D10	0x0000 ;_mainscreen+22
0x10D12	0x0000 ;_mainscreen+24
0x10D14	0x0000 ;_mainscreen+26
0x10D16	0x0000 ;_mainscreen+28
0x10D18	0x0000 ;_mainscreen+30
0x10D1A	0x0000 ;_mainscreen+32
0x10D1C	0x0000 ;_mainscreen+34
0x10D1E	0x0000 ;_mainscreen+36
0x10D20	0x0000 ;_mainscreen+38
0x10D22	0x0000 ;_mainscreen+40
0x10D24	0x0000 ;_mainscreen+42
0x10D26	0x0000 ;_mainscreen+44
0x10D28	0x0000 ;_mainscreen+46
0x10D2A	0x0000 ;_mainscreen+48
0x10D2C	0x0000 ;_mainscreen+50
0x10D2E	0x0000 ;_mainscreen+52
0x10D30	0x0000 ;_mainscreen+54
0x10D32	0x0000 ;_mainscreen+56
0x10D34	0x0000 ;_mainscreen+58
0x10D36	0x0000 ;_mainscreen+60
0x10D38	0x0000 ;_mainscreen+62
0x10D3A	0x0000 ;_mainscreen+64
0x10D3C	0x0000 ;_mainscreen+66
0x10D3E	0x0000 ;_mainscreen+68
0x10D40	0x0000 ;_mainscreen+70
0x10D42	0x0000 ;_mainscreen+72
0x10D44	0x0000 ;_mainscreen+74
0x10D46	0x0808 ;_mainscreen+76
0x10D48	0x0000 ;_mainscreen+78
0x10D4A	0x0000 ;_mainscreen+80
0x10D4C	0x0000 ;_mainscreen+82
0x10D4E	0x0000 ;_mainscreen+84
0x10D50	0x0800 ;_mainscreen+86
0x10D52	0x0008 ;_mainscreen+88
0x10D54	0x0000 ;_mainscreen+90
0x10D56	0x0000 ;_mainscreen+92
0x10D58	0x0000 ;_mainscreen+94
0x10D5A	0x0000 ;_mainscreen+96
0x10D5C	0x0000 ;_mainscreen+98
0x10D5E	0x0000 ;_mainscreen+100
0x10D60	0x0000 ;_mainscreen+102
0x10D62	0x0000 ;_mainscreen+104
0x10D64	0x1830 ;_mainscreen+106
0x10D66	0x060C ;_mainscreen+108
0x10D68	0x0000 ;_mainscreen+110
0x10D6A	0x0000 ;_mainscreen+112
0x10D6C	0x0000 ;_mainscreen+114
0x10D6E	0x0000 ;_mainscreen+116
0x10D70	0x1400 ;_mainscreen+118
0x10D72	0x0000 ;_mainscreen+120
0x10D74	0x0000 ;_mainscreen+122
0x10D76	0x0000 ;_mainscreen+124
0x10D78	0x0000 ;_mainscreen+126
0x10D7A	0x0C18 ;_mainscreen+128
0x10D7C	0x0306 ;_mainscreen+130
0x10D7E	0x0101 ;_mainscreen+132
0x10D80	0x0101 ;_mainscreen+134
0x10D82	0x0101 ;_mainscreen+136
0x10D84	0x0101 ;_mainscreen+138
0x10D86	0x0101 ;_mainscreen+140
0x10D88	0x0101 ;_mainscreen+142
0x10D8A	0x0101 ;_mainscreen+144
0x10D8C	0x0101 ;_mainscreen+146
0x10D8E	0x0101 ;_mainscreen+148
0x10D90	0x0101 ;_mainscreen+150
0x10D92	0x0101 ;_mainscreen+152
0x10D94	0x0101 ;_mainscreen+154
0x10D96	0x0101 ;_mainscreen+156
0x10D98	0x0101 ;_mainscreen+158
0x10D9A	0x0101 ;_mainscreen+160
0x10D9C	0x0101 ;_mainscreen+162
0x10D9E	0x0101 ;_mainscreen+164
0x10DA0	0x0101 ;_mainscreen+166
0x10DA2	0x0101 ;_mainscreen+168
0x10DA4	0x0101 ;_mainscreen+170
0x10DA6	0x0101 ;_mainscreen+172
0x10DA8	0x0101 ;_mainscreen+174
0x10DAA	0x0101 ;_mainscreen+176
0x10DAC	0x0101 ;_mainscreen+178
0x10DAE	0x0101 ;_mainscreen+180
0x10DB0	0x0101 ;_mainscreen+182
0x10DB2	0x0101 ;_mainscreen+184
0x10DB4	0x0101 ;_mainscreen+186
0x10DB6	0x0603 ;_mainscreen+188
0x10DB8	0x180C ;_mainscreen+190
0x10DBA	0x18F0 ;_mainscreen+192
0x10DBC	0x060C ;_mainscreen+194
0x10DBE	0x0103 ;_mainscreen+196
0x10DC0	0x0101 ;_mainscreen+198
0x10DC2	0x0101 ;_mainscreen+200
0x10DC4	0x0101 ;_mainscreen+202
0x10DC6	0x0101 ;_mainscreen+204
0x10DC8	0x0101 ;_mainscreen+206
0x10DCA	0x0101 ;_mainscreen+208
0x10DCC	0x0101 ;_mainscreen+210
0x10DCE	0x0101 ;_mainscreen+212
0x10DD0	0x0101 ;_mainscreen+214
0x10DD2	0x0101 ;_mainscreen+216
0x10DD4	0x0101 ;_mainscreen+218
0x10DD6	0x0101 ;_mainscreen+220
0x10DD8	0x0101 ;_mainscreen+222
0x10DDA	0x0101 ;_mainscreen+224
0x10DDC	0x0101 ;_mainscreen+226
0x10DDE	0x0101 ;_mainscreen+228
0x10DE0	0x0101 ;_mainscreen+230
0x10DE2	0x0101 ;_mainscreen+232
0x10DE4	0x0101 ;_mainscreen+234
0x10DE6	0x0101 ;_mainscreen+236
0x10DE8	0x0101 ;_mainscreen+238
0x10DEA	0x0101 ;_mainscreen+240
0x10DEC	0x0101 ;_mainscreen+242
0x10DEE	0x0101 ;_mainscreen+244
0x10DF0	0x0101 ;_mainscreen+246
0x10DF2	0x0101 ;_mainscreen+248
0x10DF4	0x0101 ;_mainscreen+250
0x10DF6	0x0603 ;_mainscreen+252
0x10DF8	0x180C ;_mainscreen+254
0x10DFA	0x1F00 ;_mainscreen+256
0x10DFC	0x603F ;_mainscreen+258
0x10DFE	0x3F60 ;_mainscreen+260
0x10E00	0x001F ;_mainscreen+262
0x10E02	0x4438 ;_mainscreen+264
0x10E04	0x0044 ;_mainscreen+266
0x10E06	0x1400 ;_mainscreen+268
0x10E08	0x1414 ;_mainscreen+270
0x10E0A	0x0000 ;_mainscreen+272
0x10E0C	0x0000 ;_mainscreen+274
0x10E0E	0x0000 ;_mainscreen+276
0x10E10	0x0000 ;_mainscreen+278
0x10E12	0x0000 ;_mainscreen+280
0x10E14	0x0000 ;_mainscreen+282
0x10E16	0x0000 ;_mainscreen+284
0x10E18	0x0000 ;_mainscreen+286
0x10E1A	0x0000 ;_mainscreen+288
0x10E1C	0x0000 ;_mainscreen+290
0x10E1E	0x0000 ;_mainscreen+292
0x10E20	0x0000 ;_mainscreen+294
0x10E22	0x0000 ;_mainscreen+296
0x10E24	0x0000 ;_mainscreen+298
0x10E26	0x0000 ;_mainscreen+300
0x10E28	0x0000 ;_mainscreen+302
0x10E2A	0x0000 ;_mainscreen+304
0x10E2C	0x0000 ;_mainscreen+306
0x10E2E	0x0000 ;_mainscreen+308
0x10E30	0x0000 ;_mainscreen+310
0x10E32	0x1F00 ;_mainscreen+312
0x10E34	0x4020 ;_mainscreen+314
0x10E36	0x1F20 ;_mainscreen+316
0x10E38	0x0000 ;_mainscreen+318
0x10E3A	0x00FF ;_mainscreen+320
0x10E3C	0x0000 ;_mainscreen+322
0x10E3E	0x0000 ;_mainscreen+324
0x10E40	0x0000 ;_mainscreen+326
0x10E42	0x0000 ;_mainscreen+328
0x10E44	0x0000 ;_mainscreen+330
0x10E46	0x0000 ;_mainscreen+332
0x10E48	0x0000 ;_mainscreen+334
0x10E4A	0x0000 ;_mainscreen+336
0x10E4C	0x0000 ;_mainscreen+338
0x10E4E	0x0000 ;_mainscreen+340
0x10E50	0x0000 ;_mainscreen+342
0x10E52	0x0000 ;_mainscreen+344
0x10E54	0x0000 ;_mainscreen+346
0x10E56	0x0000 ;_mainscreen+348
0x10E58	0x0000 ;_mainscreen+350
0x10E5A	0x0000 ;_mainscreen+352
0x10E5C	0x0000 ;_mainscreen+354
0x10E5E	0x0000 ;_mainscreen+356
0x10E60	0x0000 ;_mainscreen+358
0x10E62	0x0000 ;_mainscreen+360
0x10E64	0x0000 ;_mainscreen+362
0x10E66	0x0000 ;_mainscreen+364
0x10E68	0x0000 ;_mainscreen+366
0x10E6A	0x0000 ;_mainscreen+368
0x10E6C	0x0000 ;_mainscreen+370
0x10E6E	0x0000 ;_mainscreen+372
0x10E70	0x0000 ;_mainscreen+374
0x10E72	0x0000 ;_mainscreen+376
0x10E74	0x0000 ;_mainscreen+378
0x10E76	0x0000 ;_mainscreen+380
0x10E78	0x0000 ;_mainscreen+382
0x10E7A	0x1F00 ;_mainscreen+384
0x10E7C	0x603F ;_mainscreen+386
0x10E7E	0x3F60 ;_mainscreen+388
0x10E80	0x001F ;_mainscreen+390
0x10E82	0x407C ;_mainscreen+392
0x10E84	0x0040 ;_mainscreen+394
0x10E86	0x1400 ;_mainscreen+396
0x10E88	0x1414 ;_mainscreen+398
0x10E8A	0x0000 ;_mainscreen+400
0x10E8C	0x0000 ;_mainscreen+402
0x10E8E	0x0000 ;_mainscreen+404
0x10E90	0x0000 ;_mainscreen+406
0x10E92	0x0000 ;_mainscreen+408
0x10E94	0x0000 ;_mainscreen+410
0x10E96	0x0000 ;_mainscreen+412
0x10E98	0x0000 ;_mainscreen+414
0x10E9A	0x0000 ;_mainscreen+416
0x10E9C	0x0000 ;_mainscreen+418
0x10E9E	0x0000 ;_mainscreen+420
0x10EA0	0x0000 ;_mainscreen+422
0x10EA2	0x0000 ;_mainscreen+424
0x10EA4	0x0000 ;_mainscreen+426
0x10EA6	0x0000 ;_mainscreen+428
0x10EA8	0x0000 ;_mainscreen+430
0x10EAA	0x0000 ;_mainscreen+432
0x10EAC	0x0000 ;_mainscreen+434
0x10EAE	0x0000 ;_mainscreen+436
0x10EB0	0x0000 ;_mainscreen+438
0x10EB2	0x1F00 ;_mainscreen+440
0x10EB4	0x4020 ;_mainscreen+442
0x10EB6	0x1F20 ;_mainscreen+444
0x10EB8	0x0000 ;_mainscreen+446
0x10EBA	0x00FF ;_mainscreen+448
0x10EBC	0x0000 ;_mainscreen+450
0x10EBE	0x0000 ;_mainscreen+452
0x10EC0	0x0000 ;_mainscreen+454
0x10EC2	0x0000 ;_mainscreen+456
0x10EC4	0x0000 ;_mainscreen+458
0x10EC6	0x0000 ;_mainscreen+460
0x10EC8	0x0000 ;_mainscreen+462
0x10ECA	0x0000 ;_mainscreen+464
0x10ECC	0x0000 ;_mainscreen+466
0x10ECE	0x0000 ;_mainscreen+468
0x10ED0	0x0000 ;_mainscreen+470
0x10ED2	0x0000 ;_mainscreen+472
0x10ED4	0x0000 ;_mainscreen+474
0x10ED6	0x0000 ;_mainscreen+476
0x10ED8	0x0000 ;_mainscreen+478
0x10EDA	0x0000 ;_mainscreen+480
0x10EDC	0x0000 ;_mainscreen+482
0x10EDE	0x0000 ;_mainscreen+484
0x10EE0	0x0000 ;_mainscreen+486
0x10EE2	0x0000 ;_mainscreen+488
0x10EE4	0x0000 ;_mainscreen+490
0x10EE6	0x0000 ;_mainscreen+492
0x10EE8	0x0000 ;_mainscreen+494
0x10EEA	0x0000 ;_mainscreen+496
0x10EEC	0x0000 ;_mainscreen+498
0x10EEE	0x0000 ;_mainscreen+500
0x10EF0	0x0000 ;_mainscreen+502
0x10EF2	0x0000 ;_mainscreen+504
0x10EF4	0x0000 ;_mainscreen+506
0x10EF6	0x0000 ;_mainscreen+508
0x10EF8	0x0000 ;_mainscreen+510
0x10EFA	0x0000 ;_mainscreen+512
0x10EFC	0x7F41 ;_mainscreen+514
0x10EFE	0x417F ;_mainscreen+516
0x10F00	0x0000 ;_mainscreen+518
0x10F02	0x507C ;_mainscreen+520
0x10F04	0x2050 ;_mainscreen+522
0x10F06	0x1400 ;_mainscreen+524
0x10F08	0x1414 ;_mainscreen+526
0x10F0A	0x0000 ;_mainscreen+528
0x10F0C	0x0000 ;_mainscreen+530
0x10F0E	0x0000 ;_mainscreen+532
0x10F10	0x0000 ;_mainscreen+534
0x10F12	0x0000 ;_mainscreen+536
0x10F14	0x0000 ;_mainscreen+538
0x10F16	0x0000 ;_mainscreen+540
0x10F18	0x0000 ;_mainscreen+542
0x10F1A	0x0000 ;_mainscreen+544
0x10F1C	0x0000 ;_mainscreen+546
0x10F1E	0x0000 ;_mainscreen+548
0x10F20	0x0000 ;_mainscreen+550
0x10F22	0x0000 ;_mainscreen+552
0x10F24	0x0000 ;_mainscreen+554
0x10F26	0x0000 ;_mainscreen+556
0x10F28	0x0000 ;_mainscreen+558
0x10F2A	0x0000 ;_mainscreen+560
0x10F2C	0x0000 ;_mainscreen+562
0x10F2E	0x0000 ;_mainscreen+564
0x10F30	0x0000 ;_mainscreen+566
0x10F32	0x7E00 ;_mainscreen+568
0x10F34	0x1111 ;_mainscreen+570
0x10F36	0x7E11 ;_mainscreen+572
0x10F38	0x0000 ;_mainscreen+574
0x10F3A	0x00FF ;_mainscreen+576
0x10F3C	0x0000 ;_mainscreen+578
0x10F3E	0x0000 ;_mainscreen+580
0x10F40	0x0000 ;_mainscreen+582
0x10F42	0x0000 ;_mainscreen+584
0x10F44	0x0000 ;_mainscreen+586
0x10F46	0x0000 ;_mainscreen+588
0x10F48	0x0000 ;_mainscreen+590
0x10F4A	0x0000 ;_mainscreen+592
0x10F4C	0x0000 ;_mainscreen+594
0x10F4E	0x0000 ;_mainscreen+596
0x10F50	0x0000 ;_mainscreen+598
0x10F52	0x0000 ;_mainscreen+600
0x10F54	0x0000 ;_mainscreen+602
0x10F56	0x0000 ;_mainscreen+604
0x10F58	0x0000 ;_mainscreen+606
0x10F5A	0x0000 ;_mainscreen+608
0x10F5C	0x0000 ;_mainscreen+610
0x10F5E	0x0000 ;_mainscreen+612
0x10F60	0x0000 ;_mainscreen+614
0x10F62	0x0000 ;_mainscreen+616
0x10F64	0x0000 ;_mainscreen+618
0x10F66	0x0000 ;_mainscreen+620
0x10F68	0x0000 ;_mainscreen+622
0x10F6A	0x0000 ;_mainscreen+624
0x10F6C	0x0000 ;_mainscreen+626
0x10F6E	0x0000 ;_mainscreen+628
0x10F70	0x0000 ;_mainscreen+630
0x10F72	0x0000 ;_mainscreen+632
0x10F74	0x0000 ;_mainscreen+634
0x10F76	0x0000 ;_mainscreen+636
0x10F78	0x0000 ;_mainscreen+638
0x10F7A	0x0000 ;_mainscreen+640
0x10F7C	0x7F41 ;_mainscreen+642
0x10F7E	0x417F ;_mainscreen+644
0x10F80	0x0000 ;_mainscreen+646
0x10F82	0x7C04 ;_mainscreen+648
0x10F84	0x0004 ;_mainscreen+650
0x10F86	0x1400 ;_mainscreen+652
0x10F88	0x1414 ;_mainscreen+654
0x10F8A	0x0000 ;_mainscreen+656
0x10F8C	0x0000 ;_mainscreen+658
0x10F8E	0x0000 ;_mainscreen+660
0x10F90	0x0000 ;_mainscreen+662
0x10F92	0x0000 ;_mainscreen+664
0x10F94	0x0000 ;_mainscreen+666
0x10F96	0x0000 ;_mainscreen+668
0x10F98	0x0000 ;_mainscreen+670
0x10F9A	0x0000 ;_mainscreen+672
0x10F9C	0x0000 ;_mainscreen+674
0x10F9E	0x0000 ;_mainscreen+676
0x10FA0	0x0000 ;_mainscreen+678
0x10FA2	0x0000 ;_mainscreen+680
0x10FA4	0x0000 ;_mainscreen+682
0x10FA6	0x0000 ;_mainscreen+684
0x10FA8	0x0000 ;_mainscreen+686
0x10FAA	0x0000 ;_mainscreen+688
0x10FAC	0x0000 ;_mainscreen+690
0x10FAE	0x0000 ;_mainscreen+692
0x10FB0	0x0000 ;_mainscreen+694
0x10FB2	0x7E00 ;_mainscreen+696
0x10FB4	0x1111 ;_mainscreen+698
0x10FB6	0x7E11 ;_mainscreen+700
0x10FB8	0x0000 ;_mainscreen+702
0x10FBA	0x007F ;_mainscreen+704
0x10FBC	0x0000 ;_mainscreen+706
0x10FBE	0x0000 ;_mainscreen+708
0x10FC0	0x0000 ;_mainscreen+710
0x10FC2	0x7E08 ;_mainscreen+712
0x10FC4	0x0109 ;_mainscreen+714
0x10FC6	0x0002 ;_mainscreen+716
0x10FC8	0x0000 ;_mainscreen+718
0x10FCA	0x0000 ;_mainscreen+720
0x10FCC	0x1400 ;_mainscreen+722
0x10FCE	0x1414 ;_mainscreen+724
0x10FD0	0x0000 ;_mainscreen+726
0x10FD2	0x0000 ;_mainscreen+728
0x10FD4	0x0000 ;_mainscreen+730
0x10FD6	0x0000 ;_mainscreen+732
0x10FD8	0x0000 ;_mainscreen+734
0x10FDA	0x0000 ;_mainscreen+736
0x10FDC	0x0000 ;_mainscreen+738
0x10FDE	0x0000 ;_mainscreen+740
0x10FE0	0x0000 ;_mainscreen+742
0x10FE2	0x0000 ;_mainscreen+744
0x10FE4	0x0000 ;_mainscreen+746
0x10FE6	0x0000 ;_mainscreen+748
0x10FE8	0x0000 ;_mainscreen+750
0x10FEA	0x0000 ;_mainscreen+752
0x10FEC	0x087F ;_mainscreen+754
0x10FEE	0x0808 ;_mainscreen+756
0x10FF0	0x007F ;_mainscreen+758
0x10FF2	0x4800 ;_mainscreen+760
0x10FF4	0x5868 ;_mainscreen+762
0x10FF6	0x0048 ;_mainscreen+764
0x10FF8	0x0000 ;_mainscreen+766
0x10FFA	0x0000 ;_mainscreen+768
0x10FFC	0x0000 ;_mainscreen+770
0x10FFE	0x0000 ;_mainscreen+772
0x11000	0x0000 ;_mainscreen+774
0x11002	0x0000 ;_mainscreen+776
0x11004	0x0000 ;_mainscreen+778
0x11006	0x0000 ;_mainscreen+780
0x11008	0x0000 ;_mainscreen+782
0x1100A	0x0000 ;_mainscreen+784
0x1100C	0x0000 ;_mainscreen+786
0x1100E	0x0000 ;_mainscreen+788
0x11010	0x0000 ;_mainscreen+790
0x11012	0x0000 ;_mainscreen+792
0x11014	0x0000 ;_mainscreen+794
0x11016	0x0000 ;_mainscreen+796
0x11018	0x0000 ;_mainscreen+798
0x1101A	0x0000 ;_mainscreen+800
0x1101C	0x0000 ;_mainscreen+802
0x1101E	0x0000 ;_mainscreen+804
0x11020	0x0000 ;_mainscreen+806
0x11022	0x0000 ;_mainscreen+808
0x11024	0x0000 ;_mainscreen+810
0x11026	0x0000 ;_mainscreen+812
0x11028	0x0000 ;_mainscreen+814
0x1102A	0x0000 ;_mainscreen+816
0x1102C	0x0000 ;_mainscreen+818
0x1102E	0x0000 ;_mainscreen+820
0x11030	0x0000 ;_mainscreen+822
0x11032	0x0000 ;_mainscreen+824
0x11034	0x0000 ;_mainscreen+826
0x11036	0x0000 ;_mainscreen+828
0x11038	0x0000 ;_mainscreen+830
0x1103A	0x0000 ;_mainscreen+832
0x1103C	0x0000 ;_mainscreen+834
0x1103E	0x0000 ;_mainscreen+836
0x11040	0x0000 ;_mainscreen+838
0x11042	0x0000 ;_mainscreen+840
0x11044	0x0000 ;_mainscreen+842
0x11046	0x0000 ;_mainscreen+844
0x11048	0x0000 ;_mainscreen+846
0x1104A	0x0000 ;_mainscreen+848
0x1104C	0x0000 ;_mainscreen+850
0x1104E	0x0000 ;_mainscreen+852
0x11050	0x0000 ;_mainscreen+854
0x11052	0x0000 ;_mainscreen+856
0x11054	0x0000 ;_mainscreen+858
0x11056	0x0000 ;_mainscreen+860
0x11058	0x0000 ;_mainscreen+862
0x1105A	0x0000 ;_mainscreen+864
0x1105C	0x0000 ;_mainscreen+866
0x1105E	0x0000 ;_mainscreen+868
0x11060	0x0000 ;_mainscreen+870
0x11062	0x0000 ;_mainscreen+872
0x11064	0x0000 ;_mainscreen+874
0x11066	0x0000 ;_mainscreen+876
0x11068	0x0000 ;_mainscreen+878
0x1106A	0x0000 ;_mainscreen+880
0x1106C	0x0000 ;_mainscreen+882
0x1106E	0x0000 ;_mainscreen+884
0x11070	0x0000 ;_mainscreen+886
0x11072	0x0000 ;_mainscreen+888
0x11074	0x0000 ;_mainscreen+890
0x11076	0x0000 ;_mainscreen+892
0x11078	0x0000 ;_mainscreen+894
0x1107A	0x0000 ;_mainscreen+896
0x1107C	0x0000 ;_mainscreen+898
0x1107E	0x0000 ;_mainscreen+900
0x11080	0x0000 ;_mainscreen+902
0x11082	0x0000 ;_mainscreen+904
0x11084	0x0000 ;_mainscreen+906
0x11086	0x0000 ;_mainscreen+908
0x11088	0x0000 ;_mainscreen+910
0x1108A	0x0000 ;_mainscreen+912
0x1108C	0x0000 ;_mainscreen+914
0x1108E	0x0000 ;_mainscreen+916
0x11090	0x0000 ;_mainscreen+918
0x11092	0x0000 ;_mainscreen+920
0x11094	0x0000 ;_mainscreen+922
0x11096	0x0000 ;_mainscreen+924
0x11098	0x0000 ;_mainscreen+926
0x1109A	0x0000 ;_mainscreen+928
0x1109C	0x0000 ;_mainscreen+930
0x1109E	0x0000 ;_mainscreen+932
0x110A0	0x0000 ;_mainscreen+934
0x110A2	0x0000 ;_mainscreen+936
0x110A4	0x0000 ;_mainscreen+938
0x110A6	0x0000 ;_mainscreen+940
0x110A8	0x0000 ;_mainscreen+942
0x110AA	0x0000 ;_mainscreen+944
0x110AC	0x0000 ;_mainscreen+946
0x110AE	0x0000 ;_mainscreen+948
0x110B0	0x0000 ;_mainscreen+950
0x110B2	0x0000 ;_mainscreen+952
0x110B4	0x0000 ;_mainscreen+954
0x110B6	0x0000 ;_mainscreen+956
0x110B8	0x0000 ;_mainscreen+958
0x110BA	0x0000 ;_mainscreen+960
0x110BC	0x0000 ;_mainscreen+962
0x110BE	0x0000 ;_mainscreen+964
0x110C0	0x0000 ;_mainscreen+966
0x110C2	0x0000 ;_mainscreen+968
0x110C4	0x0000 ;_mainscreen+970
0x110C6	0x0000 ;_mainscreen+972
0x110C8	0x0000 ;_mainscreen+974
0x110CA	0x0000 ;_mainscreen+976
0x110CC	0x0000 ;_mainscreen+978
0x110CE	0x0000 ;_mainscreen+980
0x110D0	0x0000 ;_mainscreen+982
0x110D2	0x0000 ;_mainscreen+984
0x110D4	0x0000 ;_mainscreen+986
0x110D6	0x0000 ;_mainscreen+988
0x110D8	0x0000 ;_mainscreen+990
0x110DA	0x0000 ;_mainscreen+992
0x110DC	0x0000 ;_mainscreen+994
0x110DE	0x0000 ;_mainscreen+996
0x110E0	0x0000 ;_mainscreen+998
0x110E2	0x0000 ;_mainscreen+1000
0x110E4	0x0000 ;_mainscreen+1002
0x110E6	0x0000 ;_mainscreen+1004
0x110E8	0x0000 ;_mainscreen+1006
0x110EA	0x0000 ;_mainscreen+1008
0x110EC	0x0000 ;_mainscreen+1010
0x110EE	0x0000 ;_mainscreen+1012
0x110F0	0x0000 ;_mainscreen+1014
0x110F2	0x0000 ;_mainscreen+1016
0x110F4	0x0000 ;_mainscreen+1018
0x110F6	0x0000 ;_mainscreen+1020
0x110F8	0x0000 ;_mainscreen+1022
; end of _mainscreen
;GRR3000LFonts.mpas,169 :: _AcVolt_View [174]
0x110FA	0x7F7F ;_AcVolt_View+0
0x110FC	0x6060 ;_AcVolt_View+2
0x110FE	0x0060 ;_AcVolt_View+4
0x11100	0x7C48 ;_AcVolt_View+6
0x11102	0x0040 ;_AcVolt_View+8
0x11104	0x1010 ;_AcVolt_View+10
0x11106	0x7400 ;_AcVolt_View+12
0x11108	0x5C54 ;_AcVolt_View+14
0x1110A	0x0000 ;_AcVolt_View+16
0x1110C	0x1414 ;_AcVolt_View+18
0x1110E	0x0014 ;_AcVolt_View+20
0x11110	0x0000 ;_AcVolt_View+22
0x11112	0x0000 ;_AcVolt_View+24
0x11114	0x0000 ;_AcVolt_View+26
0x11116	0x0000 ;_AcVolt_View+28
0x11118	0x0000 ;_AcVolt_View+30
0x1111A	0x0000 ;_AcVolt_View+32
0x1111C	0x0000 ;_AcVolt_View+34
0x1111E	0x0000 ;_AcVolt_View+36
0x11120	0x0000 ;_AcVolt_View+38
0x11122	0x0000 ;_AcVolt_View+40
0x11124	0x0000 ;_AcVolt_View+42
0x11126	0x0000 ;_AcVolt_View+44
0x11128	0x0000 ;_AcVolt_View+46
0x1112A	0x0000 ;_AcVolt_View+48
0x1112C	0x0000 ;_AcVolt_View+50
0x1112E	0x0000 ;_AcVolt_View+52
0x11130	0x0000 ;_AcVolt_View+54
0x11132	0x0000 ;_AcVolt_View+56
0x11134	0x7F7F ;_AcVolt_View+58
0x11136	0x6060 ;_AcVolt_View+60
0x11138	0x0060 ;_AcVolt_View+62
0x1113A	0x5474 ;_AcVolt_View+64
0x1113C	0x005C ;_AcVolt_View+66
0x1113E	0x1010 ;_AcVolt_View+68
0x11140	0x5400 ;_AcVolt_View+70
0x11142	0x7C54 ;_AcVolt_View+72
0x11144	0x0000 ;_AcVolt_View+74
0x11146	0x1414 ;_AcVolt_View+76
0x11148	0x0014 ;_AcVolt_View+78
0x1114A	0x0000 ;_AcVolt_View+80
0x1114C	0x0000 ;_AcVolt_View+82
0x1114E	0x0000 ;_AcVolt_View+84
0x11150	0x0000 ;_AcVolt_View+86
0x11152	0x0000 ;_AcVolt_View+88
0x11154	0x0000 ;_AcVolt_View+90
0x11156	0x0000 ;_AcVolt_View+92
0x11158	0x0000 ;_AcVolt_View+94
0x1115A	0x0000 ;_AcVolt_View+96
0x1115C	0x0000 ;_AcVolt_View+98
0x1115E	0x0000 ;_AcVolt_View+100
0x11160	0x0000 ;_AcVolt_View+102
0x11162	0x0000 ;_AcVolt_View+104
0x11164	0x0000 ;_AcVolt_View+106
0x11166	0x0000 ;_AcVolt_View+108
0x11168	0x0000 ;_AcVolt_View+110
0x1116A	0x0000 ;_AcVolt_View+112
0x1116C	0x0000 ;_AcVolt_View+114
0x1116E	0x7F7F ;_AcVolt_View+116
0x11170	0x6060 ;_AcVolt_View+118
0x11172	0x0060 ;_AcVolt_View+120
0x11174	0x5454 ;_AcVolt_View+122
0x11176	0x007C ;_AcVolt_View+124
0x11178	0x1010 ;_AcVolt_View+126
0x1117A	0x4800 ;_AcVolt_View+128
0x1117C	0x407C ;_AcVolt_View+130
0x1117E	0x0000 ;_AcVolt_View+132
0x11180	0x1414 ;_AcVolt_View+134
0x11182	0x0014 ;_AcVolt_View+136
0x11184	0x0000 ;_AcVolt_View+138
0x11186	0x0000 ;_AcVolt_View+140
0x11188	0x0000 ;_AcVolt_View+142
0x1118A	0x0000 ;_AcVolt_View+144
0x1118C	0x0000 ;_AcVolt_View+146
0x1118E	0x0000 ;_AcVolt_View+148
0x11190	0x0000 ;_AcVolt_View+150
0x11192	0x0000 ;_AcVolt_View+152
0x11194	0x0000 ;_AcVolt_View+154
0x11196	0x0000 ;_AcVolt_View+156
0x11198	0x0000 ;_AcVolt_View+158
0x1119A	0x0000 ;_AcVolt_View+160
0x1119C	0x0000 ;_AcVolt_View+162
0x1119E	0x0000 ;_AcVolt_View+164
0x111A0	0x0000 ;_AcVolt_View+166
0x111A2	0x0000 ;_AcVolt_View+168
0x111A4	0x0000 ;_AcVolt_View+170
0x111A6	0x0000 ;_AcVolt_View+172
; end of _AcVolt_View
;LogUnit.mpas,66 :: _EeAddr_Log_Event [512]
0x111A8	0xF3A6 ;_EeAddr_Log_Event+0
0x111AA	0x007F ;_EeAddr_Log_Event+2
0x111AC	0xF3A8 ;_EeAddr_Log_Event+4
0x111AE	0x007F ;_EeAddr_Log_Event+6
0x111B0	0xF3AA ;_EeAddr_Log_Event+8
0x111B2	0x007F ;_EeAddr_Log_Event+10
0x111B4	0xF3AC ;_EeAddr_Log_Event+12
0x111B6	0x007F ;_EeAddr_Log_Event+14
0x111B8	0xF3AE ;_EeAddr_Log_Event+16
0x111BA	0x007F ;_EeAddr_Log_Event+18
0x111BC	0xF3B0 ;_EeAddr_Log_Event+20
0x111BE	0x007F ;_EeAddr_Log_Event+22
0x111C0	0xF3B2 ;_EeAddr_Log_Event+24
0x111C2	0x007F ;_EeAddr_Log_Event+26
0x111C4	0xF3B4 ;_EeAddr_Log_Event+28
0x111C6	0x007F ;_EeAddr_Log_Event+30
0x111C8	0xF3B6 ;_EeAddr_Log_Event+32
0x111CA	0x007F ;_EeAddr_Log_Event+34
0x111CC	0xF3B8 ;_EeAddr_Log_Event+36
0x111CE	0x007F ;_EeAddr_Log_Event+38
0x111D0	0xF3BA ;_EeAddr_Log_Event+40
0x111D2	0x007F ;_EeAddr_Log_Event+42
0x111D4	0xF3BC ;_EeAddr_Log_Event+44
0x111D6	0x007F ;_EeAddr_Log_Event+46
0x111D8	0xF3BE ;_EeAddr_Log_Event+48
0x111DA	0x007F ;_EeAddr_Log_Event+50
0x111DC	0xF3C0 ;_EeAddr_Log_Event+52
0x111DE	0x007F ;_EeAddr_Log_Event+54
0x111E0	0xF3C2 ;_EeAddr_Log_Event+56
0x111E2	0x007F ;_EeAddr_Log_Event+58
0x111E4	0xF3C4 ;_EeAddr_Log_Event+60
0x111E6	0x007F ;_EeAddr_Log_Event+62
0x111E8	0xF3C6 ;_EeAddr_Log_Event+64
0x111EA	0x007F ;_EeAddr_Log_Event+66
0x111EC	0xF3C8 ;_EeAddr_Log_Event+68
0x111EE	0x007F ;_EeAddr_Log_Event+70
0x111F0	0xF3CA ;_EeAddr_Log_Event+72
0x111F2	0x007F ;_EeAddr_Log_Event+74
0x111F4	0xF3CC ;_EeAddr_Log_Event+76
0x111F6	0x007F ;_EeAddr_Log_Event+78
0x111F8	0xF3CE ;_EeAddr_Log_Event+80
0x111FA	0x007F ;_EeAddr_Log_Event+82
0x111FC	0xF3D0 ;_EeAddr_Log_Event+84
0x111FE	0x007F ;_EeAddr_Log_Event+86
0x11200	0xF3D2 ;_EeAddr_Log_Event+88
0x11202	0x007F ;_EeAddr_Log_Event+90
0x11204	0xF3D4 ;_EeAddr_Log_Event+92
0x11206	0x007F ;_EeAddr_Log_Event+94
0x11208	0xF3D6 ;_EeAddr_Log_Event+96
0x1120A	0x007F ;_EeAddr_Log_Event+98
0x1120C	0xF3D8 ;_EeAddr_Log_Event+100
0x1120E	0x007F ;_EeAddr_Log_Event+102
0x11210	0xF3DA ;_EeAddr_Log_Event+104
0x11212	0x007F ;_EeAddr_Log_Event+106
0x11214	0xF3DC ;_EeAddr_Log_Event+108
0x11216	0x007F ;_EeAddr_Log_Event+110
0x11218	0xF3DE ;_EeAddr_Log_Event+112
0x1121A	0x007F ;_EeAddr_Log_Event+114
0x1121C	0xF3E0 ;_EeAddr_Log_Event+116
0x1121E	0x007F ;_EeAddr_Log_Event+118
0x11220	0xF3E2 ;_EeAddr_Log_Event+120
0x11222	0x007F ;_EeAddr_Log_Event+122
0x11224	0xF3E4 ;_EeAddr_Log_Event+124
0x11226	0x007F ;_EeAddr_Log_Event+126
0x11228	0xF3E6 ;_EeAddr_Log_Event+128
0x1122A	0x007F ;_EeAddr_Log_Event+130
0x1122C	0xF3E8 ;_EeAddr_Log_Event+132
0x1122E	0x007F ;_EeAddr_Log_Event+134
0x11230	0xF3EA ;_EeAddr_Log_Event+136
0x11232	0x007F ;_EeAddr_Log_Event+138
0x11234	0xF3EC ;_EeAddr_Log_Event+140
0x11236	0x007F ;_EeAddr_Log_Event+142
0x11238	0xF3EE ;_EeAddr_Log_Event+144
0x1123A	0x007F ;_EeAddr_Log_Event+146
0x1123C	0xF3F0 ;_EeAddr_Log_Event+148
0x1123E	0x007F ;_EeAddr_Log_Event+150
0x11240	0xF3F2 ;_EeAddr_Log_Event+152
0x11242	0x007F ;_EeAddr_Log_Event+154
0x11244	0xF3F4 ;_EeAddr_Log_Event+156
0x11246	0x007F ;_EeAddr_Log_Event+158
0x11248	0xF3F6 ;_EeAddr_Log_Event+160
0x1124A	0x007F ;_EeAddr_Log_Event+162
0x1124C	0xF3F8 ;_EeAddr_Log_Event+164
0x1124E	0x007F ;_EeAddr_Log_Event+166
0x11250	0xF3FA ;_EeAddr_Log_Event+168
0x11252	0x007F ;_EeAddr_Log_Event+170
0x11254	0xF3FC ;_EeAddr_Log_Event+172
0x11256	0x007F ;_EeAddr_Log_Event+174
0x11258	0xF3FE ;_EeAddr_Log_Event+176
0x1125A	0x007F ;_EeAddr_Log_Event+178
0x1125C	0xF400 ;_EeAddr_Log_Event+180
0x1125E	0x007F ;_EeAddr_Log_Event+182
0x11260	0xF402 ;_EeAddr_Log_Event+184
0x11262	0x007F ;_EeAddr_Log_Event+186
0x11264	0xF404 ;_EeAddr_Log_Event+188
0x11266	0x007F ;_EeAddr_Log_Event+190
0x11268	0xF406 ;_EeAddr_Log_Event+192
0x1126A	0x007F ;_EeAddr_Log_Event+194
0x1126C	0xF408 ;_EeAddr_Log_Event+196
0x1126E	0x007F ;_EeAddr_Log_Event+198
0x11270	0xF40A ;_EeAddr_Log_Event+200
0x11272	0x007F ;_EeAddr_Log_Event+202
0x11274	0xF40C ;_EeAddr_Log_Event+204
0x11276	0x007F ;_EeAddr_Log_Event+206
0x11278	0xF40E ;_EeAddr_Log_Event+208
0x1127A	0x007F ;_EeAddr_Log_Event+210
0x1127C	0xF410 ;_EeAddr_Log_Event+212
0x1127E	0x007F ;_EeAddr_Log_Event+214
0x11280	0xF412 ;_EeAddr_Log_Event+216
0x11282	0x007F ;_EeAddr_Log_Event+218
0x11284	0xF414 ;_EeAddr_Log_Event+220
0x11286	0x007F ;_EeAddr_Log_Event+222
0x11288	0xF416 ;_EeAddr_Log_Event+224
0x1128A	0x007F ;_EeAddr_Log_Event+226
0x1128C	0xF418 ;_EeAddr_Log_Event+228
0x1128E	0x007F ;_EeAddr_Log_Event+230
0x11290	0xF41A ;_EeAddr_Log_Event+232
0x11292	0x007F ;_EeAddr_Log_Event+234
0x11294	0xF41C ;_EeAddr_Log_Event+236
0x11296	0x007F ;_EeAddr_Log_Event+238
0x11298	0xF41E ;_EeAddr_Log_Event+240
0x1129A	0x007F ;_EeAddr_Log_Event+242
0x1129C	0xF420 ;_EeAddr_Log_Event+244
0x1129E	0x007F ;_EeAddr_Log_Event+246
0x112A0	0xF422 ;_EeAddr_Log_Event+248
0x112A2	0x007F ;_EeAddr_Log_Event+250
0x112A4	0xF424 ;_EeAddr_Log_Event+252
0x112A6	0x007F ;_EeAddr_Log_Event+254
0x112A8	0xF426 ;_EeAddr_Log_Event+256
0x112AA	0x007F ;_EeAddr_Log_Event+258
0x112AC	0xF428 ;_EeAddr_Log_Event+260
0x112AE	0x007F ;_EeAddr_Log_Event+262
0x112B0	0xF42A ;_EeAddr_Log_Event+264
0x112B2	0x007F ;_EeAddr_Log_Event+266
0x112B4	0xF42C ;_EeAddr_Log_Event+268
0x112B6	0x007F ;_EeAddr_Log_Event+270
0x112B8	0xF42E ;_EeAddr_Log_Event+272
0x112BA	0x007F ;_EeAddr_Log_Event+274
0x112BC	0xF430 ;_EeAddr_Log_Event+276
0x112BE	0x007F ;_EeAddr_Log_Event+278
0x112C0	0xF432 ;_EeAddr_Log_Event+280
0x112C2	0x007F ;_EeAddr_Log_Event+282
0x112C4	0xF434 ;_EeAddr_Log_Event+284
0x112C6	0x007F ;_EeAddr_Log_Event+286
0x112C8	0xF436 ;_EeAddr_Log_Event+288
0x112CA	0x007F ;_EeAddr_Log_Event+290
0x112CC	0xF438 ;_EeAddr_Log_Event+292
0x112CE	0x007F ;_EeAddr_Log_Event+294
0x112D0	0xF43A ;_EeAddr_Log_Event+296
0x112D2	0x007F ;_EeAddr_Log_Event+298
0x112D4	0xF43C ;_EeAddr_Log_Event+300
0x112D6	0x007F ;_EeAddr_Log_Event+302
0x112D8	0xF43E ;_EeAddr_Log_Event+304
0x112DA	0x007F ;_EeAddr_Log_Event+306
0x112DC	0xF440 ;_EeAddr_Log_Event+308
0x112DE	0x007F ;_EeAddr_Log_Event+310
0x112E0	0xF442 ;_EeAddr_Log_Event+312
0x112E2	0x007F ;_EeAddr_Log_Event+314
0x112E4	0xF444 ;_EeAddr_Log_Event+316
0x112E6	0x007F ;_EeAddr_Log_Event+318
0x112E8	0xF446 ;_EeAddr_Log_Event+320
0x112EA	0x007F ;_EeAddr_Log_Event+322
0x112EC	0xF448 ;_EeAddr_Log_Event+324
0x112EE	0x007F ;_EeAddr_Log_Event+326
0x112F0	0xF44A ;_EeAddr_Log_Event+328
0x112F2	0x007F ;_EeAddr_Log_Event+330
0x112F4	0xF44C ;_EeAddr_Log_Event+332
0x112F6	0x007F ;_EeAddr_Log_Event+334
0x112F8	0xF44E ;_EeAddr_Log_Event+336
0x112FA	0x007F ;_EeAddr_Log_Event+338
0x112FC	0xF450 ;_EeAddr_Log_Event+340
0x112FE	0x007F ;_EeAddr_Log_Event+342
0x11300	0xF452 ;_EeAddr_Log_Event+344
0x11302	0x007F ;_EeAddr_Log_Event+346
0x11304	0xF454 ;_EeAddr_Log_Event+348
0x11306	0x007F ;_EeAddr_Log_Event+350
0x11308	0xF456 ;_EeAddr_Log_Event+352
0x1130A	0x007F ;_EeAddr_Log_Event+354
0x1130C	0xF458 ;_EeAddr_Log_Event+356
0x1130E	0x007F ;_EeAddr_Log_Event+358
0x11310	0xF45A ;_EeAddr_Log_Event+360
0x11312	0x007F ;_EeAddr_Log_Event+362
0x11314	0xF45C ;_EeAddr_Log_Event+364
0x11316	0x007F ;_EeAddr_Log_Event+366
0x11318	0xF45E ;_EeAddr_Log_Event+368
0x1131A	0x007F ;_EeAddr_Log_Event+370
0x1131C	0xF460 ;_EeAddr_Log_Event+372
0x1131E	0x007F ;_EeAddr_Log_Event+374
0x11320	0xF462 ;_EeAddr_Log_Event+376
0x11322	0x007F ;_EeAddr_Log_Event+378
0x11324	0xF464 ;_EeAddr_Log_Event+380
0x11326	0x007F ;_EeAddr_Log_Event+382
0x11328	0xF466 ;_EeAddr_Log_Event+384
0x1132A	0x007F ;_EeAddr_Log_Event+386
0x1132C	0xF468 ;_EeAddr_Log_Event+388
0x1132E	0x007F ;_EeAddr_Log_Event+390
0x11330	0xF46A ;_EeAddr_Log_Event+392
0x11332	0x007F ;_EeAddr_Log_Event+394
0x11334	0xF46C ;_EeAddr_Log_Event+396
0x11336	0x007F ;_EeAddr_Log_Event+398
0x11338	0xF46E ;_EeAddr_Log_Event+400
0x1133A	0x007F ;_EeAddr_Log_Event+402
0x1133C	0xF470 ;_EeAddr_Log_Event+404
0x1133E	0x007F ;_EeAddr_Log_Event+406
0x11340	0xF472 ;_EeAddr_Log_Event+408
0x11342	0x007F ;_EeAddr_Log_Event+410
0x11344	0xF474 ;_EeAddr_Log_Event+412
0x11346	0x007F ;_EeAddr_Log_Event+414
0x11348	0xF476 ;_EeAddr_Log_Event+416
0x1134A	0x007F ;_EeAddr_Log_Event+418
0x1134C	0xF478 ;_EeAddr_Log_Event+420
0x1134E	0x007F ;_EeAddr_Log_Event+422
0x11350	0xF47A ;_EeAddr_Log_Event+424
0x11352	0x007F ;_EeAddr_Log_Event+426
0x11354	0xF47C ;_EeAddr_Log_Event+428
0x11356	0x007F ;_EeAddr_Log_Event+430
0x11358	0xF47E ;_EeAddr_Log_Event+432
0x1135A	0x007F ;_EeAddr_Log_Event+434
0x1135C	0xF480 ;_EeAddr_Log_Event+436
0x1135E	0x007F ;_EeAddr_Log_Event+438
0x11360	0xF482 ;_EeAddr_Log_Event+440
0x11362	0x007F ;_EeAddr_Log_Event+442
0x11364	0xF484 ;_EeAddr_Log_Event+444
0x11366	0x007F ;_EeAddr_Log_Event+446
0x11368	0xF486 ;_EeAddr_Log_Event+448
0x1136A	0x007F ;_EeAddr_Log_Event+450
0x1136C	0xF488 ;_EeAddr_Log_Event+452
0x1136E	0x007F ;_EeAddr_Log_Event+454
0x11370	0xF48A ;_EeAddr_Log_Event+456
0x11372	0x007F ;_EeAddr_Log_Event+458
0x11374	0xF48C ;_EeAddr_Log_Event+460
0x11376	0x007F ;_EeAddr_Log_Event+462
0x11378	0xF48E ;_EeAddr_Log_Event+464
0x1137A	0x007F ;_EeAddr_Log_Event+466
0x1137C	0xF490 ;_EeAddr_Log_Event+468
0x1137E	0x007F ;_EeAddr_Log_Event+470
0x11380	0xF492 ;_EeAddr_Log_Event+472
0x11382	0x007F ;_EeAddr_Log_Event+474
0x11384	0xF494 ;_EeAddr_Log_Event+476
0x11386	0x007F ;_EeAddr_Log_Event+478
0x11388	0xF496 ;_EeAddr_Log_Event+480
0x1138A	0x007F ;_EeAddr_Log_Event+482
0x1138C	0xF498 ;_EeAddr_Log_Event+484
0x1138E	0x007F ;_EeAddr_Log_Event+486
0x11390	0xF49A ;_EeAddr_Log_Event+488
0x11392	0x007F ;_EeAddr_Log_Event+490
0x11394	0xF49C ;_EeAddr_Log_Event+492
0x11396	0x007F ;_EeAddr_Log_Event+494
0x11398	0xF49E ;_EeAddr_Log_Event+496
0x1139A	0x007F ;_EeAddr_Log_Event+498
0x1139C	0xF4A0 ;_EeAddr_Log_Event+500
0x1139E	0x007F ;_EeAddr_Log_Event+502
0x113A0	0xF4A2 ;_EeAddr_Log_Event+504
0x113A2	0x007F ;_EeAddr_Log_Event+506
0x113A4	0xF4A4 ;_EeAddr_Log_Event+508
0x113A6	0x007F ;_EeAddr_Log_Event+510
; end of _EeAddr_Log_Event
;LogUnit.mpas,21 :: _EeAddr_Log_Clock [512]
0x113A8	0xF0A8 ;_EeAddr_Log_Clock+0
0x113AA	0x007F ;_EeAddr_Log_Clock+2
0x113AC	0xF0AA ;_EeAddr_Log_Clock+4
0x113AE	0x007F ;_EeAddr_Log_Clock+6
0x113B0	0xF0AC ;_EeAddr_Log_Clock+8
0x113B2	0x007F ;_EeAddr_Log_Clock+10
0x113B4	0xF0AE ;_EeAddr_Log_Clock+12
0x113B6	0x007F ;_EeAddr_Log_Clock+14
0x113B8	0xF0B0 ;_EeAddr_Log_Clock+16
0x113BA	0x007F ;_EeAddr_Log_Clock+18
0x113BC	0xF0B2 ;_EeAddr_Log_Clock+20
0x113BE	0x007F ;_EeAddr_Log_Clock+22
0x113C0	0xF0B4 ;_EeAddr_Log_Clock+24
0x113C2	0x007F ;_EeAddr_Log_Clock+26
0x113C4	0xF0B6 ;_EeAddr_Log_Clock+28
0x113C6	0x007F ;_EeAddr_Log_Clock+30
0x113C8	0xF0B8 ;_EeAddr_Log_Clock+32
0x113CA	0x007F ;_EeAddr_Log_Clock+34
0x113CC	0xF0BA ;_EeAddr_Log_Clock+36
0x113CE	0x007F ;_EeAddr_Log_Clock+38
0x113D0	0xF0BC ;_EeAddr_Log_Clock+40
0x113D2	0x007F ;_EeAddr_Log_Clock+42
0x113D4	0xF0BE ;_EeAddr_Log_Clock+44
0x113D6	0x007F ;_EeAddr_Log_Clock+46
0x113D8	0xF0C0 ;_EeAddr_Log_Clock+48
0x113DA	0x007F ;_EeAddr_Log_Clock+50
0x113DC	0xF0C2 ;_EeAddr_Log_Clock+52
0x113DE	0x007F ;_EeAddr_Log_Clock+54
0x113E0	0xF0C4 ;_EeAddr_Log_Clock+56
0x113E2	0x007F ;_EeAddr_Log_Clock+58
0x113E4	0xF0C6 ;_EeAddr_Log_Clock+60
0x113E6	0x007F ;_EeAddr_Log_Clock+62
0x113E8	0xF0C8 ;_EeAddr_Log_Clock+64
0x113EA	0x007F ;_EeAddr_Log_Clock+66
0x113EC	0xF0CA ;_EeAddr_Log_Clock+68
0x113EE	0x007F ;_EeAddr_Log_Clock+70
0x113F0	0xF0CC ;_EeAddr_Log_Clock+72
0x113F2	0x007F ;_EeAddr_Log_Clock+74
0x113F4	0xF0CE ;_EeAddr_Log_Clock+76
0x113F6	0x007F ;_EeAddr_Log_Clock+78
0x113F8	0xF0D0 ;_EeAddr_Log_Clock+80
0x113FA	0x007F ;_EeAddr_Log_Clock+82
0x113FC	0xF0D2 ;_EeAddr_Log_Clock+84
0x113FE	0x007F ;_EeAddr_Log_Clock+86
0x11400	0xF0D4 ;_EeAddr_Log_Clock+88
0x11402	0x007F ;_EeAddr_Log_Clock+90
0x11404	0xF0D6 ;_EeAddr_Log_Clock+92
0x11406	0x007F ;_EeAddr_Log_Clock+94
0x11408	0xF0D8 ;_EeAddr_Log_Clock+96
0x1140A	0x007F ;_EeAddr_Log_Clock+98
0x1140C	0xF0DA ;_EeAddr_Log_Clock+100
0x1140E	0x007F ;_EeAddr_Log_Clock+102
0x11410	0xF0DC ;_EeAddr_Log_Clock+104
0x11412	0x007F ;_EeAddr_Log_Clock+106
0x11414	0xF0DE ;_EeAddr_Log_Clock+108
0x11416	0x007F ;_EeAddr_Log_Clock+110
0x11418	0xF0E0 ;_EeAddr_Log_Clock+112
0x1141A	0x007F ;_EeAddr_Log_Clock+114
0x1141C	0xF0E2 ;_EeAddr_Log_Clock+116
0x1141E	0x007F ;_EeAddr_Log_Clock+118
0x11420	0xF0E4 ;_EeAddr_Log_Clock+120
0x11422	0x007F ;_EeAddr_Log_Clock+122
0x11424	0xF0E6 ;_EeAddr_Log_Clock+124
0x11426	0x007F ;_EeAddr_Log_Clock+126
0x11428	0xF0E8 ;_EeAddr_Log_Clock+128
0x1142A	0x007F ;_EeAddr_Log_Clock+130
0x1142C	0xF0EA ;_EeAddr_Log_Clock+132
0x1142E	0x007F ;_EeAddr_Log_Clock+134
0x11430	0xF0EC ;_EeAddr_Log_Clock+136
0x11432	0x007F ;_EeAddr_Log_Clock+138
0x11434	0xF0EE ;_EeAddr_Log_Clock+140
0x11436	0x007F ;_EeAddr_Log_Clock+142
0x11438	0xF0F0 ;_EeAddr_Log_Clock+144
0x1143A	0x007F ;_EeAddr_Log_Clock+146
0x1143C	0xF0F2 ;_EeAddr_Log_Clock+148
0x1143E	0x007F ;_EeAddr_Log_Clock+150
0x11440	0xF0F4 ;_EeAddr_Log_Clock+152
0x11442	0x007F ;_EeAddr_Log_Clock+154
0x11444	0xF0F6 ;_EeAddr_Log_Clock+156
0x11446	0x007F ;_EeAddr_Log_Clock+158
0x11448	0xF0F8 ;_EeAddr_Log_Clock+160
0x1144A	0x007F ;_EeAddr_Log_Clock+162
0x1144C	0xF0FA ;_EeAddr_Log_Clock+164
0x1144E	0x007F ;_EeAddr_Log_Clock+166
0x11450	0xF0FC ;_EeAddr_Log_Clock+168
0x11452	0x007F ;_EeAddr_Log_Clock+170
0x11454	0xF0FE ;_EeAddr_Log_Clock+172
0x11456	0x007F ;_EeAddr_Log_Clock+174
0x11458	0xF100 ;_EeAddr_Log_Clock+176
0x1145A	0x007F ;_EeAddr_Log_Clock+178
0x1145C	0xF102 ;_EeAddr_Log_Clock+180
0x1145E	0x007F ;_EeAddr_Log_Clock+182
0x11460	0xF104 ;_EeAddr_Log_Clock+184
0x11462	0x007F ;_EeAddr_Log_Clock+186
0x11464	0xF106 ;_EeAddr_Log_Clock+188
0x11466	0x007F ;_EeAddr_Log_Clock+190
0x11468	0xF108 ;_EeAddr_Log_Clock+192
0x1146A	0x007F ;_EeAddr_Log_Clock+194
0x1146C	0xF10A ;_EeAddr_Log_Clock+196
0x1146E	0x007F ;_EeAddr_Log_Clock+198
0x11470	0xF10C ;_EeAddr_Log_Clock+200
0x11472	0x007F ;_EeAddr_Log_Clock+202
0x11474	0xF10E ;_EeAddr_Log_Clock+204
0x11476	0x007F ;_EeAddr_Log_Clock+206
0x11478	0xF110 ;_EeAddr_Log_Clock+208
0x1147A	0x007F ;_EeAddr_Log_Clock+210
0x1147C	0xF112 ;_EeAddr_Log_Clock+212
0x1147E	0x007F ;_EeAddr_Log_Clock+214
0x11480	0xF114 ;_EeAddr_Log_Clock+216
0x11482	0x007F ;_EeAddr_Log_Clock+218
0x11484	0xF116 ;_EeAddr_Log_Clock+220
0x11486	0x007F ;_EeAddr_Log_Clock+222
0x11488	0xF118 ;_EeAddr_Log_Clock+224
0x1148A	0x007F ;_EeAddr_Log_Clock+226
0x1148C	0xF11A ;_EeAddr_Log_Clock+228
0x1148E	0x007F ;_EeAddr_Log_Clock+230
0x11490	0xF11C ;_EeAddr_Log_Clock+232
0x11492	0x007F ;_EeAddr_Log_Clock+234
0x11494	0xF11E ;_EeAddr_Log_Clock+236
0x11496	0x007F ;_EeAddr_Log_Clock+238
0x11498	0xF120 ;_EeAddr_Log_Clock+240
0x1149A	0x007F ;_EeAddr_Log_Clock+242
0x1149C	0xF122 ;_EeAddr_Log_Clock+244
0x1149E	0x007F ;_EeAddr_Log_Clock+246
0x114A0	0xF124 ;_EeAddr_Log_Clock+248
0x114A2	0x007F ;_EeAddr_Log_Clock+250
0x114A4	0xF126 ;_EeAddr_Log_Clock+252
0x114A6	0x007F ;_EeAddr_Log_Clock+254
0x114A8	0xF128 ;_EeAddr_Log_Clock+256
0x114AA	0x007F ;_EeAddr_Log_Clock+258
0x114AC	0xF12A ;_EeAddr_Log_Clock+260
0x114AE	0x007F ;_EeAddr_Log_Clock+262
0x114B0	0xF12C ;_EeAddr_Log_Clock+264
0x114B2	0x007F ;_EeAddr_Log_Clock+266
0x114B4	0xF12E ;_EeAddr_Log_Clock+268
0x114B6	0x007F ;_EeAddr_Log_Clock+270
0x114B8	0xF130 ;_EeAddr_Log_Clock+272
0x114BA	0x007F ;_EeAddr_Log_Clock+274
0x114BC	0xF132 ;_EeAddr_Log_Clock+276
0x114BE	0x007F ;_EeAddr_Log_Clock+278
0x114C0	0xF134 ;_EeAddr_Log_Clock+280
0x114C2	0x007F ;_EeAddr_Log_Clock+282
0x114C4	0xF136 ;_EeAddr_Log_Clock+284
0x114C6	0x007F ;_EeAddr_Log_Clock+286
0x114C8	0xF138 ;_EeAddr_Log_Clock+288
0x114CA	0x007F ;_EeAddr_Log_Clock+290
0x114CC	0xF13A ;_EeAddr_Log_Clock+292
0x114CE	0x007F ;_EeAddr_Log_Clock+294
0x114D0	0xF13C ;_EeAddr_Log_Clock+296
0x114D2	0x007F ;_EeAddr_Log_Clock+298
0x114D4	0xF13E ;_EeAddr_Log_Clock+300
0x114D6	0x007F ;_EeAddr_Log_Clock+302
0x114D8	0xF140 ;_EeAddr_Log_Clock+304
0x114DA	0x007F ;_EeAddr_Log_Clock+306
0x114DC	0xF142 ;_EeAddr_Log_Clock+308
0x114DE	0x007F ;_EeAddr_Log_Clock+310
0x114E0	0xF144 ;_EeAddr_Log_Clock+312
0x114E2	0x007F ;_EeAddr_Log_Clock+314
0x114E4	0xF146 ;_EeAddr_Log_Clock+316
0x114E6	0x007F ;_EeAddr_Log_Clock+318
0x114E8	0xF148 ;_EeAddr_Log_Clock+320
0x114EA	0x007F ;_EeAddr_Log_Clock+322
0x114EC	0xF14A ;_EeAddr_Log_Clock+324
0x114EE	0x007F ;_EeAddr_Log_Clock+326
0x114F0	0xF14C ;_EeAddr_Log_Clock+328
0x114F2	0x007F ;_EeAddr_Log_Clock+330
0x114F4	0xF14E ;_EeAddr_Log_Clock+332
0x114F6	0x007F ;_EeAddr_Log_Clock+334
0x114F8	0xF150 ;_EeAddr_Log_Clock+336
0x114FA	0x007F ;_EeAddr_Log_Clock+338
0x114FC	0xF152 ;_EeAddr_Log_Clock+340
0x114FE	0x007F ;_EeAddr_Log_Clock+342
0x11500	0xF154 ;_EeAddr_Log_Clock+344
0x11502	0x007F ;_EeAddr_Log_Clock+346
0x11504	0xF156 ;_EeAddr_Log_Clock+348
0x11506	0x007F ;_EeAddr_Log_Clock+350
0x11508	0xF158 ;_EeAddr_Log_Clock+352
0x1150A	0x007F ;_EeAddr_Log_Clock+354
0x1150C	0xF15A ;_EeAddr_Log_Clock+356
0x1150E	0x007F ;_EeAddr_Log_Clock+358
0x11510	0xF15C ;_EeAddr_Log_Clock+360
0x11512	0x007F ;_EeAddr_Log_Clock+362
0x11514	0xF15E ;_EeAddr_Log_Clock+364
0x11516	0x007F ;_EeAddr_Log_Clock+366
0x11518	0xF160 ;_EeAddr_Log_Clock+368
0x1151A	0x007F ;_EeAddr_Log_Clock+370
0x1151C	0xF162 ;_EeAddr_Log_Clock+372
0x1151E	0x007F ;_EeAddr_Log_Clock+374
0x11520	0xF164 ;_EeAddr_Log_Clock+376
0x11522	0x007F ;_EeAddr_Log_Clock+378
0x11524	0xF166 ;_EeAddr_Log_Clock+380
0x11526	0x007F ;_EeAddr_Log_Clock+382
0x11528	0xF168 ;_EeAddr_Log_Clock+384
0x1152A	0x007F ;_EeAddr_Log_Clock+386
0x1152C	0xF16A ;_EeAddr_Log_Clock+388
0x1152E	0x007F ;_EeAddr_Log_Clock+390
0x11530	0xF16C ;_EeAddr_Log_Clock+392
0x11532	0x007F ;_EeAddr_Log_Clock+394
0x11534	0xF16E ;_EeAddr_Log_Clock+396
0x11536	0x007F ;_EeAddr_Log_Clock+398
0x11538	0xF170 ;_EeAddr_Log_Clock+400
0x1153A	0x007F ;_EeAddr_Log_Clock+402
0x1153C	0xF172 ;_EeAddr_Log_Clock+404
0x1153E	0x007F ;_EeAddr_Log_Clock+406
0x11540	0xF174 ;_EeAddr_Log_Clock+408
0x11542	0x007F ;_EeAddr_Log_Clock+410
0x11544	0xF176 ;_EeAddr_Log_Clock+412
0x11546	0x007F ;_EeAddr_Log_Clock+414
0x11548	0xF178 ;_EeAddr_Log_Clock+416
0x1154A	0x007F ;_EeAddr_Log_Clock+418
0x1154C	0xF17A ;_EeAddr_Log_Clock+420
0x1154E	0x007F ;_EeAddr_Log_Clock+422
0x11550	0xF17C ;_EeAddr_Log_Clock+424
0x11552	0x007F ;_EeAddr_Log_Clock+426
0x11554	0xF17E ;_EeAddr_Log_Clock+428
0x11556	0x007F ;_EeAddr_Log_Clock+430
0x11558	0xF180 ;_EeAddr_Log_Clock+432
0x1155A	0x007F ;_EeAddr_Log_Clock+434
0x1155C	0xF182 ;_EeAddr_Log_Clock+436
0x1155E	0x007F ;_EeAddr_Log_Clock+438
0x11560	0xF184 ;_EeAddr_Log_Clock+440
0x11562	0x007F ;_EeAddr_Log_Clock+442
0x11564	0xF186 ;_EeAddr_Log_Clock+444
0x11566	0x007F ;_EeAddr_Log_Clock+446
0x11568	0xF188 ;_EeAddr_Log_Clock+448
0x1156A	0x007F ;_EeAddr_Log_Clock+450
0x1156C	0xF18A ;_EeAddr_Log_Clock+452
0x1156E	0x007F ;_EeAddr_Log_Clock+454
0x11570	0xF18C ;_EeAddr_Log_Clock+456
0x11572	0x007F ;_EeAddr_Log_Clock+458
0x11574	0xF18E ;_EeAddr_Log_Clock+460
0x11576	0x007F ;_EeAddr_Log_Clock+462
0x11578	0xF190 ;_EeAddr_Log_Clock+464
0x1157A	0x007F ;_EeAddr_Log_Clock+466
0x1157C	0xF192 ;_EeAddr_Log_Clock+468
0x1157E	0x007F ;_EeAddr_Log_Clock+470
0x11580	0xF194 ;_EeAddr_Log_Clock+472
0x11582	0x007F ;_EeAddr_Log_Clock+474
0x11584	0xF196 ;_EeAddr_Log_Clock+476
0x11586	0x007F ;_EeAddr_Log_Clock+478
0x11588	0xF198 ;_EeAddr_Log_Clock+480
0x1158A	0x007F ;_EeAddr_Log_Clock+482
0x1158C	0xF19A ;_EeAddr_Log_Clock+484
0x1158E	0x007F ;_EeAddr_Log_Clock+486
0x11590	0xF19C ;_EeAddr_Log_Clock+488
0x11592	0x007F ;_EeAddr_Log_Clock+490
0x11594	0xF19E ;_EeAddr_Log_Clock+492
0x11596	0x007F ;_EeAddr_Log_Clock+494
0x11598	0xF1A0 ;_EeAddr_Log_Clock+496
0x1159A	0x007F ;_EeAddr_Log_Clock+498
0x1159C	0xF1A2 ;_EeAddr_Log_Clock+500
0x1159E	0x007F ;_EeAddr_Log_Clock+502
0x115A0	0xF1A4 ;_EeAddr_Log_Clock+504
0x115A2	0x007F ;_EeAddr_Log_Clock+506
0x115A4	0xF1A6 ;_EeAddr_Log_Clock+508
0x115A6	0x007F ;_EeAddr_Log_Clock+510
; end of _EeAddr_Log_Clock
;LogUnit.mpas,36 :: _EeAddr_Log_DateHi [512]
0x115A8	0xF1A6 ;_EeAddr_Log_DateHi+0
0x115AA	0x007F ;_EeAddr_Log_DateHi+2
0x115AC	0xF1A8 ;_EeAddr_Log_DateHi+4
0x115AE	0x007F ;_EeAddr_Log_DateHi+6
0x115B0	0xF1AA ;_EeAddr_Log_DateHi+8
0x115B2	0x007F ;_EeAddr_Log_DateHi+10
0x115B4	0xF1AC ;_EeAddr_Log_DateHi+12
0x115B6	0x007F ;_EeAddr_Log_DateHi+14
0x115B8	0xF1AE ;_EeAddr_Log_DateHi+16
0x115BA	0x007F ;_EeAddr_Log_DateHi+18
0x115BC	0xF1B0 ;_EeAddr_Log_DateHi+20
0x115BE	0x007F ;_EeAddr_Log_DateHi+22
0x115C0	0xF1B2 ;_EeAddr_Log_DateHi+24
0x115C2	0x007F ;_EeAddr_Log_DateHi+26
0x115C4	0xF1B4 ;_EeAddr_Log_DateHi+28
0x115C6	0x007F ;_EeAddr_Log_DateHi+30
0x115C8	0xF1B6 ;_EeAddr_Log_DateHi+32
0x115CA	0x007F ;_EeAddr_Log_DateHi+34
0x115CC	0xF1B8 ;_EeAddr_Log_DateHi+36
0x115CE	0x007F ;_EeAddr_Log_DateHi+38
0x115D0	0xF1BA ;_EeAddr_Log_DateHi+40
0x115D2	0x007F ;_EeAddr_Log_DateHi+42
0x115D4	0xF1BC ;_EeAddr_Log_DateHi+44
0x115D6	0x007F ;_EeAddr_Log_DateHi+46
0x115D8	0xF1BE ;_EeAddr_Log_DateHi+48
0x115DA	0x007F ;_EeAddr_Log_DateHi+50
0x115DC	0xF1C0 ;_EeAddr_Log_DateHi+52
0x115DE	0x007F ;_EeAddr_Log_DateHi+54
0x115E0	0xF1C2 ;_EeAddr_Log_DateHi+56
0x115E2	0x007F ;_EeAddr_Log_DateHi+58
0x115E4	0xF1C4 ;_EeAddr_Log_DateHi+60
0x115E6	0x007F ;_EeAddr_Log_DateHi+62
0x115E8	0xF1C6 ;_EeAddr_Log_DateHi+64
0x115EA	0x007F ;_EeAddr_Log_DateHi+66
0x115EC	0xF1C8 ;_EeAddr_Log_DateHi+68
0x115EE	0x007F ;_EeAddr_Log_DateHi+70
0x115F0	0xF1CA ;_EeAddr_Log_DateHi+72
0x115F2	0x007F ;_EeAddr_Log_DateHi+74
0x115F4	0xF1CC ;_EeAddr_Log_DateHi+76
0x115F6	0x007F ;_EeAddr_Log_DateHi+78
0x115F8	0xF1CE ;_EeAddr_Log_DateHi+80
0x115FA	0x007F ;_EeAddr_Log_DateHi+82
0x115FC	0xF1D0 ;_EeAddr_Log_DateHi+84
0x115FE	0x007F ;_EeAddr_Log_DateHi+86
0x11600	0xF1D2 ;_EeAddr_Log_DateHi+88
0x11602	0x007F ;_EeAddr_Log_DateHi+90
0x11604	0xF1D4 ;_EeAddr_Log_DateHi+92
0x11606	0x007F ;_EeAddr_Log_DateHi+94
0x11608	0xF1D6 ;_EeAddr_Log_DateHi+96
0x1160A	0x007F ;_EeAddr_Log_DateHi+98
0x1160C	0xF1D8 ;_EeAddr_Log_DateHi+100
0x1160E	0x007F ;_EeAddr_Log_DateHi+102
0x11610	0xF1DA ;_EeAddr_Log_DateHi+104
0x11612	0x007F ;_EeAddr_Log_DateHi+106
0x11614	0xF1DC ;_EeAddr_Log_DateHi+108
0x11616	0x007F ;_EeAddr_Log_DateHi+110
0x11618	0xF1DE ;_EeAddr_Log_DateHi+112
0x1161A	0x007F ;_EeAddr_Log_DateHi+114
0x1161C	0xF1E0 ;_EeAddr_Log_DateHi+116
0x1161E	0x007F ;_EeAddr_Log_DateHi+118
0x11620	0xF1E2 ;_EeAddr_Log_DateHi+120
0x11622	0x007F ;_EeAddr_Log_DateHi+122
0x11624	0xF1E4 ;_EeAddr_Log_DateHi+124
0x11626	0x007F ;_EeAddr_Log_DateHi+126
0x11628	0xF1E6 ;_EeAddr_Log_DateHi+128
0x1162A	0x007F ;_EeAddr_Log_DateHi+130
0x1162C	0xF1E8 ;_EeAddr_Log_DateHi+132
0x1162E	0x007F ;_EeAddr_Log_DateHi+134
0x11630	0xF1EA ;_EeAddr_Log_DateHi+136
0x11632	0x007F ;_EeAddr_Log_DateHi+138
0x11634	0xF1EC ;_EeAddr_Log_DateHi+140
0x11636	0x007F ;_EeAddr_Log_DateHi+142
0x11638	0xF1EE ;_EeAddr_Log_DateHi+144
0x1163A	0x007F ;_EeAddr_Log_DateHi+146
0x1163C	0xF1F0 ;_EeAddr_Log_DateHi+148
0x1163E	0x007F ;_EeAddr_Log_DateHi+150
0x11640	0xF1F2 ;_EeAddr_Log_DateHi+152
0x11642	0x007F ;_EeAddr_Log_DateHi+154
0x11644	0xF1F4 ;_EeAddr_Log_DateHi+156
0x11646	0x007F ;_EeAddr_Log_DateHi+158
0x11648	0xF1F6 ;_EeAddr_Log_DateHi+160
0x1164A	0x007F ;_EeAddr_Log_DateHi+162
0x1164C	0xF1F8 ;_EeAddr_Log_DateHi+164
0x1164E	0x007F ;_EeAddr_Log_DateHi+166
0x11650	0xF1FA ;_EeAddr_Log_DateHi+168
0x11652	0x007F ;_EeAddr_Log_DateHi+170
0x11654	0xF1FC ;_EeAddr_Log_DateHi+172
0x11656	0x007F ;_EeAddr_Log_DateHi+174
0x11658	0xF1FE ;_EeAddr_Log_DateHi+176
0x1165A	0x007F ;_EeAddr_Log_DateHi+178
0x1165C	0xF200 ;_EeAddr_Log_DateHi+180
0x1165E	0x007F ;_EeAddr_Log_DateHi+182
0x11660	0xF202 ;_EeAddr_Log_DateHi+184
0x11662	0x007F ;_EeAddr_Log_DateHi+186
0x11664	0xF204 ;_EeAddr_Log_DateHi+188
0x11666	0x007F ;_EeAddr_Log_DateHi+190
0x11668	0xF206 ;_EeAddr_Log_DateHi+192
0x1166A	0x007F ;_EeAddr_Log_DateHi+194
0x1166C	0xF208 ;_EeAddr_Log_DateHi+196
0x1166E	0x007F ;_EeAddr_Log_DateHi+198
0x11670	0xF20A ;_EeAddr_Log_DateHi+200
0x11672	0x007F ;_EeAddr_Log_DateHi+202
0x11674	0xF20C ;_EeAddr_Log_DateHi+204
0x11676	0x007F ;_EeAddr_Log_DateHi+206
0x11678	0xF20E ;_EeAddr_Log_DateHi+208
0x1167A	0x007F ;_EeAddr_Log_DateHi+210
0x1167C	0xF210 ;_EeAddr_Log_DateHi+212
0x1167E	0x007F ;_EeAddr_Log_DateHi+214
0x11680	0xF212 ;_EeAddr_Log_DateHi+216
0x11682	0x007F ;_EeAddr_Log_DateHi+218
0x11684	0xF214 ;_EeAddr_Log_DateHi+220
0x11686	0x007F ;_EeAddr_Log_DateHi+222
0x11688	0xF216 ;_EeAddr_Log_DateHi+224
0x1168A	0x007F ;_EeAddr_Log_DateHi+226
0x1168C	0xF218 ;_EeAddr_Log_DateHi+228
0x1168E	0x007F ;_EeAddr_Log_DateHi+230
0x11690	0xF21A ;_EeAddr_Log_DateHi+232
0x11692	0x007F ;_EeAddr_Log_DateHi+234
0x11694	0xF21C ;_EeAddr_Log_DateHi+236
0x11696	0x007F ;_EeAddr_Log_DateHi+238
0x11698	0xF21E ;_EeAddr_Log_DateHi+240
0x1169A	0x007F ;_EeAddr_Log_DateHi+242
0x1169C	0xF220 ;_EeAddr_Log_DateHi+244
0x1169E	0x007F ;_EeAddr_Log_DateHi+246
0x116A0	0xF222 ;_EeAddr_Log_DateHi+248
0x116A2	0x007F ;_EeAddr_Log_DateHi+250
0x116A4	0xF224 ;_EeAddr_Log_DateHi+252
0x116A6	0x007F ;_EeAddr_Log_DateHi+254
0x116A8	0xF226 ;_EeAddr_Log_DateHi+256
0x116AA	0x007F ;_EeAddr_Log_DateHi+258
0x116AC	0xF228 ;_EeAddr_Log_DateHi+260
0x116AE	0x007F ;_EeAddr_Log_DateHi+262
0x116B0	0xF22A ;_EeAddr_Log_DateHi+264
0x116B2	0x007F ;_EeAddr_Log_DateHi+266
0x116B4	0xF22C ;_EeAddr_Log_DateHi+268
0x116B6	0x007F ;_EeAddr_Log_DateHi+270
0x116B8	0xF22E ;_EeAddr_Log_DateHi+272
0x116BA	0x007F ;_EeAddr_Log_DateHi+274
0x116BC	0xF230 ;_EeAddr_Log_DateHi+276
0x116BE	0x007F ;_EeAddr_Log_DateHi+278
0x116C0	0xF232 ;_EeAddr_Log_DateHi+280
0x116C2	0x007F ;_EeAddr_Log_DateHi+282
0x116C4	0xF234 ;_EeAddr_Log_DateHi+284
0x116C6	0x007F ;_EeAddr_Log_DateHi+286
0x116C8	0xF236 ;_EeAddr_Log_DateHi+288
0x116CA	0x007F ;_EeAddr_Log_DateHi+290
0x116CC	0xF238 ;_EeAddr_Log_DateHi+292
0x116CE	0x007F ;_EeAddr_Log_DateHi+294
0x116D0	0xF23A ;_EeAddr_Log_DateHi+296
0x116D2	0x007F ;_EeAddr_Log_DateHi+298
0x116D4	0xF23C ;_EeAddr_Log_DateHi+300
0x116D6	0x007F ;_EeAddr_Log_DateHi+302
0x116D8	0xF23E ;_EeAddr_Log_DateHi+304
0x116DA	0x007F ;_EeAddr_Log_DateHi+306
0x116DC	0xF240 ;_EeAddr_Log_DateHi+308
0x116DE	0x007F ;_EeAddr_Log_DateHi+310
0x116E0	0xF242 ;_EeAddr_Log_DateHi+312
0x116E2	0x007F ;_EeAddr_Log_DateHi+314
0x116E4	0xF244 ;_EeAddr_Log_DateHi+316
0x116E6	0x007F ;_EeAddr_Log_DateHi+318
0x116E8	0xF246 ;_EeAddr_Log_DateHi+320
0x116EA	0x007F ;_EeAddr_Log_DateHi+322
0x116EC	0xF248 ;_EeAddr_Log_DateHi+324
0x116EE	0x007F ;_EeAddr_Log_DateHi+326
0x116F0	0xF24A ;_EeAddr_Log_DateHi+328
0x116F2	0x007F ;_EeAddr_Log_DateHi+330
0x116F4	0xF24C ;_EeAddr_Log_DateHi+332
0x116F6	0x007F ;_EeAddr_Log_DateHi+334
0x116F8	0xF24E ;_EeAddr_Log_DateHi+336
0x116FA	0x007F ;_EeAddr_Log_DateHi+338
0x116FC	0xF250 ;_EeAddr_Log_DateHi+340
0x116FE	0x007F ;_EeAddr_Log_DateHi+342
0x11700	0xF252 ;_EeAddr_Log_DateHi+344
0x11702	0x007F ;_EeAddr_Log_DateHi+346
0x11704	0xF254 ;_EeAddr_Log_DateHi+348
0x11706	0x007F ;_EeAddr_Log_DateHi+350
0x11708	0xF256 ;_EeAddr_Log_DateHi+352
0x1170A	0x007F ;_EeAddr_Log_DateHi+354
0x1170C	0xF258 ;_EeAddr_Log_DateHi+356
0x1170E	0x007F ;_EeAddr_Log_DateHi+358
0x11710	0xF25A ;_EeAddr_Log_DateHi+360
0x11712	0x007F ;_EeAddr_Log_DateHi+362
0x11714	0xF25C ;_EeAddr_Log_DateHi+364
0x11716	0x007F ;_EeAddr_Log_DateHi+366
0x11718	0xF25E ;_EeAddr_Log_DateHi+368
0x1171A	0x007F ;_EeAddr_Log_DateHi+370
0x1171C	0xF260 ;_EeAddr_Log_DateHi+372
0x1171E	0x007F ;_EeAddr_Log_DateHi+374
0x11720	0xF262 ;_EeAddr_Log_DateHi+376
0x11722	0x007F ;_EeAddr_Log_DateHi+378
0x11724	0xF264 ;_EeAddr_Log_DateHi+380
0x11726	0x007F ;_EeAddr_Log_DateHi+382
0x11728	0xF266 ;_EeAddr_Log_DateHi+384
0x1172A	0x007F ;_EeAddr_Log_DateHi+386
0x1172C	0xF268 ;_EeAddr_Log_DateHi+388
0x1172E	0x007F ;_EeAddr_Log_DateHi+390
0x11730	0xF26A ;_EeAddr_Log_DateHi+392
0x11732	0x007F ;_EeAddr_Log_DateHi+394
0x11734	0xF26C ;_EeAddr_Log_DateHi+396
0x11736	0x007F ;_EeAddr_Log_DateHi+398
0x11738	0xF26E ;_EeAddr_Log_DateHi+400
0x1173A	0x007F ;_EeAddr_Log_DateHi+402
0x1173C	0xF270 ;_EeAddr_Log_DateHi+404
0x1173E	0x007F ;_EeAddr_Log_DateHi+406
0x11740	0xF272 ;_EeAddr_Log_DateHi+408
0x11742	0x007F ;_EeAddr_Log_DateHi+410
0x11744	0xF274 ;_EeAddr_Log_DateHi+412
0x11746	0x007F ;_EeAddr_Log_DateHi+414
0x11748	0xF276 ;_EeAddr_Log_DateHi+416
0x1174A	0x007F ;_EeAddr_Log_DateHi+418
0x1174C	0xF278 ;_EeAddr_Log_DateHi+420
0x1174E	0x007F ;_EeAddr_Log_DateHi+422
0x11750	0xF27A ;_EeAddr_Log_DateHi+424
0x11752	0x007F ;_EeAddr_Log_DateHi+426
0x11754	0xF27C ;_EeAddr_Log_DateHi+428
0x11756	0x007F ;_EeAddr_Log_DateHi+430
0x11758	0xF27E ;_EeAddr_Log_DateHi+432
0x1175A	0x007F ;_EeAddr_Log_DateHi+434
0x1175C	0xF280 ;_EeAddr_Log_DateHi+436
0x1175E	0x007F ;_EeAddr_Log_DateHi+438
0x11760	0xF282 ;_EeAddr_Log_DateHi+440
0x11762	0x007F ;_EeAddr_Log_DateHi+442
0x11764	0xF284 ;_EeAddr_Log_DateHi+444
0x11766	0x007F ;_EeAddr_Log_DateHi+446
0x11768	0xF286 ;_EeAddr_Log_DateHi+448
0x1176A	0x007F ;_EeAddr_Log_DateHi+450
0x1176C	0xF288 ;_EeAddr_Log_DateHi+452
0x1176E	0x007F ;_EeAddr_Log_DateHi+454
0x11770	0xF28A ;_EeAddr_Log_DateHi+456
0x11772	0x007F ;_EeAddr_Log_DateHi+458
0x11774	0xF28C ;_EeAddr_Log_DateHi+460
0x11776	0x007F ;_EeAddr_Log_DateHi+462
0x11778	0xF28E ;_EeAddr_Log_DateHi+464
0x1177A	0x007F ;_EeAddr_Log_DateHi+466
0x1177C	0xF290 ;_EeAddr_Log_DateHi+468
0x1177E	0x007F ;_EeAddr_Log_DateHi+470
0x11780	0xF292 ;_EeAddr_Log_DateHi+472
0x11782	0x007F ;_EeAddr_Log_DateHi+474
0x11784	0xF294 ;_EeAddr_Log_DateHi+476
0x11786	0x007F ;_EeAddr_Log_DateHi+478
0x11788	0xF296 ;_EeAddr_Log_DateHi+480
0x1178A	0x007F ;_EeAddr_Log_DateHi+482
0x1178C	0xF298 ;_EeAddr_Log_DateHi+484
0x1178E	0x007F ;_EeAddr_Log_DateHi+486
0x11790	0xF29A ;_EeAddr_Log_DateHi+488
0x11792	0x007F ;_EeAddr_Log_DateHi+490
0x11794	0xF29C ;_EeAddr_Log_DateHi+492
0x11796	0x007F ;_EeAddr_Log_DateHi+494
0x11798	0xF29E ;_EeAddr_Log_DateHi+496
0x1179A	0x007F ;_EeAddr_Log_DateHi+498
0x1179C	0xF2A0 ;_EeAddr_Log_DateHi+500
0x1179E	0x007F ;_EeAddr_Log_DateHi+502
0x117A0	0xF2A2 ;_EeAddr_Log_DateHi+504
0x117A2	0x007F ;_EeAddr_Log_DateHi+506
0x117A4	0xF2A4 ;_EeAddr_Log_DateHi+508
0x117A6	0x007F ;_EeAddr_Log_DateHi+510
; end of _EeAddr_Log_DateHi
;LogUnit.mpas,51 :: _EeAddr_Log_DateLo [512]
0x117A8	0xF2A6 ;_EeAddr_Log_DateLo+0
0x117AA	0x007F ;_EeAddr_Log_DateLo+2
0x117AC	0xF2A8 ;_EeAddr_Log_DateLo+4
0x117AE	0x007F ;_EeAddr_Log_DateLo+6
0x117B0	0xF2AA ;_EeAddr_Log_DateLo+8
0x117B2	0x007F ;_EeAddr_Log_DateLo+10
0x117B4	0xF2AC ;_EeAddr_Log_DateLo+12
0x117B6	0x007F ;_EeAddr_Log_DateLo+14
0x117B8	0xF2AE ;_EeAddr_Log_DateLo+16
0x117BA	0x007F ;_EeAddr_Log_DateLo+18
0x117BC	0xF2B0 ;_EeAddr_Log_DateLo+20
0x117BE	0x007F ;_EeAddr_Log_DateLo+22
0x117C0	0xF2B2 ;_EeAddr_Log_DateLo+24
0x117C2	0x007F ;_EeAddr_Log_DateLo+26
0x117C4	0xF2B4 ;_EeAddr_Log_DateLo+28
0x117C6	0x007F ;_EeAddr_Log_DateLo+30
0x117C8	0xF2B6 ;_EeAddr_Log_DateLo+32
0x117CA	0x007F ;_EeAddr_Log_DateLo+34
0x117CC	0xF2B8 ;_EeAddr_Log_DateLo+36
0x117CE	0x007F ;_EeAddr_Log_DateLo+38
0x117D0	0xF2BA ;_EeAddr_Log_DateLo+40
0x117D2	0x007F ;_EeAddr_Log_DateLo+42
0x117D4	0xF2BC ;_EeAddr_Log_DateLo+44
0x117D6	0x007F ;_EeAddr_Log_DateLo+46
0x117D8	0xF2BE ;_EeAddr_Log_DateLo+48
0x117DA	0x007F ;_EeAddr_Log_DateLo+50
0x117DC	0xF2C0 ;_EeAddr_Log_DateLo+52
0x117DE	0x007F ;_EeAddr_Log_DateLo+54
0x117E0	0xF2C2 ;_EeAddr_Log_DateLo+56
0x117E2	0x007F ;_EeAddr_Log_DateLo+58
0x117E4	0xF2C4 ;_EeAddr_Log_DateLo+60
0x117E6	0x007F ;_EeAddr_Log_DateLo+62
0x117E8	0xF2C6 ;_EeAddr_Log_DateLo+64
0x117EA	0x007F ;_EeAddr_Log_DateLo+66
0x117EC	0xF2C8 ;_EeAddr_Log_DateLo+68
0x117EE	0x007F ;_EeAddr_Log_DateLo+70
0x117F0	0xF2CA ;_EeAddr_Log_DateLo+72
0x117F2	0x007F ;_EeAddr_Log_DateLo+74
0x117F4	0xF2CC ;_EeAddr_Log_DateLo+76
0x117F6	0x007F ;_EeAddr_Log_DateLo+78
0x117F8	0xF2CE ;_EeAddr_Log_DateLo+80
0x117FA	0x007F ;_EeAddr_Log_DateLo+82
0x117FC	0xF2D0 ;_EeAddr_Log_DateLo+84
0x117FE	0x007F ;_EeAddr_Log_DateLo+86
0x11800	0xF2D2 ;_EeAddr_Log_DateLo+88
0x11802	0x007F ;_EeAddr_Log_DateLo+90
0x11804	0xF2D4 ;_EeAddr_Log_DateLo+92
0x11806	0x007F ;_EeAddr_Log_DateLo+94
0x11808	0xF2D6 ;_EeAddr_Log_DateLo+96
0x1180A	0x007F ;_EeAddr_Log_DateLo+98
0x1180C	0xF2D8 ;_EeAddr_Log_DateLo+100
0x1180E	0x007F ;_EeAddr_Log_DateLo+102
0x11810	0xF2DA ;_EeAddr_Log_DateLo+104
0x11812	0x007F ;_EeAddr_Log_DateLo+106
0x11814	0xF2DC ;_EeAddr_Log_DateLo+108
0x11816	0x007F ;_EeAddr_Log_DateLo+110
0x11818	0xF2DE ;_EeAddr_Log_DateLo+112
0x1181A	0x007F ;_EeAddr_Log_DateLo+114
0x1181C	0xF2E0 ;_EeAddr_Log_DateLo+116
0x1181E	0x007F ;_EeAddr_Log_DateLo+118
0x11820	0xF2E2 ;_EeAddr_Log_DateLo+120
0x11822	0x007F ;_EeAddr_Log_DateLo+122
0x11824	0xF2E4 ;_EeAddr_Log_DateLo+124
0x11826	0x007F ;_EeAddr_Log_DateLo+126
0x11828	0xF2E6 ;_EeAddr_Log_DateLo+128
0x1182A	0x007F ;_EeAddr_Log_DateLo+130
0x1182C	0xF2E8 ;_EeAddr_Log_DateLo+132
0x1182E	0x007F ;_EeAddr_Log_DateLo+134
0x11830	0xF2EA ;_EeAddr_Log_DateLo+136
0x11832	0x007F ;_EeAddr_Log_DateLo+138
0x11834	0xF2EC ;_EeAddr_Log_DateLo+140
0x11836	0x007F ;_EeAddr_Log_DateLo+142
0x11838	0xF2EE ;_EeAddr_Log_DateLo+144
0x1183A	0x007F ;_EeAddr_Log_DateLo+146
0x1183C	0xF2F0 ;_EeAddr_Log_DateLo+148
0x1183E	0x007F ;_EeAddr_Log_DateLo+150
0x11840	0xF2F2 ;_EeAddr_Log_DateLo+152
0x11842	0x007F ;_EeAddr_Log_DateLo+154
0x11844	0xF2F4 ;_EeAddr_Log_DateLo+156
0x11846	0x007F ;_EeAddr_Log_DateLo+158
0x11848	0xF2F6 ;_EeAddr_Log_DateLo+160
0x1184A	0x007F ;_EeAddr_Log_DateLo+162
0x1184C	0xF2F8 ;_EeAddr_Log_DateLo+164
0x1184E	0x007F ;_EeAddr_Log_DateLo+166
0x11850	0xF2FA ;_EeAddr_Log_DateLo+168
0x11852	0x007F ;_EeAddr_Log_DateLo+170
0x11854	0xF2FC ;_EeAddr_Log_DateLo+172
0x11856	0x007F ;_EeAddr_Log_DateLo+174
0x11858	0xF2FE ;_EeAddr_Log_DateLo+176
0x1185A	0x007F ;_EeAddr_Log_DateLo+178
0x1185C	0xF300 ;_EeAddr_Log_DateLo+180
0x1185E	0x007F ;_EeAddr_Log_DateLo+182
0x11860	0xF302 ;_EeAddr_Log_DateLo+184
0x11862	0x007F ;_EeAddr_Log_DateLo+186
0x11864	0xF304 ;_EeAddr_Log_DateLo+188
0x11866	0x007F ;_EeAddr_Log_DateLo+190
0x11868	0xF306 ;_EeAddr_Log_DateLo+192
0x1186A	0x007F ;_EeAddr_Log_DateLo+194
0x1186C	0xF308 ;_EeAddr_Log_DateLo+196
0x1186E	0x007F ;_EeAddr_Log_DateLo+198
0x11870	0xF30A ;_EeAddr_Log_DateLo+200
0x11872	0x007F ;_EeAddr_Log_DateLo+202
0x11874	0xF30C ;_EeAddr_Log_DateLo+204
0x11876	0x007F ;_EeAddr_Log_DateLo+206
0x11878	0xF30E ;_EeAddr_Log_DateLo+208
0x1187A	0x007F ;_EeAddr_Log_DateLo+210
0x1187C	0xF310 ;_EeAddr_Log_DateLo+212
0x1187E	0x007F ;_EeAddr_Log_DateLo+214
0x11880	0xF312 ;_EeAddr_Log_DateLo+216
0x11882	0x007F ;_EeAddr_Log_DateLo+218
0x11884	0xF314 ;_EeAddr_Log_DateLo+220
0x11886	0x007F ;_EeAddr_Log_DateLo+222
0x11888	0xF316 ;_EeAddr_Log_DateLo+224
0x1188A	0x007F ;_EeAddr_Log_DateLo+226
0x1188C	0xF318 ;_EeAddr_Log_DateLo+228
0x1188E	0x007F ;_EeAddr_Log_DateLo+230
0x11890	0xF31A ;_EeAddr_Log_DateLo+232
0x11892	0x007F ;_EeAddr_Log_DateLo+234
0x11894	0xF31C ;_EeAddr_Log_DateLo+236
0x11896	0x007F ;_EeAddr_Log_DateLo+238
0x11898	0xF31E ;_EeAddr_Log_DateLo+240
0x1189A	0x007F ;_EeAddr_Log_DateLo+242
0x1189C	0xF320 ;_EeAddr_Log_DateLo+244
0x1189E	0x007F ;_EeAddr_Log_DateLo+246
0x118A0	0xF322 ;_EeAddr_Log_DateLo+248
0x118A2	0x007F ;_EeAddr_Log_DateLo+250
0x118A4	0xF324 ;_EeAddr_Log_DateLo+252
0x118A6	0x007F ;_EeAddr_Log_DateLo+254
0x118A8	0xF326 ;_EeAddr_Log_DateLo+256
0x118AA	0x007F ;_EeAddr_Log_DateLo+258
0x118AC	0xF328 ;_EeAddr_Log_DateLo+260
0x118AE	0x007F ;_EeAddr_Log_DateLo+262
0x118B0	0xF32A ;_EeAddr_Log_DateLo+264
0x118B2	0x007F ;_EeAddr_Log_DateLo+266
0x118B4	0xF32C ;_EeAddr_Log_DateLo+268
0x118B6	0x007F ;_EeAddr_Log_DateLo+270
0x118B8	0xF32E ;_EeAddr_Log_DateLo+272
0x118BA	0x007F ;_EeAddr_Log_DateLo+274
0x118BC	0xF330 ;_EeAddr_Log_DateLo+276
0x118BE	0x007F ;_EeAddr_Log_DateLo+278
0x118C0	0xF332 ;_EeAddr_Log_DateLo+280
0x118C2	0x007F ;_EeAddr_Log_DateLo+282
0x118C4	0xF334 ;_EeAddr_Log_DateLo+284
0x118C6	0x007F ;_EeAddr_Log_DateLo+286
0x118C8	0xF336 ;_EeAddr_Log_DateLo+288
0x118CA	0x007F ;_EeAddr_Log_DateLo+290
0x118CC	0xF338 ;_EeAddr_Log_DateLo+292
0x118CE	0x007F ;_EeAddr_Log_DateLo+294
0x118D0	0xF33A ;_EeAddr_Log_DateLo+296
0x118D2	0x007F ;_EeAddr_Log_DateLo+298
0x118D4	0xF33C ;_EeAddr_Log_DateLo+300
0x118D6	0x007F ;_EeAddr_Log_DateLo+302
0x118D8	0xF33E ;_EeAddr_Log_DateLo+304
0x118DA	0x007F ;_EeAddr_Log_DateLo+306
0x118DC	0xF340 ;_EeAddr_Log_DateLo+308
0x118DE	0x007F ;_EeAddr_Log_DateLo+310
0x118E0	0xF342 ;_EeAddr_Log_DateLo+312
0x118E2	0x007F ;_EeAddr_Log_DateLo+314
0x118E4	0xF344 ;_EeAddr_Log_DateLo+316
0x118E6	0x007F ;_EeAddr_Log_DateLo+318
0x118E8	0xF346 ;_EeAddr_Log_DateLo+320
0x118EA	0x007F ;_EeAddr_Log_DateLo+322
0x118EC	0xF348 ;_EeAddr_Log_DateLo+324
0x118EE	0x007F ;_EeAddr_Log_DateLo+326
0x118F0	0xF34A ;_EeAddr_Log_DateLo+328
0x118F2	0x007F ;_EeAddr_Log_DateLo+330
0x118F4	0xF34C ;_EeAddr_Log_DateLo+332
0x118F6	0x007F ;_EeAddr_Log_DateLo+334
0x118F8	0xF34E ;_EeAddr_Log_DateLo+336
0x118FA	0x007F ;_EeAddr_Log_DateLo+338
0x118FC	0xF350 ;_EeAddr_Log_DateLo+340
0x118FE	0x007F ;_EeAddr_Log_DateLo+342
0x11900	0xF352 ;_EeAddr_Log_DateLo+344
0x11902	0x007F ;_EeAddr_Log_DateLo+346
0x11904	0xF354 ;_EeAddr_Log_DateLo+348
0x11906	0x007F ;_EeAddr_Log_DateLo+350
0x11908	0xF356 ;_EeAddr_Log_DateLo+352
0x1190A	0x007F ;_EeAddr_Log_DateLo+354
0x1190C	0xF358 ;_EeAddr_Log_DateLo+356
0x1190E	0x007F ;_EeAddr_Log_DateLo+358
0x11910	0xF35A ;_EeAddr_Log_DateLo+360
0x11912	0x007F ;_EeAddr_Log_DateLo+362
0x11914	0xF35C ;_EeAddr_Log_DateLo+364
0x11916	0x007F ;_EeAddr_Log_DateLo+366
0x11918	0xF35E ;_EeAddr_Log_DateLo+368
0x1191A	0x007F ;_EeAddr_Log_DateLo+370
0x1191C	0xF360 ;_EeAddr_Log_DateLo+372
0x1191E	0x007F ;_EeAddr_Log_DateLo+374
0x11920	0xF362 ;_EeAddr_Log_DateLo+376
0x11922	0x007F ;_EeAddr_Log_DateLo+378
0x11924	0xF364 ;_EeAddr_Log_DateLo+380
0x11926	0x007F ;_EeAddr_Log_DateLo+382
0x11928	0xF366 ;_EeAddr_Log_DateLo+384
0x1192A	0x007F ;_EeAddr_Log_DateLo+386
0x1192C	0xF368 ;_EeAddr_Log_DateLo+388
0x1192E	0x007F ;_EeAddr_Log_DateLo+390
0x11930	0xF36A ;_EeAddr_Log_DateLo+392
0x11932	0x007F ;_EeAddr_Log_DateLo+394
0x11934	0xF36C ;_EeAddr_Log_DateLo+396
0x11936	0x007F ;_EeAddr_Log_DateLo+398
0x11938	0xF36E ;_EeAddr_Log_DateLo+400
0x1193A	0x007F ;_EeAddr_Log_DateLo+402
0x1193C	0xF370 ;_EeAddr_Log_DateLo+404
0x1193E	0x007F ;_EeAddr_Log_DateLo+406
0x11940	0xF372 ;_EeAddr_Log_DateLo+408
0x11942	0x007F ;_EeAddr_Log_DateLo+410
0x11944	0xF374 ;_EeAddr_Log_DateLo+412
0x11946	0x007F ;_EeAddr_Log_DateLo+414
0x11948	0xF376 ;_EeAddr_Log_DateLo+416
0x1194A	0x007F ;_EeAddr_Log_DateLo+418
0x1194C	0xF378 ;_EeAddr_Log_DateLo+420
0x1194E	0x007F ;_EeAddr_Log_DateLo+422
0x11950	0xF37A ;_EeAddr_Log_DateLo+424
0x11952	0x007F ;_EeAddr_Log_DateLo+426
0x11954	0xF37C ;_EeAddr_Log_DateLo+428
0x11956	0x007F ;_EeAddr_Log_DateLo+430
0x11958	0xF37E ;_EeAddr_Log_DateLo+432
0x1195A	0x007F ;_EeAddr_Log_DateLo+434
0x1195C	0xF380 ;_EeAddr_Log_DateLo+436
0x1195E	0x007F ;_EeAddr_Log_DateLo+438
0x11960	0xF382 ;_EeAddr_Log_DateLo+440
0x11962	0x007F ;_EeAddr_Log_DateLo+442
0x11964	0xF384 ;_EeAddr_Log_DateLo+444
0x11966	0x007F ;_EeAddr_Log_DateLo+446
0x11968	0xF386 ;_EeAddr_Log_DateLo+448
0x1196A	0x007F ;_EeAddr_Log_DateLo+450
0x1196C	0xF388 ;_EeAddr_Log_DateLo+452
0x1196E	0x007F ;_EeAddr_Log_DateLo+454
0x11970	0xF38A ;_EeAddr_Log_DateLo+456
0x11972	0x007F ;_EeAddr_Log_DateLo+458
0x11974	0xF38C ;_EeAddr_Log_DateLo+460
0x11976	0x007F ;_EeAddr_Log_DateLo+462
0x11978	0xF38E ;_EeAddr_Log_DateLo+464
0x1197A	0x007F ;_EeAddr_Log_DateLo+466
0x1197C	0xF390 ;_EeAddr_Log_DateLo+468
0x1197E	0x007F ;_EeAddr_Log_DateLo+470
0x11980	0xF392 ;_EeAddr_Log_DateLo+472
0x11982	0x007F ;_EeAddr_Log_DateLo+474
0x11984	0xF394 ;_EeAddr_Log_DateLo+476
0x11986	0x007F ;_EeAddr_Log_DateLo+478
0x11988	0xF396 ;_EeAddr_Log_DateLo+480
0x1198A	0x007F ;_EeAddr_Log_DateLo+482
0x1198C	0xF398 ;_EeAddr_Log_DateLo+484
0x1198E	0x007F ;_EeAddr_Log_DateLo+486
0x11990	0xF39A ;_EeAddr_Log_DateLo+488
0x11992	0x007F ;_EeAddr_Log_DateLo+490
0x11994	0xF39C ;_EeAddr_Log_DateLo+492
0x11996	0x007F ;_EeAddr_Log_DateLo+494
0x11998	0xF39E ;_EeAddr_Log_DateLo+496
0x1199A	0x007F ;_EeAddr_Log_DateLo+498
0x1199C	0xF3A0 ;_EeAddr_Log_DateLo+500
0x1199E	0x007F ;_EeAddr_Log_DateLo+502
0x119A0	0xF3A2 ;_EeAddr_Log_DateLo+504
0x119A2	0x007F ;_EeAddr_Log_DateLo+506
0x119A4	0xF3A4 ;_EeAddr_Log_DateLo+508
0x119A6	0x007F ;_EeAddr_Log_DateLo+510
; end of _EeAddr_Log_DateLo
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0118      [24]    _ADC1_Init
0x0130      [22]    __Lib_EEPROM_p30_KeySequence
0x0146      [34]    _ADC1_Get_Sample
0x0168      [22]    _I2C1_Stop
0x017E      [24]    _I2C1_Write
0x0196      [16]    __Lib_I2C_1_p30_I2C1_Is_Finished
0x01A6      [38]    _SPI1_Read
0x01CC      [38]    _SPI2_Read
0x01F2      [14]    __Lib_EEPROM_p30_EraseGlobal
0x0200      [22]    _I2C1_Restart
0x0216      [52]    _I2C1_Read
0x024A      [14]    _ADC1_Read
0x0258     [364]    __AddSub_FP
0x03C4     [114]    ___AddToFarPointer
0x0436     [126]    _Glcd_Read_Data
0x04B4      [14]    _EEPROM_Erase
0x04C2      [10]    __Sub_FP
0x04CC      [76]    _I2C1_Is_Idle
0x0518      [68]    _AnalogRead
0x055C       [8]    _SPI1_Write
0x0564      [22]    _UART1_Write
0x057A      [28]    _Glcd_Set_Side
0x0596      [44]    _Glcd_Set_X
0x05C2      [42]    _Bcd2Dec16
0x05EC      [44]    _I2C1_Start
0x0618       [8]    _Delay_10uS
0x0620      [14]    _UART2_Data_Ready
0x062E      [22]    _UART2_Write
0x0644      [14]    _UART2_TX_Idle
0x0652      [86]    _Read_Time
0x06A8      [10]    _UART2_Read
0x06B2     [120]    _ShortToStr
0x072A      [14]    _UART1_TX_Idle
0x0738       [8]    _SPI2_Write
0x0740      [82]    _ChargeModeWrite
0x0792      [42]    _Modbus_Reset_Tx_Data
0x07BC      [46]    _Modbus_Reset_Rx_Data
0x07EA     [310]    __Div_FP
0x0920      [16]    _Delay_10ms
0x0930      [88]    __Modulus_32x32
0x0988      [62]    _ByteToStr
0x09C6     [128]    _TempCompansation_Measurement
0x0A46     [120]    __Float2Longint
0x0ABE     [114]    __Compare_Fp
0x0B30     [610]    _ValueDivide
0x0D92    [1196]    _DateCalculator
0x1252      [62]    _WordToStr
0x1290     [262]    _MenuButtonRead
0x1396      [32]    _EEPROM_Write
0x13B6       [8]    _Get_Fosc_kHz
0x13BE      [30]    __Lib_I2C_1_p30_SetI2C1Ptrs
0x13DC      [34]    _HC_Cs_Fnc
0x13FE      [14]    _Delay_100ms
0x140C    [1776]    _Password_Entry_Screen
0x1B00      [82]    __Divide_32x32
0x1B52      [16]    __Lib_I2C_1_p30_I2C1_Wait_For_Idle
0x1B62      [46]    _SPI2_Init_Advanced
0x1B90       [8]    _Delay_1uS
0x1B98      [18]    __Multiply_32x32
0x1BAA     [316]    _Rs485master_Send
0x1CE6      [86]    __Lib_Glcd_Write_To_Pins
0x1D3C      [16]    _Glcd_Write_Data
0x1D4C      [26]    _Glcd_Set_Page
0x1D66      [14]    __Lib_Glcd_Strobe
0x1D74     [266]    _Glcd_Write_Char
0x1E7E     [412]    LogUnit_Log_Partition
0x201A     [910]    LogUnit_Log_Erase
0x23B8      [78]    _Write_Time
0x2406      [84]    _Dec2Bcd16
0x245A       [6]    _Get_Fosc_Per_Cyc
0x2460      [16]    _EEPROM_Read
0x2470      [74]    LogUnit_Log_Glcd_Write
0x24BA      [18]    _abs
0x24CC    [2414]    _Clock_Settings
0x2E3E      [12]    _Collect
0x2E4A      [74]    _Gemta_Uart_Write
0x2E94    [1234]    _Modbus_Settings
0x3366    [2282]    _Password_Settings
0x3C50    [1090]    _Temperature_Settings
0x4092    [1064]    _Leakage_Settings
0x44BA      [10]    _UART1_Read
0x44C4     [658]    _Language_Settings
0x475A    [4076]    _Log_Settings
0x577C      [14]    _UART1_Data_Ready
0x578A      [76]    _Glcd_Write_Text
0x57DA     [522]    _Led_Test
0x59E4     [212]    _LogBit_Config
0x5AB8      [28]    _Glcd_Set_Font
0x5AD4     [128]    _UART1_Init
0x5B54     [128]    _UART2_Init
0x5BD4    [7724]    _Turkish_Lang
0x7A00    [7724]    _English_Lang
0x982C      [68]    _I2C1_Init
0x9870      [92]    _Glcd_Init
0x98CC      [94]    _Glcd_Fill
0x992A      [54]    _VDelay_ms
0x9960      [42]    _Delay_Cyc_Long
0x998A      [46]    _SPI2_Initialize
0x99B8      [50]    _ClearDisplay
0x99EA      [40]    _SPI1_Init
0x9A12      [10]    _SPI_Set_Active
0x9A1C      [14]    _Rs485master_Init
0x9A2A     [182]    __Long2Float
0x9AE0     [282]    __Mul_FP
0x9BFA    [1722]    _DC_Settings
0xA2B4      [50]    _ltrim
0xA2E6    [1128]    _AC_Settings
0xA74E    [4600]    _Battery_Settings
0xB94A    [2324]    _AkuTestBakim
0xC2A6    [1394]    _Dropper_Module
0xC818      [10]    __Compare_Ge_Fp
0xC822      [10]    __Compare_Le_Fp
0xC82C      [12]    _Start_Modbus_Init
0xC838      [14]    _UART_Set_Active
0xC846      [16]    ___CS2S
0xC856     [216]    _Dropper_Control
0xC92E     [710]    _Modbus_Reg_Data_Fill
0xCBF4    [1472]    _Led_RelayControl
0xD1B4     [132]    _Fan_Heat_Control
0xD238     [472]    _Uart_Communication_Function
0xD410      [98]    _Comm_Fault_Check
0xD472     [106]    _UART1_Read_Text
0xD4DC     [262]    _ButonTimer
0xD5E2    [2228]    _Start_Register_Config
0xDE96       [4]    _Pause_Ms
0xDE9A       [6]    _Check_Modbus
0xDEA0     [420]    _Rs485master_Receive
0xE044      [40]    _UART1_Write_Text
0xE06C      [10]    _Run_Timers
0xE076     [334]    _WDT_Reset_Flag
0xE1C8    [1614]    _MainMenu
0xE83A       [6]    __Lib_FAT32____?ag
0xE840     [144]    _Glcd_Image
0xE8D0     [224]    _Uart_Procedures
0xE9B0    [1132]    _Data_EepromRead
0xEE1C     [628]    _Glcd_PartialImage
0xF090     [908]    _Timer4Interrupt
0xF41C      [50]    _Input1CaptureInt
0xF44E      [54]    _Timer3Int
0xF484      [90]    _UART1_int
0xF4DE      [36]    _Uart2_Interrupt
0xF502     [308]    _main
0xF652      [40]    _Timer5Interrupt
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0800       [2]    _Read_RatedAmps
0x0802       [2]    _Read_RatedVolt
0x0804       [0]    _DDschargeControlBit
0x0806       [2]    _StopCounter2
0x0808       [2]    _StopCounter1
0x080A       [2]    _Read_BatRawAmp
0x0804       [0]    _GTTCompleteBit
0x080C       [2]    _Read_RedRawAmp
0x080E       [2]    _Read_CalOkBit
0x0810       [2]    _Read_RedRawVlt
0x0812       [2]    _BackupCounter
0x0804       [0]    _Bakim_Start
0x0804       [0]    _BakimStartBit
0x0804       [0]    _BakimLockBit
0x0814       [1]    _Service_Charge_StateBit
0x0804       [0]    _QuitVoltBit
0x0815       [1]    _OpTime2
0x0816       [1]    _OpTime1
0x0818       [4]    _QuitTimeCounter
0x0817       [1]    _Temp_Byte_Date
0x081C       [1]    _CurveScan
0x081D       [1]    _SendRepeatCounter
0x0804       [0]    _Red_HighTemp
0x0804       [0]    _P_LeakBit
0x081E       [1]    _BattAmps_Calib
0x081F       [1]    _RedVolt_Calib
0x0820       [1]    _RedAmps_Calib
0x0821       [1]    _AC_ScreenCounter
0x0822       [1]    _LV_ScreenCounter
0x0824       [4]    _LoadVoltRMS
0x0804       [0]    _N_LeakBit
0x0828       [4]    _Read_LoadVoltRaw
0x0823       [1]    _Temp_Calib
0x082C       [2]    _Read_DSW
0x082E       [2]    _Read_Phases
0x0830       [2]    _Read_NomVolt
0x0832       [1]    _GTTSendDataConfirm
0x0834       [2]    _Read_NomAmp
0x0836       [2]    _RedAmps_CalibSend
0x0838       [2]    _BattAmps_CalibSend
0x083A       [2]    _RedVolt_CalibSend
0x083C       [2]    _Read_Alpha
0x083E       [2]    _Temp_CalibSend
0x0804       [0]    _Bat_Service_Timer_bit
0x0804       [0]    _UP_PressBit
0x0840       [2]    _UpButonCounter
0x0833       [1]    _viewbyte
0x0842       [2]    _U1Volt_Diff
0x0804       [0]    _ACVoltDifferentBit
0x0844       [4]    _AC_Real
0x0804       [0]    _FreqBit
0x0848       [2]    _Read_AC_RAW
0x084A       [4]    _Reel_Current
0x084E       [4]    _TotalPOWER_kW
0x0852       [2]    _U2Volt_Diff
0x0854      [22]    _Flt_AcLow
0x086A      [22]    _Flt_AcHigh
0x0880      [22]    _Flt_AcDiff
0x0896      [22]    _Flt_DcLow
0x08AC      [22]    _Flt_DcHigh
0x08C2       [1]    _CalibValue
0x08C4       [2]    _U3Volt_Diff
0x0804       [0]    _CaseHeaterActiveBit
0x02C8       [0]    RB3_bit
0x02C8       [0]    DischargeProtect_Pin
0x08C6       [2]    _FreqLossCounter
0x08C8       [2]    _Curve_Time
0x08CA       [2]    _Battery_Current_Capacity
0x08CC       [2]    _First_Bat_Current
0x0804       [0]    _Redresor_OK_Bit
0x0804       [0]    _bat_curve_scan_fail
0x08CE       [0]    _Bat_Service_Unit2
0x08CE       [0]    _Bat_Service_Unit1
0x08CE       [0]    _BakimInitBit
0x08C3       [1]    _Bat_Curve_Scan_State_bit
0x08D0       [2]    _Bat_Service_Timer
0x08CE       [0]    _posleakbit
0x08CE       [0]    _ScreenView
0x08D2       [1]    _LeakCounter
0x08D4       [2]    _ScreenCounter
0x08D6       [2]    _FreqViewCounter
0x08D8       [2]    _FreqHAM
0x08DA       [2]    _PosCounter
0x08CE       [0]    _negleakbit
0x08DC       [2]    _NegCounter
0x08DE       [4]    _ADC_LeakRAW2
0x08E2       [4]    _ADC_LeakRAW
0x08E6       [2]    _Dig_LoadVoltLeak
0x08E8       [2]    _Dig_LoadVolt
0x08EA       [4]    _Dig_LoadVoltLeakRAW
0x08CE       [0]    _AcViewScreenBit
0x08EE       [2]    _ChargeStatus
0x08F0       [2]    _Buzzer_Counter
0x08CE       [0]    _Buzzer_AllowBit
0x08F2       [2]    _AlarmSiraCounter
0x08D3       [1]    _ReceiveAddr
0x08F4       [2]    _DcFaultRelayTime
0x08F6       [2]    _Leakage_Status
0x08F8       [4]    _Unit_Leak2
0x08FC       [4]    _Unit_Leak1
0x0900       [2]    _R_Leakage
0x0902       [4]    _R_Leakage1
0x0906       [4]    _R_Leakage0
0x090A       [2]    _Adc_Leakage
0x090C       [4]    _Leakage_Volt
0x0910       [4]    _Pos_Leak_Ref
0x0914       [4]    _Unit_Leak0
0x0918       [4]    _Neg_Leak_Ref
0x08CE       [0]    _BuzzerBit
0x08CE       [0]    _Rly_DcLowBit
0x08CE       [0]    _Rly_DcHighBit
0x08CE       [0]    _Rly_PosLeakageBit
0x08CE       [0]    _Rly_BattAmpsLimitBit
0x08CE       [0]    _Rly_NegLeakageBit
0x091C       [2]    _BCTimeCounter
0x091E       [1]    _BCTimeCountBit
0x08CE       [0]    _BTBit
0x08CE       [0]    _Rly_AcLowBit
0x0920       [0]    _Rly_AcHighBit
0x0920       [0]    _Rly_RedAmpsLimitBit
0x0920       [0]    _Rly_RedGenFaultBit
0x0920       [0]    _Rly_BattMcbBit
0x0920       [0]    _Rly_DeepDschBit
0x091F       [1]    _AlarmSira
0x0922       [2]    _Modbus_Rec_Counter
0x0920       [0]    _Rly_HighTempBit
0x0920       [0]    _Rly_FanFaultBit
0x0920       [0]    _Rly_BattReverseBit
0x0920       [0]    _Rly_DcMcbBit
0x0920       [0]    _Rly_AcMcbBit
0x0920       [0]    _leakage_show_bit
0x0920       [0]    _DcLowBit
0x0920       [0]    _DcHighBit
0x0924       [2]    _DDischargeCounter
0x0920       [0]    _AcHighFaultBit
0x0920       [0]    _DDschargeBit
0x0926       [2]    _FanFaultCounter
0x0928       [2]    _FanAmpsRaw
0x0920       [0]    _RedAmpsLimitBit
0x092A       [2]    _AcVoltReal
0x092C       [0]    _BattAmpsLimitBit
0x092C       [0]    _AcLowFaultBit
0x092E       [2]    _DropperCloseCounter
0x0930       [2]    _DropperInitCounter4
0x0932       [2]    _Comm_ModbusFaultCounter
0x0934       [1]    _Comm_StatusBit
0x092C       [0]    _Modbus_FaultBit
0x0936       [4]    _RedVolt_LowPercent10Bit
0x093A       [4]    _RedVolt_HighPercent10Bit
0x093E       [2]    _DropperInitCounter1
0x0940       [2]    _DropperInitCounter3
0x0942       [2]    _DropperInitCounter2
0x092C       [0]    _FanFltBit
0x0935       [1]    _Led3_Group
0x0944       [1]    _Led2_Group
0x092C       [0]    _TempHighBit
0x0946       [2]    _ACFltCounter1
0x092C       [0]    _HighTempBit
0x092C       [0]    _Neg_Leakage_bit
0x092C       [0]    _Pos_Leakage_bit
0x0948       [2]    _Adc_Value
0x0945       [1]    _Led1_Group
0x094A       [4]    _LoadVolt_Real
0x094E       [2]    _ACFltCounter2
0x092C       [0]    _Batt_MCB_Bit
0x092C       [0]    _Load_MCB_Bit
0x0950       [2]    _DropCounter
0x092C       [0]    _FanFaultBit
0x0952       [2]    _Read_LoadVolt
0x0954       [2]    _LeakFltCounter1
0x0956       [2]    _AcOnCounter
0x0958       [2]    _LeakFltCounter2
0x092C       [0]    _Ac_MCB_Bit
0x095A       [2]    _TempFltCounter
0x095C       [2]    _I2C_Start_Ptr
0x095E       [2]    _I2C_Is_Idle_Ptr
0x0960       [2]    _I2C_Restart_Ptr
0x0962       [2]    _I2C_Write_Ptr
0x0964       [2]    _I2C_Read_Ptr
0x02D6       [0]    GLCD_RST
0x02E4       [0]    GLCD_CS2_Direction
0x0202       [2]    I2CTRN
0x0206       [2]    I2CCON
0x0208       [2]    I2CSTAT
0x0966       [2]    _I2C_Stop_Ptr
0x0228       [2]    SPI2CON
0x0226       [2]    SPI2STAT
0x0968       [2]    _SPI_Rd_Ptr
0x0220       [2]    SPI1STAT
0x096A       [2]    _SPI_Wr_Ptr
0x0200       [2]    I2CRCV
0x0204       [2]    I2CBRG
0x02D2       [0]    rs485_rxtx_pin_Direction
0x096C       [2]    __Lib_RS485_ms_state
0x02D4       [0]    rs485_rxtx_pin
0x02C0       [0]    GLCD_CS1_Direction
0x02D2       [0]    GLCD_D0_Direction
0x02D2       [0]    GLCD_D1_Direction
0x02D4       [0]    GLCD_D7
0x02D4       [0]    GLCD_D5
0x02D4       [0]    GLCD_D6
0x02D2       [0]    GLCD_D5_Direction
0x02D2       [0]    GLCD_D6_Direction
0x02D2       [0]    GLCD_D4_Direction
0x02D2       [0]    GLCD_D2_Direction
0x02D2       [0]    GLCD_D3_Direction
0x02D4       [0]    GLCD_D4
0x02D2       [0]    GLCD_RST_Direction
0x096E       [2]    __Lib_Glcd_ExternalFontSet
0x02DE       [0]    GLCD_EN_Direction
0x02DE       [0]    GLCD_RW_Direction
0x02E4       [0]    GLCD_RS_Direction
0x02D4       [0]    GLCD_D2
0x02D4       [0]    GLCD_D3
0x02D4       [0]    GLCD_D1
0x0970       [2]    __Lib_Glcd_FontInitialized_adv
0x02D4       [0]    GLCD_D0
0x0222       [2]    SPI1CON
0x02C2       [0]    Buzzer
0x0972       [1]    _Comm_FaultModbus
0x02C2       [0]    RA15_bit
0x02C2       [0]    RA13_bit
0x02C2       [0]    AC_MCB_Input
0x02C2       [0]    Heater_Output
0x092C       [0]    _FanOnBit
0x02C2       [0]    RA9_bit
0x02C2       [0]    RA14_bit
0x02C2       [0]    MCU_State_LED
0x02E6       [0]    Load_MCB_Input
0x0973       [1]    _Comm_Tmr
0x021A       [2]    U2TXREG
0x0106       [2]    TMR2
0x0140       [2]    IC1BUF
0x0142       [2]    IC1CON
0x02C2       [0]    Batt_MCB_Input
0x02E6       [0]    RG9_bit
0x02C2       [0]    RA12_bit
0x0974       [1]    _LeakageValue
0x0976     [250]    _Modbus_Reg_data
0x02E6       [0]    RG15_bit
0x0A70       [2]    _UART_TX_Idle_Ptr
0x0A72       [2]    _UART_Rdy_Ptr
0x0216       [2]    U2MODE
0x0214       [2]    U1BRG
0x020C       [2]    U1MODE
0x022A       [2]    SPI2BUF
0x0224       [2]    SPI1BUF
0x0210       [2]    U1TXREG
0x0A74       [2]    _UART_Rd_Ptr
0x0A76       [2]    _UART_Wr_Ptr
0x0086       [0]    U2RXIF_bit
0x0212       [2]    U1RXREG
0x0A78       [2]    __Lib_RS485_i_M
0x021C       [2]    U2RXREG
0x02E6       [0]    Fan_Out
0x0120       [2]    T5CON
0x0975       [1]    __Lib_RS485_crc_is_ok_M
0x0A7A       [2]    __Lib_RS485_rec_M
0x0A7C       [2]    __Lib_RS485_addr_M
0x0A7E       [2]    __Lib_RS485_datalen_M
0x0A80       [2]    __Lib_RS485_key_M
0x0A82      [22]    _HeaterActiveText
0x0A98      [22]    _Title_BatCurveFailTxt
0x0AAE       [1]    _Log_Array
0x0AB0     [256]    _Read_LogClock
0x0BB0     [256]    _Read_LogEvent
0x0CB0      [22]    _Title_Bkm_StartText
0x0CC6      [22]    _SubText_SystemNormaly
0x0CDC      [22]    _Title_Bkm_WaitText
0x0CF2      [22]    _Title_Bat_EgriBadTxt
0x0D08      [22]    _Title_Bat_EgriGoodTxt
0x0D1E     [256]    _Read_LogDateHi
0x092C       [0]    _LogBit_DcHigh
0x092C       [0]    _LogBit_AcLow
0x092C       [0]    _LogBit_DcLow
0x0E1E       [0]    _LogBit_Nleak
0x0E1E       [0]    _LogBit_Pleak
0x0E20       [7]    _Hour_Text
0x0E28     [256]    _Read_LogDateLo
0x0F28      [12]    _Day_Text
0x0E1E       [0]    _LogBit_AcHigh
0x0F34       [6]    _Event_Text
0x0F3A      [22]    _SubText_RectifierIdle
0x0F50      [22]    _Flt_HighTemp
0x0F66      [22]    _Flt_RedHighTemp
0x0F7C      [22]    _Flt_AcMCB
0x0F92      [22]    _Flt_BattMCB
0x0FA8      [22]    _Flt_DcMCB
0x0FBE      [22]    _Flt_Nleakage
0x0FD4      [22]    _Flt_Pleakage
0x0FEA      [22]    _Flt_BattLimit
0x1000      [22]    _Flt_FanFault
0x1016      [22]    _Flt_ChrgLimit
0x102C      [22]    _Flt_BattReverse
0x1042      [22]    _Flt_RedHata
0x1058      [22]    _Flt_DDschrg
0x106E      [21]    _Title_LogMenu
0x1083      [17]    _SubTitle_LogRead
0x1094      [14]    _Subtitle_Curvescan
0x10A2      [22]    _Flt_ThryComm
0x10B8      [22]    _Flt_RedFault
0x10CE      [22]    _Flt_AcMult
0x10E4      [22]    _Flt_Volt
0x10FA      [22]    _Flt_Rly
0x0E1E       [0]    _LogBit_Rlimit
0x0032       [2]    TBLPAG
0x02AA       [2]    ADCSSL
0x0766       [2]    NVMKEY
0x0764       [2]    NVMADRU
0x0762       [2]    NVMADR
0x0280       [2]    ADCBUF0
0x02A0       [2]    ADCON1
0x1110       [2]    _ADC_Get_Sample_Ptr
0x02A4       [2]    ADCON3
0x02A2       [2]    ADCON2
0x02E8       [0]    GLCD_RS
0x02E8       [0]    GLCD_CS2
0x02C4       [0]    GLCD_CS1
0x1112       [2]    __Lib_Glcd_FontInitialized
0x02D2       [0]    GLCD_D7_Direction
0x0AAF       [1]    __Lib_Glcd_fontH
0x1114       [2]    __Lib_Glcd_fontOffset
0x02E2       [0]    GLCD_RW
0x0E27       [1]    __Lib_Glcd_fontW
0x02E2       [0]    GLCD_EN
0x1116       [4]    __Lib_Glcd_fontDef
0x02A6       [2]    ADCHS
0x0E1E       [0]    _LogBit_RedFault
0x0E1E       [0]    _LogBit_HighTemp
0x0E1E       [0]    _LogBit_DdschFault
0x0E1E       [0]    _LogBit_RlyCommFault
0x0E1E       [0]    _LogBit_RedHighTemp
0x0E1E       [0]    _LogBit_FanFault
0x0E1E       [0]    _LogBit_Blimit
0x0E1E       [0]    _LogBit_AcMCB
0x0E1E       [0]    _LogBit_BatMCB
0x0E1E       [0]    _LogBit_LoadMCB
0x0E1E       [0]    _LogBit_GTTCommFault
0x02C8       [0]    Dsp_CS1_Pin
0x111A     [128]    _Modbus_Tx_data
0x02C8       [0]    RB4_bit
0x02C8       [0]    RB6_bit
0x02C8       [0]    Dsp_CS2_Pin
0x119A       [2]    _Log_Date
0x119C       [2]    _Log_Clock
0x119E       [1]    _temp_byte_1
0x119F       [1]    _Modbus_Rx_data_index
0x11A0      [16]    _Modbus_Rx_data
0x0740       [0]    WDTO_bit
0x11B0       [2]    _TempComp_Volt
0x11B2      [21]    _Title_TempMenu
0x11C7      [14]    _SubTitle_FanOn
0x11D5      [14]    _SubTitle_TempAlarm
0x11E3       [1]    _TempComp
0x11E4      [21]    _Title_ClockMenu
0x11F9       [1]    _ChargeMode
0x11FA       [4]    _Tcomp2
0x11FE       [4]    _TCompV
0x1202      [14]    _SubTitle_FanOff
0x02D4       [0]    HC595_CS2_Pin
0x02D4       [0]    RD10_bit
0x02D4       [0]    RD9_bit
0x02CE       [0]    RC14_bit
0x02CE       [0]    HC595_CS3_Pin
0x1210       [1]    _TempFanOffSet
0x1211      [22]    _SubTitle_TempComp
0x1227       [1]    _TempFanOnSet
0x02D4       [0]    HC595_CS1_Pin
0x1228       [1]    _TempAlarmSet
0x1229       [7]    _ManualChargeText
0x1230       [4]    _QuitTime_Sec
0x1234       [2]    _BtCounterNormal
0x1236       [1]    _MenuSayacValue
0x1237      [21]    _Title_LeakMenu
0x124C      [15]    _Chng
0x02D4       [0]    Down_Button
0x125B       [8]    _EnableText
0x02CE       [0]    Up_Button
0x0E1E       [0]    _ButonStop
0x1263       [4]    _CycleText
0x1267      [14]    _SubTitle_Pleak
0x0760       [0]    WR_bit
0x1275       [1]    _MenuSayac
0x1276       [7]    _BoostChargeText
0x127D       [7]    _TCompChargeText
0x1284       [7]    _FloatChargeText
0x128B       [1]    _Leakage_Pos_Set
0x128C      [14]    _SubTitle_Nleak
0x129A       [1]    _Leakage_Neg_Set
0x129B       [8]    _WriteText
0x12A4       [0]    _KacakSensor
0x12A6      [21]    _Title_DcMenu
0x12BB      [14]    _SubTitle_VoltProt
0x12C9      [14]    _SubTitle_VoltDiff
0x12D8       [2]    _ACMaxVoltSet
0x12A3       [1]    _ACVolt_Different
0x12DA       [2]    _ACMinVoltSet
0x12A4       [0]    _Confirm_LeakaMenuBit
0x12A4       [0]    _Confirm_BattMenuBit
0x12A4       [0]    _Confirm_TempeMenuBit
0x12A4       [0]    _Confirm_ModbusMenuBit
0x12A4       [0]    _Confirm_ClockMenuBit
0x12A4       [0]    _AC_ProtectBit
0x12D7       [1]    _OperationMode
0x12DC       [1]    _Dropper_OutStatus
0x12DE       [2]    _MasterSlave
0x12DD       [1]    _Modbus_Adress
0x12E0       [1]    _ModbusID
0x12E2       [2]    _F_ChargePercentHi
0x12E4       [6]    _ValueText2
0x12EA       [2]    _B_ChargePercentLo
0x12E1       [1]    _LanguageBit
0x12EC       [2]    _NominalGerilim
0x12A4       [0]    _Confirm_OperaMenuBit
0x12EE       [2]    _DcOutAmpsSet
0x12F0       [2]    _RedresorAkim
0x12F2       [2]    _MaxvoltSet
0x12F4       [2]    _B_ChargePercentHi
0x12F6       [2]    _MinVoltSet
0x12F8      [14]    _SubTitle_SetAmps
0x1306      [14]    _SubTitle_SetVolt
0x1314      [14]    _SubTitle_MaxVolt
0x1322       [2]    _DCOutVoltSet
0x1324      [14]    _SubTitle_MinVolt
0x1332       [2]    _F_ChargePercentLo
0x1334      [21]    _Title_Event
0x1349      [21]    _Title_LangMenu
0x135E      [21]    _Title_AuthMenu
0x12A4       [0]    _Confirm_DcMenuBit
0x12A4       [0]    _Confirm_AcMenuBit
0x1373      [21]    _Title_AcMenu
0x1388       [1]    _MainMenuExit
0x1389      [21]    _Title_DroppMenu
0x139E      [21]    _Title_ModbusMenu
0x13B3      [21]    _Title_BattMenu
0x02D6       [0]    LATD1_bit
0x02E4       [0]    TRISG0_bit
0x02D2       [0]    TRISD15_bit
0x02D4       [0]    RD11_bit
0x02D4       [0]    RD15_bit
0x02DE       [0]    TRISF0_bit
0x02D2       [0]    TRISD1_bit
0x02E4       [0]    TRISG1_bit
0x02C0       [0]    TRISA6_bit
0x02DE       [0]    TRISF1_bit
0x02C2       [0]    RA7_bit
0x13C8       [1]    _Week
0x13C9       [1]    _Day
0x13CA       [1]    _Month
0x13CC       [2]    _FarkAy
0x13CB       [1]    _Year
0x12A4       [0]    _BakimControlBit
0x02CE       [0]    RC13_bit
0x13CE       [1]    _Hours
0x13CF       [1]    _Seconds
0x13D0       [1]    _Minutes
0x02D2       [0]    TRISD7_bit
0x02D4       [0]    RD5_bit
0x02D4       [0]    RD4_bit
0x02D4       [0]    RD6_bit
0x02E2       [0]    LATF0_bit
0x02D4       [0]    RD7_bit
0x02D4       [0]    RD2_bit
0x02D4       [0]    RD0_bit
0x02D4       [0]    RD3_bit
0x02D4       [0]    RD13_bit
0x02D4       [0]    RD12_bit
0x02E8       [0]    LATG1_bit
0x02D2       [0]    TRISD13_bit
0x02D2       [0]    TRISD12_bit
0x02D2       [0]    TRISD4_bit
0x02D2       [0]    TRISD6_bit
0x02D2       [0]    TRISD5_bit
0x02C4       [0]    LATA6_bit
0x02E2       [0]    LATF1_bit
0x02E8       [0]    LATG0_bit
0x02D2       [0]    TRISD3_bit
0x02D2       [0]    TRISD2_bit
0x13D1       [1]    _ServiceCycle
0x13D2       [2]    _Bakim_Start_Time
0x13D4       [1]    _QuitTime
0x12A4       [0]    _Bkm_Status
0x13D5      [14]    _Subtitle_Loop
0x13E3      [21]    _Title_BattServMenu
0x13F8       [1]    _Chng6
0x13F9       [1]    _Chng5
0x13FA       [2]    _NomHucreGerilim
0x13FC       [2]    _QuitVolt
0x13FE       [2]    _HucreSayisi
0x1400      [14]    _Subtitle_MaintOut
0x140E       [1]    _Bkm_Min
0x140F       [5]    _App_Hour
0x1414       [1]    _Bkm_Hour
0x1415       [8]    _DisableText
0x141D       [6]    _Value_Text
0x1423      [14]    _Subtitle_MaintTime
0x1431      [14]    _Subtitle_OutTime
0x143F      [14]    _Subtitle_Status
0x144D       [7]    _App_Year
0x1454       [5]    _SubTitle_Back
0x1459       [1]    _Chng4
0x0760       [2]    NVMCON
0x145A       [2]    _Service1_Date
0x145C       [1]    _Year_2
0x145E       [2]    _Service2_Date
0x145D       [1]    _Month_2
0x1460       [1]    _BakimSelect
0x1461       [1]    _DayCalc
0x1462       [1]    _TempAy
0x1463       [1]    _Month_1
0x1464       [1]    _Year_1
0x1465       [1]    _Year_3
0x1466       [1]    _MenuExit
0x02D4       [0]    Ok_Button
0x1467       [1]    _Chng1
0x1468       [1]    _Chng3
0x1469       [1]    _Chng2
0x146A       [2]    _Service3_Date
0x146C       [1]    _Month_3
0x146D       [1]    _Year_4
0x146E       [2]    _Service4_Date
0x1470       [1]    _Month_4
0x02D0       [0]    LATC2_bit
0x02D0       [0]    Dropper_Out_2
0x02D0       [0]    Dropper_Out_3
0x02C6       [0]    Temp_CompPin_Direction
0x02D0       [0]    LATC1_bit
0x02DE       [2]    TRISF
0x02D2       [2]    TRISD
0x02E4       [2]    TRISG
0x02D0       [0]    LATC3_bit
0x02D0       [0]    Dropper_Out_1
0x02C6       [0]    TRISB14_bit
0x02CE       [2]    PORTC
0x02C8       [2]    PORTB
0x02D4       [2]    PORTD
0x02E6       [2]    PORTG
0x02E0       [2]    PORTF
0x02E4       [0]    TRISG14_bit
0x02E4       [0]    Master_OutPin_Direction
0x02E4       [0]    Slave_InputPin_Direction
0x02C2       [2]    PORTA
0x02E4       [0]    TRISG12_bit
0x02CC       [2]    TRISC
0x00A0       [2]    IPC6
0x009E       [2]    IPC5
0x008C       [2]    IEC0
0x0090       [2]    IEC2
0x008E       [2]    IEC1
0x0096       [2]    IPC1
0x0094       [2]    IPC0
0x0098       [2]    IPC2
0x009C       [2]    IPC4
0x009A       [2]    IPC3
0x0080       [2]    INTCON1
0x0084       [2]    IFS0
0x0218       [2]    U2STA
0x0086       [2]    IFS1
0x02C6       [2]    TRISB
0x02C0       [2]    TRISA
0x010E       [2]    PR3
0x010A       [2]    TMR3
0x0114       [2]    TMR4
0x020E       [2]    U1STA
0x011A       [2]    PR4
0x1472       [2]    _BtCounter1
0x1471       [1]    _Uart_ThryFault
0x1474       [2]    _Request_RepeatCounter
0x1476       [1]    _Uart_ACMultFault
0x1477       [1]    _Uart_VoltmeterFault
0x1478       [1]    _Uart_RelayFault
0x147A       [4]    _Read_FreqReal
0x147E       [2]    _Read_Freq
0x1480       [2]    _Request_Counter
0x1482       [2]    _RequestFault_Counter
0x1479       [1]    _Haberlesme_izni
0x1484       [1]    _FactoryData
0x1486       [2]    _RlyFaultCount
0x1488       [2]    _ThryFaultCount
0x1485       [1]    _ThryCommFault
0x148A       [2]    _RectifierVoltage_Set
0x148C       [1]    _RlyCommFault
0x148E       [2]    _Relay_Out_Data
0x148D       [1]    _FactoryResetBit
0x1490      [21]    _MasterData
0x14A6       [2]    _TimeScreenCounter
0x14A8      [21]    _ReceiveData
0x14BE       [2]    _Read_Relay
0x14C0       [4]    _PCB_TempText
0x14C4       [2]    _PCB_TempHAM
0x14C6       [2]    _Read_TotalAmps
0x14C8       [2]    _Read_BattAmps
0x14CA       [2]    _Read_OutAmps
0x14CC       [4]    _MenuExitCounter
0x14A5       [1]    _ButonStart
0x14D0       [9]    _Clock_Text
0x14BD       [1]    _PCB_Temperature
0x14D9      [11]    _Date_Text
0x14E4       [2]    _Read_RedVolt
0x14E6       [4]    _Read_U3VoltRaw
0x14EA       [4]    _Read_U2VoltRaw
0x14EE       [2]    _Read_U1Amps
0x14F0       [2]    _Read_U3Amps
0x14F2       [2]    _Read_U2Amps
0x14F4       [2]    _Read_U1Volt
0x14F6       [2]    _Read_Temp
0x14F8       [2]    _Read_U2Volt
0x14FA       [4]    _Read_U1VoltRaw
0x14FE       [2]    _Read_U3Volt
0x1500      [14]    _SubTitle_OpMod
0x150E      [14]    _SubTitle_DropMod
0x151C      [14]    _SubTitle_MS
0x152A       [8]    _BackupText
0x1532       [8]    _SingleText
0x153A       [2]    _ModBus_Baud
0x011E       [2]    T4CON
0x153C       [2]    _ModBus_TimeOut_Timer3_PR3
0x021E       [2]    U2BRG
0x153E       [1]    _ModBus_TimeOut
0x153F       [8]    _ParalelText
0x1547      [21]    _Title_BattMenu1
0x02C2       [0]    Hidden_Button
0x155C      [14]    _SubTitle_BattAh
0x156A      [14]    _SubTitle_ChrgMode
0x1578       [6]    _SubTitle_BattAmps
0x157E       [2]    _Start_Counter
0x12A4       [0]    _MenuBit
0x12A4       [0]    _RedFaultBit
0x12A4       [0]    _Start_Bit
0x12A4       [0]    _StopBit
0x0112       [2]    T3CON
0x1580       [2]    _BoostChargeVoltage
0x1582       [2]    _BatteryAmpsSet
0x1584       [2]    _FloatChargeVoltage
0x1586       [4]    _BoostChargeTime
0x158A       [2]    _BoostChargeTimeSet
0x158C       [2]    _BatteryAh
0x158E       [1]    _ModbusBaudRate
0x1590       [2]    _BoostChargeLimit
0x1592       [2]    _DeepDischargeVolt
0x1594       [2]    _FloatChargeLimit
0x1596       [0]    _AutoBFMode
0x1598       [2]    _one_kohm_constant
0x159A       [2]    _Sample_RedVolt
0x159C       [2]    _Res_DivideValue
0x158F       [1]    _DiodeValue
0x159E       [1]    _FirstStartUpBattMenu
0x159F       [1]    _diff_leak_pos
0x15A0       [4]    _dV_LoadVolt
0x15A4       [1]    _diff_leak_neg
0x15A6       [2]    _Sample_RedDigital
0x15A8       [2]    _User_Password
0x15AA      [14]    _SubTitle_BoostVolt
0x15A5       [1]    _ChngD
0x15B8       [1]    _ChngC
0x15B9       [6]    _SubTitle_Ok
0x15BF      [18]    _PassNewText
0x15D1       [7]    _SubTitle_Cancel
0x15D8      [14]    _SubTitle_BaudRate
0x15E6      [14]    _SubTitle_Id
0x15F4       [4]    _PasswordArray
0x15F8       [1]    _ChngB
0x15F9       [1]    _ChngA
0x15FA      [18]    _PassInputText
0x020E       [0]    FERR_bit
0x020E       [0]    OERR_bit
0x160C      [11]    _test_Text
0x02A8       [2]    ADPCFG
0x1617      [11]    _Send_Test_Text
0x1622      [22]    _SubTitle_PassOk
0x1638       [2]    _PasswordHam
0x163A      [22]    _SubTitle_PassFlt
0x1596       [0]    _Program_StartBit
0x0110       [2]    T2CON
0x1650      [14]    _Subtitle_Lang
0x165E      [21]    _Title_BattMenu2
0x1673       [3]    _MinuteText
0x1676      [14]    _SubTitle_BFMode
0x1684      [14]    _SubTitle_Flimit
0x1692      [14]    _SubTitle_Blimit
0x16A0      [14]    _SubTitle_BoostTime
0x16AE      [14]    _SubTitle_FloatVolt
0x16BC      [14]    _SubTitle_DeepVolt
0x16CA       [2]    _Temp_WordAku
0x16CC       [4]    _Temp_RealAku
0x16D0      [21]    _Title_AuthMenu1
0x16E5      [18]    _SubTitle_Pswtemp
0x16F7      [18]    _SubTitle_Pswleak
0x1709      [21]    _Title_AuthMenu2
0x171E      [18]    _SubTitle_Pswmodbus
0x1730      [18]    _SubTitle_Pswclock
0x1742      [18]    _SubTitle_PswAcset
0x1754      [18]    _SubTitle_PswChng
0x1766      [18]    _SubTitle_PswDcset
0x1778      [18]    _SubTitle_Pswopmod
0x178A      [18]    _SubTitle_Pswbatset
0x0032       [2]    TBLPAG
0x0080       [2]    INTCON1
0x0084       [2]    IFS0
0x0086       [2]    IFS1
0x008C       [2]    IEC0
0x008E       [2]    IEC1
0x0090       [2]    IEC2
0x0094       [2]    IPC0
0x0096       [2]    IPC1
0x0098       [2]    IPC2
0x009A       [2]    IPC3
0x009C       [2]    IPC4
0x009E       [2]    IPC5
0x00A0       [2]    IPC6
0x0106       [2]    TMR2
0x010A       [2]    TMR3
0x010E       [2]    PR3
0x0110       [2]    T2CON
0x0112       [2]    T3CON
0x0114       [2]    TMR4
0x011A       [2]    PR4
0x011E       [2]    T4CON
0x0120       [2]    T5CON
0x0140       [2]    IC1BUF
0x0142       [2]    IC1CON
0x0014       [2]    FARG_ADC1_Get_Sample_channel
0x0014       [1]    FARG_I2C1_Write__data
0x0014       [2]    FARG_SPI1_Read_buffer
0x0014       [2]    FARG_SPI2_Read_buffer
0x0014       [4]    FARG_EraseGlobal_address
0x0018       [2]    FARG_EraseGlobal_nvmcon_data
0x0200       [2]    I2CRCV
0x0202       [2]    I2CTRN
0x0204       [2]    I2CBRG
0x0206       [2]    I2CCON
0x0208       [2]    I2CSTAT
0x020C       [2]    U1MODE
0x020E       [2]    U1STA
0x0210       [2]    U1TXREG
0x0212       [2]    U1RXREG
0x0214       [2]    U1BRG
0x0216       [2]    U2MODE
0x0014       [2]    FARG_I2C1_Read_ack
0x0218       [2]    U2STA
0x021A       [2]    U2TXREG
0x021C       [2]    U2RXREG
0x021E       [2]    U2BRG
0x0220       [2]    SPI1STAT
0x0222       [2]    SPI1CON
0x0224       [2]    SPI1BUF
0x0226       [2]    SPI2STAT
0x0228       [2]    SPI2CON
0x022A       [2]    SPI2BUF
0x0014       [2]    FARG_ADC1_Read_channel
0x0280       [2]    ADCBUF0
0x02A0       [2]    ADCON1
0x02A2       [2]    ADCON2
0x02A4       [2]    ADCON3
0x02A6       [2]    ADCHS
0x02A8       [2]    ADPCFG
0x02AA       [2]    ADCSSL
0x02C0       [2]    TRISA
0x02C2       [2]    PORTA
0x02C6       [2]    TRISB
0x02C8       [2]    PORTB
0x02CC       [2]    TRISC
0x02CE       [2]    PORTC
0x02D2       [2]    TRISD
0x02D4       [2]    PORTD
0x02DE       [2]    TRISF
0x02E0       [2]    PORTF
0x02E4       [2]    TRISG
0x02E6       [2]    PORTG
0x0014       [2]    FARG___AddToFarPointer_ptr
0x0016       [4]    FARG___AddToFarPointer_increment
0x0014       [4]    FARG_EEPROM_Erase_address
0x0014       [1]    FARG_AnalogRead_Channel
0x0016       [2]    FARG_AnalogRead__Sample
0x0014       [2]    FARG_SPI1_Write_data_out
0x0014       [2]    FARG_UART1_Write_data_
0x0014       [1]    FARG_Glcd_Set_Side_x_pos
0x0014       [1]    FARG_Glcd_Set_X_x_pos
0x0014       [2]    FARG_Bcd2Dec16_bcd_num
0x0014       [2]    FARG_UART2_Write_data_
0x0014       [2]    FARG_Read_Time_p_hours
0x0016       [2]    FARG_Read_Time_p_minutes
0x0018       [2]    FARG_Read_Time_p_seconds
0x001A       [2]    FARG_Read_Time_p_day
0x0014       [1]    FARG_ShortToStr_input
0x0016       [2]    FARG_ShortToStr_output
0x0014       [2]    FARG_SPI2_Write_data_out
0x0014       [1]    FARG_ChargeModeWrite_Value
0x0016       [1]    FARG_ChargeModeWrite_State
0x0760       [2]    NVMCON
0x0762       [2]    NVMADR
0x0764       [2]    NVMADRU
0x0766       [2]    NVMKEY
0x0014       [1]    FARG_ByteToStr_input
0x0016       [2]    FARG_ByteToStr_output
0x0014       [2]    FARG_ValueDivide_Value
0x0016       [1]    FARG_ValueDivide_Dot
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0014       [1]    FARG_MenuButtonRead_Sayac
0x0016       [1]    FARG_MenuButtonRead_Menu
0x0014       [4]    FARG_EEPROM_Write_address
0x0018       [2]    FARG_EEPROM_Write__data
0x0014       [1]    FARG_HC_Cs_Fnc_Chip
0x0014       [1]    FARG_Password_Entry_Screen_View
0x0014       [2]    FARG_SPI2_Init_Advanced_master_mode
0x0016       [2]    FARG_SPI2_Init_Advanced_mode16
0x0018       [2]    FARG_SPI2_Init_Advanced_sec_prescaler
0x001A       [2]    FARG_SPI2_Init_Advanced_pri_prescaler
0x0014       [2]    FARG_Rs485master_Send_data_buffer
0x0016       [1]    FARG_Rs485master_Send_datalen
0x0018       [1]    FARG_Rs485master_Send_slave_address
0x0014       [1]    FARG_Write_To_Pins_ddata
0x0014       [1]    FARG_Glcd_Write_Data_ddata
0x0014       [1]    FARG_Glcd_Set_Page_page
0x0014       [1]    FARG_Glcd_Write_Char_character
0x0016       [1]    FARG_Glcd_Write_Char_x_pos
0x0018       [1]    FARG_Glcd_Write_Char_page_num
0x001A       [1]    FARG_Glcd_Write_Char_color
0x0014       [2]    FARG_Log_Partition_LogPart_Hour
0x0016       [2]    FARG_Log_Partition_LogPart_DayMonth
0x0018       [2]    FARG_Log_Partition_LogPart_Year
0x001A       [2]    FARG_Log_Partition_LogPart_Event
0x0014       [1]    FARG_Write_Time_c_hours
0x0016       [1]    FARG_Write_Time_c_minutes
0x0018       [1]    FARG_Write_Time_c_seconds
0x001A       [1]    FARG_Write_Time_c_day
0x0014       [2]    FARG_Dec2Bcd16_dec_num
0x0014       [4]    FARG_EEPROM_Read_address
0x0014       [2]    FARG_Log_Glcd_Write_Text1
0x0016       [2]    FARG_Log_Glcd_Write_Text2
0x0018       [2]    FARG_Log_Glcd_Write_Text3
0x001A       [1]    FARG_Log_Glcd_Write_Coloumn1
0x0014       [2]    FARG_abs_a
0x0014       [1]    FARG_Collect__DataLo
0x0016       [1]    FARG_Collect__DataHi
0x0014       [1]    FARG_Gemta_Uart_Write_Buffer0
0x0016       [1]    FARG_Gemta_Uart_Write_Addr
0x0018       [2]    FARG_Gemta_Uart_Write_Buffer1
0x0014       [2]    FARG_Glcd_Write_Text_text
0x0016       [1]    FARG_Glcd_Write_Text_x_pos
0x0018       [1]    FARG_Glcd_Write_Text_page_num
0x001A       [1]    FARG_Glcd_Write_Text_color
0x0014       [4]    FARG_Glcd_Set_Font_ActiveFont
0x0018       [1]    FARG_Glcd_Set_Font_FontWidth
0x001A       [1]    FARG_Glcd_Set_Font_FontHeight
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [4]    FARG_UART2_Init_baud_rate
0x0014       [4]    FARG_I2C1_Init_scl
0x0014       [1]    FARG_Glcd_Fill_pattern
0x0014       [2]    FARG_VDelay_ms_Time_ms
0x0014       [4]    FARG_Delay_Cyc_Long_CycNo
0x0014       [1]    FARG_ClearDisplay_Chip
0x0014       [2]    FARG_SPI_Set_Active_read_ptr
0x0016       [2]    FARG_SPI_Set_Active_write_ptr
0x0014       [2]    FARG_ltrim_astring
0x0014       [2]    FARG_UART_Set_Active_read_ptr
0x0016       [2]    FARG_UART_Set_Active_write_ptr
0x0018       [2]    FARG_UART_Set_Active_ready_ptr
0x001A       [2]    FARG_UART_Set_Active_tx_idle_ptr
0x0014       [1]    FARG_Uart_Communication_Function__Request
0x0014       [2]    FARG_UART1_Read_Text_Output
0x0016       [2]    FARG_UART1_Read_Text_Delimiter
0x0018       [1]    FARG_UART1_Read_Text_Attempts
0x0014       [2]    FARG_Pause_Ms_Value
0x0014       [2]    FARG_Rs485master_Receive_data_buffer
0x0014       [2]    FARG_UART1_Write_Text_uart_text
0x0014       [4]    FARG_Glcd_Image_image
0x0014       [2]    FARG_Glcd_PartialImage_x_left
0x0016       [2]    FARG_Glcd_PartialImage_y_top
0x0018       [2]    FARG_Glcd_PartialImage_width
0x001A       [2]    FARG_Glcd_PartialImage_height
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x10000     [480]    _font5x7
0x101E0       [8]    ?lstr_6___Lib_FAT32
0x101E8    [1120]    _NewFont5x7
0x10648    [1024]    _notauthority
0x10A48     [690]    _PasswordEntryBos
0x10CFA    [1024]    _mainscreen
0x110FA     [174]    _AcVolt_View
0x111A8     [512]    _EeAddr_Log_Event
0x113A8     [512]    _EeAddr_Log_Clock
0x115A8     [512]    _EeAddr_Log_DateHi
0x117A8     [512]    _EeAddr_Log_DateLo
