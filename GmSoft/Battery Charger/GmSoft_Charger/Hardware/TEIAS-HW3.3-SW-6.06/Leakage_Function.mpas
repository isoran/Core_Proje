unit Leakage_Function;


Procedure Adc_Consideration();
Procedure Pos_Leakage_Calc();
Procedure Neg_Leakage_Calc();
Procedure Leakage_Function();

var
  HucreSayisi : word;external;
  Leakage_Pos_Set, Leakage_Neg_Set : short; external;
  Read_LoadVolt : word; external;

  Dig_LoadVoltLeak : word; external;

  Leakage_Status, Adc_Leakage, one_kohm_constant,Res_DivideValue : word;
  Leakage_Volt, Pos_Leak_Ref, Neg_Leak_Ref, Unit_Leak0, Unit_Leak1, Unit_Leak2   : LongInt;
  R_Leakage0, R_Leakage1 : LongInt;

  R_Leakage : integer;

  diff_leak_pos, diff_leak_neg : short;

  leakage_show_bit, Pos_Leakage_bit, Neg_Leakage_bit : bit;
  posleakbit, negleakbit : bit;


implementation



//*************************************************************************************************
Procedure Adc_Consideration();
  begin
       //Read_LoadVolt := 1496;
       

       
        Leakage_Status := (Read_LoadVolt/10)*(1833/((HucreSayisi*2)*1.36));
       //Leakage_Status := 1500;
       Leakage_Volt := Adc_Leakage; /// Dijital Deðer
       if (Leakage_Volt <= 0) then Leakage_Volt := 0;



  end;

//*************************************************************************************************
Procedure Pos_Leakage_Calc();
var Temp_Text : string[10];
  begin
       //one_kohm_constant := 482;   //22440/Rated_Voltage; ///330*0.083*819
       Pos_Leak_Ref := (Dig_LoadVoltLeak*one_kohm_constant)/Res_DivideValue;  ///   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ?????  465



       Unit_Leak0 := Dig_LoadVoltLeak*HucreSayisi/2; /// 670*0.083   28
       Unit_Leak1 := Unit_Leak0/((HucreSayisi*2)*1.36);
       Unit_Leak2 := Unit_Leak1;


       R_Leakage0 := Pos_Leak_Ref-Leakage_Volt;
       if (R_Leakage0 <= 0) then R_Leakage0 := 0;
       

       R_Leakage1 := R_Leakage0*100;
       R_Leakage  := R_Leakage1/Unit_Leak2;

       R_Leakage := R_Leakage-diff_leak_pos;
       if (R_Leakage <= 0) then R_Leakage := 0;

       if ((R_Leakage > 3 ) and (R_Leakage <= 7))  then R_Leakage := R_Leakage/1.20;
       if ((R_Leakage > 7 ) and (R_Leakage <= 35)) then R_Leakage := R_Leakage/1.30;
       if ((R_Leakage > 35) and (R_Leakage <= 45)) then R_Leakage := R_Leakage/1.25;
       if ((R_Leakage > 45) and (R_Leakage <= 60)) then R_Leakage := R_Leakage/1.20;
       if ((R_Leakage > 60) and (R_Leakage <= 80)) then R_Leakage := R_Leakage/1.15;
       if ((R_Leakage > 80) and (R_Leakage <= 95)) then R_Leakage := R_Leakage/1.05;

  end;
//*************************************************************************************************
procedure Neg_Leakage_Calc();
  begin

       Unit_Leak0 := Dig_LoadVoltLeak*HucreSayisi/2; /// 670*0.083
       Unit_Leak1 := Unit_Leak0/((HucreSayisi*2)*1.36);
       Unit_Leak2 := Unit_Leak1;


       R_Leakage0 := Leakage_Volt;
       if (R_Leakage0 <= 0) then R_Leakage0 := 0;
       R_Leakage  := (R_Leakage0*100)/Unit_Leak2;

       R_Leakage := R_Leakage-diff_leak_neg;
       if (R_Leakage <= 0) then R_Leakage := 0;

       if ((R_Leakage >= 1 ) and (R_Leakage <= 7))  then R_Leakage:= R_Leakage;
       if ((R_Leakage > 7 ) and (R_Leakage <= 35)) then R_Leakage := R_Leakage/1.30;
       if ((R_Leakage > 35) and (R_Leakage <= 45)) then R_Leakage := R_Leakage/1.25;
       if ((R_Leakage > 45) and (R_Leakage <= 60)) then R_Leakage := R_Leakage/1.30;
       if ((R_Leakage > 60) and (R_Leakage <= 80)) then R_Leakage := R_Leakage/1.14;
       if ((R_Leakage > 80) and (R_Leakage <= 95)) then R_Leakage := R_Leakage/1.07;




  end;
//*************************************************************************************************
Procedure Leakage_Function();
 begin

        if (Leakage_Volt > Leakage_Status+100) then   // (+) Kaçak
          begin

              Pos_Leakage_Calc();
              leakage_show_bit := 1;


             if (Leakage_Pos_Set > 0) then
               begin
                 if (R_Leakage < Leakage_Pos_Set) then
                    begin  // + kaçak oluþtu durumu
                           posleakbit := 1;
                           //Pos_Leakage_bit := 1;
                    end else posleakbit := 0;
               end else
             if (Leakage_Pos_Set < 1) then posleakbit := 0;//Pos_Leakage_bit := 0;
             
          end;
    ///////////////////////////////////////////////////////////////////////////////////////

        if (Leakage_Volt < Leakage_Status-100) then   /// (-) Kaçak
          begin

              Neg_Leakage_Calc();
              leakage_show_bit := 1;

              if (Leakage_Neg_Set > 0) then
                begin
                   if (R_Leakage < Leakage_Neg_Set) then
                      begin   // - kaçak oluþtu durumu
                              //Neg_Leakage_bit := 1;
                              negleakbit := 1;
                      end else
                end else
              if (Leakage_Neg_Set < 1) then negleakbit := 0;//Neg_Leakage_bit := 0;
          end;

        ////////////////////////////////////////////////////////////////////////////////
        if (Leakage_Volt > Leakage_Status-100)and(Leakage_Volt < Leakage_Status+100) then
         begin


              leakage_show_bit := 0;
              //Pos_Leakage_bit  := 0;
              //Neg_Leakage_bit  := 0;
              posleakbit         := 0;
              negleakbit         := 0;


              /// Kaçak yok

         end;

     end;











end.